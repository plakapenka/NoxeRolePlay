
#include 	a_samp
#include 	streamer
#include 	foreach
#include 	a_mysql
#include 	sscanf2
#include 	mxdate
#include 	TOTP
#include 	izcmd
#include 	acuf
#include    crashdetect
#include 	nex-ac

native IsValidVehicle(vehicleid);

//
#include "../source/maps/autoschool.inc"
#include "../source/maps/lspd.inc"
#include "../source/maps/lsa.inc"

#include "../source/maps/garageA.inc"
#include "../source/maps/garageB.inc"
#include "../source/maps/garageC.inc"
#include "../source/maps/garageS.inc"
#include "../source/maps/bank.inc"
#include "../source/maps/fbr.inc"
#include "../source/maps/house_int_1.inc"

#pragma dynamic 16000
#pragma warning disable 239

new bool:gPlayerAnimLibsPreloaded[MAX_PLAYERS];

new work_loader[3];
new loader_actor_time[2];
new Text3D:loader_actor_text[2];
new loader_actor_text_time;

new Fortune[3];
new WheelTick[3];
new WheelTimer[3];
new WheelBet[MAX_PLAYERS];
new WheelBetMoney[MAX_PLAYERS];
new FortuneActor[3];

new army_actor;
new Text3D:army_actor_text;
new army_actor_time;

new anti_dm_zone[2]; // антидм зоны
new Text:g_szServerLogo[20]; //	Server Logo 
// Полоска сытости
new Text:gHungerText1;// бокс(черная обводка)
new Text:gHungerText2;// фон полоски
new PlayerText:gHungerText3[MAX_PLAYERS]; 	// сама полоска
new PlayerText:gHungerText4[MAX_PLAYERS]; 	// цифра

new PlayerText:gHealthText[MAX_PLAYERS];	// цифра хп
new PlayerText:gArmorText[MAX_PLAYERS];		// цифра армора
// ===== спидометр
new Text:speedBOX;
new Text:ogrankrug;
new Text:ogrankrugBlack;
new PlayerText:KmSpeed[MAX_PLAYERS];
new PlayerText:LightIcon[MAX_PLAYERS];
new PlayerText:RemenIcon[MAX_PLAYERS];
new PlayerText:RepairIcon[MAX_PLAYERS];
new PlayerText:SpeedRadio[MAX_PLAYERS];
new Text:temp_string;
new Text:temp_icon;
new Text:temp_icon2;
new PlayerText:FuellString[MAX_PLAYERS];
new Text:SpeedTime;
new PlayerText:DoorIcon[MAX_PLAYERS];

new SelectOnlineRadio[MAX_PLAYERS];
/* -------------------------------- Перебор машин ------------------------------------ */
new Iterator:Vehicle<MAX_VEHICLES>;
new Iterator:OnPlayersStream[MAX_PLAYERS]<MAX_PLAYERS>;


new ServerYear, ServerMonth, ServerDay, ServerNameMonth[10];

new vid;

new numtext;

new Death[MAX_PLAYERS char];
new duelpickup,orgpickup,votepick;
new restart_time;
new datareg,onlines,pickonline,bancount;
new pickuparmy[2];

//
enum 
{
	eAutoSchoolGates
}
new gServerGates[2];
//

new lcnls[2];
new lcnsf[3];
new lcnlv[2];

new unloadtimer[MAX_PLAYERS];

new lcnpick[2];
new PickNames[256],PickName[7][32],PickDate,PickTimes[128],PickTime[7], Pick = 0, PickLevel = 0;

/* - */
new inTaxi[MAX_PLAYERS];

#define job_taxi 		0
#define job_delivery 	1
#define job_ugon 		2
#define job_loader		3

//#define job_taxi 0

#define job_lvl(%0) (floatround(%0/100,floatround_floor)+1)


#define INVALID_HOUSE_ID 2288
#define INVALID_KVARTIRA_KEY 78855
#define TYPE_TAXI 1
#define SCM SendClientMessage
#define SendMes(%0,%1,%2,%3) 		format(format_string, sizeof(format_string),%2,%3) && SCM(%0, %1, format_string)
new 		format_string[144];
#define ShowFreezProd "{FFFFFF}Хот-дог \t{FF0000}-10 прод. \t{33AA33}+20 сыт.\n{FFFFFF}Бургер \t{FF0000}-20 прод. \t{33AA33}+40 сыт.\n{FFFFFF}Пицца \t{FF0000}-30 прод. \t{33AA33}+60 сыт.{FFFFFF}"
#define ATMBank 				"1. Пополнить счет\n2. Снять со счета\n3. Баланс\n4. Оплатить квартплату"
#define MainMenuMode            "[0] Помощь по игре\n[1] Администрация\n[2] Настройки\n[3] Информация\n[4] Имущество\n[5] Квесты\n[6] Анимации\n[7] Рыбалка\n[8] GPS\n[9] Донат\n[10] Аксессуары"

#define HOLD(%0) \
	((newkeys & (%0)) == (%0))

#define PreloadAnimLib(%0,%1)  ApplyAnimation(%0,%1,"null",0.0,0,0,0,0,0,1)

#define J_DELIVERY 13

/* --------------------------------- MySQL ------------------------------------------ */
new     	MySQL:DATABASE;

#define 	TABLE_ACCOUNTS  		"accounts"
#define 	TABLE_ADMIN 			"admin"
#define 	TABLE_OTHERS 			"others"
#define 	TABLE_CASINO 			"casino"
#define 	TABLE_BANIP     		"banip"
#define 	TABLE_BIZZ      		"bizz"
#define 	TABLE_WORKSHOPS 		"workshops"
#define 	TABLE_HOUSE     		"house"
#define 	TABLE_KVARTIRS  		"kvart"
#define 	TABLE_PODEZDS  			"podezd"

#define 	TABLE_BAN       		"banlog"
#define 	TABLE_DONATE    		"donate"
#define 	TABLE_FARM      		"farms"
#define 	TABLE_STALL     		"stall"
#define 	TABLE_GANGZONE  		"gangzone"
#define 	TABLE_CARS      		"cars"
#define 	TABLE_ACS		 		"accessories"
#define     TABLE_TELEPORT      	"teleport"
#define 	TABLE_DETACHMENT		"detachment"

//
#define 	TABLE_TAXI				"taxi_station"

/* ---------------------------------------------------------------------------------- */
#define 	FullServName 			"Noxe Role Play"
#define 	NameServer 				"Noxe-Rp" //
#define 	NameSite 				"Noxe-Rp.Ru" //
#define 	HostName 				"Noxe-Rp.Ru | Client 0.3.7" //
#define 	Mode 					"Noxe-Rp" //

#define BYTES_PER_CELL (cellbits / 8)

/* ---------------------------------------------------------------------------------- */

#define 	Ammo_SDPISTOL 			10
#define 	Ammo_DEAGLE 			7
#define 	Ammo_SHOTGUN			5
#define 	Ammo_MP5				25
#define 	Ammo_AK47				35
#define 	Ammo_M4A1				35

#define 	publics:%0(%1)			forward %0(%1); public %0(%1)

#define 	NUMBER_OF_ARMYTRUCKS  	6
#define 	KEY_AIM 128

/* ---------------------------------- Цвета ----------------------------------------- */
#define 	COLOR_MAT_RED			0xd32f2fFF
#define     COLOR_CMD           	0x7AADA8FF
#define 	COLOR_GOLD 				0xEAC700FF
#define 	COLOR_BOX 				0x00000070
#define 	COLOR_BBLUE 			0x20A9FFFF
#define 	COLOR_CLUB 				0x00AFF6AA
#define 	COLOR_ORANGE 			0xFF9900AA
#define 	COLOR_ISPOLZUY 			0x7FB151FF
#define 	COLOR_GRAD1 			0xB4B5B7FF
#define 	COLOR_SINIY 			0x00004FAA
#define 	COLOR_LG 				0x7FFF00FF
#define 	COLOR_BLUE 				0x6495EDFF
#define 	COLOR_SALMON 			0xFA8072AA
#define 	COLOR_SYSTEM 			0xEFEFF7AA
#define 	COLOR_KHAKI 			0xF0E68CAA
#define 	COLOR_TEAL 				0x008080FF
#define 	COLOR_GRAD2 			0xBFC0C2FF
#define 	COLOR_INDIGO 			0x4B00B0AA
#define 	COLOR_IVORY 			0xFFFF82AA
#define 	COLOR_TEAL 				0x008080FF
#define 	COLOR_GRAD3 			0xCBCCCEFF
#define 	COLOR_GRAD4 			0xD8D8D8FF
#define 	COLOR_GRAD5 			0xE3E3E3FF
#define 	COLOR_GRAD6 			0xF0F0F0FF
#define 	COLOR_GRAD7 			0xF0F0F0FF
#define 	COLOR_GRAD8 			0xF0F0F0FF
#define 	COLOR_BLACK 			0x000000AA
#define 	COLOR_GREY 				0xAFAFAFAA
#define 	COLOR_GREEN 			0x33AA33FF
#define 	COLOR_BLUEGREEN   		0x46BBAA00
#define 	COLOR_ORANGE 			0xFF9900AA
#define 	COLOR_RED 				0xe53935FF
#define     COLOR_DRED              0xC21D00AA
#define 	COLOR_LIGHTRED 			0xFF6347AA
#define 	COLOR_LIGHTBLUE 		0x33CCFFFF
#define 	COLOR_LLIGHTBLUE 		0x6BB3FFAA
#define 	COLOR_LIGHTGREEN 		0x9ACD32AA
#define 	COLOR_YELLOW			0xFFFF00AA
#define 	COLOR_YELLOW2 			0xF5DEB3AA
#define 	COLOR_WHITE 			0xFFFFFFAA
#define 	COLOR_REDD 				0xFF0000AA
#define 	COLOR_BROW 				0xA85400AA
#define 	COLOR_FADE1 			0xE6E6E6E6
#define 	COLOR_FADE2 			0xC8C8C8C8
#define 	COLOR_FADE3 			0xAAAAAAAA
#define 	COLOR_FADE4 			0x8C8C8C8C
#define 	COLOR_FADE5 			0x6E6E6E6E
#define 	COLOR_PURPLE 			0xC2A2DAAA
#define 	COLOR_DBLUE 			0x2641FEAA
#define 	COLOR_ALLDEPT 			0xFF8282AA
#define 	COLOR_NEWS 				0xFFA500AA
#define 	COLOR_OOC 				0xE0FFFFAA
#define 	TEAM_HIT_COLOR 			0xFFFFFF00
#define 	TEAM_BLUE_COLOR 		0x8D8DFF00
#define 	COLOR_ADD 				0x63FF60AA
#define 	TEAM_GROVE_COLOR 		0x00D900C8
#define 	TEAM_VAGOS_COLOR 		0xFFC801C8
#define 	TEAM_BALLAS_COLOR 		0xD900D3C8
#define 	TEAM_AZTECAS_COLOR 		0x01FCFFC8
#define 	TEAM_CYAN_COLOR 		0xF4AAC6FF
#define 	TEAM_ORANGE_COLOR 		0xFF830000
#define 	COLOR_INVIS 			0xAFAFAF00
#define 	COLOR_SPEC 				0xBFC0C200
#define 	COLOR_STROKA 			0xFD0A9FF

/* -------------------------------- Переменные ---------------------------- */
#define MAX_DIST 9

#define MAX_DETACHMENT_LIST 		18		// max items per dialog
#define DIALOG_DETACHMENT_BASE 		11130	// dialog offset id 


#define LICENSES_GET 0
#define LICENSES_SET 1
#define LICENSES_TAKE 2

#define LIC_DRIVER 		0b1
#define LIC_HELICOPTER 	0b10
#define LIC_BOAT 		0b100
#define LIC_WEAPONS 	0b1000
#define LIC_BISINESS 	0b1000
#define LIC_FISHING 	0b10000

////////////////////////////
#define SHOW_HP 		0b1
#define SHOW_HUNGER 	0b10
#define SHOW_ARMOR 		0b100

new ServWeather;
stock SetWeatherEx(const weatherid)
{
	ServWeather = weatherid;
	SetWeather(weatherid);
}
new pravila_pick;
//Радио 
new taxi_park_car[6];
// ======== банкоматы
new Float:atm_cords[][] = {
	{1142.4000200,-1764.1999500,13.5000000,180.0}, 		// бомж респа 1 лвл
	{-2033.5000000,159.6000100,28.9000000,180.0}, 		// заправка возле респы в сф
	{-2035.5999800,-102.5000000,35.1000000, 270.0}, 	// Автошкола
	{2854.3000500,1286.0000000,11.3000000, 270.0} 		// АВ ЛВ
};

new Text3D:atm_text[2];          // Текст подсказка над банкоматами
new timeATM;                	 // Время для обновления 3д текста
new atm_area[2];          		 // зона действия банкомата штоооооооооооо


//============ интерьеры домов
#define house_int_count 38

new gHintStoreArea[house_int_count];
new gHintSafeArea[house_int_count];
new gHintFreezArea[house_int_count];



new Float:gHintStore[house_int_count][4] = {
	{2230.9829,-1109.4178,1049.8623,180.0},
	{2185.5993,-1215.0634,1048.0128,0.0000},
	{2321.5439,-1007.9141,1053.7084,-90.0},
	{2268.2766,-1137.1439,1049.5922,-180.0},
	{2362.9790,-1133.6341,1049.8741,-90.0},
	{2281.3879,-1140.3836,1049.8778,180.0},
	{2214.6550,-1078.5512,1049.4733,180.0},
	{93.9579,1332.4388,1087.3562,-180.0},
	{232.0812,1078.6463,1086.7938,-180.0},
	{247.1169,306.4585,998.1483,0.0},//10
	{267.0915,307.1669,998.0889,42.3000},
	{2456.5756,-1705.1350,1012.4469,-90.0},
	{2490.8063,-1705.2812,1017.2929,90.0},
	{2259.0554,-1218.4326,1047.9423,180.0},
	{239.8603,1108.8549,1079.9216,-180.0},
	{236.2240,1186.8347,1083.3648,-180.0},
	{223.7360,1247.5538,1081.0595,0.0000},
	{230.5292,1291.7623,1081.1096,0.0000},
	{36.2862,1343.1430,1087.7739,-90.0},
	{289.1342,1473.9226,1079.1767,90.0},//20
	{2335.0346,-1142.2761,1053.3045,90.0},
	{-275.6218,1458.4542,1087.8499,0.0},
	{330.9278,1491.6746,1083.4166,0.0},
	{15.1880,1410.3474,1083.4199,90.0},
	{378.1139,1469.3828,1079.1645,0.0},
	{359.2552,1418.3598,1080.3144,0.0},
	{441.5642,1405.0961,1083.2796,0.0},
	{138.5746,1387.2512,1087.3559,0.0},
	{494.9393,1418.8679,1083.3260,-90.0},//29
	{255.3610,1285.5831,1079.1768,-180.0}, //31
	{-72.3775,1365.5113,1079.1300,91.4000},
	{2819.7868,-1168.0839,1028.0808,-89.4000},
	{2245.5871,-1076.5100,1047.9423,-89.1999},//35
	{2362.9790,-1133.6341,1049.8741,-90.0},
	{-43.2747,1412.8441,1083.3686,0.0000},//37
	{256.2465,1243.9345,1083.1567,90.3999},
	{418.3812,2534.8603,8.9199,177.9998},
	{223.7360,1247.5538,1081.0595,0.0000}
};
new Float:gHintSafe[house_int_count][4] = {
	{2235.4714,-1110.5235,1051.1030,-90.0},
	{2195.5012,-1214.4873,1048.9133,90.0},
	{2328.3356,-1016.6773,1055.1214,180.0},
	{2270.1784,-1132.5655,1050.6328,0.0},
	{2376.2827,-1128.0906,1050.8750,-90.0},
	{2286.0820,-1136.6024,1050.3183,-90.0},
	{2211.3532,-1070.7612,1049.8637,0.0000},
	{88.2836,1331.9644,1088.3671,180.0},
	{237.1456,1083.8426,1087.2397,0.0000},
	{243.9187,300.8536,998.6580,180.0},//
	{271.6213,308.8014,998.5581,0.0000},
	{2448.1062,-1707.1964,1013.9082,-180.0},
	{2489.8315,-1707.4692,1018.8972,90.0},
	{2263.1818,-1220.9895,1049.6738,-90.0},
	{248.6875,1115.5089,1081.3425,-90.0},
	{232.1327,1212.0216,1085.0070,90.0},
	{216.1254,1251.3492,1082.1484,90.0},
	{234.2438,1288.8481,1082.6972,-90.0},
	{34.3900,1346.0241,1089.4454,0.0000},
	{306.8100,1472.0506,1080.9584,-90.0},//
	{2311.0009,-1142.9982,1054.7951,180.0},
	{-271.8809,1446.9813,1088.2868,180.0},
	{319.1344,1483.3703,1085.0111,90.0},
	{14.7595,1408.5457,1084.3806,90.0},
	{376.6550,1462.0053,1080.6071,-90.0},
	{369.5550,1414.0164,1081.7938,90.0},
	{452.2294,1396.9678,1084.1878,180.0},
	{147.8858,1365.4699,1083.6992,-180.0},
	{484.9017,1409.5024,1084.6965,0.0},//29
	{258.4237,1285.0819,1081.0982,-180.0}, //31
	{-63.7436,1367.6302,1081.1818,0.0000},
	{2812.4853,-1160.7703,1029.8024,0.0000},
	{2246.0314,-1070.8703,1049.6940,-89.9999},//35
	{2376.2827,-1128.0906,1050.8750,-90.0},
	{-53.1803,1403.9793,1085.4100,89.3999},
	{255.4362,1257.4599,1084.9782,0.0000},
	{421.1551,2543.2817,10.6400,0.0000},
	{216.1254,1251.3492,1082.1484,90.0}
};
new Float:gHintFreez[house_int_count][6] = {
	{2235.5417,-1111.9722,1049.7822,-90.0},
	{2181.6320,-1201.4257,1048.0137,90.0},
	{2317.4226,-1010.6076,1049.1505,-90.0},
	{2259.5715,-1140.9250,1049.6018,90.0},
	{2374.5036,-1135.4018,1049.8143,-90.0},
	{2277.0104,-1134.2462,1049.8574,90.0},
	{2207.1931,-1078.0441,1049.4438,-180.0},
	{81.5933,1341.5450,1082.8161,0.0000},
	{222.8106,1079.7976,1083.2221,90.0},
	{244.3773,306.5402,998.1083,0.0000},//
	{273.8364,303.5366,998.1285,-90.0},
	{2452.5605,-1688.7540,1012.4570,-90.0},
	{2498.2084,-1705.6575,1013.6620,0.2000},
	{2252.3479,-1214.1237,1048.0227,-180.0},
	{233.5347,1117.3530,1079.9711,90.4000},
	{239.4849,1195.7725,1079.2368,0.0},
	{231.6629,1249.4648,1081.1303,0.0},
	{220.4749,1291.4848,1081.0595,180.0},
	{23.6174,1346.4964,1083.3044,180.0},
	{298.9392,1487.5650,1079.2368,0.0},//
	{2334.2927,-1144.0842,1049.6922,180.0},
	{-267.7491,1451.9597,1083.3664,0.0},
	{326.8057,1482.9757,1083.4003,-90.0},
	{32.0121,1404.4827,1083.4290,-90.0},
	{381.8688,1452.2484,1079.1269,180.0},
	{364.0109,1428.4283,1080.3443,90.0},
	{442.9196,1406.0825,1083.3435,180.0},
	{153.7756,1378.2567,1082.8392,180.0},
	{498.2791,1398.5397,1079.2698,180.0},//29
	{266.8898,1295.5727,1079.2668,0.0000},//31
	{-59.0046,1366.9761,1079.1899,0.0000},
	{2814.8986,-1165.1279,1024.5367,0.0000},
	{2240.2416,-1070.6458,1047.9724,90.0000},//35
	{2374.5036,-1135.4018,1049.8143,-90.0},
	{-45.0870,1402.3806,1083.3286,-90.1000},
	{259.6937,1248.0192,1083.2167,90.3999},
	{413.1856,2536.7585,8.9499,91.0000},
	{231.6629,1249.4648,1081.1303,0.0}
};

new bool:server_add_house;

enum house_i
{
	Float: int_x,
	Float: int_y,
	Float: int_z,
	int_int,
	int_klass
};
new interior_info[house_int_count][house_i];

new SmsPriceNews[3] = {50,50,50}; // 0 - SF // 1- LS // 2 - LV
new bool:OnSmsNews[3] = {false, ...}; // 0 - SF // 1 - LS // 2 - LV
new OnPlayerEther[MAX_PLAYERS] = {0, ...};
new ViborNews;
new Mobile[MAX_PLAYERS] = {9999, ...};
new LiveOffer[MAX_PLAYERS];
new LiveOfferls[MAX_PLAYERS];
new LiveOfferlv[MAX_PLAYERS];

new adCheck, adCheck2;
new TOTALADVERT[3];
new ReportQ[MAX_PLAYERS][144];
new SelectWavesRadio[MAX_PLAYERS]; // 1 - SF // 2 - LS // 3 - LV
//new WeaponTick[MAX_PLAYERS];

enum adInfo
{
	adPhone,
	adText[128],
	adEditName[32],
	adName[MAX_PLAYER_NAME],
	adOnEdit
};
new AdvertInfo[30][3][adInfo];
 
enum delivery
{
	food,
	adress,
	accept,
	really
}
new delivery_info[15][delivery];

enum dCar
{
	Owner,
	Driver, // водитель
	TypeCar, //тип
	Text3D:JobText, // 3dtext
	bool:Temp,// временная  
	Float:fuell     
};
new car_data[MAX_VEHICLES][dCar];

new CarUnLockForPlayer[MAX_PLAYERS];



stock CreateVehicle_R(modelid, Float:x, Float:y, Float:z, Float:angle, color1, color2, respawn_delay, addsiren = 0)
{
	if(INVALID_VEHICLE_ID != (vid = CreateVehicle(modelid, x, y, z, angle, color1, color2, respawn_delay, addsiren)))
	{
		car_data[vid][fuell] = 200;
		Iter_Add(Vehicle, vid);
	}
	return vid;
}

// Конец радио
new EnterGarage[MAX_PLAYERS];
new triggers[3];
new race_state[MAX_PLAYERS];

new bool:button_fire[MAX_PLAYERS];
new RouletStol[MAX_PLAYERS];
new RouletBet[MAX_PLAYERS];
new RouletObject[MAX_PLAYERS];

new sudepic[2];
new style_pickup_queue,style_pickup_clothes;
new enter_acs[MAX_PLAYERS];

#define MAX_ROULET 13

new Farmtimer[MAX_PLAYERS] = {-1, ...},
robscdtimer[MAX_PLAYERS] = {-1, ...},
TimerForPlayer[MAX_PLAYERS] = {-1, ...},
MzCheckTimer = -1,
speed_update[MAX_PLAYERS] = {-1, ...},
kekovichs[MAX_PLAYERS] = {-1, ...},
job_auto_timer_check[MAX_PLAYERS] = {-1, ...},
Kicktime[MAX_PLAYERS] = {-1, ...},
RouletTimer[MAX_ROULET][3];

new radioOnline[][][] ={
{"http://listen.livestreamingservice.com:8054", "Radio: 181 Beat"},
{"http://listen.livestreamingservice.com:8800", "Radio: Energy 98"},
{"http://listen.livestreamingservice.com/181-powerexplicit_128k.mp3", "Radio: Power 181"},
{"http://air.radiorecord.ru:8102/mix_320", 	"Radio: RecordMix"}
};





//-----------------------------------------------------------------------------
new string[1000]; // Общая переменная Форматирования
new YCMDstr[256];
new cString[144];
//-----------------------------------------------------------------------------

enum robtimers
{
	rMOLS,
	rMOSF,
	
	rMedLS,
	rMedSF,
	rMedLV,
	
	rAmmoLS
}
new RobTimer[robtimers];


//************************************Ограбления для Банд / Мафий******************************************
new ActorsRob[8]; // Боты
new PlayerText:robsdraw[MAX_PLAYERS]; // Текстдрав ограбления
new RobTickRTC[MAX_PLAYERS];
new dresspick;
//
new load_mats[5];
new load_mats_lsa = 0;
//******************************************************************************
//******************************************************************************
forward Float:GetDistanceBetweenPlayerss(p1,p2);

//*******************************************Таймеры***********************************
//new player_update[MAX_PLAYERS]; // Индивидуальный таймер для игрока

//----------------------------------- Anti Spawn Vehicle -----------------------------
new TESTPARAMS = 0;
new gz_autorob[MAX_PLAYERS];

new bool:dmgex = true;
new bool:chkhp = false;

new Float:AntiAFK[MAX_PLAYERS][6];//
new PlayerAFKtime[MAX_PLAYERS];//

new cto_mechanic[MAX_PLAYERS];
new copkey[MAX_PLAYERS];
new show_td[MAX_PLAYERS];
new Text:bizz_td[2];
new derbyrace[3];
new resoluted_farm[5];
new resoluted_workshop[3];
new trailer_id[MAX_PLAYERS]; // ID прицепа у дальнобойщика
new gunpicpaint[5];
new MinusPercent[MAX_PLAYERS];
new UdarPercent[MAX_PLAYERS];
new MafiaMatsSell[MAX_PLAYERS];
new MafiaMatsSellPrice[MAX_PLAYERS];
new input_name[MAX_PLAYER_NAME];
new changename[MAX_PLAYERS];

new bool:NewTazer[MAX_PLAYERS];
new cuffto[MAX_PLAYERS];
new Convoi[MAX_PLAYERS];
new bool:AutoSaloon[MAX_PLAYERS];
new ZernBuy;
new UrojSell;
new NarkSell;
new bool:zips[MAX_PLAYERS];
new bool:times[MAX_PLAYERS];

new g_szLSAMat[2];

new booston = 0;
new booston2 = 0;
new donates = 1;

new choosebiz[MAX_PLAYERS];
new chooses[MAX_PLAYERS];
new Float:accept_car_damage[MAX_PLAYERS],
Float:last_vehicle_health[MAX_PLAYERS];
new CarOffer[MAX_PLAYERS];
new CarPrice[MAX_PLAYERS];
new BoyOffer[MAX_PLAYERS];
new BoyWin[MAX_PLAYERS];
new garagexit[4];
new trailer_on[MAX_PLAYERS];
new monitoring; // Мониторинг бизнесов

enum stylelist
{
	slName[MAX_PLAYER_NAME],
	slName_two[MAX_PLAYER_NAME],
	slPrice
};
new StyleList[5][stylelist], TOTALSTYLELIST;

// СТО
enum workshoplistInfo
{
	wlID,
	wlName[MAX_PLAYER_NAME]
};
new WorkshopList[10][5][workshoplistInfo];

enum Match
{
	mID,
	mPlayer_1,
	mWeapon,
	mPrice,
	mZone
}
new MatchInfo[20][Match];

new testactor;

new g_szColorsTable[] = {
	TEAM_HIT_COLOR,
	0x089401FF,
	0x56FB4EFF,
	0x49E789FF,
	0x2A9170FF,
	0x9ED201FF,
	0x279B1EFF,
	0x51964DFF,
	0xFF0606FF,
	0xFF6600FF,
	0xF45000FF,
	0xBE8A01FF,
	0xB30000FF,
	0x954F4FFF,
	0xE7961DFF,
	0xE6284EFF,
	0xFF9DB6FF,
	0x110CE7FF,
	0x0CD7E7FF,
	0x139BECFF,
	0x2C9197FF,
	0x114D71FF,
	0x8813E7FF,
	0xB313E7FF,
	0x758C9DFF,
	0xFFDE24FF,
	0xFFEE8AFF,
	0xDDB201FF,
	0xDDA701FF,
	0xB0B000FF,
	0x868484FF,
	0xB8B6B6FF,
	0x333333FF,
	0xFAFAFAFF
};

#define MAX_VEHICLE_COMPONENT 171
new AwtomasMassiveID[MAX_PLAYERS][MAX_VEHICLE_COMPONENT];
enum AllComponents
{
	idcomp,
	Type[20],
	Name[20],
	Cost
};
new AllTuningComponentsInfo[MAX_VEHICLE_COMPONENT][AllComponents]= {
	{1008,    "Nitro",        "Nos 5x"            ,2000},
	{1009,    "Nitro",        "Nos 2x"            ,1000},
	{1010,    "Nitro",        "Nos 10x"            ,3000},
	{1073,    "Wheels",        "Shadow"            ,5000},
	{1074,    "Wheels",        "Mega"                ,5000},
	{1075,    "Wheels",        "Rimshine"            ,5000},
	{1076,    "Wheels",        "Wires"                ,5000},
	{1077,    "Wheels",        "Classic"            ,5000},
	{1078,    "Wheels",        "Twist"                ,5000},
	{1079,    "Wheels",        "Cutter"            ,5000},
	{1080,    "Wheels",        "Switch"            ,5000},
	{1081,    "Wheels",        "Grove"                ,5000},
	{1082,    "Wheels",        "Import"            ,5000},
	{1083,    "Wheels",        "Dollar"            ,5000},
	{1084,    "Wheels",        "Trance"            ,5000},
	{1085,    "Wheels",        "Atomic"            ,5000},
	{1025,    "Wheels",        "Offroad"            ,5000},
	{1096,    "Wheels",        "Ahab"                ,5000},
	{1097,    "Wheels",        "Virtual"            ,5000},
	{1098,    "Wheels",        "Access"            ,5000},
	{1086,    "Stero",        "Sony"                ,500},
	{1087,    "Hydraulics",    "LowRider"            ,4000},
	{1000,    "Spoiler",    "Pro"                    ,2000},
	{1001,    "Spoiler",    "Win"                    ,2000},
	{1002,    "Spoiler",    "Drag"                    ,2000},
	{1003,    "Spoiler",    "Alpha"                    ,2000},
	{1014,    "Spoiler",    "Champ"                    ,2000},
	{1015,    "Spoiler",    "Race"                    ,2000},
	{1016,    "Spoiler",    "Worx"                    ,2000},
	{1049,    "Spoiler",    "Alien"                    ,2000},
	{1050,    "Spoiler",    "X-Flow"                ,2000},
	{1058,    "Spoiler",    "Alien"                    ,2000},
	{1023,    "Spoiler",    "Fury"                    ,2000},
	{1158,    "Spoiler",    "X-Flow"                ,2000},
	{1146,    "Spoiler",    "X-Flow    "                ,2000},
	{1147,    "Spoiler",    "Alien"                    ,2000},
	{1138,    "Spoiler",    "Alien"                    ,2000},
	{1139,    "Spoiler",    "X-Flow"                ,2000},
	{1060,    "Spoiler",    "X-Flow"                ,2000},
	{1162,    "Spoiler",    "Alien"                    ,2000},
	{1163,    "Spoiler",    "X-Flow"                ,2000},
	{1164,    "Spoiler",    "Alien"                    ,2000},
	{1004,    "Hood",        "Champ Scoop"                ,1000},
	{1005,    "Hood",        "Fury Scoop"                ,1000},
	{1011,    "Hood",        "Race Scoop"                ,1000},
	{1012,    "Hood",        "Worx Scoop"                ,1000},
	{1100,    "Bullbars",    "Chrome Grill"            ,1000},
	{1123,    "Bullbars",    "Chrome Bars"    ,1000},
	{1125,    "Bullbars",    "Chrome Lights"    ,1000},
	{1117,    "Front Bumper","Chrome"                ,2000},
	{1152,    "Front Bumper","X-Flow"                ,2000},
	{1153,    "Front Bumper","Alien"                ,2000},
	{1155,    "Front Bumper","Alien"                ,2000},
	{1157,    "Front Bumper","X-Flow"                ,2000},
	{1160,    "Front Bumper","Alien"                ,2000},
	{1165,    "Front Bumper","X-Flow"                ,2000},
	{1166,    "Front Bumper","Alien"                ,2000},
	{1169,    "Front Bumper","Alien"                ,2000},
	{1170,    "Front Bumper","X-Flow"                ,2000},
	{1171,    "Front Bumper","Alien"                ,2000},
	{1172,    "Front Bumper","X-Flow"                ,2000},
	{1173,    "Front Bumper","X-Flow"                ,2000},
	{1174,    "Front Bumper","Chrome"                ,2000},
	{1176,    "Rear Bumper","Chrome"                ,2000},
	{1179,    "Front Bumper","Chrome"                ,2000},
	{1181,    "Front Bumper","Slamin"                ,2000},
	{1182,    "Front Bumper","Chrome"                ,2000},
	{1185,    "Front Bumper","Slamin"                ,2000},
	{1188,    "Front Bumper","Slamin"                ,2000},
	{1189,    "Front Bumper","Chrome"                ,2000},
	{1190,    "Front Bumper","Slamin"                ,2000},
	{1191,    "Front Bumper","Chrome"                ,2000},
	{1140,    "Rear Bumper","X-Flow"                ,2000},
	{1141,    "Rear Bumper","Alien"                ,2000},
	{1148,    "Rear Bumper","X-Flow"                ,2000},
	{1149,    "Rear Bumper","Alien"                ,2000},
	{1150,    "Rear Bumper","Alien"                ,2000},
	{1151,    "Rear Bumper","X-Flow"                ,2000},
	{1154,    "Rear Bumper","Alien"                ,2000},
	{1156,    "Rear Bumper","X-Flow"                ,2000},
	{1159,    "Rear Bumper","Alien"                ,2000},
	{1161,    "Rear Bumper","X-Flow"                ,2000},
	{1167,    "Rear Bumper","X-Flow"                ,2000},
	{1168,    "Rear Bumper","Alien"                ,2000},
	{1175,    "Rear Bumper","Slamin"                ,2000},
	{1177,    "Rear Bumper","Slamin"                ,2000},
	{1178,    "Rear Bumper","Slamin"                ,2000},
	{1180,    "Rear Bumper","Chrome"                ,2000},
	{1183,    "Rear Bumper","Slamin"                ,2000},
	{1184,    "Rear Bumper","Chrome"                ,2000},
	{1186,    "Rear Bumper","Slamin"                ,2000},
	{1187,    "Rear Bumper","Chrome"                ,2000},
	{1192,    "Rear Bumper","Chrome"                ,2000},
	{1193,    "Rear Bumper","Slamin"                ,2000},
	{1143,    "Vents",    "Oval"            ,1000},
	{1145,    "Vents",    "Square"        ,1000},
	{1032,    "Roof",        "Alien"            ,2000},
	{1006,    "Roof",        "Scoop"                ,2000},
	{1038,    "Roof",        "Alien"            ,2000},
	{1035,    "Roof",        "X-Flow"            ,2000},
	{1033,    "Roof",        "X-Flow"            ,2000},
	{1053,    "Roof",        "X-Flow"                    ,2000},
	{1054,    "Roof",        "Alien"                        ,2000},
	{1055,    "Roof",        "Alien"                        ,2000},
	{1061,    "Roof",        "X-Flow"                    ,2000},
	{1067,    "Roof",        "Alien"                        ,2000},
	{1068,    "Roof",        "X-Flow"                    ,2000},
	{1088,    "Roof",        "Alien"                        ,2000},
	{1091,    "Roof",        "X-Flow"                    ,2000},
	{1103,    "Roof",        "Covertible"                ,2000},
	{1128,    "Roof",        "Vinyl Hardtop"                ,2000},
	{1130,    "Roof",        "Hardtop"                    ,2000},
	{1131,    "Roof",        "Softtop"                    ,2000},
	{1013,    "Lamps",        "Round Fog"                    ,1000},
	{1024,    "Lamps",        "Square Fog"                ,1000},
	{1109,    "Rear Bullbars","Chrome"                ,1000},
	{1110,    "Rear Bullbars","Slamin"                ,1000},
	{1115,    "Front Bullbars","Chrome"                ,1000},
	{1116,    "Front Bullbars","Slamin"                ,1000},
	{1018,    "Exhaust",    "Upswept"                    ,2000},
	{1019,    "Exhaust",    "Twin"                        ,2000},
	{1020,    "Exhaust",    "Large"                        ,2000},
	{1021,    "Exhaust",    "Medium"                    ,2000},
	{1022,    "Exhaust",    "Small"                        ,2000},
	{1028,    "Exhaust",    "Alien"                        ,2000},
	{1029,    "Exhaust",    "X-Flow"                    ,2000},
	{1034,    "Exhaust",  "Alien"                        ,2000},
	{1037,    "Exhaust",    "X-Flow"                    ,2000},
	{1043,    "Exhaust",    "Slamin"                    ,2000},
	{1044,    "Exhaust",    "Chrome"                    ,2000},
	{1045,    "Exhaust",    "X-Flow"                    ,2000},
	{1046,    "Exhaust",    "Alien"                        ,2000},
	{1059,    "Exhaust",    "X-Flow"                    ,2000},
	{1064,    "Exhaust",    "Alien"                        ,2000},
	{1065,    "Exhaust",    "Alien"                        ,2000},
	{1066,    "Exhaust",    "X-Flow"                    ,2000},
	{1092,    "Exhaust",    "Alien"                     ,2000},
	{1089,    "Exhaust",    "X-Flow"                    ,2000},
	{1126,    "Exhaust",    "Chrome"            		,2000},
	{1127,    "Exhaust",    "Slamin"            		,2000},
	{1129,    "Exhaust",    "Chrome"                    ,2000},
	{1113,    "Exhaust",    "Chrome"                    ,2000},
	{1114,    "Exhaust",    "Slamin"                    ,2000},
	{1104,    "Exhaust",    "Chrome"                    ,2000},
	{1105,    "Exhaust",    "Slamin"                    ,2000},
	{1132,    "Exhaust",    "Slamin"                    ,2000},
	{1135,    "Exhaust",    "Slamin"                    ,2000},
	{1136,    "Exhaust",    "Chrome"                    ,2000},
	{1007,    "Sideskirt",    "Sideskirt"                ,2000},
	{1026,    "Sideskirt",    "Alien"                    ,2000},
	{1031,    "Sideskirt",    "X-Flow"                ,2000},
	{1036,    "Sideskirt",    "Alien"                    ,2000},
	{1039,    "Sideskirt",    "X-Flow"                ,2000},
	{1041,    "Sideskirt",    "X-Flow"                ,2000},
	{1042,    "Sideskirt",    "Chrome"                ,2000},
	{1047,    "Sideskirt",    "Alien"                    ,2000},
	{1048,    "Sideskirt",    "X-Flow"                ,2000},
	{1056,    "Sideskirt",    "Alien"                    ,2000},
	{1057,    "Sideskirt",    "X-Flow"                ,2000},
	{1069,    "Sideskirt",    "Alien"                    ,2000},
	{1070,    "Sideskirt",    "X-Flow"                ,2000},
	{1090,    "Sideskirt",    "Alien"                    ,2000},
	{1093,    "Sideskirt",    "X-Flow"                ,2000},
	{1095,    "Sideskirt",    "X-Flow"                ,2000},
	{1106,    "Sideskirt",    "Chrome Arches"            ,2000},
	{1108,    "Sideskirt",    "Chrome Strip"            ,2000},
	{1118,    "Sideskirt",    "Chrome Trim"            ,2000},
	{1119,    "Sideskirt",    "Wheelcovers"            ,2000},
	{1122,    "Sideskirt",    "Chrome Flames"            ,2000},
	{1133,    "Sideskirt",    "Chrome Strip"            ,2000},
	{1134,    "Sideskirt",    "Chrome Strip"            ,2000}
};
// Рулетка
new bool:RouletPrize[MAX_ROULET];
new RouletNumber[MAX_ROULET];
new RouletKrupie[MAX_ROULET];
new bool:RouletPlay[MAX_ROULET];
new PlayerText:RouletText[MAX_PLAYERS];
new RouletCloakroom[2];
//==================================

// Кости
#define MAX_BONE 14
new Text:Bone[4];
new PlayerText:PlayerBone[MAX_PLAYERS][4];
new
Float:BoneCoor[MAX_BONE][4] ={
	{1944.19,1010.90,992.00,90.00},
	{1944.19,1017.70,992.00,90.00},
	{1944.19,1025.00,992.00,90.00},
	{1938.19,1010.90,992.00,90.00},
	{1938.19,1017.70,992.00,90.00},
	{1938.19,1025.00,992.00,90.00},
	{2251.01,1589.78,1005.70,90.00},
	{2257.01,1589.78,1005.70,90.00},
	{2251.01,1595.78,1005.70,90.00},
	{2257.01,1595.78,1005.70,90.00},
	{2266.01,1589.78,1005.70,90.00},
	{2272.01,1589.78,1005.70,90.00},
	{2266.01,1595.78,1005.70,90.00},
	{2272.01,1595.78,1005.70,90.00}
};
enum Bones
{
	Gamer[5],
	Bet,
	bBank,
	Crupie,
	GameStart
}
new BoneInfo[MAX_BONE+1][Bones];

enum weapInfo
{
	wWeapon[13],
	wAmmo[13]
}
new WeaponInfo[MAX_PLAYERS][weapInfo];

new MaxSpeedCar[212] = {
	87,81,103,61,73,91,-1,-1,-1,-1,-1,123,93,61,59,106,86,-1,64,82,93,82,82,55,75,-1,93,92,
	87,112,-1,73,-1,61,92,-1,85,88,79,93,76,-1,-1,-1,62,90,-1,-1,-1,-1,-1,107,-1,-1,-1,-1,59,-1,87,76,-1,88 ,61,79 ,-1,-1,
	87,87,79,87,76,61,-1,-1,82,96,-1,103,75,77,102,-1,87,-1,-1,-1,-1,-1,-1,77,87,82,78,-1,119,97,90,-1,-1,-1,78,-1,119,119,-1,78,99,92,-1,-1,-1,-1,
	-1,-1,67,79,87,87,91,-1,-1,88,130,82,82,82,89,87,82,-1,82,-1,-1,61,90,93,87,96,-1,-1,-1,82,112,91,73,-1,81,82,79,-1,85,80,87,67,-1,84,87,-1,-1,86,98,94,
	99,98,-1,-1,91,88,96,-1,-1,-1,-1,-1,-1,-1,87,87,-1,-1,87,85,88,76,-1,-1,87,87,91,60,90,-1,-1,-1,-1,-1,-1,98,98,98,88,84,-1,82,-1,93,95,87,73,-1
};
enum _spectator
{
	sID,
	SAFK[3],
	Float:sPos[4],
	sVirt,
	sInt
}
new SERIU[MAX_PLAYERS][_spectator];

new PlayerText:Seriu[MAX_PLAYERS][2];
new
	PlayerText:ReconPlayer[35],
	ReconBounds[MAX_PLAYERS][2],
	ReconSelect[MAX_PLAYERS],
	SpecAd[MAX_PLAYERS],
	Float:SpecPlayer[MAX_PLAYERS][3],
	SpecPlayerInt[MAX_PLAYERS],
	SpecPlayerWorld[MAX_PLAYERS],
	SpecID[MAX_PLAYERS],
	Spectate[MAX_PLAYERS],
	NumberShot[MAX_PLAYERS],
	DisallowSpawn[MAX_PLAYERS],
	TimeNumberShot[MAX_PLAYERS],
	NumberShotTarget[MAX_PLAYERS],
	TimeNumberShotTarget[MAX_PLAYERS],
	Float:SpecPlayerAngle[MAX_PLAYERS],
	LastReconClick[MAX_PLAYERS][2],
	ReconSelectSub[MAX_PLAYERS];

new Text:AutoShopText[12];
new PlayerText:ShopText[MAX_PLAYERS];

new ShopCar[86][2] =
{
	{400,130000},//n 0
	{567,200000},
	{549,120000},
	{547,110000},
	{546,140000},
	{543,100000},
	{527,100000},
	{526,110000},
	{518,170000},
	{517,150000},
	{516,140000},
	{492,140000},
	{479,110000},
	{478,100000},
	{475,190000},
	{466,110000},
	{458,120000},
	{439,150000},
	{436,100000},
	{404,100000}, //n 19
	{419,800000},//c 20
	{586,800000},
	{581,1000000},
	{461,1000000},
	{418,700000},
	{603,750000},
	{589,770000},
	{580,1000000},
	{579,940000},
	{561,910000},
	{555,940000},
	{554,840000},
	{534,760000},
	{533,920000},
	{505,880000},
	{491,800000},
	{489,880000},
	{445,810000},
	{421,830000},//c 38
	{401,340000},//d 39
	{600,420000},
	{585,360000},
	{576,350000},
	{575,460000},
	{566,340000},
	{551,480000},
	{550,480000},
	{540,330000},
	{536,400000},
	{529,440000},
	{507,450000},
	{474,370000},
	{467,390000},
	{426,420000},
	{422,310000},
	{412,390000},
	{405,400000},//d 56
	{477,2200000},//b 57
	{471,2100000},
	{468,1900000},
	{463,2000000},
	{521,1900000},
	{602,2000000},
	{587,2100000},
	{565,2100000},
	{562,2200000},
	{560,2250000},
	{559,2200000},
	{558,2100000},
	{545,1900000},
	{535,2000000},
	{480,2400000},//b 71
	{402,4800000},//a 72
	{503,6000000},
	{502,6000000},
	{494,6000000},
	{495,5800000},
	{424,5000000},
	{434,4800000},
	{522,4600000},
	{541,6000000},
	{506,5100000},
	{451,6000000},
	{429,5400000},
	{415,5600000},
	{411,6000000}//a 85
};
new SmenaSkina[MAX_PLAYERS];
new shotTime[MAX_PLAYERS];
new shot[MAX_PLAYERS];
new tipster[MAX_PLAYERS];
new tipsteron = -1;
new tipsterplayer = -1;
new getgunsid[MAX_PLAYERS];
new tipsterlisten[MAX_PLAYERS];
new PlayerText:FishingText[MAX_PLAYERS];
new Float:Sonar[MAX_PLAYERS];
new ammonac[6];
new skills[2];
new Text3D:LabelBwar[MAX_PLAYERS];
new recognition[MAX_PLAYERS];
new EnterVehT[MAX_PLAYERS];
new engine,lights,alarm,doors,bonnet,boot,objective;
new auctionpic[2];
new police[MAX_VEHICLES];
new bizname[MAX_PLAYERS][100];
new auction_info[10];
new bizselect[MAX_PLAYERS];
new KeysOffer[MAX_PLAYERS];
new KeysPrice[MAX_PLAYERS];

stock SetPlayerToFacePlayer(playerid, targetid)
{
	new
		Float:pX,
		Float:pY,
		Float:pZ,
		Float:X,
		Float:Y,
		Float:Z,
		Float:ang;
		
	if(!IsPlayerConnected(playerid) || !IsPlayerConnected(targetid)) return false;
	AntiCheatGetPos(targetid, X, Y, Z);
	AntiCheatGetPos(playerid, pX, pY, pZ);
	if( Y > pY ) ang = (-acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 90.0);
	else if( Y < pY && X < pX ) ang = (acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 450.0);
	else if( Y < pY ) ang = (acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 90.0);
	if(X > pX) ang = (floatabs(floatabs(ang) + 180.0));
	else ang = (floatabs(ang) - 180.0);
	SetPlayerFacingAngle(playerid, ang);
	return false;
}
stock CreateTrigger(Float:x, Float:y, Float:z, color = 0xFFFFFFFF, c_world = -1, c_int = -1)
{
	new Trigger = CreateDynamicObject(1317, x, y, z, 0.0, 0.0, 0.0,c_world,c_int);
	SetDynamicObjectMaterial(Trigger,  0, -1, "none","none", color);

	return Trigger;
}


//#define CreateObject CreateDynamicObject
///////////////////////////////

#define RELEASED(%0) \
	(((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))
#define PRESSED(%0) \
	(((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
new Float:acarsd[][3] = {
	{2120.0693,2718.2942,10.8203},
	{-1931.6606,271.5569,41.0469},
	{2507.9807,-2113.6448,13.5469}
};
new bool:caroff[MAX_VEHICLES];
new bBar;
new tookmoped[MAX_PLAYERS];
new pickcars[5];

new Text3D:JobText3D[MAX_PLAYERS];
new admincar[8];
new buscar[8];
new pPressed[MAX_PLAYERS];
new Float:BusCityLV[][] = {
	{2827.7122,1287.5374,10.4960, 2828.5979,1349.7295,10.4851},
	{2828.5979,1349.7295,10.4851, 2830.2490,1453.5867,10.4380},
	{2830.2490,1453.5867,10.4380, 2810.9434,1475.6493,10.4112},
	{2810.9434,1475.6493,10.4112, 2701.4114,1475.5786,13.2682},
	{2701.4114,1475.5786,13.2682, 2565.3254,1475.9387,10.5693},
	{2565.3254,1475.9387,10.5693, 2425.1672,1458.8348,10.3990},
	{2425.1672,1458.8348,10.3990, 2425.0232,1388.2212,10.3990},
	{2425.0232,1388.2212,10.3990, 2402.9827,1375.8306,10.3990}, ////////
	{2402.9827,1375.8306,10.3990, 2328.8313,1375.2654,10.4004},
	{2328.8313,1375.2654,10.4004, 2227.2595,1375.5146,10.5165},
	{2227.2595,1375.5146,10.5165, 2141.0669,1375.8522,10.3990},
	{2141.0669,1375.8522,10.3990, 2069.4941,1412.9413,10.3990}, ////////////
	{2069.4941,1412.9413,10.3990, 2069.3545,1555.6749,10.3985},
	{2069.3545,1555.6749,10.3985, 2074.2522,1691.2032,10.3990},
	{2074.2522,1691.2032,10.3990, 2083.3120,1731.3164,10.3990},
	{2083.3120,1731.3164,10.3990, 2137.4177,1838.8073,10.3990},
	{2137.4177,1838.8073,10.3990, 2149.4041,1949.7141,10.4067},
	{2149.4041,1949.7141,10.4067, 2154.9656,2006.7346,10.3990},
	{2154.9656,2006.7346,10.3990, 2149.2458,2047.8812,10.4067}, ///////////////////
	{2149.2458,2047.8812,10.4067, 2150.0891,2212.5806,10.3990},
	{2150.0891,2212.5806,10.3990, 2198.8176,2333.1411,10.3990},
	{2198.8176,2333.1411,10.3990, 2229.5842,2400.6025,10.3990},
	{2229.5842,2400.6025,10.3990, 2229.9485,2442.6384,10.4123},
	{2229.9485,2442.6384,10.4123, 2083.1667,2455.8521,10.399},
	{2083.1667,2455.8521,10.399, 2040.5520,2455.6323,10.3989}, /////////////
	{2040.5520,2455.6323,10.3989, 2025.2017,2409.2336,10.4048},
	{2025.2017,2409.2336,10.4048, 2010.3225,2395.3706,10.3990},
	{2010.3225,2395.3706,10.3990, 1939.4858,2395.5569,10.3990},
	{1939.4858,2395.5569,10.3990, 1925.0082,2362.3936,10.3990},
	{1925.0082,2362.3936,10.3990, 1924.9097,2314.9290,10.3990},
	{1924.9097,2314.9290,10.3990, 1925.1405,2190.0247,10.4048},
	{1925.1405,2190.0247,10.4048, 1924.7076,2116.0227,10.4982},
	{1924.7076,2116.0227,10.4982, 1924.9579,2054.0154,10.3990}, /////////////
	{1924.9579,2054.0154,10.3990, 1901.8656,2044.4187,10.3990},
	{1901.8656,2044.4187,10.3990, 1841.7213,2055.7852,10.5195},
	{1841.7213,2055.7852,10.5195, 1716.1443,2055.5381,10.4394},
	{1716.1443,2055.5381,10.4394, 1704.8038,2030.0398,10.4049},
	{1704.8038,2030.0398,10.4049, 1705.0792,1965.8193,10.3990},
	{1705.0792,1965.8193,10.3990, 1705.4348,1884.1003,10.3990},
	{1705.4348,1884.1003,10.3990, 1660.3359,1875.4397,10.3990},
	{1660.3359,1875.4397,10.3990, 1644.6434,1817.6515,10.4047},
	{1644.6434,1817.6515,10.4047, 1645.2438,1726.5471,10.3990}, /////////////////
	{1645.2438,1726.5471,10.3990, 1705.5009,1711.1305,10.3990},
	{1705.5009,1711.1305,10.3990, 1727.8558,1663.9143,9.7931},
	{1727.8558,1663.9143,9.7931, 1730.0469,1611.1600,9.5889},
	{1730.0469,1611.1600,9.5889, 1727.0743,1543.9349,10.3989},
	{1727.0743,1543.9349,10.3989, 1712.6594,1454.8257,10.4624},
	{1712.6594,1454.8257,10.4624, 1720.0021,1380.0167,10.2193},
	{1720.0021,1380.0167,10.2193, 1726.6637,1288.2371,10.3990},
	{1726.6637,1288.2371,10.3990, 1756.3873,1271.1761,11.7470},
	{1756.3873,1271.1761,11.7470, 1882.8234,1270.9567,10.3994},
	{1882.8234,1270.9567,10.3994, 2032.3241,1270.8514,10.3990},
	{2032.3241,1270.8514,10.3990, 2040.4423,1155.8553,10.3990}, ///////////////
	{2040.4423,1155.8553,10.3990, 2045.7813,1094.8022,10.3990},
	{2045.7813,1094.8022,10.3990, 2051.9490,980.1622,10.3478},
	{2051.9490,980.1622,10.3478, 2103.6660,970.9399,10.3455},
	{2103.6660,970.9399,10.3990, 2145.1384,925.0372,10.3989},
	{2145.1384,925.0372,10.3989, 2144.9375,721.4338,10.4355},
	{2144.9375,721.4338,10.4355, 2179.9919,710.7172,10.3990},
	{2179.9919,710.7172,10.3990, 2274.3362,711.1173,10.3990},
	{2274.3362,711.1173,10.3990, 2376.8376,710.9398,10.3990},
	{2376.8376,710.9398,10.3990, 2417.7654,710.7748,10.4140},
	{2417.7654,710.7748,10.4140, 2430.0789,737.1588,10.3990},
	{2430.0789,737.1588,10.3990, 2463.8088,770.4927,10.3990},
	{2463.8088,770.4927,10.3990, 2533.7329,770.6903,10.4068}, //////////////////
	{2533.7329,770.6903,10.4068, 2549.5715,813.9160,11.1068},
	{2549.5715,813.9160,11.1068, 2549.5967,941.5245,10.4065},
	{2549.5967,941.5245,10.4065, 2549.2029,1001.5764,10.3978},
	{2549.2029,1001.5764,10.3978, 2573.9358,1010.4851,10.4699},
	{2573.9358,1010.4851,10.4699, 2609.8220,1048.8676,10.3990},
	{2609.8220,1048.8676,10.3990, 2610.5010,1122.4563,10.3990},
	{2610.5010,1122.4563,10.3990, 2609.2266,1239.9553,10.3990}, ////////////////////////
	{2609.2266,1239.9553,10.3990, 2629.4099,1298.8424,10.3990},
	{2629.4099,1298.8424,10.3990, 2673.0471,1311.2069,11.5071},
	{2673.0471,1311.2069,11.5071, 2792.4287,1310.6711,10.4771},
	{2792.4287,1310.6711,10.4771, 2785.6804,1275.5779,10.4771},
	{2785.6804,1275.5779,10.4771, 2764.9609,1234.9835,10.4771},
	{2764.9609,1234.9835,10.4771, 2800.6440,1230.2970,10.4977},
	{2800.6440,1230.2970,10.4977, 2827.7122,1287.5374,10.4960},
	{2827.7122,1287.5374,10.4960, 0.0, 0.0, 0.0}
};
new Float:BusCitySF[][] = {
	{-1988.0446,140.1014,27.2661, -2003.4841,214.1351,27.2661},
	{-2003.4841,214.1351,27.2661, -2000.5131,313.4200,34.7426},
	{-2000.5131,313.4200,34.7426, -1998.5398,471.8105,34.7427},
	{-1998.5398,471.8105,34.7427, -2000.0660,589.2780,34.7443}, ///////////////
	{-2000.0660,589.2780,34.7443, -1983.1162,601.5040,34.7447},
	{-1983.1162,601.5040,34.7447, -1765.3795,600.4207,27.5781},
	{-1765.3795,600.4207,27.5781, -1708.5352,638.9060,24.4615},
	{-1708.5352,638.9060,24.4615, -1709.2012,713.6660,24.4673},
	{-1709.2012,713.6660,24.4673, -1686.2982,726.0994,21.9807},
	{-1686.2982,726.0994,21.9807, -1584.0829,725.0784,7.6853},
	{-1584.0829,725.0784,7.6853,-1539.4480,751.1326,6.7661}, ///////////////
	{-1539.4480,751.1326,6.7661, -1526.3699,902.7177,6.7661},
	{-1526.3699,902.7177,6.7661, -1566.6733,1008.7411,6.7661},
	{-1566.6733,1008.7411,6.7661, -1583.1990,1175.9945,6.7720},
	{-1583.1990,1175.9945,6.7720, -1657.7933,1278.0837,6.7703},
	{-1657.7933,1278.0837,6.7703, -1759.8112,1370.0012,6.7661},
	{-1759.8112,1370.0012,6.7661, -1893.3424,1340.7925,6.7662},
	{-1893.3424,1340.7925,6.7662, -2017.5878,1313.2760,6.7661},
	{-2017.5878,1313.2760,6.7661, -2124.4597,1335.1978,6.7739},
	{-2124.4597,1335.1978,6.7739, -2270.4126,1338.5504,6.7661},
	{-2270.4126,1338.5504,6.7661, -2457.7053,1353.1648,6.7688}, ///////////////////
	{-2457.7053,1353.1648,6.7688, -2459.7207,1222.8270,34.7824},
	{-2459.7207,1222.8270,34.7824, -2509.7961,1189.8923,39.7203},
	{-2509.7961,1189.8923,39.7203, -2647.5432,1209.3071,54.9540},
	{-2647.5432,1209.3071,54.9540, -2670.1223,1220.7137,55.1568},
	{-2670.1223,1220.7137,55.1568, -2701.2837,1216.6837,54.8801},
	{-2701.2837,1216.6837,54.8801, -2751.0327,1165.2881,51.2197},
	{-2751.0327,1165.2881,51.2197, -2732.4473,1097.7551,46.1041},
	{-2732.4473,1097.7551,46.1041, -2736.0510,1076.3564,46.6157},
	{-2736.0510,1076.3564,46.6157, -2753.1973,989.3776,54.0414},
	{-2753.1973,989.3776,54.0414, -2752.8333,889.3956,65.9159},
	{-2752.8333,889.3956,65.9159, -2753.9016,769.2898,53.9614},
	{-2753.9016,769.2898,53.9614, -2753.8579,704.6906,40.8521}, ////////////////
	{-2753.8579,704.6906,40.8521, -2752.6665,583.9778,15.5260},
	{-2752.6665,583.9778,15.5260, -2629.1440,559.9763,14.1880},
	{-2629.1440,559.9763,14.1880, -2609.3816,550.2076,14.1880}, //////////////////////////
	{-2609.3816,550.2076,14.1880, -2609.2786,419.0351,14.1443},
	{-2609.2786,419.0351,14.1443, -2623.4963,332.2929,3.9100},
	{-2623.4963,332.2929,3.9100, -2694.1890,337.3127,3.9130},
	{-2694.1890,337.3127,3.9130, -2709.2107,310.5451,3.9068},
	{-2709.2107,310.5451,3.9068, -2708.7454,265.6249,3.9068}, ////////////////////////
	{-2708.7454,265.6249,3.9068, -2708.4983,137.9188,3.9068},
	{-2708.4983,137.9188,3.9068, -2708.3228,61.5767,3.9068},
	{-2708.3228,61.5767,3.9068, -2708.6318,5.2428,3.9068},
	{-2708.6318,5.2428,3.9068, -2708.3984,-57.2606,3.9068},
	{-2708.3984,-57.2606,3.9068, -2676.2898,-72.9829,3.9068},
	{-2676.2898,-72.9829,3.9068, -2588.9204,-72.8143,3.9952}, /////////////////////
	{-2588.9204,-72.8143,3.9952, -2468.8010,-72.3784,30.7145},
	{-2468.8010,-72.3784,30.7145, -2389.8684,-72.2215,34.8912},
	{-2389.8684,-72.2215,34.8912, -2298.3589,-72.0373,34.8912},
	{-2298.3589,-72.0373,34.8912, -2199.7261,-72.9877,34.8990},
	{-2199.7261,-72.9877,34.8990, -2097.7122,-73.0991,34.8989},
	{-2097.7122,-73.0991,34.8989, -2027.6685,-73.1562,34.8990},
	{-2027.6685,-73.1562,34.8990, -2004.3160,-47.7378,34.8920}, /////////////////
	{-2004.3160,-47.7378,34.8920, -2003.9662,82.7331,27.2662},
	{-2003.9662,82.7331,27.2662, -1988.0446,140.1014,27.2661},
	{-1988.0446,140.1014,27.2661, 0.0, 0.0, 0.0}
};

new Float:BusCityLS[][] = {
	{1238.5247,-1832.1951,13.5304, 1214.3824,-1842.2007,13.5149},
	{1214.3824,-1842.2007,13.5149, 1195.2499,-1849.5330,13.5300},
	{1195.2499,-1849.5330,13.5300, 1076.8751,-1850.1189,13.5237},
	{1076.8751,-1850.1189,13.5237, 1060.6364,-1834.8591,13.6470},
	{1060.6364,-1834.8591,13.6470, 1038.0361,-1785.1960,13.68850},
	{1038.0361,-1785.1960,13.6885, 1039.8900,-1731.7588,13.5161},
	{1039.8900,-1731.7588,13.5161, 1147.0249,-1714.6013,13.9146},
	{1147.0249,-1714.6013,13.9146, 1280.5072,-1714.8085,13.5162}, // peatus
	{1280.5072,-1714.8085,13.5162, 1294.9458,-1728.1792,13.5161},
	{1294.9458,-1728.1792,13.5161, 1294.8989,-1836.0220,13.5162},
	{1294.8989,-1836.0220,13.5162, 1317.0968,-1854.8313,13.5166},
	{1317.0968,-1854.8313,13.5166, 1371.0465,-1873.2445,13.5163},
	{1371.0465,-1873.2445,13.5163, 1391.5786,-1856.0959,13.5160},
	{1391.5786,-1856.0959,13.5160, 1391.3907,-1748.5936,13.5162}, ///////////
	{1391.3907,-1748.5936,13.5162, 1481.3625,-1734.5426,13.5161},
	{1481.3625,-1734.5426,13.5161, 1514.0380,-1734.8099,13.5162}, // peatus
	{1514.0380,-1734.8099,13.5162, 1532.1124,-1715.9408,13.5138},
	{1532.1124,-1715.9408,13.5138, 1531.8948,-1609.0205,13.5159},
	{1531.8948,-1609.0205,13.5159, 1542.8218,-1594.7335,13.5161},
	{1542.8218,-1594.7335,13.5161, 1708.0238,-1595.8610,13.5001},
	{1708.0238,-1595.8610,13.5001, 1805.0760,-1614.4507,13.4869}, //////////
	{1805.0760,-1614.4507,13.4869, 1818.6862,-1681.7240,13.5161},
	{1818.6862,-1681.7240,13.5161, 1819.1482,-1627.8978,13.5161},
	{1819.1637,-1768.6271,13.5163, 1818.9535,-1917.4446,13.5157},
	{1818.9535,-1917.4446,13.5157, 1843.2506,-1934.8319,13.5140},
	{1843.2506,-1934.8319,13.5140, 1944.7305,-1934.4397,13.5162},
	{1944.7305,-1934.4397,13.5162, 1959.1595,-1948.0632,13.7346},
	{1959.1595,-1948.0632,13.7346, 1958.9994,-2124.9451,13.5161},
	{1958.9994,-2124.9451,13.5161, 1958.9464,-2150.8484,13.5161},
	{1958.9464,-2150.8484,13.5161, 1980.8533,-2169.1074,13.5130},
	{1980.8533,-2169.1074,13.5130, 2127.4326,-2210.9990,13.5161}, ////////////////
	{2127.4326,-2210.9990,13.5161, 2154.9214,-2212.8267,13.5179},
	{2154.9214,-2212.8267,13.5179, 2188.4197,-2178.9497,13.5114},
	{2188.4197,-2178.9497,13.5114, 2208.3721,-2178.8171,13.4993},
	{2208.3721,-2178.8171,13.4993, 2239.5859,-2210.0459,13.4596},
	{2239.5859,-2210.0459,13.4596, 0.0,0.0,0.0},
	{2281.9973,-2252.0698,13.6036, 2318.6899,-2256.4153,13.5084}, ///////////////////
	{2318.6899,-2256.4153,13.5084, 2413.6458,-2180.0645,13.5084},
	{2413.6458,-2180.0645,13.5084, 2621.3723,-2169.8599,11.7886},
	{2621.3723,-2169.8599,11.7886, 2796.0964,-2144.5806,11.0631},
	{2796.0964,-2144.5806,11.0631, 2837.8245,-1984.7358,11.0710},
	{2837.8245,-1984.7358,11.0710, 2870.6658,-1681.5833,11.0122},
	{2870.6658,-1681.5833,11.0122, 2841.0391,-1654.7875,10.9174},
	{2841.0391,-1654.7875,10.9174, 2661.2539,-1654.8489,10.8343},
	{2661.2539,-1654.8489,10.8343, 2640.6577,-1712.9298,10.8611}, ////////////////// два выше
	{2640.6577,-1712.9298,10.8611, 2613.0627,-1730.1464,12.0208},
	{2613.0627,-1730.1464,12.0208, 2449.7312,-1730.1978,13.6528},
	{2449.7312,-1730.1978,13.6528, 2433.1511,-1616.1829,27.0375},
	{2433.6008,-1460.0776,23.9579, 2448.9790,-1440.3479,23.9634},
	{2448.9790,-1440.3479,23.9634, 2453.5325,-1419.5775,23.9615},
	{2453.5325,-1419.5775,23.9615, 2412.3574,-1253.8340,23.9558},
	{2412.3574,-1253.8340,23.9558, 2661.2539,-1654.8489,10.8343},
	{2386.9873,-1253.6946,23.9559, 2368.4519,-1281.3727,23.9688},
	{2368.9080,-1368.3611,23.9780, 2350.8696,-1381.9030,23.9650},
	{2350.8696,-1381.9030,23.9650, 2089.6267,-1381.9432,23.9619}, ////////////////////////
	{2089.6267,-1381.9432,23.9619, 2073.4641,-1363.4091,23.9588},
	{2073.4641,-1363.4091,23.9588, 2073.3997,-1152.9436,23.8472},
	{2073.3997,-1152.9436,23.8472, 2020.2545,-1133.2900,24.8908},
	{2020.2545,-1133.2900,24.8908, 1885.3809,-1132.9916,24.0794},
	{1885.3809,-1132.9916,24.0794, 1864.2970,-1160.1176,23.8199},
	{1864.2970,-1160.1176,23.8199, 1832.4225,-1178.3257,23.7677},
	{1832.4225,-1178.3257,23.7677, 1658.9194,-1158.1030,23.8722},
	{1658.9194,-1158.1030,23.8722, 1658.9194,-1158.1030,23.8722}, ///////////////////
	{1596.3362,-1158.4154,24.0396, 1580.1649,-1142.5476,23.8254},
	{1580.1649,-1142.5476,23.8254, 1528.9998,-1039.5239,23.7696},
	{1528.9998,-1039.5239,23.7696, 1501.2731,-1032.4484,23.7743},
	{1501.2731,-1032.4484,23.7743, 1479.5311,-1051.1530,23.7892},
	{1479.5311,-1051.1530,23.7892, 1479.7573,-1142.5359,24.0396},
	{1479.7573,-1142.5359,24.0396, 1501.3533,-1163.2172,24.0473},
	{1501.3533,-1163.2172,24.0473, 1668.5289,-1163.5801,23.7890},
	{1668.5289,-1163.5801,23.7890, 1528.9998,-1039.5239,23.7696}, ///////////////////
	{1768.7809,-1169.9598,23.7872, 1827.3875,-1183.2314,23.7641},
	{1827.3875,-1183.2314,23.7641, 1845.5515,-1197.3513,22.9131},
	{1845.5515,-1197.3513,22.9131, 1845.7029,-1242.4534,14.7945},
	{1845.7029,-1242.4534,14.7945, 1868.1499,-1263.3727,13.5212},
	{1868.1499,-1263.3727,13.5212, 2049.1936,-1263.4569,23.9537},
	{2049.1936,-1263.4569,23.9537, 2065.7383,-1277.3209,23.9537},
	{2065.7383,-1277.3209,23.9537, 2065.7378,-1369.0361,23.9440}, ///////////////////
	{2065.7378,-1369.0361,23.9440, 2092.4697,-1386.9020,23.9601},
	{2092.4697,-1386.9020,23.9601, 2354.2454,-1387.0751,23.9699},
	{2354.2454,-1387.0751,23.9699, 2373.5449,-1367.9800,23.9656},
	{2373.5449,-1367.9800,23.9656, 2373.5110,-1272.2000,23.9698},
	{2373.5110,-1272.2000,23.9698, 2387.1821,-1259.2478,23.9637},
	{2387.1821,-1259.2478,23.9637,2427.7188,-1259.3298,23.9650},
	{2427.7188,-1259.3298,23.9650,1528.9998,-1039.5239,23.7696},
	{2448.7603,-1273.6116,23.9544,2448.7754,-1425.4390,23.9616}, ///////////////////
	{2448.7754,-1425.4390,23.9616,2437.4160,-1444.3368,23.9731},
	{2437.4160,-1444.3368,23.9731,2428.6941,-1466.4805,23.9613},
	{2428.6941,-1466.4805,23.9613,2428.7791,-1603.5916,26.17700},
	{2428.7791,-1603.5916,26.1770,2428.4851,-1713.3696,14.6449},
	{2428.4851,-1713.3696,14.6449,2448.9460,-1734.9404,13.6589},
	{2448.9460,-1734.9404,13.6589,2626.2710,-1734.6022,11.2428},
	{2626.2710,-1734.6022,11.2428,2640.2214,-1749.5358,10.8608}, ///////////////////
	{2640.2214,-1749.5358,10.8608,2676.4072,-1875.9507,11.0216},
	{2676.4072,-1875.9507,11.0216,2804.3679,-1893.3619,11.0543},
	{2804.3679,-1893.3619,11.0543,2822.9373,-1917.5231,11.0709},
	{2822.9373,-1917.5231,11.0709,2812.1682,-2100.1853,11.0651},
	{2812.1682,-2100.1853,11.0651,2690.8582,-2155.5874,11.0599},
	{2690.8582,-2155.5874,11.0599,2410.2681,-2165.5828,13.5078},
	{2410.2681,-2165.5828,13.5078,2305.7051,-2248.0249,13.5083}, ///////////////////
	{2305.7051,-2248.0249,13.5083,2279.8718,-2243.1921,13.7707},
	{2279.8718,-2243.1921,13.7707,2248.0229,-2211.1538,13.4549},
	{2248.0229,-2211.1538,13.4549,2448.9460,-1734.9404,13.6589},
	{2183.5237,-2146.8306,13.5025,2107.5442,-2108.1975,13.4346},
	{2107.5442,-2108.1975,13.4346,1981.2144,-2107.4551,13.4836},
	{1981.2144,-2107.4551,13.4836,1964.3152,-2092.0791,13.5240},
	{1964.3152,-2092.0791,13.5240,2428.7791,-1603.5916,26.1770},
	{1964.3152,-2092.0791,13.5240,1964.3492,-1951.3857,13.8093},
	{1964.3492,-1951.3857,13.8093,1942.7271,-1929.8000,13.5161},
	{1942.7271,-1929.8000,13.5161,1837.5028,-1930.1250,13.5169},
	{1837.5028,-1930.1250,13.5169,1824.1443,-1915.5752,13.5119},
	{1824.1443,-1915.5752,13.5119,1823.7717,-1682.7144,13.5162},
	{1823.7717,-1682.7144,13.5162,1824.1844,-1630.6477,13.5161},
	{1824.1844,-1630.6477,13.5161,1804.4215,-1609.5674,13.4862},
	{1804.4215,-1609.5674,13.4862,1681.2842,-1590.0104,13.5160},
	{1681.2842,-1590.0104,13.5160,1548.2252,-1589.9628,13.5163},
	{1548.2252,-1589.9628,13.5163,1527.2129,-1620.1754,13.5163},
	{1527.2129,-1620.1754,13.5163,1527.1331,-1714.0327,13.5162},
	{1527.1331,-1714.0327,13.5162,1514.6785,-1729.6405,13.5163},
	{1514.6785,-1729.6405,13.5163,1477.5608,-1729.8918,13.5162},
	{1477.5608,-1729.8918,13.5162,2428.7791,-1603.5916,26.1770},
	{1413.1190,-1729.7999,13.5242,1386.6285,-1749.7579,13.5160},
	{1386.6285,-1749.7579,13.5160,1386.6914,-1854.3090,13.5161},
	{1386.6914,-1854.3090,13.5161,1370.8682,-1868.1794,13.5164},
	{1370.8682,-1868.1794,13.5164,1304.9640,-1849.7131,13.5199},
	{1304.9640,-1849.7131,13.5199,1268.2179,-1839.4244,13.5244},
	{1268.2179,-1839.4244,13.5244,1238.5247,-1832.1951,13.5304},
	{1238.5247,-1832.1951,13.5304,2626.2710,-1734.6022,11.2428},
	{1238.5247,-1832.1951,13.5304,2626.2710,-1734.6022,11.2428}
};

new Float:BusSchool[][] = {
	{1603.0409,-1158.1918,24.0066, 1375.5563,-1139.8900,23.7568},
	{1375.5563,-1139.8900,23.7568, 1343.1094,-1159.3662,23.8041},
	{1343.1094,-1159.3662,23.8041, 1339.5063,-1398.3763,13.4274},
	{1339.5063,-1398.3763,13.4274, 1328.4043,-1480.9446,13.4835},
	{1328.4043,-1480.9446,13.4835, 1301.1501,-1547.1753,13.4845},
	{1301.1501,-1547.1753,13.4845, 1296.5106,-1690.7666,13.4845},
	{1296.5106,-1690.7666,13.4845, 1191.1615,-1710.6499,13.5039},
	{1191.1615,-1710.6499,13.5039, 1171.7720,-1745.2683,13.4984},
	{1171.7720,-1745.2683,13.4984, 1172.5651,-1832.8263,13.5012},
	{1172.5651,-1832.8263,13.5012, 1079.4225,-1850.4327,13.4923},
	{1079.4225,-1850.4327,13.4923, 1041.1807,-1810.7709,13.7337},
	{1041.1807,-1810.7709,13.7337, 1038.5695,-1585.4709,13.4837}, /////////////////////
	{1038.5695,-1585.4709,13.4837, 1043.2693,-1398.1222,13.4600},
	{1043.2693,-1398.1222,13.4600, 660.2036,-1395.9253,13.5005},
	{660.2036,-1395.9253,13.5005, 628.2453,-1193.4976,18.4277},
	{628.2453,-1193.4976,18.4277, 82.3714,-1257.8467,14.4748},
	{82.3714,-1257.8467,14.4748, -245.9801,-1584.6241,15.9544},
	{-245.9801,-1584.6241,15.9544, -370.6366,-1966.7914,28.2431},
	{-370.6366,-1966.7914,28.2431, -310.5305,-2225.6050,29.0027},
	{-310.5305,-2225.6050,29.0027, -103.6279,-2482.1733,37.9837},
	{-103.6279,-2482.1733,37.9837, -38.7617,-2599.2607,43.8138},
	{-38.7617,-2599.2607,43.8138, -148.6527,-2822.5200,40.2211},
	{-148.6527,-2822.5200,40.2211, -492.2774,-2758.7148,66.1703},
	{-492.2774,-2758.7148,66.1703, -910.1223,-2836.0840,70.0783}, ////////////////////
	{-910.1223,-2836.0840,70.0783, -1024.5665,-2854.1021,67.8104},
	{-1024.5665,-2854.1021,67.8104, -1313.9917,-2872.4587,58.2093},
	{-1313.9917,-2872.4587,58.2093, -1675.5028,-2681.6897,48.6797},
	{-1675.5028,-2681.6897,48.6797, -1747.6259,-2600.4617,50.0625},
	{-1747.6259,-2600.4617,50.0625, -2092.4756,-2640.7991,53.7694},
	{-2092.4756,-2640.7991,53.7694, -2376.8628,-2556.3992,44.3193},
	{-2376.8628,-2556.3992,44.3193, -2524.9465,-2165.6970,30.0705},
	{-2524.9465,-2165.6970,30.0705, -2905.8152,-1681.0071,18.7631},
	{-2905.8152,-1681.0071,18.7631, -2933.3191,-1395.1686,11.5176},
	{-2933.3191,-1395.1686,11.5176, -2865.2195,-920.1004,9.5882},
	{-2865.2195,-920.1004,9.5882, -2777.1616,-476.5119,7.2808},
	{-2777.1616,-476.5119,7.2808, -2507.3289,-342.9320,29.6137},
	{-2507.3289,-342.9320,29.6137, -2317.6519,-344.9995,39.9120},
	{-2317.6519,-344.9995,39.9120, -2072.2759,-351.5080,35.4039},
	{-2072.2759,-351.5080,35.4039, -2023.4122,-311.4927,35.4296},
	{-2023.4122,-311.4927,35.4296, -2042.3379,-290.4153,35.4915},
	{-2042.3379,-290.4153,35.4915, -2191.2529,-293.1540,35.4503},
	{-2191.2529,-293.1540,35.4503, -2198.3242,-189.7529,35.2763},
	{-2198.3242,-189.7529,35.2763, -2173.5134,-175.8506,35.2716},
	{-2173.5134,-175.8506,35.2716, -2166.2654,-92.0829,35.2821},
	{-2032.8879,-73.8608,35.2716, -2032.7073,-73.8643,35.2484},
	{-2032.7073,-73.8643,35.2484, -2006.3911,-52.6238,35.2704},
	{-2006.3911,-52.6238,35.2704, -2005.1267,81.1522,27.7284},
	{-2005.1267,81.1522,27.7284, -1989.7633,129.5122,27.6399},
	{-1989.7633,129.5122,27.6399, -1986.2164,182.6150,27.7386},
	{-1986.2164,182.6150,27.7386, -2008.8680,153.4529,27.6392},
	{-2008.8680,153.4529,27.6392, -2007.9268,-48.7648,35.2708},
	{-2007.9268,-48.7648,35.2708, -2007.5714,-86.8649,35.4429},
	{-2007.5714,-86.8649,35.4429, -2006.6643,-272.5722,35.4339},
	{-2006.6643,-272.5722,35.4339, -2046.1627,-326.3444,35.4048},
	{-2046.1627,-326.3444,35.4048, -2267.3201,-333.9951,39.5207},
	{-2267.3201,-333.9951,39.5207, -2569.2500,-333.4581,23.8381},
	{-2569.2500,-333.4581,23.8381, -2871.9785,-817.5627,7.1436},
	{-2871.9785,-817.5627,7.1436, -2913.3682,-1154.2468,9.5926}, ///////////////
	{-2913.3682,-1154.2468,9.5926, -2944.0874,-1421.8760,11.0036},
	{-2944.0874,-1421.8760,11.0036, -2873.8486,-1932.1017,36.7978},
	{-2873.8486,-1932.1017,36.7978, -2682.2700,-2065.9888,35.0296},
	{-2682.2700,-2065.9888,35.0296, -2463.1123,-2502.5300,44.1078},
	{-2463.1123,-2502.5300,44.1078, -2188.5176,-2683.3191,56.9562},
	{-2188.5176,-2683.3191,56.9562, -1819.7305,-2604.8577,55.3396},
	{-1819.7305,-2604.8577,55.3396, -1650.0139,-2729.6946,47.0341},
	{-1650.0139,-2729.6946,47.0341, -1475.8119,-2892.1995,47.0225},
	{-1475.8119,-2892.1995,47.0225, -1371.2446,-2927.9302,47.4409},
	{-1371.2446,-2927.9302,47.4409, -947.9971,-2869.8306,66.7587},
	{-947.9971,-2869.8306,66.7587, -707.9083,-2788.6650,51.9978},
	{-707.9083,-2788.6650,51.9978, -194.1682,-2871.2712,39.2822},
	{-194.1682,-2871.2712,39.2822, -1.8479,-2756.8240,40.6794},
	{-1.8479,-2756.8240,40.6794, -86.2643,-2462.9468,33.8937},
	{-86.2643,-2462.9468,33.8937, -188.5853,-2350.8984,29.3682},
	{-188.5853,-2350.8984,29.3682, -327.8987,-2072.2246,27.2352},
	{-327.8987,-2072.2246,27.2352, -239.0778,-1609.7271,15.6402},
	{-239.0778,-1609.7271,15.6402, -62.5916,-1412.4728,12.0027},
	{-62.5916,-1412.4728,12.0027, 90.8736,-1287.7268,13.8016},
	{90.8736,-1287.7268,13.8016, 415.2348,-1142.6877,30.3734},
	{415.2348,-1142.6877,30.3734, 620.9048,-1231.2452,18.1559},
	{620.9048,-1231.2452,18.1559, 649.9189,-1396.6401,13.5180},
	{649.9189,-1396.6401,13.5180, 1315.4454,-1404.1787,13.3932},
	{1315.4454,-1404.1787,13.3932, 1336.8890,-1457.1638,13.4858},
	{1336.8890,-1457.1638,13.4858, 1300.9177,-1541.2573,13.4843},
	{1300.9177,-1541.2573,13.4843, 1296.1965,-1821.1320,13.4835},
	{1296.1965,-1821.1320,13.4835, 1209.7904,-1851.5548,13.4835},
	{1209.7904,-1851.5548,13.4835, 1183.1213,-1777.6486,13.4988},
	{1183.1213,-1777.6486,13.4988, 1182.4337,-1733.9489,13.5076},
	{1182.4337,-1733.9489,13.5076, 1163.9393,-1713.9647,13.8430}, //////////////////
	{1163.9393,-1713.9647,13.8430, 1056.2832,-1712.1915,13.4836},
	{1056.2832,-1712.1915,13.4836, 1040.4452,-1567.7225,13.4811},
	{1040.4452,-1567.7225,13.4811, 1061.6090,-1432.1150,13.4626},
	{1061.6090,-1432.1150,13.4626, 1354.4844,-1406.0000,13.4208},
	{1354.4844,-1406.0000,13.4208, 1395.0216,-1428.9286,13.4851},
	{1395.0216,-1428.9286,13.4851, 1432.8265,-1443.9072,13.4855},
	{1432.8265,-1443.9072,13.4855, 1457.6628,-1196.4583,19.8684},
	{1457.6628,-1196.4583,19.8684, 1613.9203,-1163.7047,23.9937},
	{1613.9203,-1163.7047,23.9937, 1640.3938,-1126.9946,24.0055}
};

new Float:BusLSZavodi[][] = {
	{1626.6134,-1157.9778,23.9838, 1438.9491,-1158.1682,23.7565},
	{1438.9491,-1158.1682,23.7565, 1371.1659,-1141.6920,23.7575},
	{1371.1659,-1141.6920,23.7575, 1156.3663,-1142.7145,23.7581},
	{1156.3663,-1142.7145,23.7581, 1060.3214,-1161.7843,23.8253},
	{1060.3214,-1161.7843,23.8253, 1057.4797,-1369.3597,13.4901},
	{1057.4797,-1369.3597,13.4901, 1059.5537,-1415.6218,13.4781},
	{1059.5537,-1415.6218,13.4781, 1047.9326,-1496.2870,13.4866},
	{1047.9326,-1496.2870,13.4866, 1036.2673,-1656.0790,13.4838},
	{1036.2673,-1656.0790,13.4838, 1049.6667,-1711.8562,13.4826},
	{1049.6667,-1711.8562,13.4826, 1130.1522,-1713.4314,13.5866}, /////////////////
	{1130.1522,-1713.4314,13.5866, 1265.5109,-1713.5775,13.4836},
	{1265.5109,-1713.5775,13.4836, 1294.7024,-1724.8502,13.5243},
	{1294.7024,-1724.8502,13.5243, 1309.5178,-1833.7739,13.4840},
	{1309.5178,-1833.7739,13.4840, 1312.6914,-1663.8285,13.4837},
	{1312.6914,-1663.8285,13.4837, 1315.0392,-1560.2806,13.4898},
	{1315.0392,-1560.2806,13.4898, 1340.8297,-1494.3445,13.4874},
	{1340.8297,-1494.3445,13.4874, 1360.3828,-1125.4598,23.7805},
	{1360.3828,-1125.4598,23.7805, 1395.3101,-948.5587,34.7014},
	{1395.3101,-948.5587,34.7014, 1534.1229,-993.1343,42.2408},
	{1534.1229,-993.1343,42.2408, 1706.8365,-765.2202,52.9134},
	{1706.8365,-765.2202,52.9134, 1696.4478,-428.3773,34.2487},
	{1696.4478,-428.3773,34.2487, 1671.1747,-91.4483,35.7530},
	{1671.1747,-91.4483,35.7530, 1653.3126,243.5643,30.0597},
	{1653.3126,243.5643,30.0597, 1758.7390,552.5330,25.9447},
	{1758.7390,552.5330,25.9447, 1807.9695,812.0594,10.9973},
	{1807.9695,812.0594,10.9973, 1866.2555,831.4418,9.1772},
	{1866.2555,831.4418,9.1772, 2100.0452,832.0826,6.8356},
	{2100.0452,832.0826,6.8356, 2301.5449,835.6395,6.8435},
	{2301.5449,835.6395,6.8435, 2677.1301,963.5281,6.8355},
	{2677.1301,963.5281,6.8355, 2744.8875,1366.6559,6.8214},
	{2744.8875,1366.6559,6.8214, 2793.1299,1448.3379,10.7282},
	{2793.1299,1448.3379,10.7282, 2820.1904,1466.8337,10.8467},
	{2820.1904,1466.8337,10.8467, 2820.9973,1359.1929,10.8510},
	{2820.9973,1359.1929,10.8510, 2764.8262,1254.7311,10.8544},
	{2764.8262,1254.7311,10.8544, 2782.9355,1229.9468,10.8570},
	{2782.9355,1229.9468,10.8570, 2829.0437,1282.5835,10.8818},
	{2829.0437,1282.5835,10.8818, 2827.6799,1451.7260,10.8118},
	{2827.6799,1451.7260,10.8118, 2658.8022,1473.1030,10.9049},
	{2658.8022,1473.1030,10.9049, 2639.7986,1452.9443,10.7581},
	{2639.7986,1452.9443,10.7581, 2696.7070,1343.2480,6.8374},
	{2696.7070,1343.2480,6.8374, 2704.1851,1106.0325,6.8354},
	{2704.1851,1106.0325,6.8354, 2655.3137,966.9592,6.8367},
	{2655.3137,966.9592,6.8367, 2604.7678,911.7582,6.8396},
	{2604.7678,911.7582,6.8396, 2474.0730,859.2693,6.8459},
	{2474.0730,859.2693,6.8459, 1949.6083,851.5674,6.8313},
	{1949.6083,851.5674,6.8313, 1787.6935,806.8473,11.1060},
	{1787.6935,806.8473,11.1060, 1634.2479,226.0851,30.7790}, //////////////////
	{1634.2479,226.0851,30.7790, 1610.2744,124.0676,36.9908},
	{1610.2744,124.0676,36.9908, 1640.1609,-38.5060,36.6895},
	{1640.1609,-38.5060,36.6895, 1664.2051,-340.3452,40.3461},
	{1664.2051,-340.3452,40.3461, 1703.0380,-593.9151,38.1101},
	{1703.0380,-593.9151,38.1101, 1673.0964,-781.1240,54.6800},
	{1673.0964,-781.1240,54.6800, 1427.4979,-941.3197,36.2182},
	{1427.4979,-941.3197,36.2182, 1363.2279,-959.3282,34.0392},
	{1363.2279,-959.3282,34.0392, 1350.8372,-1053.6084,26.7221},
	{1350.8372,-1053.6084,26.7221, 1340.8602,-1427.0399,13.4789},
	{1340.8602,-1427.0399,13.4789, 1316.3042,-1505.8967,13.4840},
	{1316.3042,-1505.8967,13.4840, 1296.3157,-1679.8788,13.4839},
	{1296.3157,-1679.8788,13.4839, 1286.2415,-1711.3412,13.4832},
	{1286.2415,-1711.3412,13.4832, 1128.2864,-1709.4812,13.5523},
	{1128.2864,-1709.4812,13.5523, 1056.2510,-1710.3544,13.4836},
	{1056.2510,-1710.3544,13.4836, 1040.9821,-1555.0303,13.4632},
	{1040.9821,-1555.0303,13.4632, 1058.4032,-1474.1971,13.4791},
	{1058.4032,-1474.1971,13.4791, 1060.8860,-1395.2904,13.5821},
	{1060.8860,-1395.2904,13.5821, 1059.6604,-1175.7849,23.1790},
	{1059.6604,-1175.7849,23.1790, 1079.6471,-1151.8898,23.7576},
	{1079.6471,-1151.8898,23.7576, 1362.8177,-1143.9968,23.7570},
	{1362.8177,-1143.9968,23.7570, 1405.0570,-1152.2969,23.7612},
	{1405.0570,-1152.2969,23.7612, 1622.4208,-1162.8495,23.9980},
	{1622.4208,-1162.8495,23.9980, 1641.7179,-1125.3340,24.0071},
	{1641.7179,-1125.3340,24.0071, 1626.6134,-1157.9778,23.9838}
};

new Float:BusLSLV[][] = {
	{1626.6134,-1157.9778,23.9838, 1438.9491,-1158.1682,23.7565},
	{1438.9491,-1158.1682,23.7565, 1371.1659,-1141.6920,23.7575},
	{1371.1659,-1141.6920,23.7575, 1156.3663,-1142.7145,23.7581},
	{1156.3663,-1142.7145,23.7581, 1060.3214,-1161.7843,23.8253},
	{1060.3214,-1161.7843,23.8253, 1057.4797,-1369.3597,13.4901},
	{1057.4797,-1369.3597,13.4901, 1059.5537,-1415.6218,13.4781},
	{1059.5537,-1415.6218,13.4781, 1047.9326,-1496.2870,13.4866},
	{1047.9326,-1496.2870,13.4866, 1036.2673,-1656.0790,13.4838},
	{1036.2673,-1656.0790,13.4838, 1049.6667,-1711.8562,13.4826},
	{1049.6667,-1711.8562,13.4826, 1130.1522,-1713.4314,13.5866}, /////////////////
	{1130.1522,-1713.4314,13.5866, 1265.5109,-1713.5775,13.4836},
	{1265.5109,-1713.5775,13.4836, 1294.7024,-1724.8502,13.5243},
	{1294.7024,-1724.8502,13.5243, 1309.5178,-1833.7739,13.4840},
	{1309.5178,-1833.7739,13.4840, 1312.6914,-1663.8285,13.4837},
	{1312.6914,-1663.8285,13.4837, 1315.0392,-1560.2806,13.4898},
	{1315.0392,-1560.2806,13.4898, 1340.8297,-1494.3445,13.4874},
	{1340.8297,-1494.3445,13.4874, 1360.3828,-1125.4598,23.7805},
	{1360.3828,-1125.4598,23.7805, 1395.3101,-948.5587,34.7014},
	{1395.3101,-948.5587,34.7014, 1534.1229,-993.1343,42.2408},
	{1534.1229,-993.1343,42.2408, 1706.8365,-765.2202,52.9134},
	{1706.8365,-765.2202,52.9134, 1696.4478,-428.3773,34.2487},
	{1696.4478,-428.3773,34.2487, 1671.1747,-91.4483,35.7530},
	{1671.1747,-91.4483,35.7530, 1653.3126,243.5643,30.0597},
	{1653.3126,243.5643,30.0597, 1758.7390,552.5330,25.9447},
	{1758.7390,552.5330,25.9447, 1807.9695,812.0594,10.9973},
	{1807.9695,812.0594,10.9973, 1866.2555,831.4418,9.1772},
	{1866.2555,831.4418,9.1772, 2100.0452,832.0826,6.8356},
	{2100.0452,832.0826,6.8356, 2301.5449,835.6395,6.8435},
	{2301.5449,835.6395,6.8435, 2677.1301,963.5281,6.8355},
	{2677.1301,963.5281,6.8355, 2744.8875,1366.6559,6.8214},
	{2744.8875,1366.6559,6.8214, 2793.1299,1448.3379,10.7282},
	{2793.1299,1448.3379,10.7282, 2820.1904,1466.8337,10.8467},
	{2820.1904,1466.8337,10.8467, 2820.9973,1359.1929,10.8510},
	{2820.9973,1359.1929,10.8510, 2764.8262,1254.7311,10.8544},
	{2764.8262,1254.7311,10.8544, 2782.9355,1229.9468,10.8570},
	{2782.9355,1229.9468,10.8570, 2829.0437,1282.5835,10.8818},
	{2829.0437,1282.5835,10.8818, 2827.6799,1451.7260,10.8118},
	{2827.6799,1451.7260,10.8118, 2658.8022,1473.1030,10.9049},
	{2658.8022,1473.1030,10.9049, 2639.7986,1452.9443,10.7581},
	{2639.7986,1452.9443,10.7581, 2696.7070,1343.2480,6.8374},
	{2696.7070,1343.2480,6.8374, 2704.1851,1106.0325,6.8354},
	{2704.1851,1106.0325,6.8354, 2655.3137,966.9592,6.8367},
	{2655.3137,966.9592,6.8367, 2604.7678,911.7582,6.8396},
	{2604.7678,911.7582,6.8396, 2474.0730,859.2693,6.8459},
	{2474.0730,859.2693,6.8459, 1949.6083,851.5674,6.8313},
	{1949.6083,851.5674,6.8313, 1787.6935,806.8473,11.1060},
	{1787.6935,806.8473,11.1060, 1634.2479,226.0851,30.7790}, //////////////////
	{1634.2479,226.0851,30.7790, 1610.2744,124.0676,36.9908},
	{1610.2744,124.0676,36.9908, 1640.1609,-38.5060,36.6895},
	{1640.1609,-38.5060,36.6895, 1664.2051,-340.3452,40.3461},
	{1664.2051,-340.3452,40.3461, 1703.0380,-593.9151,38.1101},
	{1703.0380,-593.9151,38.1101, 1673.0964,-781.1240,54.6800},
	{1673.0964,-781.1240,54.6800, 1427.4979,-941.3197,36.2182},
	{1427.4979,-941.3197,36.2182, 1363.2279,-959.3282,34.0392},
	{1363.2279,-959.3282,34.0392, 1350.8372,-1053.6084,26.7221},
	{1350.8372,-1053.6084,26.7221, 1340.8602,-1427.0399,13.4789},
	{1340.8602,-1427.0399,13.4789, 1316.3042,-1505.8967,13.4840},
	{1316.3042,-1505.8967,13.4840, 1296.3157,-1679.8788,13.4839},
	{1296.3157,-1679.8788,13.4839, 1286.2415,-1711.3412,13.4832},
	{1286.2415,-1711.3412,13.4832, 1128.2864,-1709.4812,13.5523},
	{1128.2864,-1709.4812,13.5523, 1056.2510,-1710.3544,13.4836},
	{1056.2510,-1710.3544,13.4836, 1040.9821,-1555.0303,13.4632},
	{1040.9821,-1555.0303,13.4632, 1058.4032,-1474.1971,13.4791},
	{1058.4032,-1474.1971,13.4791, 1060.8860,-1395.2904,13.5821},
	{1060.8860,-1395.2904,13.5821, 1059.6604,-1175.7849,23.1790},
	{1059.6604,-1175.7849,23.1790, 1079.6471,-1151.8898,23.7576},
	{1079.6471,-1151.8898,23.7576, 1362.8177,-1143.9968,23.7570},
	{1362.8177,-1143.9968,23.7570, 1405.0570,-1152.2969,23.7612},
	{1405.0570,-1152.2969,23.7612, 1622.4208,-1162.8495,23.9980},
	{1622.4208,-1162.8495,23.9980, 1641.7179,-1125.3340,24.0071},
	{1641.7179,-1125.3340,24.0071, 1626.6134,-1157.9778,23.9838}
};

//////////////////////////////

new lift;
new kauta;
new Text3D:LvaLable;
new kauta2;
new skladfbi;
new skladfbi2;
new nikname;
new nikname2;
new cerkva;
new cerkva2;
new lift2;
new SDuty[MAX_PLAYERS];
new lift3;
new lift4;
new lift5;
new ChatOOC[MAX_PLAYERS];
new lift6;
new ash;
new ash2;
new ash3;
new ash4;
new maria;
new rmspawn[2];
new lcnspawn[2];

new paints[3];
//new paintguns[4];

//////////////////////////////

//////////////////////////////

new SlotObject[100];
new Menu:BuyClothes[1];
new Menu:ClothesBuy;
//new PlayerText:FULLRECON[MAX_PLAYERS];
new ChosenPlayer[MAX_PLAYERS];
new strR[255][255];
new SkinMen[][2] ={
	{66,1000},
	{15,1000},
	{36,1000},
	{50,1000},
	{95,1000},
	{96,1000},
	{136,1000},
	{143,1000},
	{155,1000},
	{2,50000},
	{14,50000},
	{24,50000},
	{58,100000},
	{7,300000},
	{23,300000},
	{33,300000},
	{60,500000},
	{67,500000},
	{73,500000},
	{184,500000},
	{21,700000},
	{22,700000},
	{30,700000},
	{183,700000},
	{255,700000},
	{4,700000},
	{6,700000},
	{8,700000},
	{42,700000},
	{273,700000},
	{17,1000000},
	{45,1000000},
	{82,1000000},
	{83,1000000},
	{185,1000000},
	{290,1000000},
	{291,1000000},
	{28,1200000},
	{29,1200000},
	{248,1200000},
	{247,1200000},
	{254,1200000},
	{249,1200000},
	{18,1500000},
	{19,1500000},
	{47,1500000},
	{48,1500000},
	{101,1500000},
	{299,1500000},
	{289,1500000},
	{61,2000000},
	{121,2000000},
	{227,2000000},
	{228,2000000},
	{292,2000000},
	{293,2000000},
	{297,2000000},
	{122,2500000},
	{111,3000000},
	{117,3500000},
	{118,3500000},
	{126,4000000},
	{127,4000000},
	{296,4000000},
	{3,4000000},
	{119,4000000},
	{208,4000000},
	{295,4500000},
	{46,5000000},
	{294,5000000}

};
new SkinMale[][2] ={
	{65, 1000},
	{192, 10000},
	{219, 1000000},
	{93, 2000000},
	{211, 2000000},
	{233, 2000000},
	{148, 3000000},
	{169, 4000000},
	{141, 5000000},
	{76, 5000000},
	{150, 5000000},
	{214, 5000000}
};
static const Float:_skinGlasses[312][7] = {
	{0.098771, 0.030772, -0.000335, 85.342658, 84.122947, 4.236968 }, // - 0
	{0.100766, 0.028630, -0.003521, 87.936676, 82.110870, 4.236968 }, // - 1
	{0.083712, 0.033132, -0.003521, 87.936676, 82.110870, 4.236968 }, // - 2
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 3
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 4
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 5
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 6
	{0.090066, 0.043458, -0.006523, 87.936676, 82.110870, 4.236968 }, // - 7
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 8
	{0.070977, 0.028663, 0.000147, 81.164970, 92.128402, 4.236968 },  // - 9
	{0.072317, 0.032179, -0.002934, 86.843269, 84.196006, 4.236968 }, // - 10
	{0.072317, 0.035465, -0.002201, 86.843269, 84.196006, 4.236968 }, // - 11
	{0.072317, 0.028100, -0.002201, 86.843269, 84.196006, 4.236968 }, // - 12
	{0.076569, 0.028100, -0.002201, 86.843269, 84.196006, 4.236968 }, // - 13
	{0.091310, 0.049169, -0.002201, 86.843269, 84.196006, 4.236968 }, // - 14
	{0.073734, 0.006292, -0.002755, 86.843269, 84.196006, 4.236968 }, // - 15
	{0.092845, 0.040331, 0.000183, 86.843269, 82.864280, 4.236968 },  // - 16
	{0.088241, 0.030184, -0.000157, 86.843269, 82.864280, 4.236968 }, // - 17
	{0.061677, 0.029596, -0.007398, 86.843269, 82.864280, 4.236968 }, // - 18
	{0.079911, 0.029596, -0.002934, 86.843269, 82.864280, 4.236968 }, // - 19
	{0.095079, 0.029596, -0.001718, 85.261871, 86.296562, 4.236968 }, // - 20
	{0.093728, 0.042083, -0.005781, 85.261871, 81.636192, 4.236968 }, // - 21
	{0.079585, 0.042083, -0.005781, 85.261871, 81.636192, 4.236968 }, // - 22
	{0.090786, 0.041737, -0.005263, 85.261871, 81.636192, 4.236968 }, // - 23
	{0.085247, 0.026941, -0.000317, 85.261871, 81.636192, 4.236968 }, // - 24
	{0.081646, 0.031448, -0.001113, 89.393653, 81.665985, 4.236968 }, // - 25
	{0.083700, 0.033814, -0.001960, 86.436462, 81.665985, 4.236968 }, // - 26
	{0.092498, 0.037321, -0.001960, 86.436462, 85.568023, 4.236968 }, // - 27
	{0.097068, 0.041360, -0.007881, 86.771400, 85.568023, 4.236968 }, // - 28
	{0.083456, 0.050595, 0.001011, 86.771400, 77.201461, 4.236968 },  // - 29
	{0.076983, 0.047168, -0.006161, 86.771400, 74.329719, 4.236968 }, // - 30
	{0.083798, 0.042184, -0.001869, 86.771400, 83.181861, 4.236968 }, // - 31
	{0.053021, -0.000587, -0.001869, 86.771400, 66.859710, 4.236968 },// - 32
	{0.034386, 0.013324, -0.001869, 86.771400, 80.314460, 4.236968 }, // - 33
	{0.104669, 0.037365, -0.001403, 86.771400, 87.178382, 4.236968 }, // - 34
	{0.102659, 0.037465, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 35
	{0.107638, 0.037465, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 36
	{0.107638, 0.035879, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 37
	{0.107638, 0.041106, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 38
	{0.080326, 0.035634, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 39
	{0.080326, 0.027371, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 40
	{0.084617, 0.039613, -0.001620, 86.771400, 93.020492, 4.236968 }, // - 41
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 42
	{0.040075, 0.025445, -0.000974, 86.771400, 92.964149, 4.236968 }, // - 43
	{0.077369, 0.028469, -0.000974, 86.771400, 78.435791, 4.236968 }, // - 44
	{0.064145, 0.028684, -0.000974, 86.771400, 84.762802, 4.236968 }, // - 45
	{0.091993, 0.056559, -0.000974, 86.771400, 84.762802, 4.236968 }, // - 46
	{0.084582, 0.051277, -0.005034, 86.771400, 84.762802, 4.236968 }, // - 47
	{0.092182, 0.042095, -0.003533, 86.771400, 84.762802, 4.236968 }, // - 48
	{0.086866, 0.032203, -0.001021, 86.771400, 84.762802, 4.236968 }, // - 49
	{0.099350, 0.009422, -0.005899, 86.771400, 84.762802, 4.236968 }, // - 50
	{0.099350, 0.030598, -0.005899, 86.771400, 84.762802, 4.236968 }, // - 51
	{0.099350, 0.030598, -0.003575, 86.771400, 84.762802, 4.236968 }, // - 52
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 53
	{0.079123, 0.030598, -0.003575, 86.771400, 84.762802, 4.236968 }, // - 54
	{0.063159, 0.029641, -0.003575, 86.771400, 84.762802, 4.236968 }, // - 55
	{0.070293, 0.029641, -0.000570, 86.771400, 84.762802, 4.236968 }, // - 56
	{0.111305, 0.045368, -0.000570, 86.771400, 84.458084, 4.236968 }, // - 57
	{0.084901, 0.020965, -0.000570, 86.771400, 79.542411, 4.236968 }, // - 58
	{0.077993, 0.039559, -0.000974, 86.771400, 84.762802, 4.236968},  // - 59
	{0.090164, 0.044163, -0.004754, 86.771400, 79.542411, 4.236968 }, // - 60
	{0.087151, 0.041447, -0.000885, 90.928329, 89.598678, 0.000000 }, // - 61
	{0.094350, 0.041447, 0.005717, 90.928329, 89.598678, 0.000000 },  // - 62
	{0.075534, 0.041447, -0.001751, 90.928329, 89.598678, 0.000000 }, // - 63
	{0.075534, 0.041447, -0.001751, 90.928329, 89.598678, 0.000000 }, // - 64
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 65
	{0.104148, 0.034787, 0.001341, 90.928329, 89.598678, 0.000000 },  // - 66
	{0.104148, 0.034787, 0.001341, 90.928329, 89.598678, 0.000000 },  // - 67
	{0.087317, 0.039646, -0.004032, 90.928329, 89.598678, 0.000000 }, // - 68
	{0.074873, 0.039646, -0.003072, 90.928329, 89.598678, 0.000000 }, // - 69
	{0.090391, 0.042364, 0.005494, 90.928329, 89.598678, 0.000000 },  // - 70
	{0.090391, 0.022298, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 71
	{0.090391, 0.039580, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 72
	{0.090391, 0.038224, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 73
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 74
	{0.083113, 0.038224, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 75
	{0.072957, 0.028956, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 76
	{0.069398, 0.039981, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 77
	{0.105738, 0.010001, 0.004508, 90.928329, 79.030494, 0.000000 },  // - 78
	{0.078264, 0.019668, 0.004508, 90.928329, 79.030494, 0.000000 },  // - 79
	{0.087377, 0.022096, -0.001993, 90.928329, 79.030494, 0.000000 }, // - 80
	{0.087377, 0.022096, -0.001635, 90.928329, 79.030494, 0.000000 }, // - 81
	{0.100623, 0.043063, -0.001635, 90.928329, 87.672645, 0.000000 }, // - 82
	{0.092528, 0.027493, -0.001635, 90.928329, 87.672645, 0.000000 }, // - 83
	{0.102086, 0.027493, -0.001635, 90.928329, 87.672645, 0.000000 }, // - 84
	{0.081954, 0.041672, -0.001635, 90.928329, 87.672645, 0.000000 }, // - 85
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 86
	{0.077010, 0.046925, -0.003438, 90.928329, 91.590301, 0.000000 }, // - 87
	{0.069952, 0.042635, -0.003438, 90.928329, 86.722587, 0.000000 }, // - 88
	{0.093827, 0.019258, -0.003438, 90.928329, 86.722587, 0.000000 }, // - 89
	{0.066464, 0.035685, -0.000843, 90.928329, 86.722587, 0.000000 }, // - 90
	{0.066464, 0.035685, -0.000843, 90.928329, 86.722587, 0.000000 }, // - 91
	{0.066464, 0.038135, -0.000843, 90.928329, 86.722587, 0.000000 }, // - 92
	{0.066464, 0.038135, -0.001690, 90.928329, 86.722587, 0.000000 }, // - 93
	{0.048124, 0.010598, -0.001690, 90.928329, 86.722587, 0.000000 }, // - 94
	{0.084997, 0.006773, -0.001690, 90.928329, 86.722587, 0.000000 }, // - 95
	{0.100076, 0.026633, -0.001690, 90.928329, 80.020179, 0.000000 }, // - 96
	{0.061686, 0.027537, -0.001690, 90.928329, 80.020179, 0.000000 }, // - 97
	{0.098318, 0.053993, -0.001690, 90.928329, 89.237678, 0.000000 }, // - 98
	{0.098318, 0.033702, -0.001690, 90.928329, 89.237678, 0.000000 }, // - 99
	{0.086149, 0.042526, -0.001690, 90.928329, 77.587478, 0.000000 }, // - 100
	{0.081864, 0.030555, -0.001690, 90.928329, 78.145759, 0.000000 }, // - 101
	{0.081864, 0.047914, -0.005079, 90.928329, 78.145759, 0.000000 }, // - 102
	{0.089607, 0.036717, -0.005079, 90.928329, 78.145759, 0.000000 }, // - 103
	{0.079655, 0.042021, -0.005079, 90.928329, 78.145759, 0.000000 }, // - 104
	{0.091779, 0.037620, -0.005079, 90.928329, 78.145759, 0.000000 }, // - 105
	{0.084179, 0.035251, -0.005079, 90.928329, 78.145759, 0.000000 }, // - 106
	{0.089387, 0.040297, -0.006006, 90.928329, 78.145759, 0.000000 }, // - 107
	{0.081930, 0.030756, 0.001523, 90.928329, 78.145759, 0.000000 },  // - 108
	{0.092857, 0.043070, -0.006084, 90.928329, 85.326652, 0.000000 }, // - 109
	{0.092857, 0.043070, -0.006084, 90.928329, 85.326652, 0.000000 }, // - 110
	{0.106601, 0.028021, -0.003537, 90.928329, 90.217376, 0.000000 }, // - 111
	{0.096335, 0.015873, -0.003537, 90.928329, 90.217376, 0.000000 }, // - 112
	{0.105827, 0.046620, -0.001395, 90.928329, 90.217376, 0.000000 }, // - 113
	{0.097520, 0.044296, -0.007286, 90.928329, 90.217376, 0.000000 }, // - 114
	{0.097408, 0.043470, -0.007286, 90.928329, 90.217376, 0.000000 }, // - 115
	{0.092588, 0.049832, -0.007286, 90.928329, 90.217376, 0.000000 }, // - 116
	{0.081444, 0.037602, -0.003125, 90.928329, 90.217376, 0.000000 }, // - 117
	{0.078678, 0.037602, -0.001816, 90.928329, 90.217376, 0.000000 }, // - 118
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 119
	{0.089214, 0.029291, -0.000784, 90.928329, 84.624763, 0.000000 }, // - 120
	{0.086825, 0.033424, -0.000784, 90.928329, 77.233818, 0.000000 }, // - 121
	{0.082869, 0.030783, -0.000950, 90.928329, 77.233818, 0.000000 }, // - 122
	{0.096117, 0.048957, -0.006245, 90.928329, 87.579650, 0.000000 }, // - 123
	{0.103663, 0.040022, 0.000449, 90.928329, 87.579650, 0.000000 },  // - 124
	{0.099326, 0.031202, -0.001180, 90.928329, 87.579650, 0.000000 }, // - 125
	{0.099326, 0.031132, -0.001180, 90.928329, 87.579650, 0.000000 }, // - 126
	{0.099326, 0.039279, -0.001180, 90.928329, 87.579650, 0.000000 }, // - 127
	{0.099326, 0.047422, -0.001180, 90.928329, 87.579650, 0.000000 }, // - 128
	{0.088817, 0.021210, 0.000730, 90.928329, 87.579650, 0.000000 },  // - 129
	{0.025784, 0.028323, 0.000730, 90.928329, 59.394767, 0.000000 },  // - 130
	{0.068455, 0.031841, -0.004470, 90.928329, 79.979003, 0.000000 }, // - 131
	{0.012930, 0.008392, -0.004470, 90.928329, 72.129173, 0.000000 }, // - 132
	{0.102457, 0.032260, -0.003338, 90.928329, 84.534217, 0.000000 }, // - 133
	{0.085976, 0.014956, -0.003338, 90.928329, 80.308830, 0.000000 }, // - 134
	{0.071574, 0.028186, -0.001588, 90.928329, 80.308830, 0.000000 }, // - 135
	{0.085219, 0.016666, -0.000738, 90.928329, 80.308830, 0.000000 }, // - 136
	{0.065114, 0.009318, -0.000738, 90.928329, 80.308830, 0.000000 }, // - 137
	{0.066890, 0.040024, -0.000738, 90.928329, 87.341934, 0.000000 }, // - 138
	{0.072037, 0.036141, -0.000702, 90.928329, 87.341934, 0.000000 }, // - 139
	{0.069108, 0.042194, -0.000436, 90.928329, 87.341934, 0.000000 }, // - 140
	{0.058717, 0.043547, -0.000436, 90.928329, 87.209770, 0.000000 }, // - 141
	{0.104196, 0.039601, -0.005481, 90.928329, 87.209770, 0.000000 }, // - 142
	{0.090929, 0.045881, -0.012780, 90.928329, 87.209770, 0.000000 }, // - 143
	{0.098291, 0.042464, -0.006952, 90.928329, 83.081665, 0.000000 }, // - 144
	{0.080087, 0.030122, 0.000606, 90.928329, 83.081665, 0.000000 },  // - 145
	{0.093500, 0.030690, -0.001545, 90.928329, 83.081665, 0.000000 }, // - 146
	{0.079566, 0.020138, 0.004838, 90.928329, 73.715591, 0.000000 },  // - 147
	{0.073564, 0.028430, -0.000527, 90.928329, 88.295433, 0.000000 }, // - 148
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 149
	{0.073564, 0.028430, -0.000527, 90.928329, 88.295433, 0.000000 }, // - 150
	{0.083426, 0.032359, -0.005717, 90.928329, 88.295433, 0.000000 }, // - 151
	{0.072349, 0.019623, -0.000747, 90.928329, 82.624351, 0.000000 }, // - 152
	{0.075065, 0.015351, 0.006545, 90.928329, 71.041442, 0.000000 },  // - 153
	{0.062227, 0.029731, -0.004938, 90.928329, 84.602760, 0.000000 }, // - 154
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 155
	{0.079936, 0.049000, -0.000304, 90.928329, 82.926010, 0.000000 }, // - 156
	{0.067550, 0.035686, -0.000017, 90.928329, 82.926010, 0.000000 }, // - 157
	{0.090676, 0.039383, -0.001726, 90.928329, 88.667900, 0.000000 }, // - 158
	{0.090676, 0.039383, -0.003532, 90.928329, 88.667900, 0.000000 }, // - 159
	{0.098662, 0.017441, -0.001589, 90.928329, 88.667900, 0.000000 }, // - 160
	{0.105388, 0.038409, 0.003155, 90.928329, 88.667900, 0.000000 },  // - 161
	{0.097415, 0.036904, -0.000525, 90.928329, 88.667900, 0.000000 }, // - 162
	{0.088934, 0.023302, -0.004153, 90.928329, 80.393875, 0.000000 }, // - 163
	{0.088934, 0.023302, -0.004153, 90.928329, 80.393875, 0.000000 }, // - 164
	{0.087018, 0.051364, 0.000484, 90.928329, 94.584838, 0.000000 },  // - 165
	{0.087018, 0.051364, 0.000484, 90.928329, 94.584838, 0.000000 },  // - 166
	{0.095996, 0.038787, 0.000484, 90.928329, 84.315711, 0.000000 },  // - 167
	{0.089094, 0.034001, -0.006451, 90.928329, 84.315711, 0.000000 }, // - 168
	{0.075700, 0.028082, -0.006451, 90.928329, 84.315711, 0.000000 }, // - 169
	{0.093751, 0.041968, -0.005545, 90.928329, 84.315711, 0.000000 }, // - 170
	{0.090124, 0.031055, -0.000505, 90.928329, 84.315711, 0.000000 }, // - 171
	{0.066033, 0.032915, -0.002713, 90.928329, 84.315711, 0.000000 }, // - 172
	{0.088287, 0.045350, -0.005384, 90.928329, 84.315711, 0.000000 }, // - 173
	{0.087750, 0.042129, -0.005384, 90.928329, 84.315711, 0.000000 }, // - 174
	{0.092384, 0.039294, -0.005384, 90.928329, 84.315711, 0.000000 }, // - 175
	{0.097661, 0.039065, -0.006344, 90.928329, 80.736480, 0.000000 }, // - 176
	{0.097114, 0.039641, -0.006692, 90.928329, 80.736480, 0.000000 }, // - 177
	{0.069354, 0.039641, -0.000474, 90.928329, 80.736480, 0.000000 }, // - 178
	{0.091414, 0.039641, -0.005617, 90.928329, 80.736480, 0.000000 }, // - 179
	{0.094914, 0.039641, -0.005617, 90.928329, 80.736480, 0.000000 }, // - 180
	{0.117232, 0.033217, -0.001099, 90.928329, 82.396362, 0.000000 }, // - 181
	{0.082569, 0.032748, -0.003248, 90.928329, 87.394371, 0.000000 }, // - 182
	{0.095527, 0.027237, -0.001960, 90.928329, 86.443649, 0.000000 }, // - 183
	{0.095527, 0.040994, -0.006878, 90.928329, 86.443649, 0.000000 }, // - 184
	{0.085663, 0.030601, -0.002345, 90.928329, 81.496513, 0.000000 }, // - 185
	{0.085663, 0.030601, -0.001015, 90.928329, 81.496513, 0.000000 }, // - 186
	{0.076527, 0.027211, 0.008500, 90.928329, 74.401092, 0.000000 },  // - 187
	{0.096669, 0.032578, 0.001662, 90.928329, 83.502502, 0.000000 },  // - 188
	{0.098753, 0.032129, -0.001659, 90.928329, 90.153724, 0.000000 }, // - 189
	{0.092821, 0.035572, -0.001659, 90.928329, 90.153724, 0.000000 }, // - 190
	{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 191
	{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 192
	{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 193
	{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 194
	{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 195
	{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 196
	{0.100630, 0.020568, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 197
	{0.077905, 0.028523, 0.000000, 89.675476, 89.270309, 0.000000 },  // - 198
	{0.099095, 0.022463, 0.000000, 89.675476, 89.270309, 0.000000 },  // - 199
	{0.103182, 0.031106, 0.000000, 89.675476, 89.270309, 0.000000 },  // - 200
	{0.078426, 0.038546, 0.000000, 89.675476, 89.270309, 0.000000 },  // - 201
	{0.101092, 0.035797, -0.002997, 89.675476, 82.081153, 0.000000 }, // - 202
	{0.092009, 0.042780, -0.005841, 89.675476, 84.463294, 0.000000 }, // - 203
	{0.092009, 0.042780, -0.005841, 89.675476, 84.463294, 0.000000 }, // - 204
	{0.092969, 0.027782, -0.002959, 89.675476, 84.463294, 0.000000 }, // - 205
	{0.105109, 0.036128, -0.000471, 89.675476, 84.463294, 0.000000 }, // - 206
	{0.066892, 0.024410, -0.002792, 89.675476, 84.463294, 0.000000 }, // - 207
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 208
	{0.084046, 0.013608, -0.002792, 89.675476, 81.667831, 0.000000 }, // - 209
	{0.084046, 0.013608, -0.001034, 89.675476, 81.667831, 0.000000 }, // - 210
	{0.067610, 0.033777, -0.001034, 89.675476, 85.214485, 0.000000 }, // - 211
	{0.094159, 0.020717, 0.000715, 89.675476, 85.214485, 0.000000 },  // - 212
	{0.098744, 0.036786, -0.001770, 89.675476, 85.214485, 0.000000 }, // - 213
	{0.068755, 0.036786, -0.001770, 89.675476, 85.214485, 0.000000 }, // - 214
	{0.068755, 0.026863, -0.001770, 89.675476, 85.214485, 0.000000 }, // - 215
	{0.068755, 0.026863, -0.001770, 89.675476, 85.214485, 0.000000 }, // - 216
	{0.095765, 0.030034, -0.001770, 89.675476, 85.214485, 0.000000 }, // - 217
	{0.085486, 0.039427, -0.003311, 89.675476, 85.214485, 0.000000 }, // - 218
	{0.068874, 0.027850, -0.001021, 89.675476, 85.214485, 0.000000 }, // - 219
	{0.052931, 0.050390, -0.002062, 89.675476, 88.113647, 0.000000 }, // - 220
	{0.094479, 0.034432, 0.000875, 89.675476, 83.572830, 0.000000 },  // - 221
	{0.094479, 0.034432, -0.000596, 89.675476, 83.572830, 0.000000 }, // - 222
	{0.094479, 0.062073, -0.003098, 89.675476, 83.572830, 0.000000 }, // - 223
	{0.064458, 0.029760, -0.001460, 89.675476, 83.572830, 0.000000 }, // - 224
	{0.064458, 0.029760, -0.001460, 89.675476, 83.572830, 0.000000 }, // - 225
	{0.072095, 0.029760, -0.001460, 89.675476, 83.572830, 0.000000 }, // - 226
	{0.110619, 0.043037, -0.001466, 89.675476, 86.927627, 0.000000 }, // - 227
	{0.099446, 0.050772, -0.001466, 89.675476, 85.103805, 0.000000 }, // - 228
	{0.078635, 0.023680, -0.000275, 89.675476, 73.445220, 0.000000 }, // - 229
	{0.043357, 0.028726, -0.000275, 89.675476, 73.445220, 0.000000 }, // - 230
	{0.092488, 0.049972, -0.000275, 89.675476, 88.981941, 0.000000 }, // - 231
	{0.092488, 0.016739, -0.000275, 89.675476, 88.981941, 0.000000 }, // - 232
	{0.071677, 0.037055, -0.002878, 89.675476, 88.981941, 0.000000 }, // - 233
	{0.082745, 0.004209, -0.002878, 89.675476, 88.981941, 0.000000 }, // - 234
	{0.057909, 0.021331, -0.002878, 89.675476, 88.981941, 0.000000 }, // - 235
	{0.079016, 0.021331, -0.000419, 89.675476, 77.678733, 0.000000 }, // - 236
	{0.074572, 0.021331, -0.000419, 89.675476, 84.527442, 0.000000 }, // - 237
	{0.074572, 0.038346, -0.001500, 89.675476, 84.527442, 0.000000 }, // - 238
	{0.111645, 0.011549, 0.006237, 89.675476, 84.527442, 0.000000 },  // - 239
	{0.090766, 0.044221, -0.000423, 89.675476, 89.461883, 0.000000 }, // - 240
	{0.069491, 0.049021, -0.000423, 89.675476, 89.461883, 0.000000 }, // - 241
	{0.059706, 0.031911, -0.000423, 89.675476, 89.461883, 0.000000 }, // - 242
	{0.065242, 0.031911, -0.000423, 89.675476, 89.461883, 0.000000 }, // - 243
	{0.065242, 0.051077, -0.001103, 89.675476, 89.461883, 0.000000 }, // - 244
	{0.082393, 0.038233, 0.000410, 89.675476, 89.461883, 0.000000 },  // - 245
	{0.079338, 0.044859, -0.002535, 89.675476, 89.461883, 0.000000 }, // - 246
	{0.101566, 0.037019, 0.000750, 89.675476, 83.514060, 0.000000 },  // - 247
	{0.091887, 0.047776, -0.000040, 89.675476, 83.514060, 0.000000 }, // - 248
	{0.089745, 0.044044, 0.004071, 89.675476, 83.514060, 0.000000 },  // - 249
	{0.094214, 0.044044, -0.007274, 89.675476, 83.514060, 0.000000 }, // - 250
	{0.072282, 0.044044, -0.001468, 89.675476, 90.444763, 0.000000 }, // - 251
	{0.095764, 0.034224, -0.000264, 89.675476, 82.959915, 0.000000 }, // - 252
	{0.087454, 0.026208, -0.000264, 89.675476, 82.959915, 0.000000 }, // - 253
	{0.099198, 0.037362, -0.000264, 89.675476, 82.959915, 0.000000 }, // - 254
	{0.070845, 0.019943, 0.003505, 89.675476, 73.529716, 0.000000 },  // - 255
	{0.065373, 0.033656, -0.001141, 89.675476, 83.002151, 0.000000 }, // - 256
	{0.070077, 0.033656, -0.001141, 89.675476, 83.002151, 0.000000 }, // - 257
	{0.089536, 0.041904, 0.000715, 89.675476, 83.002151, 0.000000 },  // - 258
	{0.084822, 0.041904, 0.000715, 89.675476, 83.002151, 0.000000 },  // - 259
	{0.093009, 0.031491, -0.001568, 89.675476, 83.002151, 0.000000 }, // - 260
	{0.093009, 0.015023, -0.001477, 89.675476, 83.002151, 0.000000 }, // - 261
	{0.076580, 0.039782, -0.001477, 89.675476, 88.620780, 0.000000 }, // - 262
	{0.076580, 0.028967, -0.001477, 89.675476, 88.620780, 0.000000 }, // - 263
	{0.075424, 0.043059, -0.001477, 89.675476, 88.620780, 0.000000 }, // - 264
	{0.089655, 0.021726, -0.001477, 89.675476, 88.620780, 0.000000 }, // - 265
	{0.096792, 0.014114, -0.003062, 89.675476, 85.166038, 0.000000 }, // - 266
	{0.094886, 0.024989, -0.003184, 89.675476, 85.166038, 0.000000 }, // - 267
	{0.094886, 0.024989, -0.003184, 89.675476, 85.166038, 0.000000 }, // - 268
	{0.102252, 0.024989, -0.003184, 89.675476, 85.166038, 0.000000 }, // - 269
	{0.102252, 0.024989, 0.000529, 89.675476, 85.166038, 0.000000 },  // - 270
	{0.096134, 0.025462, 0.000529, 89.675476, 79.225112, 0.000000 },  // - 271
	{0.099226, 0.032663, 0.000529, 89.675476, 79.225112, 0.000000 },  // - 272
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 273
	{0.089833, 0.022466, -0.001590, 89.675476, 88.636062, 0.000000 }, // - 274
	{0.089833, 0.022466, -0.001590, 89.675476, 88.636062, 0.000000 }, // - 275
	{0.089833, 0.022466, -0.001590, 89.675476, 88.636062, 0.000000 }, // - 276
	{0.082718, 0.062596, -0.000201, 89.675476, 88.636062, 0.000000 }, // - 277
	{0.082718, 0.062596, -0.000201, 89.675476, 88.636062, 0.000000 }, // - 278
	{0.087652, 0.059379, -0.000201, 89.675476, 88.636062, 0.000000 }, // - 279
	{0.087652, 0.023702, -0.003091, 89.675476, 88.636062, 0.000000 }, // - 280
	{0.087652, 0.023702, -0.003091, 89.675476, 88.636062, 0.000000 }, // - 281
	{0.090877, 0.026643, -0.003091, 89.675476, 88.636062, 0.000000 }, // - 282
	{0.090877, 0.026643, -0.003091, 89.675476, 88.636062, 0.000000 }, // - 283
	{0.090877, 0.053674, 0.009879, 89.675476, 88.636062, 0.000000 },  // - 284
	{0.104320, 0.041487, 0.008021, 89.675476, 88.636062, 0.000000 },  // - 285
	{0.087062, 0.021779, -0.003307, 89.675476, 88.636062, 0.000000 }, // - 286
	{0.073173, 0.048856, 0.005337, 89.675476, 92.561180, 0.000000 },  // - 287
	{0.090294, 0.027592, -0.003497, 89.675476, 92.561180, 0.000000 }, // - 288
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 289
	{0.086562, 0.042698, -0.000612, 89.675476, 92.561180, 0.000000 }, // - 290
	{0.096768, 0.039233, -0.000612, 89.675476, 83.550270, 0.000000 }, // - 291
	{0.079939, 0.020731, -0.005162, 89.675476, 83.550270, 0.000000 }, // - 292
	{0.097107, 0.027826, -0.005162, 89.675476, 88.505996, 0.000000 }, // - 293
	{0.097107, 0.037636, 0.000618, 89.675476, 88.505996, 0.000000 },  // - 294
	{0.079985, 0.035006, -0.000826, 89.675476, 87.533462, 0.000000 }, // - 295
	{0.088445, 0.024209, -0.002076, 89.675476, 73.285072, 0.000000 }, // - 296
	{0.094039, 0.035411, 0.000490, 89.675476, 84.277572, 0.000000 },  // - 297
	{0.099553, 0.024683, -0.002919, 89.675476, 84.277572, 0.000000 }, // - 298
	{0.099553, 0.044356, -0.000285, 89.675476, 84.277572, 0.000000 },  // - 299

	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0}
};
static const Float: SkinCaps[312][6] = {
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.130999,0.006000,-0.008999,0.000000,0.000000,0.000000},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.178000,0.000000,-0.003999,0.000000,0.000000,0.000000},
	{0.171000,-0.031000,-0.009999,0.000000,0.000000,-26.100002},
	{0.149999,-0.031000,-0.009999,0.000000,0.000000,-26.100002},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.155999,-0.010000,-0.009999,0.000000,0.000000,-26.100002},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.123999,-0.013000,-0.009999,0.000000,0.000000,-26.100002},
	{0.106999,-0.010999,-0.009999,0.000000,0.000000,-26.100002},
	{0.120999,-0.010999,-0.007999,0.000000,0.000000,-26.100002},
	{0.132999,-0.035999,-0.007999,0.000000,0.000000,-26.100002},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.138999,-0.012999,-0.004999,0.000000,0.000000,-26.100002},
	{0.108999,-0.032999,-0.004999,0.000000,0.000000,-26.100002},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.145999,-0.011999,-0.004999,0.000000,0.000000,-26.100002},
	{0.124999,-0.024999,-0.004999,0.000000,0.000000,-26.100002},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.152999,-0.024999,-0.004999,0.000000,0.000000,-26.100002},
	{0.137999,-0.024999,-0.014000,0.000000,0.000000,-26.100002},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.125999,-0.005999,-0.006000,0.000000,0.000000,-26.100002},
	{0.125999,-0.010999,-0.006000,0.000000,0.000000,-26.100002},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.155999,-0.025999,-0.010000,0.000000,0.000000,-26.100002},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.105999,-0.006999,-0.010000,0.000000,0.000000,-26.100002},
	{0.145999,-0.037999,-0.010000,0.000000,0.000000,-26.100002},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.124999,-0.011999,-0.010000,0.000000,0.000000,-26.100002},
	{0.079999,-0.011999,-0.010000,0.000000,0.000000,-26.100002},
	{0.104999,0.014000,-0.006000,0.000000,0.000000,-21.500003},
	{0.111999,-0.011000,-0.006000,0.000000,0.000000,-21.500003},
	{0.143000,-0.009000,-0.009000,0.000000,0.000000,-21.500003},
	{0.165000,-0.020000,-0.012000,0.000000,0.000000,-21.500003},
	{0.182000,-0.043999,-0.012000,0.000000,0.000000,-21.500003},
	{0.117000,-0.003999,-0.006999,0.000000,0.000000,-21.500003},
	{0.172000,-0.040999,-0.006999,0.000000,0.000000,-21.500003},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.124000,0.009000,-0.004999,0.000000,0.000000,-21.500003},
	{0.134999,-0.038998,-0.004999,0.000000,0.000000,-21.500003},
	{0.151000,-0.033999,-0.004999,0.000000,0.000000,-21.500003},
	{0.162000,0.000000,-0.004999,0.000000,0.000000,-21.500003},
	{0.108000,-0.011999,-0.006999,0.000000,0.000000,-21.500003},
	{0.163000,-0.019999,-0.006999,0.000000,0.000000,-21.500003},
	{0.136000,-0.010999,-0.010999,0.000000,0.000000,-21.500003},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.136000,0.003000,-0.005999,0.000000,0.000000,-21.500003},
	{0.146000,-0.030999,-0.009999,0.000000,0.000000,-21.500003},
	{0.112000,0.000000,-0.009999,0.000000,0.000000,-21.500003},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.129000,0.000000,-0.006999,0.000000,0.000000,-21.500003},
	{0.129000,-0.013999,-0.006999,0.000000,0.000000,-21.500003},
	{0.129000,0.008000,-0.006999,0.000000,0.000000,-21.500003},
	{0.145000,-0.025999,-0.007999,0.000000,0.000000,-21.500003},
	{0.145000,0.000000,-0.001999,0.000000,0.000000,-21.500003},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.125000,-0.003999,-0.005999,0.000000,0.000000,-21.500003},
	{0.130000,-0.003999,-0.005999,0.000000,0.000000,-21.500003},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.148000,-0.028999,-0.005999,0.000000,0.000000,-21.500003},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.106000,-0.007999,-0.005999,0.000000,0.000000,-21.500003},
	{0.106000,-0.008999,-0.005999,0.000000,0.000000,-21.500003},
	{0.183000,-0.004999,-0.005999,0.000000,0.000000,-21.500003},
	{0.183000,-0.019999,-0.005999,0.000000,0.000000,-21.500003},
	{0.183000,-0.015999,-0.001999,0.000000,0.000000,-21.500003},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.105000,-0.023999,-0.005999,0.000000,0.000000,-21.500003},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.125000,0.006000,-0.009999,0.000000,0.000000,-21.500003},
	{0.125000,-0.025999,-0.009999,0.000000,0.000000,-21.500003},
	{0.154000,-0.025999,-0.009999,0.000000,0.000000,-21.500003},
	{0.154000,-0.033999,-0.009999,0.000000,0.000000,-21.500003},
	{0.154000,-0.035999,-0.009999,0.000000,0.000000,-21.500003},
	{0.154000,-0.041999,-0.006999,0.000000,0.000000,-21.500003},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.113000,-0.027999,-0.006999,0.000000,0.000000,-21.500003},
	{0.150000,-0.008999,-0.006999,0.000000,0.000000,-21.500003},
	{0.118000,-0.019999,-0.006999,0.000000,0.000000,-21.500003},
	{0.138000,0.003000,-0.006999,0.000000,0.000000,-21.500003},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.149000,-0.019999,-0.006999,0.000000,0.000000,-21.500003},
	{0.144000,-0.019999,-0.006999,0.000000,0.000000,-21.500003},
	{0.144000,-0.008999,-0.015000,0.000000,0.000000,-21.500003},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.152000,-0.033999,-0.009999,0.000000,0.000000,-21.500003},
	{0.165000,-0.014999,-0.013000,0.000000,0.000000,-21.500003},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.165000,-0.014999,-0.004999,0.000000,0.000000,-21.500003},
	{0.165000,-0.014999,-0.008999,0.000000,0.000000,-21.500003},
	{0.165000,-0.014999,-0.008999,0.000000,0.000000,-21.500003},
	{0.127000,-0.002999,-0.008999,0.000000,0.000000,-21.500003},
	{0.108000,-0.002999,-0.008999,0.000000,0.000000,-21.500003},
	{0.160000,-0.020999,-0.008999,0.000000,0.000000,-21.500003},
	{0.160000,-0.020999,-0.008999,0.000000,0.000000,-21.500003},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.160000,-0.020999,-0.008999,0.000000,0.000000,-21.500003},
	{0.126999,0.024000,0.000000,0.000000,0.000000,0.000000},
	{0.126999,0.013999,-0.004000,0.000000,0.000000,0.000000},
	{0.126999,0.007999,-0.007000,0.000000,0.000000,0.000000},
	{0.158999,-0.016000,-0.007000,0.000000,0.000000,0.000000},
	{0.169000,0.001999,-0.007000,0.000000,0.000000,0.000000},
	{0.140999,-0.003000,-0.007000,0.000000,0.000000,0.000000},
	{0.171999,-0.003000,-0.015000,0.000000,0.000000,0.000000},
	{0.171999,-0.005000,-0.010999,0.000000,0.000000,0.000000},
	{0.135000,0.012999,-0.010999,0.000000,0.000000,0.000000},
	{0.162999,-0.014000,-0.005999,0.000000,0.000000,0.000000},
	{0.180000,-0.001000,-0.005999,0.000000,0.000000,0.000000},
	{0.180000,0.003999,-0.006999,0.000000,0.000000,0.000000},
	{0.121000,0.011999,-0.006999,0.000000,0.000000,0.000000},
	{0.089000,-0.000000,-0.014000,0.000000,0.000000,-16.800001},
	{0.125000,-0.000000,-0.008999,0.000000,0.000000,-16.800001},
	{0.039000,-0.003000,-0.008999,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.139000,-0.019000,-0.008999,0.000000,0.000000,-16.800001},
	{0.139000,-0.019000,-0.008999,0.000000,0.000000,-16.800001},
	{0.139000,-0.016000,-0.008999,0.000000,0.000000,-16.800001},
	{0.139000,-0.016000,-0.008999,0.000000,0.000000,-16.800001},
	{0.139000,-0.016000,-0.008999,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.184000,-0.045999,-0.008999,0.000000,0.000000,-16.800001},
	{0.130000,-0.008999,-0.008999,0.000000,0.000000,-16.800001},
	{0.133000,-0.008999,-0.008999,0.000000,0.000000,-16.800001},
	{0.133000,-0.025000,-0.003999,0.000000,0.000000,-16.800001},
	{0.139000,-0.036999,-0.003999,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.155000,-0.030999,-0.003999,0.000000,0.000000,-16.800001},
	{0.175000,-0.041999,-0.009999,0.000000,0.000000,-16.800001},
	{0.137000,-0.024999,-0.009999,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.137000,-0.024999,-0.005999,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.182000,-0.046999,-0.005999,0.000000,0.000000,-16.800001},
	{0.114000,0.003000,-0.005999,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.113000,0.003000,-0.010999,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.146000,0.003000,-0.010999,0.000000,0.000000,-16.800001},
	{0.114000,0.003000,-0.010999,0.000000,0.000000,-16.800001},
	{0.114000,0.002000,-0.010999,0.000000,0.000000,-16.800001},
	{0.141000,-0.007999,-0.010999,0.000000,0.000000,-16.800001},
	{0.141000,-0.005999,-0.010999,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.134000,-0.026999,-0.010999,0.000000,0.000000,-16.800001},
	{0.134000,0.001000,-0.010999,0.000000,0.000000,-16.800001},
	{0.157000,-0.029999,-0.010999,0.000000,0.000000,-16.800001},
	{0.137000,-0.011999,-0.010999,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.178000,-0.011999,-0.010999,0.000000,0.000000,-16.800001},
	{0.178000,-0.014999,-0.010999,0.000000,0.000000,-16.800001},
	{0.178000,-0.026999,-0.012000,0.000000,0.000000,-16.800001},
	{0.190000,-0.029000,-0.011000,0.000000,0.000000,-16.399999},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.129999,-0.004999,-0.011000,0.000000,0.000000,-16.399999},
	{0.167000,-0.024000,-0.009000,0.000000,0.000000,-16.399999},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.112999,0.004000,-0.009000,0.000000,0.000000,-16.399999},
	{0.135000,0.004000,-0.009000,0.000000,0.000000,-16.399999},
	{0.153000,-0.014000,-0.012000,0.000000,0.000000,-16.399999},
	{0.153000,-0.014000,-0.006000,0.000000,0.000000,-16.399999},
	{0.153000,-0.030000,-0.006000,0.000000,0.000000,-16.399999},
	{0.108999,-0.012000,-0.002999,0.000000,0.000000,-16.399999},
	{0.130999,-0.004999,-0.002999,0.000000,0.000000,-16.399999},
	{0.167999,-0.030000,-0.002999,0.000000,0.000000,-16.399999},
	{0.180999,-0.023000,-0.002999,0.000000,0.000000,-16.399999},
	{0.163999,-0.018000,-0.008000,0.000000,0.000000,-16.399999},
	{0.163999,-0.022000,-0.009000,0.000000,0.000000,-16.399999},
	{0.161999,-0.022000,-0.012000,0.000000,0.000000,-16.399999},
	{0.161999,-0.017000,-0.012000,0.000000,0.000000,-16.399999},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.109999,-0.006999,-0.006000,0.000000,0.000000,-16.399999},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.120999,0.006000,-0.010000,0.000000,0.000000,-16.399999},
	{0.168999,-0.007999,-0.010000,0.000000,0.000000,-16.399999},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.133999,0.014000,-0.006000,0.000000,0.000000,-16.399999},
	{0.094000,-0.000999,-0.013000,0.000000,0.000000,-16.399999},
	{0.127999,0.006000,-0.013000,0.000000,0.000000,-16.399999},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.099999,0.002000,-0.013000,0.000000,0.000000,-16.399999},
	{0.146000,-0.029000,-0.013000,0.000000,0.000000,-16.399999},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.146000,-0.022000,-0.008000,0.000000,0.000000,-16.399999},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.146000,-0.029000,-0.008000,0.000000,0.000000,-16.399999},
	{0.146000,-0.000999,-0.008000,0.000000,0.000000,-16.399999},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.146000,-0.022000,-0.008000,0.000000,0.000000,-16.399999},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.192000,-0.037999,-0.008000,0.000000,0.000000,-16.399999},
	{0.178000,-0.047999,-0.008000,0.000000,0.000000,-16.399999},
	{0.178000,0.004000,-0.008000,0.000000,0.000000,-16.399999},
	{0.138000,-0.026000,-0.008000,0.000000,0.000000,-16.399999},
	{0.138000,-0.026000,-0.008000,0.000000,0.000000,-16.399999},
	{0.141000,-0.026000,-0.008000,0.000000,0.000000,-16.399999},
	{0.157000,0.008000,-0.008000,0.000000,0.000000,-16.399999},
	{0.165000,-0.010999,-0.008000,0.000000,0.000000,-16.399999},
	{0.113000,-0.010999,-0.008000,0.000000,0.000000,-16.399999},
	{0.121000,-0.019999,-0.002999,0.000000,0.000000,-16.399999},
	{0.125000,0.018000,-0.010000,0.000000,0.000000,-16.399999},
	{0.125000,-0.024000,-0.010000,0.000000,0.000000,-16.399999},
	{0.151000,-0.024000,-0.010000,0.000000,0.000000,-16.399999},
	{0.119000,-0.024000,-0.010000,0.000000,0.000000,-16.399999},
	{0.119000,-0.012999,-0.010000,0.000000,0.000000,-16.399999},
	{0.119000,-0.009999,-0.010000,0.000000,0.000000,-16.399999},
	{0.136000,-0.023000,-0.010000,0.000000,0.000000,-16.399999},
	{0.145000,0.000000,-0.007000,0.000000,0.000000,-16.399999},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.161000,-0.018999,-0.004999,0.000000,0.000000,-16.399999},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.093000,0.001000,-0.004999,0.000000,0.000000,-16.399999},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.146000,-0.007999,-0.014000,0.000000,0.000000,-16.399999},
	{0.146000,-0.000999,-0.005999,0.000000,0.000000,-16.399999},
	{0.162000,-0.017000,-0.005999,0.000000,0.000000,-16.399999},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.154000,-0.019000,-0.000999,0.000000,0.000000,-16.399999},
	{0.154000,-0.019000,-0.000999,0.000000,0.000000,-16.399999},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.115000,-0.001999,-0.009999,0.000000,0.000000,-16.399999},
	{0.145000,-0.020999,-0.009999,0.000000,0.000000,-16.399999},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.117000,-0.004999,-0.009999,0.000000,0.000000,-16.399999},
	{0.138000,-0.013999,-0.009999,0.000000,0.000000,-16.399999},
	{0.138000,-0.020999,-0.009999,0.000000,0.000000,-16.399999},
	{0.152000,-0.016999,-0.008999,0.000000,0.000000,-16.399999},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.167000,-0.012999,-0.005999,0.000000,0.000000,-16.399999},
	{0.113000,-0.001999,-0.005999,0.000000,0.000000,-16.399999},
	{0.125000,-0.001999,-0.007999,0.000000,0.000000,-16.399999},
	{0.125000,0.002000,-0.008999,0.000000,0.000000,-16.399999},
	{0.125000,0.001000,-0.007999,0.000000,0.000000,-16.399999},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.135000,0.001000,-0.007999,0.000000,0.000000,-16.399999},
	{0.135000,0.001000,-0.007999,0.000000,0.000000,-16.399999},
	{0.135000,0.001000,-0.007999,0.000000,0.000000,-16.399999},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.135000,-0.006999,-0.007999,0.000000,0.000000,-16.399999},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.147000,-0.011999,-0.007999,0.000000,0.000000,-16.399999},
	{0.147000,-0.004999,-0.005999,0.000000,0.000000,-16.399999},
	{0.111000,0.000000,-0.008999,0.000000,0.000000,-16.399999},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.150000,-0.012999,-0.008999,0.000000,0.000000,-16.399999},
	{0.150000,-0.016999,-0.008999,0.000000,0.000000,-16.399999},
	{0.150000,-0.032000,-0.004999,0.000000,0.000000,-16.399999},
	{0.181000,-0.013999,-0.004999,0.000000,0.000000,-16.399999},
	{0.128000,-0.004999,-0.010999,0.000000,0.000000,-16.399999},
	{0.175000,-0.004999,-0.010999,0.000000,0.000000,-16.399999},

	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0}
};

static const Float: BandSkin[312][6] = {
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.094000,0.013000,0.000000,-86.200012,-1.500002,-96.000038},
	{0.081000,0.025000,-0.000999,-86.200012,-1.500002,-90.900070},
	{0.081000,0.037000,-0.003999,-86.200012,-1.500002,-90.900070},
	{0.130000,0.032000,-0.004999,-86.200012,-1.500002,-90.900070},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.098000,0.015000,-0.001999,-86.200012,-1.500002,-90.900070},
	{0.098000,0.042000,-0.005999,-86.200012,-1.500002,-90.900070},
	{0.085000,0.021000,-0.003999,-86.200012,-1.500002,-90.900070},
	{0.057000,0.021000,-0.000999,-86.200012,-1.500002,-90.900070},
	{0.073000,0.029000,-0.003999,-86.200012,-1.500002,-90.900070},
	{0.073000,0.025000,-0.001999,-86.200012,-1.500002,-90.900070},
	{0.065000,0.021000,-0.001999,-86.200012,-1.500002,-90.900070},
	{0.074000,0.022000,-0.003999,-86.200012,-1.500002,-90.900070},
	{0.087000,0.040000,0.001000,-86.200012,-1.500002,-90.900070},
	{0.067000,0.008000,-0.005999,-86.200012,-1.500002,-90.900070},
	{0.094000,0.039000,0.000000,-86.200012,-1.500002,-90.900070},
	{0.094000,0.016000,-0.000999,-86.200012,-1.500002,-90.900070},
	{0.062000,0.020000,-0.004999,-86.200012,-1.500002,-90.900070},
	{0.087000,0.018000,-0.003999,-90.099998,-3.100002,-90.900070},
	{0.087000,0.017000,-0.000999,-90.099998,-3.100002,-90.900070},
	{0.087000,0.036000,-0.006999,-90.099998,-3.100002,-90.900070},
	{0.080000,0.039000,-0.004999,-90.099998,-3.100002,-90.900070},
	{0.085000,0.036000,-0.003999,-90.099998,-3.100002,-90.900070},
	{0.085000,0.030000,-0.000999,-90.099998,-3.100002,-90.900070},
	{0.085000,0.020000,-0.001999,-90.099998,-3.100002,-90.900070},
	{0.085000,0.027000,-0.001999,-90.099998,-3.100002,-90.900070},
	{0.085000,0.032000,-0.001999,-90.099998,-3.100002,-90.900070},
	{0.085000,0.043000,-0.005999,-90.099998,-3.100002,-90.900070},
	{0.085000,0.047000,0.003000,-90.099998,-3.100002,-90.900070},
	{0.085000,0.038000,-0.005999,-90.099998,-3.100002,-90.900070},
	{0.085000,0.046000,-0.001999,-90.099998,-3.100002,-90.900070},
	{0.077000,0.005000,-0.001999,-90.099998,-3.100002,-90.900070},
	{0.048000,0.017000,-0.001999,-90.099998,-3.100002,-90.900070},
	{0.094000,0.035000,-0.001999,-90.099998,-3.100002,-90.900070},
	{0.094000,0.020000,-0.001999,-90.099998,-3.100002,-90.900070},
	{0.094000,0.024000,-0.001999,-90.099998,-3.100002,-90.900070},
	{0.094000,0.021000,-0.001999,-90.099998,-3.100002,-90.900070},
	{0.094000,0.040000,-0.001999,-90.099998,-3.100002,-90.900070},
	{0.068000,0.035000,-0.001999,-90.099998,-3.100002,-90.900070},
	{0.068000,0.018000,0.000000,-90.099998,-3.100002,-90.900070},
	{0.068000,0.028000,0.000000,-90.099998,-3.100002,-90.900070},
	{0.088000,0.028000,-0.002999,-90.099998,-3.100002,-90.900070},
	{0.031000,0.014000,-0.001999,-90.099998,-3.100002,-90.900070},
	{0.083000,0.032000,0.001000,-90.099998,-3.100002,-90.900070},
	{0.054000,0.029000,-0.001999,-90.099998,-3.100002,-90.900070},
	{0.086000,0.050000,-0.002999,-90.099998,-3.100002,-90.900070},
	{0.086000,0.037000,-0.005999,-90.099998,-3.100002,-90.900070},
	{0.092000,0.036000,-0.004999,-90.099998,-3.100002,-90.900070},
	{0.080000,0.026000,0.000000,-90.099998,-3.100002,-90.900070},
	{0.102000,0.012000,-0.005999,-90.099998,-3.100002,-90.900070},
	{0.102000,0.020000,-0.000999,-90.099998,-3.100002,-90.900070},
	{0.102000,0.020000,-0.000999,-90.099998,-3.100002,-90.900070},
	{0.079000,0.030000,-0.000999,-90.099998,-3.100002,-90.900070},
	{0.092000,0.038000,0.002000,-90.099998,-3.100002,-90.900070},
	{0.067000,0.023000,0.002000,-90.099998,-3.100002,-90.900070},
	{0.067000,0.020000,0.002000,-90.099998,-3.100002,-90.900070},
	{0.122000,0.039000,-0.001999,-90.099998,-3.100002,-90.900070},
	{0.085000,0.020000,-0.002999,-90.099998,-3.100002,-90.900070},
	{0.085000,0.030000,-0.001999,-90.099998,-3.100002,-90.900070},
	{0.085000,0.040000,-0.003999,-90.099998,-3.100002,-90.900070},
	{0.077000,0.026000,-0.003999,-90.099998,-3.100002,-90.900070},
	{0.085000,0.032000,0.007000,-90.099998,-3.100002,-90.900070},
	{0.067000,0.032000,-0.000999,-90.099998,-3.100002,-90.900070},
	{0.067000,0.034000,-0.000999,-90.099998,-3.100002,-90.900070},
	{0.073000,0.021000,-0.000999,-90.099998,-3.100002,-90.900070},
	{0.094000,0.021000,-0.000999,-90.099998,-3.100002,-90.900070},
	{0.094000,0.021000,-0.000999,-90.099998,-3.100002,-90.900070},
	{0.084000,0.031000,-0.000999,-90.099998,-3.100002,-90.900070},
	{0.066000,0.028000,-0.000999,-90.099998,-3.100002,-90.900070},
	{0.077000,0.033000,0.003000,-90.099998,-3.100002,-90.900070},
	{0.077000,0.008000,-0.003999,-90.099998,-3.100002,-90.900070},
	{0.077000,0.024000,-0.002999,-90.099998,-3.100002,-90.900070},
	{0.077000,0.023000,-0.002999,-90.099998,-3.100002,-90.900070},
	{0.091000,0.026000,-0.000999,-90.099998,-3.100002,-90.900070},
	{0.075000,0.035000,-0.000999,-90.099998,-3.100002,-90.900070},
	{0.060000,0.027000,-0.000999,-90.099998,-3.100002,-90.900070},
	{0.070000,0.042000,-0.005999,-90.099998,-3.100002,-90.900070},
	{0.108000,0.026000,0.005000,-90.099998,-3.100002,-90.900070},
	{0.079000,0.026000,0.005000,-90.099998,-3.100002,-90.900070},
	{0.095000,0.020000,0.001000,-90.099998,-3.100002,-90.900070},
	{0.071000,0.009000,-0.000999,-90.400016,9.899998,-90.900070},
	{0.085000,0.025000,-0.000999,-90.400016,9.899998,-90.900070},
	{0.070000,0.008000,-0.000999,-90.400016,9.899998,-90.900070},
	{0.070000,0.009000,-0.001999,-90.400016,9.899998,-90.900070},
	{0.070000,0.031000,-0.001999,-90.400016,9.899998,-90.900070},
	{0.070000,0.011000,-0.001999,-90.400016,9.899998,-90.900070},
	{0.049000,0.038000,-0.003999,-89.800018,9.899998,-88.500099},
	{0.049000,0.026000,0.000000,-89.800018,9.899998,-88.500099},
	{0.073000,0.010000,0.000000,-89.800018,9.899998,-88.500099},
	{0.043000,0.022000,-0.001999,-89.800018,9.899998,-88.500099},
	{0.046000,0.013000,-0.001999,-89.800018,9.899998,-88.500099},
	{0.046000,0.029000,-0.001999,-89.800018,9.899998,-88.500099},
	{0.046000,0.020000,-0.001999,-89.800018,9.899998,-88.500099},
	{0.023000,0.006000,-0.001999,-89.800018,9.899998,-88.500099},
	{0.074000,-0.017999,-0.001999,-89.800018,9.899998,-88.500099},
	{0.085000,0.019000,-0.001999,-89.800018,9.899998,-88.500099},
	{0.044000,0.009000,-0.001999,-89.800018,9.899998,-88.500099},
	{0.060000,0.035000,-0.003999,-89.800018,9.899998,-88.500099},
	{0.072000,0.018000,-0.003999,-89.800018,9.899998,-88.500099},
	{0.072000,0.025000,-0.003999,-89.800018,9.899998,-88.500099},
	{0.072000,0.012000,-0.000999,-89.800018,9.899998,-88.500099},
	{0.072000,0.025000,-0.006999,-89.800018,9.899998,-88.500099},
	{0.072000,0.037000,-0.001999,-89.800018,9.899998,-91.300086},
	{0.069000,0.033000,-0.003999,-89.800018,9.899998,-91.300086},
	{0.069000,0.030000,-0.003999,-89.800018,9.899998,-91.300086},
	{0.069000,0.028000,-0.004999,-89.800018,9.899998,-91.300086},
	{0.073000,0.028000,-0.004999,-89.800018,9.899998,-91.300086},
	{0.073000,0.021000,-0.000999,-89.800018,9.899998,-91.300086},
	{0.073000,0.027000,-0.006999,-89.800018,9.899998,-91.300086},
	{0.073000,0.027000,-0.005999,-89.800018,9.899998,-91.300086},
	{0.073000,0.011000,-0.005999,-89.800018,9.899998,-91.300086},
	{0.062000,0.001000,-0.003999,-89.800018,9.899998,-91.300086},
	{0.079000,0.029000,0.000000,-89.800018,9.899998,-91.300086},
	{0.071000,0.028000,-0.004999,-89.800018,9.899998,-91.300086},
	{0.067000,0.028000,-0.004999,-89.800018,9.899998,-91.300086},
	{0.067000,0.031000,-0.004999,-89.800018,9.899998,-91.300086},
	{0.051000,0.019000,-0.001999,-89.800018,9.899998,-91.300086},
	{0.051000,0.019000,-0.001999,-89.800018,9.899998,-91.300086},
	{0.069000,0.019000,-0.001999,-89.800018,9.899998,-91.300086},
	{0.071000,0.015000,-0.001999,-89.800018,9.899998,-91.300086},
	{0.071000,0.025000,-0.001999,-89.800018,9.899998,-91.300086},
	{0.071000,0.020000,-0.000999,-89.800018,9.899998,-91.300086},
	{0.071000,0.033000,-0.003999,-89.800018,9.899998,-91.300086},
	{0.078000,0.026000,-0.000999,-89.800018,9.899998,-91.300086},
	{0.078000,0.011000,-0.002999,-89.800018,9.899998,-91.300086},
	{0.063000,0.016000,-0.001999,-89.800018,9.899998,-91.300086},
	{0.076000,0.032000,-0.000999,-89.800018,9.899998,-91.300086},
	{0.071000,0.039000,-0.002999,-89.800018,9.899998,-91.300086},
	{0.070000,0.009000,-0.002999,-89.800018,9.899998,-91.300086},
	{0.048000,0.032000,-0.002999,-89.800018,9.899998,-91.300086},
	{0.048000,0.026000,0.000000,-89.800018,9.899998,-91.300086},
	{0.022000,0.003000,-0.000999,-89.800018,9.899998,-91.300086},
	{0.081000,0.021000,-0.000999,-89.800018,9.899998,-91.300086},
	{0.081000,-0.002999,-0.000999,-89.800018,9.899998,-91.300086},
	{0.059000,0.019000,-0.000999,-89.800018,9.899998,-91.300086},
	{0.075000,0.001000,-0.002999,-89.800018,9.899998,-91.300086},
	{0.051000,-0.000999,-0.002999,-89.800018,9.899998,-91.300086},
	{0.051000,0.019000,-0.001999,-89.800018,9.899998,-91.300086},
	{0.051000,0.019000,-0.001999,-89.800018,9.899998,-91.300086},
	{0.051000,0.031000,-0.001999,-89.800018,9.899998,-91.300086},
	{0.066000,0.019000,0.001000,-89.400077,-2.100004,-92.000099},
	{0.084000,0.035000,-0.006999,-89.400077,-2.100004,-92.000099},
	{0.084000,0.039000,-0.006999,-89.400077,-2.100004,-92.000099},
	{0.084000,0.038000,-0.002999,-89.400077,-2.100004,-92.000099},
	{0.062000,0.026000,0.005000,-89.400077,-2.100004,-92.000099},
	{0.079000,0.026000,-0.002999,-89.400077,-2.100004,-92.000099},
	{0.085000,0.021000,0.005000,-89.400077,-2.100004,-92.000099},
	{0.058000,0.024000,0.001000,-89.400077,-2.100004,-92.000099},
	{0.098000,0.024000,0.003000,-89.400077,-2.100004,-92.000099},
	{0.063000,0.018000,0.001000,-89.400077,-2.100004,-92.000099},
	{0.078000,0.031000,-0.000999,-89.400077,-2.100004,-92.000099},
	{0.078000,0.007000,0.000000,-89.400077,-2.100004,-92.000099},
	{0.084000,0.018000,0.003000,-89.400077,-2.100004,-92.000099},
	{0.066000,0.018000,-0.001999,-89.400077,-2.100004,-92.000099},
	{0.085000,0.035000,-0.004999,-89.400077,-2.100004,-92.000099},
	{0.085000,0.035000,0.002000,-89.400077,-2.100004,-92.000099},
	{0.058000,0.033000,0.002000,-89.400077,-2.100004,-92.000099},
	{0.096000,0.027000,0.002000,-89.400077,-2.100004,-92.000099},
	{0.078000,0.033000,-0.001999,-89.400077,-2.100004,-92.000099},
	{0.096000,0.015000,0.002000,-89.400077,-2.100004,-92.000099},
	{0.096000,0.037000,0.002000,-89.400077,-2.100004,-92.000099},
	{0.096000,0.032000,0.000000,-89.400077,-2.100004,-92.000099},
	{0.086000,0.023000,0.000000,-89.400077,-2.100004,-92.000099},
	{0.086000,0.023000,-0.001999,-89.400077,-2.100004,-92.000099},
	{0.065000,0.029000,-0.001999,-89.400077,-2.100004,-92.000099},
	{0.065000,0.029000,-0.002999,-89.400077,-2.100004,-92.000099},
	{0.094000,0.037999,-0.000999,-89.400077,-2.100004,-92.000099},
	{0.096000,0.031000,-0.004999,-89.400077,-2.100004,-92.000099},
	{0.073000,0.017000,0.002000,-89.400077,-2.100004,-92.000099},
	{0.084000,0.033000,-0.004999,-89.400077,-2.100004,-92.000099},
	{0.084000,0.020000,0.000000,-89.400077,-2.100004,-92.000099},
	{0.068000,0.028000,0.000000,-89.400077,-2.100004,-92.000099},
	{0.086000,0.040999,-0.003999,-88.000061,-2.100004,-92.000099},
	{0.086000,0.034999,-0.003999,-88.000061,-2.100004,-92.000099},
	{0.086000,0.034999,-0.004999,-88.000061,-2.100004,-92.000099},
	{0.090000,0.034999,-0.006999,-88.000061,-2.100004,-92.000099},
	{0.095000,0.028999,-0.004999,-88.000061,-2.100004,-92.000099},
	{0.057000,0.028999,-0.002999,-88.000061,-2.100004,-92.000099},
	{0.083000,0.038999,-0.002999,-88.000061,-2.100004,-92.000099},
	{0.092000,0.035999,-0.004999,-88.000061,-2.100004,-92.000099},
	{0.116000,0.027999,-0.004999,-88.000061,-2.100004,-92.000099},
	{0.071000,0.019999,-0.004999,-88.000061,-2.100004,-92.000099},
	{0.092000,0.019999,-0.004999,-88.000061,-2.100004,-92.000099},
	{0.092000,0.035999,-0.004999,-88.000061,-2.100004,-92.000099},
	{0.092000,0.026999,0.000000,-88.000061,-2.100004,-92.000099},
	{0.092000,0.023999,0.000000,-88.000061,-2.100004,-92.000099},
	{0.078000,0.028999,0.009000,-88.000061,-2.100004,-92.000099},
	{0.091000,0.028999,0.001000,-88.000061,-2.100004,-92.000099},
	{0.091000,0.025999,-0.000999,-88.000061,-2.100004,-92.000099},
	{0.091000,0.025999,-0.000999,-88.000061,-2.100004,-92.000099},
	{0.091000,0.024999,-0.000999,-88.000061,-2.100004,-92.000099},
	{0.091000,0.026999,-0.000999,-88.000061,-2.100004,-92.000099},
	{0.091000,0.026999,-0.000999,-88.000061,-2.100004,-92.000099},
	{0.091000,0.026999,-0.000999,-88.000061,-2.100004,-92.000099},
	{0.091000,0.026999,0.000000,-88.000061,-2.100004,-92.000099},
	{0.091000,0.018999,0.000000,-88.000061,-2.100004,-92.000099},
	{0.091000,0.011999,-0.003999,-88.000061,-2.100004,-92.000099},
	{0.068000,0.030999,-0.003999,-88.000061,-2.100004,-92.000099},
	{0.086000,0.023999,-0.003999,-88.000061,-2.100004,-92.000099},
	{0.092000,0.023999,-0.003999,-88.000061,-2.100004,-92.000099},
	{0.064000,0.034999,-0.003999,-88.000061,-2.100004,-92.000099},
	{0.090000,0.034999,-0.003999,-88.000061,-2.100004,-92.000099},
	{0.090000,0.029999,-0.005999,-88.000061,-2.100004,-92.000099},
	{0.090000,0.029999,-0.005999,-88.000061,-2.100004,-92.000099},
	{0.090000,0.031999,-0.000999,-88.000061,-2.100004,-92.000099},
	{0.098000,0.035999,-0.000999,-88.000061,-2.100004,-92.000099},
	{0.056000,0.022999,-0.000999,-88.000061,-2.100004,-92.000099},
	{0.082000,0.029999,-0.000999,-88.000061,-2.100004,-92.000099},
	{0.089000,0.012999,-0.000999,-88.000061,-2.100004,-92.000099},
	{0.089000,0.004999,0.000000,-88.000061,-2.100004,-92.000099},
	{0.060000,0.031999,0.000000,-88.000061,-2.100004,-92.000099},
	{0.094000,0.020999,-0.004999,-88.000061,-2.100004,-92.000099},
	{0.098000,0.032999,-0.002999,-88.000061,-2.100004,-92.000099},
	{0.053000,0.027999,0.000000,-88.000061,-2.100004,-92.000099},
	{0.056000,0.027999,0.001000,-88.000061,-2.100004,-92.000099},
	{0.062000,0.027999,0.001000,-88.000061,-2.100004,-92.000099},
	{0.086000,0.027999,-0.000999,-88.000061,-2.100004,-92.000099},
	{0.086000,0.034999,-0.000999,-88.000061,-2.100004,-92.000099},
	{0.052000,0.024999,-0.000999,-88.000061,-2.100004,-92.000099},
	{0.052000,0.038999,-0.000999,-88.000061,-2.100004,-92.000099},
	{0.086000,0.025999,0.002000,-88.000061,-2.100004,-92.000099},
	{0.086000,0.030999,0.000000,-88.000061,-2.100004,-92.000099},
	{0.086000,0.044999,-0.001999,-88.000061,-2.100004,-92.000099},
	{0.060000,0.025999,0.002000,-88.000061,-2.100004,-92.000099},
	{0.060000,0.025999,0.002000,-88.000061,-2.100004,-92.000099},
	{0.061000,0.023999,0.002000,-88.000061,-2.100004,-92.000099},
	{0.105000,0.043999,0.000000,-88.000061,-2.100004,-92.000099},
	{0.105000,0.049999,-0.000999,-88.000061,-2.100004,-92.000099},
	{0.082000,0.015999,-0.000999,-88.000061,-2.100004,-92.000099},
	{0.068000,0.022999,-0.000999,-88.000061,-2.100004,-92.000099},
	{0.100000,0.036999,-0.000999,-88.000061,-2.100004,-92.000099},
	{0.093000,0.006999,-0.001999,-88.000061,-2.100004,-92.000099},
	{0.062000,0.027999,0.000000,-88.000061,-2.100004,-92.000099},
	{0.080000,-0.007000,0.000000,-88.000061,-2.100004,-92.000099},
	{0.054000,0.006999,0.000000,-88.000061,-2.100004,-92.000099},
	{0.081000,0.020999,0.000000,-88.000061,-2.100004,-92.000099},
	{0.070000,0.010999,0.000000,-88.000061,-2.100004,-92.000099},
	{0.072000,0.030999,0.000000,-88.000061,-2.100004,-92.000099},
	{0.109000,0.023999,0.007000,-88.000061,-2.100004,-92.000099},
	{0.071000,0.029999,-0.001999,-88.000061,-2.100004,-92.000099},
	{0.071000,0.047999,-0.001999,-88.000061,-2.100004,-92.000099},
	{0.051000,0.020999,-0.001999,-88.000061,-2.100004,-92.000099},
	{0.060000,0.020999,-0.001999,-88.000061,-2.100004,-92.000099},
	{0.058000,0.045999,-0.001999,-88.000061,-2.100004,-92.000099},
	{0.076000,0.037999,-0.001999,-88.000061,-2.100004,-92.000099},
	{0.076000,0.044999,-0.001999,-88.000061,-2.100004,-92.000099},
	{0.096000,0.030999,0.000000,-88.000061,-2.100004,-92.000099},
	{0.096000,0.037999,0.000000,-88.000061,-2.100004,-92.000099},
	{0.082000,0.037999,0.004000,-88.000061,-2.100004,-92.000099},
	{0.086000,0.033999,-0.004999,-88.000061,-2.100004,-92.000099},
	{0.062000,0.033999,0.000000,-88.000061,-2.100004,-92.000099},
	{0.077000,0.024999,0.002000,-88.000061,-2.100004,-92.000099},
	{0.088000,0.028999,-0.002999,-88.000061,-2.100004,-92.000099},
	{0.088000,0.034999,0.000000,-88.000061,-2.100004,-92.000099},
	{0.088000,0.014999,0.007000,-88.000061,-2.100004,-92.000099},
	{0.065000,0.027999,-0.002999,-88.000061,-2.100004,-92.000099},
	{0.080000,0.031999,-0.000999,-88.000061,-2.100004,-92.000099},
	{0.083000,0.040999,0.002000,-88.000061,-2.100004,-92.000099},
	{0.083000,0.040999,0.002000,-88.000061,-2.100004,-92.000099},
	{0.083000,0.028999,-0.001999,-88.000061,-2.100004,-92.000099},
	{0.090000,0.010999,-0.001999,-88.000061,-2.100004,-92.000099},
	{0.075000,0.023999,-0.003999,-88.000061,-2.100004,-92.000099},
	{0.056000,0.023999,-0.000999,-88.000061,-2.100004,-92.000099},
	{0.056000,0.038999,-0.000999,-88.000061,-2.100004,-92.000099},
	{0.076000,0.015999,-0.000999,-88.000061,-2.100004,-92.000099},
	{0.094000,0.011999,0.000000,-88.000061,-2.100004,-92.000099},
	{0.094000,0.015999,0.000000,-88.000061,-2.100004,-92.000099},
	{0.094000,0.015999,0.000000,-88.000061,-2.100004,-92.000099},
	{0.094000,0.026999,0.001000,-88.000061,-2.100004,-92.000099},
	{0.094000,0.020999,-0.000999,-88.000061,-2.100004,-92.000099},
	{0.109000,0.022999,-0.000999,-88.000061,-2.100004,-92.000099},
	{0.089000,0.029999,-0.000999,-88.000061,5.599995,-92.000099},
	{0.057000,0.014999,-0.000999,-88.000061,5.599995,-92.000099},
	{0.100000,0.015999,-0.000999,-88.000061,-9.200001,-92.000099},
	{0.100000,0.015999,-0.000999,-88.000061,-9.200001,-92.000099},
	{0.100000,0.015999,-0.000999,-88.000061,-9.200001,-92.000099},
	{0.100000,0.060999,0.005000,-88.000061,-9.200001,-92.000099},
	{0.100000,0.060999,0.005000,-88.000061,-9.200001,-92.000099},
	{0.100000,0.060999,0.005000,-88.000061,-9.200001,-92.000099},
	{0.100000,0.017999,0.000000,-88.000061,-9.200001,-92.000099},
	{0.100000,0.017999,0.000000,-88.000061,-9.200001,-92.000099},
	{0.100000,0.021999,-0.000999,-88.000061,-9.200001,-92.000099},
	{0.100000,0.016999,-0.001000,-88.000061,-9.200000,-92.000099},
	{0.100000,0.047999,0.006000,-88.000061,-9.200001,-92.000099},
	{0.108000,0.036999,0.008000,-88.000061,-9.200001,-92.000099},
	{0.087000,0.016999,-0.000999,-88.000061,-9.200001,-92.000099},
	{0.075000,0.040999,0.007000,-88.000061,-9.200001,-92.000099},
	{0.092000,0.018999,-0.001999,-88.000061,-9.200001,-92.000099},
	{0.090000,0.005999,0.005000,-88.000061,1.699997,-92.000099},
	{0.067000,0.023999,0.000000,-88.000061,1.699997,-92.000099},
	{0.088000,0.023999,-0.001999,-88.000061,1.699997,-92.000099},
	{0.067000,0.014999,-0.005999,-88.000061,1.699997,-92.000099},
	{0.077000,0.020999,-0.005999,-88.000061,1.699997,-92.000099},
	{0.077000,0.014999,-0.001999,-88.000061,1.699997,-92.000099},
	{0.059000,0.024999,-0.001999,-88.000061,1.699997,-92.000099},
	{0.091000,0.032999,-0.001999,-88.000061,1.699997,-92.000099},
	{0.091000,0.032999,0.000000,-88.000061,1.699997,-92.000099},
	{0.091000,0.013999,-0.002999,-88.000061,1.699997,-92.000099},
	{0.091000,0.035999,-0.000999,-88.000061,1.699997,-92.000099},
	{0.092000,0.018999,-0.001999,-88.000061,-9.200001,-92.000099},
	{0.090000,0.005999,0.005000,-88.000061,1.699997,-92.000099},
	{0.067000,0.023999,0.000000,-88.000061,1.699997,-92.000099},
	{0.088000,0.023999,-0.001999,-88.000061,1.699997,-92.000099},
	{0.067000,0.014999,-0.005999,-88.000061,1.699997,-92.000099},
	{0.077000,0.020999,-0.005999,-88.000061,1.699997,-92.000099},
	{0.077000,0.014999,-0.001999,-88.000061,1.699997,-92.000099},
	{0.059000,0.024999,-0.001999,-88.000061,1.699997,-92.000099},
	{0.091000,0.032999,-0.001999,-88.000061,1.699997,-92.000099},
	{0.091000,0.032999,0.000000,-88.000061,1.699997,-92.000099},
	{0.091000,0.013999,-0.002999,-88.000061,1.699997,-92.000099},
	{0.091000,0.035999,-0.000999,-88.000061,1.699997,-92.000099}
};
static const Float:Clock_Massive[312][9] =
{
	{-0.011999, -0.013000, -0.009999, -67.399726, 106.999786, -95.300140, 0.975015, 0.934003, 0.703998},
	{0.003000, -0.002999, -0.010999, 57.300075, 98.299995, 152.699874, 1.036001, 1.214000, 1.000000},
	{0.002000, -0.009999, 0.001000, 40.400089, 98.299995, 152.699874, 1.200001, 1.214000, 0.819999},
	{0.002000, -0.006000, 0.001000, 40.400089, 93.499946, 152.699874, 1.200001, 1.214000, 0.819999},
	{0.016999, -0.002000, -0.004999, 40.400089, 102.699951, 152.699874, 0.872000, 0.926001, 0.819999},
	{0.021000, -0.003000, -0.010999, -54.599830, 102.699951, -95.200134, 1.261001, 1.438001, 0.782999},
	{0.007000, -0.001000, -0.015999, -54.599830, 114.399627, -95.200134, 1.261001, 1.390001, 0.782999},
	{0.042000, -0.006000, -0.014999, -66.999794, 112.699546, -95.200134, 1.429005, 1.337004, 0.782999},
	{0.042000, -0.001000, -0.002999, -66.999794, 112.699546, -95.200134, 1.429005, 1.337004, 0.782999},
	{0.043000, -0.002000, 0.007000, -66.999794, 112.699546, -95.200134, 1.118005, 1.027004, 0.782999},
	{0.012000, -0.029999, 0.007000, -66.999794, 112.699546, -95.200134, 1.118005, 1.027004, 0.782999},
	{0.018000, -0.003999, -0.004999, -66.999794, 112.699546, -95.200134, 0.837005, 0.807005, 0.782999},
	{0.018000, -0.004999, -0.004999, -66.999794, 112.699546, -95.200134, 0.837005, 0.831004, 0.782999},
	{0.013000, -0.004999, -0.008999, -66.999794, 112.699546, -95.200134, 0.774006, 0.986003, 0.782999},
	{0.013000, -0.008999, 0.004000, -66.999794, 112.699546, -95.200134, 0.927006, 1.050004, 0.782999},
	{-0.002999, -0.019999, 0.006000, -66.999794, 112.699546, -95.200134, 1.080006, 1.013005, 0.782999},
	{0.043000, 0.001000, -0.010999, -67.599784, 114.999702, -89.700180, 1.472005, 1.303005, 0.856999},
	{0.017000, -0.010999, 0.000000, -67.599784, 114.999702, -95.300140, 1.279007, 0.906005, 0.856999},
	{-0.006999, -0.016999, 0.002000, -70.199684, 106.999786, -95.300140, 1.011008, 0.828005, 0.731999},
	{0.000000, -0.005999, 0.002000, -70.199684, 106.999786, -95.300140, 1.209009, 1.121006, 0.991999},
	{-0.006999, -0.002999, -0.012999, -70.199684, 106.999786, -95.300140, 1.231009, 0.889003, 0.899000},
	{0.004000, -0.006999, -0.011999, -70.199684, 106.999786, -95.300140, 1.390012, 1.010003, 0.899000},
	{0.024000, -0.006999, -0.011999, -64.199737, 106.999786, -95.300140, 1.359013, 1.322002, 0.899000},
	{0.016000, -0.003999, -0.011999, -64.199737, 106.999786, -95.300140, 1.011013, 1.039001, 0.899000},
	{-0.010999, -0.005999, -0.011999, -64.199737, 106.999786, -95.300140, 1.330013, 1.084002, 0.899000},
	{-0.010999, -0.006999, -0.011999, -64.199737, 106.999786, -95.300140, 1.330013, 1.084002, 0.899000},
	{-0.010999, -0.006999, 0.001000, -64.199737, 106.999786, -95.300140, 0.986012, 0.911001, 0.899000},
	{-0.004999, -0.006999, -0.010999, -64.199737, 106.999786, -95.300140, 1.350012, 1.079000, 0.909999},
	{0.012000, 0.000000, -0.014999, -64.199737, 106.999786, -95.300140, 1.309012, 0.977000, 0.909999},
	{0.022000, 0.005000, -0.014999, -64.199737, 106.999786, -95.300140, 1.560014, 1.158002, 0.909999},
	{0.009000, -0.006999, -0.012999, -64.199737, 106.999786, -95.300140, 1.256014, 1.006001, 0.861000},
	{0.017000, -0.046999, -0.002999, -64.199737, 106.999786, -95.300140, 1.256014, 1.006001, 0.861000},
	{0.017000, -0.008999, -0.020999, -64.199737, 106.999786, -95.300140, 1.092014, 0.727001, 0.861000},
	{0.046000, 0.001000, -0.018999, -67.399726, 106.999786, -95.300140, 1.416015, 0.774001, 0.435999},
	{0.020000, -0.003999, -0.002999, -67.399726, 106.999786, -95.300140, 1.294015, 0.917000, 0.435999},
	{-0.028999, -0.001999, -0.007999, -67.399726, 106.999786, -95.300140, 1.140016, 0.917000, 0.435999},
	{-0.028999, -0.001999, -0.008999, -67.399726, 106.999786, -95.300140, 1.140016, 0.851001, 0.435999},
	{-0.034999, -0.004999, -0.003999, -67.399726, 106.999786, -95.300140, 1.140016, 0.851001, 0.435999},
	{0.016000, -0.004999, -0.002999, -67.399726, 106.999786, -95.300140, 1.140016, 0.851001, 0.540999},
	{0.015000, -0.018000, -0.002999, -67.399726, 106.999786, -95.300140, 1.140016, 0.851001, 0.540999},
	{0.015000, -0.004000, -0.005999, -67.399726, 106.999786, -95.300140, 0.953014, 0.939999, 0.677998},
	{0.015000, -0.009000, -0.005999, -67.399726, 106.999786, -95.300140, 0.953014, 0.939999, 0.677998},
	{0.015000, -0.009000, 0.005000, -67.399726, 106.999786, -95.300140, 1.098014, 1.028999, 0.677998},
	{0.015000, -0.009000, 0.005000, -67.399726, 106.999786, -95.300140, 1.098014, 1.028999, 0.677998},
	{0.015000, -0.003000, -0.006999, -67.399726, 106.999786, -95.300140, 0.985014, 0.753999, 0.677998},
	{0.015000, -0.016000, -0.001999, -67.399726, 106.999786, -95.300140, 1.186015, 0.949998, 0.709998},
	{0.015000, -0.005000, -0.005999, -67.399726, 106.999786, -95.300140, 1.184017, 1.102998, 0.709998},
	{0.008000, -0.008000, -0.009999, -67.399726, 106.999786, -95.300140, 1.197018, 1.125999, 0.709998},
	{0.008000, -0.009000, -0.008999, -67.399726, 106.999786, -95.300140, 1.197018, 1.125999, 0.709998},
	{0.008000, -0.007000, -0.004999, -67.399726, 106.999786, -95.300140, 0.936015, 0.882998, 0.709998},
	{0.027000, -0.006000, -0.002999, -67.399726, 106.999786, -95.300140, 1.439015, 1.345000, 0.679998},
	{0.027000, -0.001000, -0.003999, -67.399726, 106.999786, -95.300140, 1.176016, 1.165001, 0.679998},
	{0.027000, -0.001000, -0.003999, -67.399726, 106.999786, -95.300140, 1.176016, 1.165001, 0.679998},
	{0.025000, -0.004000, -0.001999, -67.399726, 106.999786, -95.300140, 1.176016, 1.165001, 0.679998},
	{0.019000, -0.011000, 0.030000, -67.399726, 106.999786, -95.300140, 1.176016, 1.165001, 0.679998},
	{0.018000, 0.000999, -0.005999, -67.399726, 106.999786, -95.300140, 0.832016, 0.750001, 0.565998},
	{0.025000, -0.009000, -0.005999, -67.399726, 106.999786, -95.300140, 0.913016, 1.166001, 0.675997},
	{0.025000, 0.002999, 0.003000, -67.399726, 106.999786, -95.300140, 0.913016, 0.912001, 0.675997},
	{0.021000, -0.006000, -0.005999, -67.399726, 106.999786, -95.300140, 0.913016, 0.912001, 0.675997},
	{0.012000, -0.005000, -0.004999, -67.399726, 106.999786, -95.300140, 1.176016, 1.048001, 0.675997},
	{0.012000, -0.009000, -0.013999, -67.399726, 106.999786, -95.300140, 1.268016, 1.119002, 0.675997},
	{0.037000, -0.002000, -0.006999, -67.399726, 106.999786, -95.300140, 1.239016, 1.045002, 0.675997},
	{0.034000, -0.002000, -0.010999, -67.399726, 106.999786, -95.300140, 1.448017, 1.088003, 0.675997},
	{0.034000, -0.000000, -0.007999, -67.399726, 106.999786, -95.300140, 1.025017, 0.910003, 0.675997},
	{0.026000, -0.001000, -0.013999, -67.399726, 106.999786, -95.300140, 0.941016, 0.910003, 0.675997},
	{0.015000, -0.007000, -0.009999, -67.399726, 106.999786, -95.300140, 0.736016, 0.891003, 0.675997},
	{-0.000999, -0.010000, -0.007999, -67.399726, 106.999786, -95.300140, 1.180016, 1.144003, 0.675997},
	{-0.000999, -0.011000, -0.007999, -67.399726, 106.999786, -95.300140, 1.142017, 1.065003, 0.675997},
	{0.041000, -0.003000, -0.003999, -67.399726, 106.999786, -95.300140, 1.205017, 1.098003, 0.675997},
	{0.020000, -0.003000, -0.003999, -67.399726, 106.999786, -95.300140, 0.831017, 0.885003, 0.675997},
	{0.020000, -0.007000, -0.011999, -67.399726, 106.999786, -95.300140, 1.615016, 1.181003, 0.675997},
	{0.020000, -0.006000, -0.010999, -67.399726, 106.999786, -95.300140, 1.561015, 1.156003, 0.675997},
	{0.006000, -0.009000, -0.008999, -67.399726, 106.999786, -95.300140, 1.235015, 0.893004, 0.675997},
	{0.006000, -0.009000, -0.008999, -67.399726, 106.999786, -95.300140, 1.235015, 0.893004, 0.675997},
	{-0.011999, -0.013000, -0.009999, -67.399726, 106.999786, -95.300140, 0.975015, 0.934003, 0.703998},
	{0.009000, -0.012000, -0.004999, -67.399726, 106.999786, -95.300140, 0.701015, 0.889004, 0.703998},
	{0.034999, -0.006000, -0.006999, -67.399726, 106.999786, -95.300140, 0.938014, 0.933003, 0.571998},
	{0.009999, -0.006000, 0.002000, -67.399726, 106.999786, -95.300140, 1.321014, 1.225003, 0.571998},
	{0.009999, -0.017000, -0.000999, -67.399726, 106.999786, -95.300140, 1.433015, 0.998003, 0.571998},
	{0.013999, -0.015000, -0.000999, -67.399726, 106.999786, -95.300140, 1.286015, 1.296005, 0.571998},
	{-0.021000, -0.002000, 0.000000, -67.399726, 106.999786, -95.300140, 0.949015, 0.808005, 1.104997},
	{-0.021000, -0.002000, 0.000000, -67.399726, 106.999786, -95.300140, 0.949015, 0.808005, 1.104997},
	{0.011999, -0.010000, -0.034999, -67.399726, 106.999786, -95.300140, 1.139014, 1.116005, 1.108998},
	{0.011999, -0.014000, -0.021999, -67.399726, 106.999786, -95.300140, 1.235015, 1.152006, 1.108998},
	{0.027999, -0.007000, -0.014999, -67.399726, 106.999786, -95.300140, 1.281015, 1.152006, 1.108998},
	{0.027999, -0.007000, -0.014999, -67.399726, 106.999786, -95.300140, 1.281015, 1.152006, 1.108998},
	{0.000999, -0.011000, -0.002999, -67.399726, 106.999786, -95.300140, 1.125015, 0.998006, 1.171996},
	{0.000999, -0.008000, -0.002999, -67.399726, 106.999786, -95.300140, 0.765015, 0.772005, 0.894997},
	{0.038999, -0.010000, 0.009000, -67.399726, 106.999786, -95.300140, 1.437014, 1.106004, 0.599996},
	{0.037999, -0.028000, -0.003999, -67.399726, 106.999786, -95.300140, 1.437014, 1.106004, 0.599996},
	{0.024999, -0.002000, -0.005999, -67.399726, 106.999786, -95.300140, 0.977014, 0.866004, 0.599996},
	{0.001999, -0.009000, -0.000999, -67.399726, 106.999786, -95.300140, 0.688014, 0.866004, 0.599996},
	{0.001999, -0.004000, -0.002999, -67.399726, 106.999786, -95.300140, 0.724013, 0.915004, 0.599996},
	{0.013999, -0.004000, -0.005999, -67.399726, 106.999786, -95.300140, 0.804013, 0.915004, 0.599996},
	{-0.007000, -0.009000, -0.001999, -67.399726, 106.999786, -95.300140, 0.761014, 0.703004, 0.983995},
	{-0.007000, -0.009000, -0.001999, -67.399726, 106.999786, -95.300140, 0.761014, 0.703004, 0.983995},
	{0.011999, -0.017000, 0.001000, -67.399726, 106.999786, -95.300140, 0.952013, 1.003004, 1.075995},
	{0.036999, -0.048000, -0.000999, -67.399726, 106.999786, -95.300140, 1.154013, 1.018004, 1.075995},
	{-0.016000, -0.004000, -0.006999, -67.399726, 106.999786, -95.300140, 1.081014, 1.119005, 1.075995},
	{-0.008000, -0.005000, -0.000999, -67.399726, 106.999786, -95.300140, 1.081014, 1.119005, 1.075995},
	{0.019999, -0.008000, -0.010999, -67.399726, 106.999786, -95.300140, 1.343015, 1.087005, 1.086996},
	{0.006999, -0.006000, -0.008999, -67.399726, 106.999786, -95.300140, 1.403015, 1.112006, 1.086996},
	{-0.001000, -0.006000, -0.008999, -67.399726, 106.999786, -95.300140, 1.193015, 1.085006, 1.086996},
	{0.054999, -0.001000, -0.011999, -67.399726, 106.999786, -95.300140, 1.415016, 1.204007, 1.086996},
	{0.013999, -0.010000, -0.008999, -67.399726, 106.999786, -95.300140, 1.160016, 1.031006, 1.086996},
	{0.028999, -0.000000, -0.008999, -67.399726, 106.999786, -95.300140, 1.218017, 1.051007, 1.185996},
	{0.018999, -0.009000, -0.007999, -67.399726, 106.999786, -95.300140, 1.202017, 1.050007, 1.185996},
	{0.006999, -0.004000, -0.010999, -67.399726, 106.999786, -95.300140, 1.153019, 0.998007, 1.185996},
	{-0.006000, 0.003999, -0.004999, -67.399726, 106.999786, -95.300140, 1.131020, 0.980006, 1.185996},
	{0.007999, -0.009000, -0.008999, -67.399726, 106.999786, -95.300140, 1.192020, 1.090007, 1.185996},
	{0.007999, -0.009000, -0.009999, -67.399726, 106.999786, -95.300140, 1.192020, 1.090007, 1.185996},
	{-0.009000, -0.009000, -0.002999, -67.399726, 106.999786, -95.300140, 1.269021, 1.151007, 1.182996},
	{0.013999, -0.007000, 0.008000, -67.399726, 106.999786, -95.300140, 1.262021, 1.012006, 1.182996},
	{0.031999, -0.003000, -0.006999, -67.399726, 106.999786, -95.300140, 1.376021, 1.071007, 1.182996},
	{0.014999, -0.010000, -0.014999, -67.399726, 106.999786, -95.300140, 1.302019, 1.195007, 1.182996},
	{0.050999, -0.003000, -0.014999, -67.399726, 106.999786, -95.300140, 1.398020, 1.258007, 1.205996},
	{-0.002000, -0.007000, -0.003999, 101.900054, 66.299934, 96.499961, 1.072001, 0.966998, 1.169000},
	{0.004999, -0.008000, -0.007000, 101.900054, 66.299934, 96.499961, 1.072001, 0.966998, 1.169000},
	{0.004999, -0.008000, -0.007000, 101.900054, 66.299934, 96.499961, 1.072001, 0.966998, 1.169000},
	{-0.011000, -0.012000, -0.000999, 101.900054, 66.299934, 96.499961, 1.072001, 0.966998, 1.169000},
	{0.033000, -0.006000, -0.000999, 103.499969, 66.299934, 88.900016, 1.195002, 1.003998, 1.169000},
	{0.011000, -0.004000, -0.003999, 103.499969, 66.299934, 88.900016, 1.195002, 1.003998, 1.169000},
	{0.002000, 0.001999, 0.000000, 103.499969, 66.299934, 88.900016, 1.058002, 0.948998, 1.169000},
	{0.010000, 0.001999, 0.000000, 103.499969, 66.299934, 88.900016, 1.058002, 0.948998, 1.169000},
	{0.010000, -0.010000, -0.001999, 103.499969, 66.299934, 88.900016, 1.058002, 0.948998, 1.169000},
	{0.010000, -0.013000, -0.000999, 103.499969, 66.299934, 88.900016, 1.153001, 0.980999, 1.169000},
	{0.005000, -0.007000, 0.001000, 103.499969, 66.299934, 88.900016, 1.153001, 0.949998, 1.169000},
	{0.032000, -0.004000, -0.002999, 103.499969, 66.299934, 88.900016, 1.432002, 1.137000, 1.161000},
	{0.003000, 0.002000, -0.003999, 103.499969, 66.299934, 88.900016, 1.247002, 0.940000, 1.161000},
	{0.016000, 0.002000, -0.003999, 103.499969, 66.299934, 88.900016, 1.167001, 0.940000, 1.161000},
	{0.004000, -0.023000, 0.007000, 103.499969, 66.299934, 88.900016, 1.167001, 0.940000, 1.161000},
	{0.004000, -0.010000, -0.003999, 103.499969, 66.299934, 88.900016, 0.614000, 0.775999, 0.781000},
	{0.004000, -0.009000, -0.014000, 103.499969, 66.299934, 88.900016, 0.691000, 0.775999, 0.781000},
	{0.020000, -0.008000, 0.001000, 103.499969, 66.299934, 88.900016, 1.043001, 0.864999, 0.781000},
	{0.020000, -0.006000, -0.003999, 103.499969, 66.299934, 88.900016, 1.019001, 0.843999, 0.781000},
	{0.034000, -0.005000, -0.006999, 103.499969, 66.299934, 88.900016, 1.267001, 0.924999, 0.781000},
	{0.042999, -0.011000, -0.014999, 103.499969, 66.299934, 88.900016, 1.267001, 0.924999, 0.781000},
	{0.031000, 0.004999, -0.010999, 103.499969, 66.299934, 88.900016, 1.202003, 0.780999, 0.781000},
	{0.031000, -0.000000, -0.006999, 103.499969, 66.299934, 88.900016, 1.202003, 0.780999, 0.781000},
	{0.031000, 0.007999, -0.006999, 103.499969, 66.299934, 88.900016, 0.929003, 1.010997, 0.781000},
	{0.027000, -0.001000, -0.003999, 103.499969, 66.299934, 88.900016, 0.908003, 0.910997, 0.781000},
	{0.033999, -0.005000, -0.004999, 103.499969, 66.299934, 88.900016, 0.908003, 0.910997, 0.781000},
	{-0.013000, -0.011000, -0.006999, 103.499969, 66.299934, 88.900016, 1.053003, 1.080998, 0.796001},
	{0.043000, -0.003000, -0.010999, 103.499969, 66.299934, 88.900016, 1.572003, 1.446999, 0.611002},
	{0.002000, -0.009000, -0.007999, 103.499969, 66.299934, 88.900016, 1.188004, 1.101999, 0.932002},
	{0.002000, -0.009000, -0.000999, 103.499969, 66.299934, 88.900016, 0.777004, 0.615999, 0.645002},
	{0.002000, -0.005000, 0.002000, 103.499969, 66.299934, 88.900016, 1.128005, 0.827998, 0.645002},
	{0.033000, -0.012000, 0.001000, 103.499969, 66.299934, 88.900016, 1.306005, 0.939998, 0.645002},
	{0.049000, -0.000000, -0.008999, 103.499969, 66.299934, 88.900016, 1.306005, 0.939998, 0.645002},
	{-0.003999, -0.010000, -0.000999, 103.499969, 66.299934, 88.900016, 1.219006, 0.827999, 0.645002},
	{0.053999, -0.010000, -0.006999, 103.499969, 66.299934, 88.900016, 0.860006, 0.720998, 0.645002},
	{0.022000, -0.014000, -0.006999, 103.499969, 66.299934, 88.900016, 0.910006, 0.809998, 0.645002},
	{0.022000, -0.009000, 0.001000, 103.499969, 66.299934, 88.900016, 0.772005, 0.697998, 0.645002},
	{0.002000, -0.012000, 0.000000, 103.499969, 66.299934, 88.900016, 1.290005, 0.574998, 1.262002},
	{-0.003999, -0.023000, 0.002000, 103.499969, 66.299934, 88.900016, 0.957006, 0.875998, 1.262002},
	{-0.003999, -0.012000, -0.005999, 103.499969, 66.299934, 88.900016, 1.010005, 0.928998, 1.262002},
	{0.015000, -0.010000, 0.001000, 103.499969, 66.299934, 88.900016, 1.010005, 0.928998, 1.262002},
	{0.009000, 0.000999, -0.009999, 103.499969, 66.299934, 88.900016, 0.798004, 0.774998, 0.639001},
	{0.027000, -0.004000, -0.009999, 103.499969, 66.299934, 88.900016, 1.341004, 0.795997, 0.639001},
	{0.027000, -0.002000, -0.004999, 103.499969, 66.299934, 88.900016, 1.141005, 0.982997, 0.639001},
	{0.005000, -0.011000, 0.007000, 103.499969, 66.299934, 88.900016, 1.141005, 0.982997, 0.639001},
	{-0.013999, -0.006000, -0.013999, 103.499969, 66.299934, 88.900016, 1.317005, 0.903997, 1.452002},
	{0.035000, 0.000999, -0.001999, 103.499969, 66.299934, 88.900016, 1.317005, 0.903997, 1.452002},
	{0.001000, -0.005000, -0.006999, 103.499969, 66.299934, 88.900016, 1.515007, 0.939997, 1.452002},
	{0.004000, -0.010000, -0.004999, 103.499969, 66.299934, 88.900016, 1.515007, 0.939997, 1.452002},
	{-0.006999, 0.000999, -0.006999, 103.499969, 66.299934, 88.900016, 1.515007, 0.939997, 1.452002},
	{-0.006999, -0.001000, -0.003999, 103.499969, 66.299934, 88.900016, 1.426007, 0.939997, 1.452002},
	{-0.006999, -0.007000, 0.000000, 103.499969, 66.299934, 88.900016, 1.426007, 0.939997, 1.452002},
	{-0.006999, -0.007000, -0.000999, 103.499969, 66.299934, 88.900016, 1.271006, 1.020997, 1.452002},
	{0.010000, -0.007000, -0.000999, 103.499969, 66.299934, 88.900016, 1.009006, 1.016996, 0.992002},
	{0.003000, -0.012000, -0.008999, 103.499969, 66.299934, 88.900016, 1.157006, 1.139996, 0.992002},
	{0.029000, -0.000000, 0.000000, 103.499969, 66.299934, 88.900016, 1.211006, 0.909997, 0.992002},
	{0.013999, -0.000000, -0.001999, 103.499969, 66.299934, 88.900016, 0.784005, 0.885997, 0.992002},
	{0.013999, -0.009000, -0.008999, 103.499969, 66.299934, 88.900016, 1.283006, 1.190998, 0.992002},
	{0.013999, -0.009000, -0.008999, 103.499969, 66.299934, 88.900016, 1.283006, 1.190998, 0.992002},
	{0.013999, -0.009000, -0.008999, 103.499969, 66.299934, 88.900016, 1.283006, 1.190998, 0.992002},
	{0.013999, -0.009000, -0.009999, 103.499969, 66.299934, 88.900016, 1.217007, 1.190998, 0.992002},
	{0.019999, -0.008000, -0.006999, 103.499969, 66.299934, 88.900016, 1.217007, 1.190998, 0.992002},
	{0.019999, -0.008000, -0.006999, 103.499969, 66.299934, 88.900016, 1.058007, 0.879998, 0.992002},
	{0.002999, -0.007000, -0.011999, 103.499969, 66.299934, 88.900016, 1.315007, 0.941998, 0.992002},
	{0.002999, -0.009000, -0.009999, 103.499969, 66.299934, 88.900016, 1.230008, 0.941998, 0.992002},
	{0.002999, -0.009000, 0.005000, 103.499969, 66.299934, 88.900016, 1.230008, 0.941998, 0.992002},
	{0.035999, -0.003000, -0.005999, 103.499969, 66.299934, 88.900016, 1.269009, 0.941998, 0.992002},
	{0.017000, -0.003000, -0.003999, 103.499969, 66.299934, 88.900016, 1.269009, 0.941998, 0.992002},
	{0.005999, -0.009000, -0.009999, 103.499969, 66.299934, 88.900016, 1.269009, 0.941998, 0.992002},
	{0.005999, -0.001000, 0.000000, 103.499969, 66.299934, 88.900016, 1.269009, 0.941998, 0.992002},
	{0.034000, -0.003000, -0.003999, 103.499969, 66.299934, 88.900016, 1.269009, 0.941998, 0.992002},
	{0.035000, -0.018000, 0.003000, 103.499969, 66.299934, 88.900016, 1.240010, 0.943998, 1.300001},
	{0.019000, 0.002999, -0.006999, 103.499969, 66.299934, 88.900016, 1.242010, 1.052998, 1.300001},
	{0.031000, -0.000000, -0.001999, 103.499969, 66.299934, 88.900016, 1.242010, 1.052998, 1.300001},
	{0.028000, -0.001000, -0.005999, 103.499969, 66.299934, 88.900016, 1.033010, 0.931998, 0.679001},
	{0.028000, -0.001000, -0.005999, 103.499969, 66.299934, 88.900016, 1.033010, 0.931998, 0.679001},
	{0.028000, -0.001000, -0.005999, 103.499969, 66.299934, 88.900016, 1.033010, 0.931998, 0.679001},
	{0.028000, -0.001000, -0.005999, 103.499969, 66.299934, 88.900016, 1.033010, 0.931998, 0.679001},
	{0.028000, -0.001000, -0.005999, 103.499969, 66.299934, 88.900016, 1.033010, 0.931998, 0.679001},
	{0.015000, -0.005000, -0.005999, 103.499969, 66.299934, 88.900016, 1.112011, 0.963997, 0.670002},
	{-0.000000, -0.009000, -0.003000, -158.500091, 94.399971, -14.099988, 0.820000, 0.836000, 1.000000},
	{-0.000000, -0.009000, 0.009999, -158.500091, 94.399971, -14.099988, 1.133001, 1.150000, 1.000000},
	{-0.000000, -0.009000, -0.005000, -158.500091, 94.399971, -14.099988, 0.596001, 0.961999, 1.000000},
	{-0.000000, 0.004999, 0.006999, -158.500091, 94.399971, -14.099988, 1.076000, 1.401000, 1.000000},
	{0.023000, -0.000000, -0.000000, 83.299957, 65.199928, 105.599807, 0.936000, 1.239999, 1.000000},
	{0.007000, -0.008000, -0.009000, 83.299957, 65.199928, 105.599807, 0.565000, 0.889999, 1.000000},
	{0.007000, -0.008000, 0.000999, 99.199737, 65.199928, 105.599807, 0.925999, 0.904999, 1.389002},
	{0.016000, -0.009000, -0.013000, 99.199737, 65.199928, 105.599807, 1.254999, 1.041998, 1.389002},
	{0.016000, -0.009000, -0.013000, 99.199737, 65.199928, 105.599807, 1.254999, 1.041998, 1.389002},
	{0.016000, -0.009000, -0.013000, 99.199737, 65.199928, 105.599807, 1.023999, 1.041998, 1.389002},
	{0.016000, -0.006000, -0.001000, 99.199737, 65.199928, 105.599807, 1.023999, 1.041998, 1.389002},
	{0.015000, -0.006000, -0.004000, 99.199737, 65.199928, 105.599807, 0.842999, 1.041998, 0.664002},
	{0.013999, 0.002999, -0.006000, 101.999580, 65.199928, 105.599807, 1.191999, 1.117999, 1.951003},
	{0.001999, -0.008000, -0.021000, 101.999580, 65.199928, 105.599807, 0.881000, 0.830999, 1.951003},
	{0.001999, -0.008000, -0.000000, 101.999580, 65.199928, 105.599807, 0.881000, 0.830999, 1.951003},
	{0.008000, -0.008000, -0.007000, 101.999580, 65.199928, 105.599807, 0.782001, 0.830999, 0.857003},
	{0.008000, -0.015000, -0.024000, 101.999580, 65.199928, 105.599807, 0.782001, 0.830999, 0.857003},
	{0.016000, -0.008000, -0.005000, 92.599662, 70.799713, 105.599807, 1.218000, 0.865000, 2.642003},
	{0.003999, -0.008000, -0.005000, 92.599662, 82.699592, 105.599807, 0.839001, 0.865000, 0.660002},
	{0.003999, -0.008000, -0.005000, 92.599662, 82.699592, 105.599807, 0.839001, 0.865000, 0.660002},
	{0.003999, -0.008000, -0.005000, 92.599662, 82.699592, 105.599807, 0.839001, 0.865000, 0.660002},
	{0.009999, -0.001000, -0.006000, 92.599662, 76.799636, 105.599807, 1.187002, 0.960000, 1.796002},
	{0.003999, -0.024000, -0.004000, 92.599662, 76.799636, 105.599807, 1.187002, 0.987999, 0.888001},
	{0.035999, -0.004000, -0.009000, 92.599662, 76.799636, 105.599807, 0.992001, 0.991999, 0.888001},
	{0.021999, -0.005000, -0.006000, 92.599662, 76.799636, 105.599807, 1.291002, 1.047999, 1.496001},
	{0.021999, -0.007000, -0.004000, 92.599662, 76.799636, 105.599807, 1.291002, 1.047999, 1.496001},
	{0.021999, -0.007000, -0.006000, 92.599662, 76.799636, 105.599807, 1.264001, 1.007998, 1.496001},
	{-0.006000, -0.007000, -0.004000, 92.599662, 76.799636, 105.599807, 1.099002, 0.890999, 1.790998},
	{0.004999, -0.010000, -0.004000, 92.599662, 76.799636, 105.599807, 0.770003, 1.108999, 0.901999},
	{0.016999, -0.005000, -0.004000, 92.599662, 76.799636, 105.599807, 0.770003, 1.108999, 0.901999},
	{0.008999, -0.005000, -0.004000, 92.599662, 76.799636, 105.599807, 0.770003, 1.108999, 0.901999},
	{0.021999, 0.000999, 0.002999, 92.599662, 64.599517, 97.899848, 1.017003, 1.112999, 2.296998},
	{0.011999, -0.009000, 0.000999, 92.599662, 64.599517, 97.899848, 1.201004, 1.112999, 2.296998},
	{0.011999, -0.009000, -0.002000, 92.599662, 64.599517, 97.899848, 0.836005, 0.745999, 2.255998},
	{-0.000000, -0.002000, -0.002000, 92.599662, 64.599517, 97.899848, 0.648005, 0.458999, 2.255998},
	{0.011999, -0.002000, -0.002000, 92.599662, 64.599517, 97.899848, 0.979005, 0.953999, 1.253998},
	{0.011999, -0.025000, -0.009000, 92.599662, 64.599517, 97.899848, 0.979005, 0.953999, 1.253998},
	{0.018999, -0.004000, -0.002000, 92.599662, 64.599517, 97.899848, 0.979005, 0.953999, 0.566998},
	{0.018999, -0.004000, -0.005000, 92.599662, 64.599517, 97.899848, 0.979005, 0.953999, 1.326998},
	{0.015999, -0.008000, -0.005000, 92.599662, 64.599517, 97.899848, 0.979005, 0.953999, 1.326998},
	{0.015999, -0.003000, -0.005000, 92.599662, 64.599517, 97.899848, 0.979005, 0.790999, 1.326998},
	{0.022999, -0.006000, 0.001999, 92.599662, 64.599517, 97.899848, 0.979005, 0.790999, 0.678998},
	{0.022999, -0.005000, -0.010000, 92.599662, 64.599517, 97.899848, 0.979005, 0.896999, 0.678998},
	{0.007999, -0.015000, -0.000000, 92.599662, 64.599517, 97.899848, 1.311004, 0.896999, 1.446998},
	{-0.008000, -0.011000, -0.001000, 92.599662, 64.599517, 97.899848, 1.060005, 0.896999, 1.475999},
	{0.014999, -0.008000, -0.005000, 92.599662, 64.599517, 97.899848, 1.369004, 1.220998, 2.176999},
	{0.004999, -0.005000, -0.003000, 92.599662, 77.199577, 97.899848, 1.369004, 1.220998, 2.176999},
	{0.004999, -0.005000, -0.003000, 92.599662, 77.199577, 97.899848, 0.915005, 1.220998, 0.764998},
	{0.004999, -0.005000, -0.003000, 92.599662, 77.199577, 97.899848, 0.719005, 1.220998, 0.764998},
	{0.022999, -0.007000, -0.003000, 92.599662, 77.199577, 97.899848, 0.895005, 1.341998, 0.764998},
	{0.008999, -0.007000, -0.003000, 92.599662, 77.199577, 97.899848, 0.895005, 1.341998, 0.764998},
	{0.008999, -0.014000, -0.011000, 92.599662, 77.199577, 97.899848, 1.127005, 1.216998, 1.722998},
	{0.008999, 0.002999, -0.011000, 92.599662, 77.199577, 97.899848, 0.864005, 0.988998, 1.722998},
	{0.057999, -0.015000, -0.005000, 92.599662, 77.199577, 97.899848, 1.352005, 0.965998, 1.722998},
	{0.009999, -0.012000, -0.013000, 147.899963, 93.499900, 49.400009, 1.165000, 1.097000, 1.212000},
	{0.009999, -0.006999, -0.003999, 147.899963, 93.499900, 49.400009, 0.728999, 1.024999, 0.636999},
	{0.038999, 0.000000, -0.003999, 147.899963, 93.499900, 49.400009, 0.992999, 1.106000, 1.263000},
	{0.004999, -0.007999, -0.003999, 147.899963, 79.300010, 49.400009, 0.855999, 0.899000, 1.263000},
	{0.018999, -0.010999, -0.010999, 147.899963, 79.300010, 49.400009, 1.134999, 1.096000, 1.263000},
	{0.003999, -0.017000, -0.002999, 147.899963, 90.999877, 49.400009, 1.169998, 1.096000, 1.263000},
	{0.016999, -0.003999, -0.007999, 147.899963, 90.999877, 49.400009, 0.739999, 1.096000, 0.567000},
	{0.002999, -0.007999, -0.007999, 147.899963, 90.999877, 49.400009, 0.771000, 1.263000, 0.567000},
	{-0.010000, -0.008999, 0.000000, 147.899963, 90.999877, 49.400009, 1.118000, 1.263000, 1.122000},
	{-0.002000, -0.008999, 0.000000, 147.899963, 75.499893, 49.400009, 1.118000, 1.263000, 1.122000},
	{0.006999, -0.001999, -0.006999, 158.699966, 83.899810, 49.400009, 1.118000, 1.263000, 1.122000},
	{0.012999, 0.001000, -0.001999, 162.400024, 86.699798, 43.600021, 0.964000, 1.083999, 1.122000},
	{0.024999, -0.005999, -0.005999, 162.400024, 86.699798, 33.600040, 1.256001, 1.164000, 1.122000},
	{0.024999, -0.001999, -0.005999, 162.400024, 86.699798, 45.000026, 0.887001, 1.164000, 0.678000},
	{0.009999, -0.002999, -0.002999, 162.400024, 86.699798, 45.000026, 1.289002, 1.563001, 1.142001},
	{0.005999, 0.003000, 0.002000, 162.400024, 86.699798, 45.000026, 1.029001, 1.184000, 1.142001},
	{0.001999, -0.013000, 0.001000, 162.400024, 80.399803, 31.600028, 1.029001, 1.035000, 1.142001},
	{0.005999, -0.003999, 0.001000, 162.400024, 85.699768, 41.900024, 1.029001, 0.954000, 1.142001},
	{-0.010000, -0.006999, -0.003999, 162.400024, 85.699768, 36.400028, 1.100001, 1.072000, 1.142001},
	{0.005999, -0.016000, -0.001999, 162.400024, 85.699768, 36.400028, 1.100001, 1.072000, 1.142001},
	{-0.000000, -0.006999, -0.014999, 162.400024, 98.199661, 30.100025, 1.023001, 1.072000, 1.151001},
	{0.000999, -0.010999, -0.001999, 147.000183, 73.299652, 56.700008, 1.023001, 1.072000, 1.151001},
	{0.039999, -0.014000, -0.001999, 146.900268, 82.699615, 51.000003, 1.260000, 1.179999, 1.151001},
	{0.000999, -0.004999, -0.002999, 146.900268, 82.699615, 51.000003, 1.100000, 1.065999, 1.151001},
	{0.015999, -0.010999, -0.002999, 146.900268, 82.699615, 51.000003, 1.150000, 1.161999, 1.235001},
	{0.015999, -0.012000, -0.002999, 146.900268, 82.699615, 51.000003, 1.150000, 1.161999, 1.235001},
	{0.015999, -0.012000, -0.002999, 146.900268, 82.699615, 51.000003, 1.150000, 1.161999, 1.235001},
	{0.014999, -0.027000, -0.003999, 146.900268, 94.999534, 53.499984, 1.417002, 1.394001, 1.235001},
	{0.014999, -0.027000, -0.003999, 146.900268, 94.999534, 53.499984, 1.417002, 1.394001, 1.235001},
	{0.014999, -0.027000, -0.003999, 146.900268, 94.999534, 53.499984, 1.417002, 1.394001, 1.235001},
	{0.001999, -0.013000, -0.000999, 146.900268, 87.699539, 45.699996, 1.061002, 1.229000, 1.235001},
	{-0.003000, -0.010000, -0.000999, 146.900268, 78.899475, 53.800003, 1.061002, 1.174999, 1.235001},
	{0.000999, -0.012000, -0.000999, 146.900268, 78.899475, 53.800003, 1.061002, 1.174999, 1.235001},
	{0.000999, -0.010000, -0.000999, 146.900268, 78.899475, 53.800003, 1.061002, 1.174999, 1.235001},
	{0.033999, -0.010000, -0.009999, 131.700286, 87.499328, 60.499984, 1.416001, 1.037999, 0.934002},
	{-0.012000, -0.009000, 0.001000, 131.700286, 87.499328, 67.400032, 1.286000, 1.180999, 1.260002},
	{0.031999, -0.007000, -0.012999, 131.700286, 87.499328, 67.400032, 1.554001, 1.315000, 1.260002},
	{0.005999, -0.030000, 0.006000, 131.700286, 87.499328, 67.400032, 1.339000, 1.164000, 1.260002},
	{0.009999, -0.009000, -0.006999, 131.700286, 87.499328, 61.500015, 1.264000, 1.210000, 1.260002},
	{-0.005000, -0.003000, -0.001999, 131.700286, 83.099372, 72.600006, 1.130000, 0.997000, 1.262002},
	{0.023999, -0.018000, 0.001000, 131.700286, 82.999374, 65.000030, 1.130000, 1.095000, 1.262002},
	{-0.002000, -0.010000, -0.001999, 131.700286, 82.999374, 65.000030, 1.133999, 1.055999, 1.262002},
	{0.021999, -0.004000, 0.000000, 131.700286, 82.999374, 65.000030, 1.133999, 1.055999, 1.262002},
	{0.007999, -0.013000, -0.011999, 137.000259, 81.499336, 55.100032, 1.133999, 1.055999, 1.262002},
	{0.022999, -0.004000, -0.018999, 137.000259, 97.899246, 59.800006, 1.289999, 1.289000, 1.262002},
	{-0.003000, -0.008000, -0.003999, 137.000259, 97.899246, 59.800006, 1.386999, 1.180000, 1.262002},
	{-0.008000, -0.003000, -0.007999, 128.900238, 74.399192, 75.700027, 1.386999, 1.180000, 1.262002},
	{-0.008000, -0.002000, 0.000000, 120.000267, 78.899139, 71.700027, 1.197999, 1.023001, 1.262002},
	{-0.008000, -0.009000, 0.004000, 120.000267, 78.899139, 71.700027, 0.937999, 1.038000, 0.663003},
	{0.042999, -0.007000, -0.004999, 102.300323, 89.799171, 85.299949, 1.438999, 1.403001, 1.344003},
	{0.012999, -0.013000, -0.002999, 102.300323, 89.799171, 93.199897, 1.132999, 1.209001, 1.344003},
	{-0.002000, -0.008000, -0.002999, 109.800338, 73.999153, 93.199897, 1.066999, 1.001001, 1.344003},
	{-0.002000, -0.006000, 0.000000, 109.800338, 73.999153, 93.199897, 1.066999, 1.001001, 1.344003},
	{-0.002000, -0.006000, 0.000000, 109.800338, 73.999153, 93.199897, 1.066999, 1.001001, 1.344003},
	{-0.002000, -0.006000, 0.000000, 109.800338, 73.999153, 93.199897, 1.066999, 1.001001, 1.344003},
	{-0.002000, -0.006000, 0.000000, 109.800338, 73.999153, 93.199897, 1.066999, 1.001001, 1.344003},
	{0.011999, -0.006000, -0.004999, 109.800338, 73.999153, 93.199897, 0.752999, 1.001001, 0.747003},
	{0.011999, -0.006000, -0.004999, 109.800338, 73.999153, 93.199897, 0.752999, 1.001001, 0.747003},
	{0.011999, -0.006000, -0.004999, 109.800338, 73.999153, 93.199897, 0.752999, 1.001001, 0.747003},
	{0.011999, -0.006000, -0.004999, 109.800338, 73.999153, 93.199897, 0.752999, 1.001001, 0.747003},
	{0.002999, -0.008000, -0.001999, 109.800338, 73.999153, 93.199897, 1.084999, 1.078002, 1.479002},
	{0.002999, -0.008000, -0.001999, 109.800338, 73.999153, 93.199897, 1.084999, 1.078002, 1.479002}
};
static const Float:SkinHead[312][6] = {
	{0.131999,-0.003999,0.004001,0.000000,0.000000,-21.500003},
	{0.131999,-0.001999,0.004001,0.000000,0.000000,-21.500003},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.135999,-0.006999,0.004001,0.000000,0.000000,-21.500003},
	{0.164999,-0.006999,0.001001,0.000000,0.000000,-21.500003},
	{0.150999,-0.012999,0.001001,0.000000,0.000000,-21.500003},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.141999,0.001000,0.001001,0.000000,0.000000,-21.500003},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.113999,-0.006999,0.001001,0.000000,0.000000,-21.500003},
	{0.101999,-0.002999,0.001001,0.000000,0.000000,-21.500003},
	{0.119999,-0.002999,0.001001,0.000000,0.000000,-21.500003},
	{0.111999,-0.027999,0.001001,0.000000,0.000000,-21.500003},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.130999,0.004001,0.005001,0.000000,0.000000,-21.500003},
	{0.100999,-0.018999,0.000001,0.000000,0.000000,-21.500003},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.135999,0.002001,0.005001,0.000000,0.000000,-21.500003},
	{0.099999,0.001001,0.003001,0.000000,0.000000,-21.500003},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.144000,-0.009999,0.002001,0.000000,0.000000,-21.500003},
	{0.119000,0.002001,-0.000998,0.000000,0.000000,-21.500003},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.119000,0.002001,0.004001,0.000000,0.000000,-21.500003},
	{0.133000,-0.001998,0.004001,0.000000,0.000000,-21.500003},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.133000,-0.004998,-0.001998,0.000000,0.000000,-21.500003},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.092000,-0.001999,0.000001,0.000000,0.000000,-21.500003},
	{0.121000,-0.031999,0.003001,0.000000,0.000000,-21.500003},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.121000,-0.002998,0.000001,0.000000,0.000000,-21.500003},
	{0.070000,-0.002998,0.001001,0.000000,0.000000,-21.500003},
	{0.098000,0.024001,0.003001,0.000000,0.000000,-21.500003},
	{0.092000,0.002001,0.002001,0.000000,0.000000,-21.500003},
	{0.139000,0.011001,0.002001,0.000000,0.000000,-21.500003},
	{0.139000,-0.002998,0.001001,0.000000,0.000000,-21.500003},
	{0.139000,-0.015999,-0.001998,0.000000,0.000000,-21.500003},
	{0.105000,0.000001,0.000001,0.000000,0.000000,-21.500003},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.112000,0.019001,0.006001,0.000000,0.000000,-21.500003},
	{0.121000,-0.030998,0.003001,0.000000,0.000000,-21.500003},
	{0.121000,-0.030998,0.003001,0.000000,0.000000,-21.500003},
	{0.155000,0.008001,0.003001,0.000000,0.000000,-21.500003},
	{0.095000,0.001001,0.005001,0.000000,0.000000,-21.500003},
	{0.148000,-0.007998,0.005001,0.000000,0.000000,-21.500003},
	{0.119000,0.005001,-0.000998,0.000000,0.000000,-21.500003},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.133000,0.023001,0.007001,0.000000,0.000000,-21.500003},
	{0.128000,-0.013998,0.001001,0.000000,0.000000,-21.500003},
	{0.110000,0.002001,-0.001998,0.000000,0.000000,-21.500003},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.127000,0.009001,0.005001,0.000000,0.000000,-21.500003},
	{0.124000,0.007001,0.005001,0.000000,0.000000,-21.500003},
	{0.126999,0.026000,0.003001,0.000000,0.000000,-16.800001},
	{0.126999,-0.007999,0.003001,0.000000,0.000000,-16.800001},
	{0.123999,0.020000,0.007001,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.123999,0.013000,0.003001,0.000000,0.000000,-16.800001},
	{0.115999,0.020000,0.003001,0.000000,0.000000,-16.800001},
	{0.122999,0.001000,0.005001,0.000000,0.000000,-16.800001},
	{0.123000,-0.001999,-0.001998,0.000000,0.000000,-16.800001},
	{0.121000,-0.012999,0.004001,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.093000,0.000000,0.004001,0.000000,0.000000,-16.800001},
	{0.093000,0.000000,0.004001,0.000000,0.000000,-16.800001},
	{0.175000,0.007000,0.004001,0.000000,0.000000,-16.800001},
	{0.167000,-0.005999,0.004001,0.000000,0.000000,-16.800001},
	{0.167000,-0.005999,0.004001,0.000000,0.000000,-16.800001},
	{0.167000,-0.005999,0.004001,0.000000,0.000000,-16.800001},
	{0.098000,-0.005999,0.005001,0.000000,0.000000,-16.800001},
	{0.136000,0.011000,0.002001,0.000000,0.000000,-16.800001},
	{0.110000,0.017000,0.002001,0.000000,0.000000,-16.800001},
	{0.117000,-0.027000,0.002001,0.000000,0.000000,-16.800001},
	{0.143000,-0.012000,-0.001998,0.000000,0.000000,-16.800001},
	{0.126000,-0.014000,0.003001,0.000000,0.000000,-16.800001},
	{0.126000,-0.014000,0.003001,0.000000,0.000000,-16.800001},
	{0.138000,-0.014000,0.003001,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.113000,-0.014000,0.003001,0.000000,0.000000,-16.800001},
	{0.127000,0.007000,0.003001,0.000000,0.000000,-16.800001},
	{0.127000,-0.007999,0.003001,0.000000,0.000000,-16.800001},
	{0.139000,0.014000,0.003001,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.146000,-0.007999,0.006001,0.000000,0.000000,-16.800001},
	{0.146000,-0.007999,0.006001,0.000000,0.000000,-16.800001},
	{0.146000,-0.007999,-0.000998,0.000000,0.000000,-16.800001},
	{0.155000,-0.019000,0.003001,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.155000,-0.019000,0.003001,0.000000,0.000000,-16.800001},
	{0.155000,-0.015000,0.003001,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.139000,-0.000999,0.004001,0.000000,0.000000,-16.800001},
	{0.139000,-0.000999,-0.000998,0.000000,0.000000,-16.800001},
	{0.139000,-0.000999,-0.000998,0.000000,0.000000,-16.800001},
	{0.131000,0.002000,0.002001,0.000000,0.000000,-16.800001},
	{0.102000,0.002000,0.002001,0.000000,0.000000,-16.800001},
	{0.136000,0.002000,0.002001,0.000000,0.000000,-16.800001},
	{0.142000,0.002000,-0.000998,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.142000,0.002000,-0.001998,0.000000,0.000000,-16.800001},
	{0.110000,0.019000,0.002001,0.000000,0.000000,-16.800001},
	{0.103000,0.016000,0.002001,0.000000,0.000000,-16.800001},
	{0.124000,0.013000,0.003001,0.000000,0.000000,-16.800001},
	{0.131000,-0.012000,0.003001,0.000000,0.000000,-16.800001},
	{0.119000,-0.003999,0.003001,0.000000,0.000000,-16.800001},
	{0.119000,0.000000,0.001001,0.000000,0.000000,-16.800001},
	{0.147000,-0.008999,-0.003998,0.000000,0.000000,-16.800001},
	{0.143000,-0.003999,0.004001,0.000000,0.000000,-16.800001},
	{0.127000,0.008000,0.003001,0.000000,0.000000,-16.800001},
	{0.134000,-0.006999,0.003001,0.000000,0.000000,-16.800001},
	{0.134000,0.000000,0.003001,0.000000,0.000000,-16.800001},
	{0.151000,0.004000,0.000001,0.000000,0.000000,-16.800001},
	{0.101000,0.011000,0.000001,0.000000,0.000000,-16.800001},
	{0.063000,0.023000,0.000001,0.000000,0.000000,-16.800001},
	{0.113000,-0.004999,0.000001,0.000000,0.000000,-16.800001},
	{0.033000,0.005000,0.002001,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.123000,-0.009999,0.000001,0.000000,0.000000,-16.800001},
	{0.123000,-0.009999,0.000001,0.000000,0.000000,-16.800001},
	{0.123000,0.001000,0.000001,0.000000,0.000000,-16.800001},
	{0.118000,-0.011999,0.003001,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.180000,-0.034999,0.003001,0.000000,0.000000,-16.800001},
	{0.119000,0.001000,0.001001,0.000000,0.000000,-16.800001},
	{0.119000,0.001000,0.001001,0.000000,0.000000,-16.800001},
	{0.102000,-0.003999,0.011001,0.000000,0.000000,-16.800001},
	{0.123000,-0.012999,0.001000,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.123000,-0.012999,0.003000,0.000000,0.000000,-16.800001},
	{0.157000,-0.012999,0.005001,0.000000,0.000000,-16.800001},
	{0.112000,-0.008999,0.003000,0.000000,0.000000,-16.800001},
	{0.093000,0.004000,0.003000,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.168000,-0.027999,0.006001,0.000000,0.000000,-16.800001},
	{0.119000,-0.004999,0.003000,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.106000,0.015000,0.001000,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.134000,0.004000,0.001000,0.000000,0.000000,-16.800001},
	{0.105000,0.010000,0.001000,0.000000,0.000000,-16.800001},
	{0.105000,0.010000,0.001000,0.000000,0.000000,-16.800001},
	{0.115000,0.010000,0.001000,0.000000,0.000000,-16.800001},
	{0.117000,0.011000,0.004000,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.117000,-0.018999,0.001000,0.000000,0.000000,-16.800001},
	{0.122000,0.006000,-0.002999,0.000000,0.000000,-16.800001},
	{0.136000,-0.008999,0.003000,0.000000,0.000000,-16.800001},
	{0.138999,-0.013999,0.001001,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.158999,0.004000,0.001001,0.000000,0.000000,-16.800001},
	{0.158999,0.004000,0.001001,0.000000,0.000000,-16.800001},
	{0.135000,-0.004999,-0.002998,0.000000,0.000000,-16.800001},
	{0.143999,-0.009999,-0.001998,0.000000,0.000000,-16.800001},
	{0.143999,-0.009999,-0.001998,0.000000,0.000000,-16.800001},
	{0.127999,0.000000,-0.002998,0.000000,0.000000,-16.800001},
	{0.151999,-0.012999,-0.002998,0.000000,0.000000,-16.800001},
	{0.151999,0.014000,0.002001,0.000000,0.000000,-16.800001},
	{0.113000,0.011000,0.000001,0.000000,0.000000,-16.800001},
	{0.117000,0.009000,0.000001,0.000000,0.000000,-16.800001},
	{0.124000,0.009000,-0.000998,0.000000,0.000000,-16.800001},
	{0.137000,-0.005999,0.003001,0.000000,0.000000,-16.800001},
	{0.138000,-0.011999,0.001001,0.000000,0.000000,-16.800001},
	{0.111000,-0.006999,0.008001,0.000000,0.000000,-16.800001},
	{0.124000,0.004000,0.003001,0.000000,0.000000,-16.800001},
	{0.144000,-0.008999,0.003001,0.000000,0.000000,-16.800001},
	{0.144000,-0.008999,0.003001,0.000000,0.000000,-16.800001},
	{0.144000,-0.008999,0.002001,0.000000,0.000000,-16.800001},
	{0.147000,-0.008999,0.002001,0.000000,0.000000,-16.800001},
	{0.147000,-0.008999,0.002001,0.000000,0.000000,-16.800001},
	{0.147000,-0.008999,0.001001,0.000000,0.000000,-16.800001},
	{0.147000,-0.008999,0.001001,0.000000,0.000000,-16.800001},
	{0.105000,-0.000999,0.001001,0.000000,0.000000,-16.800001},
	{0.126000,-0.013999,0.001001,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.126000,0.001000,0.001001,0.000000,0.000000,-16.800001},
	{0.136000,-0.003999,0.001001,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.136000,-0.003999,-0.002998,0.000000,0.000000,-16.800001},
	{0.136000,0.002000,-0.002998,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.129000,0.023000,0.003001,0.000000,0.000000,-16.800001},
	{0.091000,0.010000,0.000001,0.000000,0.000000,-16.800001},
	{0.117000,0.017000,0.002001,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.101000,-0.001999,0.000001,0.000000,0.000000,-16.800001},
	{0.130000,-0.012999,0.000001,0.000000,0.000000,-16.800001},
	{0.107000,0.004000,0.000001,0.000000,0.000000,-16.800001},
	{0.125000,0.004000,0.000001,0.000000,0.000000,-16.800001},
	{0.125000,-0.006999,0.002001,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.125000,-0.008999,0.002001,0.000000,0.000000,-16.800001},
	{0.135000,0.003000,0.002001,0.000000,0.000000,-16.800001},
	{0.119000,-0.001999,-0.001998,0.000000,0.000000,-16.800001},
	{0.132000,-0.014999,0.001001,0.000000,0.000000,-16.800001},
	{0.101000,0.026000,0.001001,0.000000,0.000000,-16.800001},
	{0.159000,-0.018999,0.002001,0.000000,0.000000,-16.800001},
	{0.145000,-0.019999,0.003001,0.000000,0.000000,-16.800001},
	{0.163000,0.006000,0.000001,0.000000,0.000000,-16.800001},
	{0.129000,-0.010999,0.003001,0.000000,0.000000,-16.800001},
	{0.129000,-0.010999,0.003001,0.000000,0.000000,-16.800001},
	{0.129000,-0.020999,0.003001,0.000000,0.000000,-16.800001},
	{0.151000,0.015000,0.003001,0.000000,0.000000,-16.800001},
	{0.162000,-0.004000,0.003001,0.000000,0.000000,-16.800001},
	{0.110000,-0.004000,0.003001,0.000000,0.000000,-16.800001},
	{0.088000,0.001999,0.003001,0.000000,0.000000,-16.800001},
	{0.120000,0.019000,0.001001,0.000000,0.000000,-16.800001},
	{0.109000,-0.007000,0.000001,0.000000,0.000000,-16.800001},
	{0.127000,-0.007000,0.001001,0.000000,0.000000,-16.800001},
	{0.109000,-0.012000,0.004001,0.000000,0.000000,-16.800001},
	{0.081000,-0.008000,0.002001,0.000000,0.000000,-16.800001},
	{0.100000,-0.000000,0.000001,0.000000,0.000000,-16.800001},
	{0.124000,-0.012000,0.003001,0.000000,0.000000,-16.800001},
	{0.136000,0.005999,0.000001,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.153000,-0.008000,0.005001,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.093000,0.007000,0.001001,0.000000,0.000000,-16.800001},
	{0.106000,0.007000,0.001001,0.000000,0.000000,-16.800001},
	{0.158000,-0.034000,0.001001,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.189000,-0.016000,0.001001,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.125000,0.003000,-0.002998,0.000000,0.000000,-16.800001},
	{0.125000,0.003000,0.001001,0.000000,0.000000,-16.800001},
	{0.138000,-0.009999,0.003001,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.140000,-0.009999,0.003001,0.000000,0.000000,-16.800001},
	{0.140000,-0.009999,0.003001,0.000000,0.000000,-16.800001},
	{0.151000,-0.009999,0.003001,0.000000,0.000000,-16.800001},
	{0.151000,-0.009999,0.003001,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.114000,0.016000,0.002001,0.000000,0.000000,-16.800001},
	{0.124000,-0.011999,0.002001,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.111000,0.001000,0.003001,0.000000,0.000000,-16.800001},
	{0.122000,-0.005999,0.003001,0.000000,0.000000,-16.800001},
	{0.122000,-0.005999,0.003001,0.000000,0.000000,-16.800001},
	{0.122000,-0.005999,0.000001,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.134000,0.007000,0.000001,0.000000,0.000000,-16.800001},
	{0.107000,0.007000,0.003001,0.000000,0.000000,-16.800001},
	{0.125000,0.000000,0.003001,0.000000,0.000000,-16.800001},
	{0.125000,0.000000,0.003001,0.000000,0.000000,-16.800001},
	{0.125000,0.000000,0.003001,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.129000,0.005000,0.002001,0.000000,0.000000,-16.800001},
	{0.129000,0.005000,0.002001,0.000000,0.000000,-16.800001},
	{0.129000,0.005000,0.002001,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.129000,0.007000,0.002001,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.115000,-0.001999,0.002001,0.000000,0.000000,-16.800001},
	{0.141000,0.005000,0.002001,0.000000,0.000000,-16.800001},
	{0.104000,0.013000,-0.001998,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.154000,-0.001999,0.001001,0.000000,0.000000,-16.800001},
	{0.117000,0.004000,0.005001,0.000000,0.000000,-16.800001},
	{0.135000,-0.018999,0.003001,0.000000,0.000000,-16.800001},
	{0.151000,-0.016999,0.003001,0.000000,0.000000,-16.800001},
	{0.127000,-0.016999,0.001001,0.000000,0.000000,-16.800001},
	{0.140000,0.007000,0.001001,0.000000,0.000000,-16.800001},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0,0.0,0.0}

};
enum acinfo
{
	aID,
	aObjID,
	aPrice,
	aName[24]
}

static const Acs_Info[81][acinfo] =
{
	{0,18944,10000,"Шляпа \"Flames\""},
	{1,18945,10000,"Шляпа \"Rocks\""},
	{2,18946,10000,"Шляпа \"Dorian\""},
	{3,18947,10000,"Шляпа \"Elegant\""},
	{4,18948,10000,"Шляпа \"Whale\""},
	{5,18949,10000,"Шляпа \"Zalite\""},
	{6,18950,10000,"Шляпа \"Sarkana\""},
	{7,18951,10000,"Шляпа \"Dzeltena\""},
	{8,19095,10000,"Шляпа \"Headrush\""},
	{9,19096,10000,"Шляпа \"Royal\""},
	{10,19097,10000,"Шляпа \"Brand\""},
	{11,19098,10000,"Шляпа \"Varonis\""},
	{12,18639,10000,"Шляпа \"Bailey\""},
	{13,18962,10000,"Шляпа \"Zivtina\""},
	{14,19094,10000,"Шляпа \"BigMacHat\""},
	{15,19553,10000,"Шляпа \"Picador\""},

	{16,18926,10000,"Кепка \"NewEra\""},
	{17,18927,10000,"Кепка \"IceBreaker\""},
	{18,18928,10000,"Кепка \"LSD\""},
	{19,18929,10000,"Кепка \"Winter\""},
	{20,18930,10000,"Кепка \"Canoe\""},
	{21,18931,10000,"Кепка \"Venum\""},
	{22,18932,10000,"Кепка \"Johannes\""},
	{23,18933,10000,"Кепка \"Kandar\""},
	{24,18934,10000,"Кепка \"Browar\""},
	{25,18935,10000,"Кепка \"Amber\""},

	{26,19046,10000,"Часы \"GreenLite\""},
	{27,19040,10000,"Часы \"Silver\""},
	{28,19044,10000,"Часы \"Willson\""},
	{29,19041,10000,"Часы \"Glare\""},
	{30,19052,10000,"Часы \"Alter\""},
	{31,19045,10000,"Часы \"Into\""},
	{32,19039,10000,"Часы \"Classed\""},
	{33,19042,10000,"Часы \"Doris\""},
	{34,19043,100000,"Часы \"Extra\""},
	{35,19045,10000,"Часы \"Dolas\""},
	{36,19051,10000,"Часы \"Cross\""},
	{37,19048,10000,"Часы \"Lites\""},
	{38,19049,10000,"Часы \"Alvak\""},
	{39,19053,10000,"Часы \"Docaris\""},
	{40,19050,10000,"Часы \"Elegant\""},

	{41,19008,10000,"Очки \"GreenLite\""},
	{42,19016,10000,"Очки \"Silver\""},
	{43,19017,100000,"Очки \"Willson\""},
	{44,19010,10000,"Очки \"Glare\""},
	{45,19007,10000,"Очки \"Alter\""},
	{46,19021,10000,"Очки \"Into\""},
	{47,19018,10000,"Очки \"Classed\""},
	{48,19015,10000,"Очки \"Doris\""},
	{49,19011,100000,"Очки \"Extra\""},
	{50,19012,10000,"Очки \"Dolas\""},
	{51,19019,10000,"Очки \"Cross\""},
	{52,19009,10000,"Очки \"Lites\""},
	{53,19014,10000,"Очки \"Alvak\""},
	{54,19025,10000,"Очки \"Docaris\""},
	{55,19035,10000,"Очки \"Elegant\""},
	{56,19020,10000,"Очки \"GreenLite\""},
	{57,19006,10000,"Очки \"Silver\""},
	{58,19013,10000,"Очки \"Lesters\""},
	{59,19139,10000,"Очки \"Glare\""},
	{60,19033,10000,"Очки \"Alter\""},
	{61,19027,10000,"Очки \"Into\""},
	{62,19031,10000,"Очки \"Classed\""},
	{63,19009,10000,"Очки \"Doris\""},
	{64,19029,10000,"Очки \"Maleris\""},
	{65,19138,10000,"Очки \"Dolas\""},
	{66,19140,10000,"Очки \"Dastes\""},
	{67,19027,10000,"Очки \"Lites\""},
	{68,19025,10000,"Очки \"Alvak\""},
	{69,19026,10000,"Очки \"Docaris\""},
	{70,19028,10000,"Очки \"Elegant\""},
	
	{71,18911,10000,"Бандана \"Survival\""},
	{72,18912,10000,"Бандана \"Flawless\""},
	{73,18913,10000,"Бандана \"Green Line\""},
	{74,18914,10000,"Бандана \"Kamuflaje\""},
	{75,18915,10000,"Бандана \"Crazy\""},
	{76,18916,10000,"Бандана \"Stories\""},
	{77,18917,10000,"Бандана \"Evil\""},
	{78,18918,10000,"Бандана \"Black Line\""},
	{79,18919,10000,"Бандана \"White Line\""},
	{80,18920,10000,"Бандана \"Smoked\""}

};
new TotalHouse = 0;
new TotalBizz = 0;
new ChangeSkin[MAX_PLAYERS];// Выбор скина

new rob;


enum wInfo
{
	wID,
	wOwner[MAX_PLAYER_NAME],
	Float:wEntr[3],
	Float:wExit[3],
	Float:wMenu[3],
	wBank,
	wLandTax,
	wProds,
	wPriceProds,
	wClub,
	wZp,
	wDeputy1[32],
	wDeputy2[32],
	wDeputy3[32],
	wMechanic1[32],
	wMechanic2[32],
	wMechanic3[32],
	wMechanic4[32],
	wMechanic5[32],
	wAuction[5],
	wAuctions[128],
	wAuctionName[MAX_PLAYER_NAME],
	Text3D:wLabel,
	wPickup[4],
	wNapad,
};
new WorkshopInfo[5][wInfo], TOTALSHOPS = 0;

#define MAX_TAXI_STATION 3
enum E_TAXI_STATION_DATA
{
	e_dbId,
	e_szOwner[MAX_PLAYER_NAME],
	e_iStatus,
	e_iPrice,

	E_SIZE // эта штука должна быть последней
};
new g_tInfo[MAX_TAXI_STATION][E_TAXI_STATION_DATA], gTotalTaxiStation;
new g_szTaxiArea[MAX_TAXI_STATION];
new Float:g_szTaxiAreaPos[MAX_TAXI_STATION][3] = {
	{2461.1287, 1325.1150, 10.8203},
	{-2267.3257, 178.6390, 35.3125},
	{1102.0665, -1747.8894, 13.4087}
};



// Развозчики продуктов на ферму
new car_grain[MAX_VEHICLES][3];
new car_prods[MAX_VEHICLES][4];
new car_pickup[MAX_VEHICLES];
new Text3D:car_text[MAX_VEHICLES];
new resoluted_empty[46];
new resolut_empty[30];
//
enum fInfo
{
	fID,
	fOwner[MAX_PLAYER_NAME],
Float: fMenu[3],
Float: fCloakroom[3],
	fBank,
	fLandTax,
	fZp,
	fGrain_Price,
	fGrain,
	fGrain_Sown,
	fProds_Selling,
	fProds,
	fProds_Price,
	fDeputy_1[MAX_PLAYER_NAME],
	fDeputy_2[MAX_PLAYER_NAME],
	fDeputy_3[MAX_PLAYER_NAME],
	fFarmer_1[MAX_PLAYER_NAME],
	fFarmer_2[MAX_PLAYER_NAME],
	fFarmer_3[MAX_PLAYER_NAME],
	fFarmer_4[MAX_PLAYER_NAME],
	fFarmer_5[MAX_PLAYER_NAME],
	fAuction[5],
	fAuctions[64],
	fAuctionName[MAX_PLAYER_NAME],
Text3D:fLabel,
	fPickup[2],
	fSeed_Car[2],
	fCombine,
	fClub,
	fNapad,
};
new FarmInfo[6][fInfo], TOTALFARM = 0;
new bool:Farmcar_works[MAX_VEHICLES];
new Farmcar_pickup[MAX_VEHICLES];
new Text3D:Farmcar_text[MAX_VEHICLES];
new Farmcar_prods[MAX_VEHICLES];
new Float:Farmcombine_coord_one[16][3] = {
	{-320.8694,-1365.4385,9.8428},
	{-324.8013,-1401.0339,13.2010},
	{-301.7462,-1425.4576,13.9760},
	{-287.7421,-1391.3496,10.4911},
	{-284.4016,-1344.1929,7.2467},
	{-257.3175,-1316.2000,9.9445},
	{-245.2030,-1356.5045,8.7477},
	{-243.9296,-1388.2174,9.6420},
	{-228.3160,-1422.7065,5.0133},
	{-206.5894,-1394.1740,5.8277},
	{-204.5860,-1330.3910,9.8077},
	{-182.5080,-1311.5313,5.9209},
	{-180.3449,-1365.8169,3.8640},
	{-214.0825,-1415.8950,4.5256},
	{-264.4544,-1426.5730,9.1420},
	{-324.6056,-1428.9579,14.8003}
};
new Float:Farmcombine_coord_two[15][3] = {
	{-130.7027,44.7220,2.8443},
	{-145.5741,61.2925,2.8443},
	{-165.2465,43.3439,2.8443},
	{-175.8336,7.8020,2.8365},
	{-191.4658,-42.5760,2.8443},
	{-228.0420,-69.5110,2.8442},
	{-230.8085,-30.8695,2.8443},
	{-209.9449,29.5974,2.8443},
	{-208.8271,91.6010,2.5696},
	{-241.8963,57.9227,1.9067},
	{-257.0153,8.2201,1.9814},
	{-271.7077,-37.9002,2.1155},
	{-250.0249,-67.0826,2.8443},
	{-191.2002,-74.9127,2.8443},
	{-150.3399,-6.1474,2.8443}
};
new Float:Farmcombine_coord_three[15][3] = {
	{-1187.8000,-1051.3243,128.9458},
	{-1187.5616,-1020.7885,128.9458},
	{-1187.0750,-958.0953,128.9390},
	{-1157.4517,-927.2670,128.9458},
	{-1131.6406,-968.0543,128.9458},
	{-1132.7548,-1022.1390,128.9458},
	{-1094.4727,-1055.9808,128.9388},
	{-1070.3040,-1008.1692,128.9458},
	{-1069.8025,-946.7182,128.9458},
	{-1041.3453,-919.6816,128.9458},
	{-1020.2495,-958.0220,128.9458},
	{-1018.5430,-1018.1034,128.9397},
	{-1055.0632,-1054.2510,128.9390},
	{-1110.2307,-1055.0585,128.9465},
	{-1182.4001,-1058.6345,128.9458}
};
new Float:Farmcombine_coord_four[10][3] = {
	{-8.9009,-7.1966,2.8443},
	{-25.3066,-51.6468,2.8443},
	{-25.7014,-107.4654,2.8443},
	{-1.5358,-79.6419,2.8446},
	{21.8522,-43.6649,2.8443},
	{18.2182,-75.2312,1.8680},
	{24.0178,-112.9527,0.3364},
	{38.4268,-77.6550,0.4112},
	{20.3284,-42.6540,2.8424},
	{-7.0064,-7.9382,2.8443}
};
new Float:Farmcombine_coord_five[11][3] = {
	{1916.7062,194.0659,34.2542},
	{1917.7260,216.1904,29.9047},
	{1936.3885,233.2233,28.5738},
	{1942.2996,205.0887,31.2080},
	{1958.4962,183.6927,33.7993},
	{1970.1038,203.6444,29.6427},
	{1988.0249,228.8007,27.1248},
	{1999.4275,204.8942,26.9487},
	{1979.3251,179.1305,32.0967},
	{1933.9193,187.5078,34.8203},
	{1918.4210,191.2246,34.7327}
};
new Float:Farmcar_coord_one[4][3] = {
	{-305.3935,-1334.0796,8.2550},
	{-311.4154,-1359.4165,9.0605},
	{-256.1160,-1385.5819,10.0414},
	{-191.2922,-1380.0945,5.0030}
};
new Float:Farmcar_coord_two[4][3] = {
	{-167.5728,-4.7965,3.1172},
	{-194.6789,49.8787,3.1172},
	{-236.7553,-9.5347,3.1172},
	{-227.7488,-52.3213,3.1172}
};
new Float:Farmcar_coord_three[4][3] = {
	{-1183.0190,-1058.6979,129.1978},
	{-1154.6866,-1046.9103,129.2095},
	{-1075.6294,-930.5206,129.2089},
	{-1028.6787,-973.0988,129.2091}
};
new Float:Farmcar_coord_four[4][3] = {
	{-5.4270,-44.5476,2.8443},
	{-0.9173,-95.1931,2.3333},
	{37.3381,-77.9443,0.4641},
	{-22.6910,-59.8679,2.8443}
};
new Float:Farmcar_coord_five[4][3] = {
	{1921.2250,204.1377,32.3460},
	{1966.3246,198.3651,31.0604},
	{1985.4440,183.7903,31.270},
	{1993.8384,224.2885,27.1094}
};
enum stallInfo
{
	stID,
Float:stPos[4],
Text3D:stText
}
new StallInfo[50][stallInfo], TOTALSTALL = 0;
enum caInfo
{
	caID,
	caName[64],
	caMafia,
	caManager[32],
	caManager2[32],
	caManager3[32],
	caKrupie[32],
	caKrupie2[32],
	caKrupie3[32],
	caKrupie4[32],
	caKrupie5[32],
	caKrupie6[32],
	caKrupie7[32],
	caKrupie8[32],
	caKrupie9[32],
	caKrupie10[32],
Float:caPos[3],
}
new CasinoInfo[3][caInfo], TOTALCASINO = 0;
new FormaFracPic[15];
//new hp_check[MAX_PLAYERS];
new war = 0;
new rabota1;
new IPMSG[5][] = {
	{" IP проверка обезопасит Ваш аккаунт от взлома!\n"},
	{" Если Ваш IP адрес будет изменён, система потребует ключ безопасности\n\n"},
	{" Для того чтобы включить/отключить защиту \n"},
	{" Введите /mm - Настройки - Безопасность\n\n"},
	{" Обязательно установите ключ безопасности!\n"}
};

new licgate;
new gruzgate;
new bool:Prorab[MAX_PLAYERS];
new caligula[3];
new dragons[2];
new wmcvhod;
new wmcvqhod;
new pmcvhod;
new pmcvqhod;
new vmcvhod;
new vmcvqhod;
new Text3D:GasZavod[2];
new Text3D:Doki[2];
new Text3D:Sklad[2];
new Text3D:Derevobuy[2];
//-------- Фуры ------- //
new tanker_train[8]; // [0][1] - 1 skill / [2][3] - 5 skill / [4][5] 15 skill / [6][7] 25 skill
//-------- Фуры ------- //
new job_car[MAX_PLAYERS]; // Рабочая машина игрока (Такси / фура / Машина механика) / Арендованная игроком машина.
new levelDexp = 20000;
new loaded_type[MAX_PLAYERS]; // 1 - Нефть 2 - Уголь 3 - Дерево (тип товара)
new Benzbuy[2] = {500,500}; // Buy[0] - Н1 Buy[1] - Н2
new ugolbuy[2] = {500,500}; // Buy[0] - У1 Buy[1] - У2
new Buyderevo[2] = {500,500}; // Buy[0] - Л1 Buy[1] - Л2
new Sellugol[2] = {800,800};
new Sellderevo[2] = {800,800};
new Sellbenz[2] = {800,800};
new sellzone[MAX_PLAYERS];

new seans[MAX_PLAYERS];
new medicss[8];
new ProposeOffer[MAX_PLAYERS];
new Krisha[MAX_PLAYERS];
new KrishaOffer[MAX_PLAYERS];
new ProposedTo[MAX_PLAYERS];
new GotProposedBy[MAX_PLAYERS];

new chekmatlva[2]; 	// кража матов лв
new chekmats[2];	// кража матов сф

new addd[3];
new cenabenza[MAX_PLAYERS];
new TicketOffer[MAX_PLAYERS];
new TicketMoney[MAX_PLAYERS];
new enterbiz[MAX_PLAYERS];
new mast[3];
new startaddiction[MAX_PLAYERS];
new arace;
new PicCP[MAX_PLAYERS];
new Text:DRAP;
new house_car[MAX_PLAYERS];
new carpick[3];
new VehicleNames[212][] = {
	"Landstalker","Bravura","Buffalo","Linerunner","Perrenial","Sentinel","Dumper","Firetruck","Trashmaster","Stretch","Manana","Infernus",
	"Voodoo","Pony","Mule","Cheetah","Ambulance","Leviathan","Moonbeam","Esperanto","Taxi","Washington","Bobcat","Mr.Whoopee","BF Injection",
	"Hunter","Premier","Enforcer","Securicar","Banshee","Predator","Bus","Rhino","Barracks","Hotknife","Trailer","Previon","Coach","Cabbie",
	"Stallion","Rumpo","RC Bandit","Romero","Packer","Monster","Admiral","Squalo","Seasparrow","Pizzaboy","Tram","Trailer","Turismo","Speeder",
	"Reefer","Tropic","Flatbed","Yankee","Caddy","Solair","Berkley's RC Van","Skimmer","PCJ-600","Faggio","Freeway","RC Barron","RC Raider",
	"Glendale","Oceanic","Sanchez","Sparrow","Patriot","Quad","Coastguard","Dinghy","Hermes","Sabre","Rustler","Zr-350","Walton","Regina",
	"Comet","BMX","Burrito","Camper","Marquis","Baggage","Dozer","Maverick","News Chopper","Rancher","FBI Rancher","Virgo","Greenwood",
	"Jetmax","Hotring","Sandking","Blista Compact","Police Maverick","Boxville","Benson","Mesa","RC Goblin","Hotring A","Hotring B",
	"Bloodring Banger","Rancher","Super GT","Elegant","Journey","Bike","Mountain Bike","Beagle","Cropdust","Stunt","Tanker","Roadtrain",
	"Nebula","Majestic","Buccaneer","Shamal","Hydra","FCR-900","NRG-500","HPV1000","Cement Truck","Tow Truck","Fortune","Cadrona","FBI Truck",
	"Willard","Forklift","Tractor","Combine","Feltzer","Remington","Slamvan","Blade","Freight","Streak","Vortex","Vincent","Bullet","Clover",
	"Sadler","Firetruck","Hustler","Intruder","Primo","Cargobob","Tampa","Sunrise","Merit","Utility","Nevada","Yosemite","Windsor","Monster A",
	"Monster B","Uranus","Jester","Sultan","Stratum","Elegy","Raindance","RC Tiger","Flash","Tahoma","Savanna","Bandito","Freight","Trailer",
	"Kart","Mower","Duneride","Sweeper","Broadway","Tornado","AT-400","DFT-30","Huntley","Stafford","BF-400","Newsvan","Tug","Trailer A","Emperor",
	"Wayfarer","Euros","Hotdog","Club","Trailer B","Trailer C","Andromada","Dodo","RC Cam","Launch","Police Car","Police Car",
	"Police Car","Police Ranger","Picador","S.W.A.T.","Alpha","Phoenix","Glendale","Sadler","L Trailer A","L Trailer B",
	"Stair Trailer","Boxville","Farm Plow","U Trailer"
};
new bool:robhouse[999];
new bool:robh[MAX_PLAYERS];
new WantNickChange[MAX_PLAYERS][MAX_PLAYER_NAME];
new Text:BoxPanel;
new PlayerText:Capture[MAX_PLAYERS];
new PlayerText:mWar[MAX_PLAYERS];
new PlayerText:bWar[MAX_PLAYERS];
new str2[64];
new HealOffer[MAX_PLAYERS];
new HealPrice[MAX_PLAYERS];
new healpric = 1;
new gcontract[MAX_PLAYERS];
new CountOnZone[60];
new Text3D:Meh3d[MAX_VEHICLES];
new DrugOffer[MAX_PLAYERS];
new DrugPrice[MAX_PLAYERS];
new DrugGram[MAX_PLAYERS];
new ZoneOffer[MAX_PLAYERS];
new ZonePrice[MAX_PLAYERS];
new TakingLesson[MAX_PLAYERS];
new Menu:ChoseSkin[2];

// === Выбор скина
new Text:select_skin_box1;
new Text:select_skin_box2;
new Text:select_skin_next;
new Text:select_skin_prev;
new Text:select_skin_ok;

new Menu:buy_interior_menu;
new Menu:headmenu[2];
new JobCP[MAX_PLAYERS];
new GruzCP[MAX_PLAYERS];
new usemats[MAX_PLAYERS];
new OldSkin[MAX_PLAYERS];
new JobOffer[MAX_PLAYERS];
new Float: Armour[MAX_PLAYERS];
new dostup[MAX_PLAYERS];
new forma[MAX_PLAYERS];
new proverkaforma[MAX_PLAYERS];
new Army;
new SFa;
new LSport;
new TieTime[MAX_PLAYERS];
new Rekl[MAX_PLAYERS];
new Report[MAX_PLAYERS];
new CreatedCars[100];
new CreatedCar = 0;
new DivorceOffer[MAX_PLAYERS];
new MarryWitness[MAX_PLAYERS];
new MarryWitnessOffer[MAX_PLAYERS];
new MedicCall = 999;
new MedicCallTime[MAX_PLAYERS];
new PoliceCall = 999;
new PoliceCallTime[MAX_PLAYERS];
new MechanicCall = 999;
new MechanicCallTime[MAX_PLAYERS];
new TaxiCall = 999;
new TaxiCallTime[MAX_PLAYERS];
new PlayerTazeTime[MAX_PLAYERS];
new PlayerTied[MAX_PLAYERS];
new PlayerCuffed[MAX_PLAYERS];
new PlayerCuffedTime[MAX_PLAYERS];
new SelectChar[MAX_PLAYERS];
new SelectCharID[MAX_PLAYERS];
new SelectCharPlace[MAX_PLAYERS];
new ChosenSkin[MAX_PLAYERS];
new InviteSkin[MAX_PLAYERS];
new CP[MAX_PLAYERS];
new RaceCP[MAX_PLAYERS];
new gPlayerCheckpointStatus[MAX_PLAYERS];
new CellTime[MAX_PLAYERS];
new PhoneOnline[MAX_PLAYERS];
new Tel[MAX_PLAYERS];
new noooc;
new antiooc;
new antioocsend;
new callcost = 10;
new realchat = 1;
new ServHour, ServMinute, ServSecond;
new levelexp = 4;
new cchargetime = 60;
new armmatbi = 300000;
new armmatsf = 300000;
new lspdmatbi = 100000;
new sfpdmats = 100000;
new lvpdmats = 100000;
new fbimats = 100000;
new yakuzamats = 100000;
new rmmats = 100000;
new lcnmats = 100000;

new hamcmatbi = 100000;
new wmcmatbi = 100000;
new pmcmatbi = 100000;

new rifamatbi = 100000;
new ballasmatbi = 100000;
new groovmatbi = 100000;
new vagosmatbi = 100000;
new aztekmatbi = 100000;
new lsamatbi = 100000;
new ballashel = 500;
new groovhel = 500;
new vagoshel = 500;
new aztekhel = 500;
new rifahel = 500;
new yakuzahel = 500,
rmhel = 500,
lcnhel;
new hamcfuels = 10000;
new wmcfuels = 10000;
new pmcfuels = 10000;
//-----------
new hamcprods = 2000;
new wmcprods = 2000;
new pmcprods = 2000;
//-----------
new warelock1[5],warelock2[5],warelock3[5];
new lsamat;
new lsaammo;
new Float:TeleportDest[MAX_PLAYERS][3];

new legalmods[48][22] = {
	{400, 1024,1021,1020,1019,1018,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{401, 1145,1144,1143,1142,1020,1019,1017,1013,1007,1006,1005,1004,1003,1001,0000,0000,0000,0000},
	{404, 1021,1020,1019,1017,1016,1013,1007,1002,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{405, 1023,1021,1020,1019,1018,1014,1001,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{410, 1024,1023,1021,1020,1019,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{415, 1023,1019,1018,1017,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{418, 1021,1020,1016,1006,1002,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{420, 1021,1019,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{421, 1023,1021,1020,1019,1018,1016,1014,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{422, 1021,1020,1019,1017,1013,1007,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{426, 1021,1019,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{436, 1022,1021,1020,1019,1017,1013,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{439, 1145,1144,1143,1142,1023,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{477, 1021,1020,1019,1018,1017,1007,1006,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{478, 1024,1022,1021,1020,1013,1012,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{489, 1024,1020,1019,1018,1016,1013,1006,1005,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
	{491, 1145,1144,1143,1142,1023,1021,1020,1019,1018,1017,1014,1007,1003,0000,0000,0000,0000,0000},
	{492, 1016,1006,1005,1004,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{496, 1143,1142,1023,1020,1019,1017,1011,1007,1006,1003,1002,1001,0000,0000,0000,0000,0000,0000},
	{500, 1024,1021,1020,1019,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{516, 1021,1020,1019,1018,1017,1016,1015,1007,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
	{517, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1016,1007,1003,1002,0000,0000,0000,0000,0000},
	{518, 1145,1144,1143,1142,1023,1020,1018,1017,1013,1007,1006,1005,1003,1001,0000,0000,0000,0000},
	{527, 1021,1020,1018,1017,1015,1014,1007,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{529, 1023,1020,1019,1018,1017,1012,1011,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000},
	{534, 1185,1180,1179,1178,1127,1126,1125,1124,1123,1122,1106,1101,1100,0000,0000,0000,0000,0000},
	{535, 1121,1120,1119,1118,1117,1116,1115,1114,1113,1110,1109,0000,0000,0000,0000,0000,0000,0000},
	{536, 1184,1183,1182,1181,1128,1108,1107,1105,1104,1103,0000,0000,0000,0000,0000,0000,0000,0000},
	{540, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1004,1001,0000,0000,0000,0000},
	{542, 1145,1144,1021,1020,1019,1018,1015,1014,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{546, 1145,1144,1143,1142,1024,1023,1019,1018,1017,1007,1006,1004,1002,1001,0000,0000,0000,0000},
	{547, 1143,1142,1021,1020,1019,1018,1016,1003,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{549, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1012,1011,1007,1003,1001,0000,0000,0000,0000},
	{550, 1145,1144,1143,1142,1023,1020,1019,1018,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000},
	{551, 1023,1021,1020,1019,1018,1016,1006,1005,1003,1002,0000,0000,0000,0000,0000,0000,0000,0000},
	{558, 1168,1167,1166,1165,1164,1163,1095,1094,1093,1092,1091,1090,1089,1088,0000,0000,0000,0000},
	{559, 1173,1162,1161,1160,1159,1158,1072,1071,1070,1069,1068,1067,1066,1065,0000,0000,0000,0000},
	{560, 1170,1169,1141,1140,1139,1138,1033,1032,1031,1030,1029,1028,1027,1026,0000,0000,0000,0000},
	{561, 1157,1156,1155,1154,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1031,1030,1027,1026},
	{562, 1172,1171,1149,1148,1147,1146,1041,1040,1039,1038,1037,1036,1035,1034,0000,0000,0000,0000},
	{565, 1153,1152,1151,1150,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,0000,0000,0000,0000},
	{567, 1189,1188,1187,1186,1133,1132,1131,1130,1129,1102,0000,0000,0000,0000,0000,0000,0000,0000},
	{575, 1177,1176,1175,1174,1099,1044,1043,1042,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{576, 1193,1192,1191,1190,1137,1136,1135,1134,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{580, 1023,1020,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{589, 1145,1144,1024,1020,1018,1017,1016,1013,1007,1006,1005,1004,1000,0000,0000,0000,0000,0000},
	{600, 1022,1020,1018,1017,1013,1007,1006,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{603, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000}
};

//////////////////////////////
new pizza_faggio[2];
new rentfly[9];
new comptruck[10];
new matsfura[5];
new lsnewscar[6], lvnewscar[6], lvpdcar[18];
new liccar[10], hotdogcar[2], mehanik[13], rentcarvip[9], rentcarsf[7], rentcarls[9], rentcarlv[18], medicsls[6],medicsls1[6], medicslv[9];
new sapdcar[20], fbicar[17],cnncar[5],sfpdcar[21],medmav,mavlic,cnnmav,armycarsf[29], yakcar[15],ruscar[15],govcar[8], lcncar[14], medicssf[21], armcar[34], faggio[6], gunscar[NUMBER_OF_ARMYTRUCKS], grovecar[7], ballascar[7], coronoscar[7], vagoscar[7],rifacar[7];
new lsacar[16], lsacarvert[1];
new hamccar[11], wmccar[11], pmccar[11];


//////////////////////////////
new bankarea[3];

new victim2[2];
new sportzal[2];
new racee[2];
new rmpic[2];
new rmpick[2];
new rmpic2[2];
new addictionenter;
new addictionexit;
new yakexit[2];
new pdd;
new buygunzakon[4];
new fbi[6];
new lspd[6];
new sf[6];
new lvpdpic[7];
new armijavhod;
new armijavihod;
new sms_timer[MAX_PLAYERS];
new marexit;
new marenter[3];
new bankpic[2];
new serdce[4];
new ballasvhod[2];
new rifa[2];
new vagospic[2];
new aztecpic[2];
new grooveexit;
new grooveenter;
new mushroom[2];
new skinshop[4];
new gunarm[2];
new zip[2];
new zona;
new zonaa;
new sklad[4];
//////////////////////////////
new FarmStatPay[6][9];
new FarmStatPayS[6][9];
new FarmStatDay[6][9];
//
//-----------------------------

enum nInfo
{
	nLcn,
	nYakuza,
	nRm
};
enum frInfo
{
	fLsnews,
	fSfnews,
	fLvnews,
	fBallas,
	fVagos,
	fGrove,
	fAztek,
	fRifa,
	fKazna,
	fSsmc,
	fHamc,
	fOmc,
	fWmc,
	fHwmc,
	fFsmc,
	fPmc,
	fMmc,
	fVmc,
	fBmc
};
new MafiaBank[1][nInfo];
new FracBank[1][frInfo];
enum bInfo
{
	bID,
	bOwner[MAX_PLAYER_NAME],
	bMessage[128],
	Float:bEntranceX,
	Float:bEntranceY,
	Float:bEntranceZ,
	Float:bExitX,
	Float:bExitY,
	Float:bExitZ,
	bBuyPrice,
	bEntranceCost,
	bTill,
	bLandTax,
	bLocked,
	bInterior,
	bProducts,
	Text3D: bLabel,
	bPrice,
	bProdPrice,
	Float:bBarX,
	Float:bBarY,
	Float:bBarZ,
	bMafia,
	bCapture,
	bType,
	bPickup,
	bEnterPic,
	bExitPic,
	bLockTime,
	bLicense,
	bStavka,
	bNameStavka[50],
	bLastStavka,
	bTimeStavka,
	bMinStavka,
	bVirtualWorld,
};
new BizzInfo[100][bInfo];
new BizzPay[100];
new BizzMaxProds[100];
new BizzLandTax[100];
new updatecheck[MAX_PLAYERS];
enum painfo
{
	paName[32],
	paKills,
	paDeaths,
};
new PaintStats[15][painfo], Painlist = 0;
enum cainfo
{
Float:callx,
Float:cally,
Float:callz,
	callused,
};
new CallInfo[MAX_PLAYERS][cainfo];


//////////////////////////////
publics: ConvoiToPlayer(playerid)
{
	static AnimShot[MAX_PLAYERS];
	if(Convoi[playerid] == 9999) return true;
	if(!IsPlayerConnected(Convoi[playerid]))
	{
		if(TimerForPlayer[playerid] != -1) KillTimer(TimerForPlayer[playerid]);
		TimerForPlayer[playerid] = -1;
		Convoi[playerid] = 9999;
		TogglePlayerControllable(playerid, 1);
		ClearAnim(playerid);
		AnimShot[playerid] = false;
		return true;
	}
	else if(GetPlayerVirtualWorld(Convoi[playerid]) != GetPlayerVirtualWorld(playerid) || GetPlayerInterior(Convoi[playerid]) != GetPlayerInterior(playerid))
	{
		new Float: X, Float: Y, Float: Z;
		AntiCheatGetPos(Convoi[playerid], X, Y, Z);
		sppos(playerid,X, Y, Z,90.0,GetPlayerVirtualWorld(Convoi[playerid]),GetPlayerInterior(Convoi[playerid]));
		AnimShot[playerid] = false;
		TogglePlayerControllable(playerid, 1);
		return true;
	}
	new Float: GotDistance = GetDistanceBetweenPlayerss(playerid, Convoi[playerid]);
	if(GotDistance < 1.0)
	{
		SetPlayerToFacePlayer(playerid, Convoi[playerid]);
		AnimShot[playerid] = false;
		ApplyAnimation(playerid, "CARRY", "crry_prtial", 6.0, 1, 1, 1, 1, 0, 1);
		return true;
	}
	else if(GotDistance >= 3.5)
	{
		SetPlayerToFacePlayer(playerid, Convoi[playerid]);
		ApplyAnimation(playerid, "PED", "SPRINT_PANIC", 6.0, 1, 1, 1, 1, 0, 1);
		return true;
	}
	else
	{
		SetPlayerToFacePlayer(playerid, Convoi[playerid]);
		ApplyAnimation(playerid, "ped", "WALK_civi", 6.0, 1, 1, 1, 1, 0, 1);
	}
	return true;
}
publics: UnFreeze(playerid) return TogglePlayerControllable(playerid, 1);
FreezeInt(playerid)
{
	if(GetPlayerPing(playerid) > 30)
	{
		TogglePlayerControllable(playerid, 0);
		SetTimerEx("UnFreeze" , 1000, false, "i", playerid);
	}
	return true;
}
publics:StartFight(playerid,i)
{
	if(playerid == INVALID_PLAYER_ID || i == INVALID_PLAYER_ID) return true;
	SetPlayerHealth(playerid,100);
	SetPlayerHealth(i,100);
	GameTextForPlayer(playerid,"~r~fight",1000,0);
	GameTextForPlayer(i,"~r~fight",1000,0);
	TogglePlayerControllable(playerid,true);
	return TogglePlayerControllable(i,true);
}
publics: kekovich(playerid)
{
	if(updatecheck[playerid] == 9999) return true;
	new Float:X, Float:Y, Float:Z;
	AntiCheatGetPos(updatecheck[playerid], X, Y, Z);
	SetPlayerCheckpoint(playerid, X, Y, Z, 5);
	return true;
}
publics: IsVehicleOccupied(vehicleid)
{
	foreach(new i: Player)
	{
		if(IsPlayerInVehicle(i,vehicleid)) return i;
	}
	return -1;
}

/*publics: DiceOff()
{
	foreach(new i: Player)
	{
		if(OpustitRuki[i] == 1)
		{
			OpustitRuki[i] = 0;
			if(IsPlayerAttachedObjectSlotUsed(i,1)) RemovePlayerAttachedObject(i,1),SetPlayerSpecialAction (i, SPECIAL_ACTION_NONE),ApplyAnimation(i,"GANGS","hndshkba",4.1,0,1,1,0,1,1);// забрали кубик
		}
	}
}*/
publics: AddictionTimer(playerid) return SetPlayerWeather(playerid,ServWeather);


stock IsVehicleInWater(vehicleid)
{
	new Float:water_areas[][] =
	{
		{25.0,  2313.0, -1417.0,        23.0},
		{15.0,  1280.0, -773.0,         1082.0},
		{15.0,  1279.0, -804.0,         86.0},
		{20.0,  1094.0, -674.0,         111.0},
		{26.0,  194.0,  -1232.0,        76.0},
		{25.0,  2583.0, 2385.0,         15.0},
		{25.0,  225.0,  -1187.0,        73.0},
		{50.0,  1973.0, -1198.0,        17.0}
	};
	for(new t=0; t < sizeof water_areas; t++)
	if(GetVehicleDistanceFromPoint(vehicleid,water_areas[t][1],water_areas[t][2],water_areas[t][3]) <= water_areas[t][0]) return true;
	return false;
}
stock CaptureTextDraws(playerid) // killlist для банд
{
	Capture[playerid] = CreatePlayerTextDraw(playerid,39.824317, 223.416671, "~y~kills~n~~n~~g~Rifa:~w~0~n~~r~Aztec:~w~0");
	PlayerTextDrawLetterSize(playerid,Capture[playerid], 0.372224, 1.372497);
	PlayerTextDrawTextSize(playerid,Capture[playerid], 300.405562, 60.833334);
	PlayerTextDrawAlignment(playerid,Capture[playerid], 1);
	PlayerTextDrawColor(playerid,Capture[playerid], -1);
	PlayerTextDrawSetShadow(playerid,Capture[playerid], 0);
	PlayerTextDrawSetOutline(playerid,Capture[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid,Capture[playerid], 255);
	PlayerTextDrawFont(playerid,Capture[playerid], 3);
	PlayerTextDrawSetProportional(playerid,Capture[playerid], 1);
}
stock MafiaWarTextDraws(playerid) // killlist для мафий
{
	mWar[playerid] = CreatePlayerTextDraw(playerid,39.824317, 223.416671, "~y~kills~n~~n~~g~LCN:~w~0~n~~r~Russian:~w~0");
	PlayerTextDrawLetterSize(playerid,mWar[playerid], 0.372224, 1.372497);
	PlayerTextDrawTextSize(playerid,mWar[playerid], 300.405562, 60.833334);
	PlayerTextDrawAlignment(playerid,mWar[playerid], 1);
	PlayerTextDrawColor(playerid,mWar[playerid], -1);
	PlayerTextDrawSetShadow(playerid,mWar[playerid], 0);
	PlayerTextDrawSetOutline(playerid,mWar[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid,mWar[playerid], 255);
	PlayerTextDrawFont(playerid,mWar[playerid], 3);
	PlayerTextDrawSetProportional(playerid,mWar[playerid], 1);
}

new Float:gInviteSpawns[0][4] = {
	{222.3489,-8.5845,1002.2109,266.7302}
};
new LessonCar[MAX_PLAYERS];
new LessonStat[MAX_PLAYERS];
new pLessonCar[MAX_PLAYERS];
enum
{
	CHECKPOINT_1,
	CHECKPOINT_2,
	CHECKPOINT_3,
	CHECKPOINT_4,
	CHECKPOINT_5,
	CHECKPOINT_6,
	CHECKPOINT_7,
	CHECKPOINT_8,
	CHECKPOINT_9,
	CHECKPOINT_10,
	CHECKPOINT_11,
	CHECKPOINT_13,
	CHECKPOINT_14,
	CHECKPOINT_15,
	CHECKPOINT_16,
	CHECKPOINT_17,
	CHECKPOINT_18,
	CHECKPOINT_19,
	CHECKPOINT_20,
	CHECKPOINT_21,
	CHECKPOINT_22,
	CHECKPOINT_23,
	CHECKPOINT_24,
	CHECKPOINT_25,
	CHECKPOINT_26,
	CHECKPOINT_27,
	CHECKPOINT_28,
	CHECKPOINT_29,
	CHECKPOINT_30,
	CHECKPOINT_31,
	CHECKPOINT_32,
	CHECKPOINT_33,
	CHECKPOINT_34,
	CHECKPOINT_35,
	CHECKPOINT_36,
	CHECKPOINT_37,
	CHECKPOINT_38,
	CHECKPOINT_40,
	CHECKPOINT_41,
	CHECKPOINT_42,
	CHECKPOINT_43,
	CHECKPOINT_44,
	CHECKPOINT_45,
	CHECKPOINT_46,
	CHECKPOINT_47,
	CHECKPOINT_48,
	CHECKPOINT_49,
	CHECKPOINT_50,
	CHECKPOINT_51,
	CHECKPOINT_52,
	CHECKPOINT_53,
	CHECKPOINT_54,
	CHECKPOINT_55,
	CHECKPOINT_56,
	CHECKPOINT_57,
	CHECKPOINT_58,
	CHECKPOINT_59,
	CHECKPOINT_60,
	CHECKPOINT_61,
	CHECKPOINT_62,
	CHECKPOINT_63,
	CHECKPOINT_64,
	CHECKPOINT_65,
	CHECKPOINT_66,
	CHECKPOINT_67,
	CHECKPOINT_68,
	CHECKPOINT_69,
	CHECKPOINT_70,
	CHECKPOINT_71,
	CHECKPOINT_72,
	CHECKPOINT_73,
	CHECKPOINT_74,
	CHECKPOINT_75,
	CHECKPOINT_76,
	CHECKPOINT_77,
	CHECKPOINT_78,
	CHECKPOINT_79,
	CHECKPOINT_80,
	CHECKPOINT_81,
	CHECKPOINT_82,
	CHECKPOINT_83,
	CHECKPOINT_84,
	CHECKPOINT_85,
	CHECKPOINT_86,
	CHECKPOINT_87,
	CHECKPOINT_88,
	CHECKPOINT_89,
	CHECKPOINT_90,
	CHECKPOINT_91,
	CHECKPOINT_92,
	CHECKPOINT_93,
	CHECKPOINT_94,
	CHECKPOINT_95,
	CHECKPOINT_96,
	CHECKPOINT_97,
	CHECKPOINT_98,
	CHECKPOINT_99,
	CHECKPOINT_100,
	CHECKPOINT_101,
	CHECKPOINT_103,
	CHECKPOINT_104,
	CHECKPOINT_105,
	CHECKPOINT_106,
	CHECKPOINT_107,
	CHECKPOINT_108,
	CHECKPOINT_109,
	CHECKPOINT_110,
	CHECKPOINT_111,
	CHECKPOINT_112,
	CHECKPOINT_113,
	CHECKPOINT_114,
	CHECKPOINT_115,
	CHECKPOINT_116,
	CHECKPOINT_117,
	CHECKPOINT_118,
	CHECKPOINT_119,
	CHECKPOINT_120,
	CHECKPOINT_121,
	CHECKPOINT_122,
	CHECKPOINT_123,
	CHECKPOINT_124,
	CHECKPOINT_125,
	CHECKPOINT_126,
	CHECKPOINT_127,
	CHECKPOINT_128,
	CHECKPOINT_129,
	CHECKPOINT_130,
	CHECKPOINT_131,
	CHECKPOINT_132
}
//new PaintGun[] = {24,31,25,29,30,23};
new Float:PaintballSpawns[5][3] = {
	{2563.6877,2807.0288,10.8203},
	{2554.0505,2837.7419,10.8203},
	{2585.6748,2848.5283,10.8203},
	{2598.7083,2843.5200,10.8203},
	{2546.7622,2830.9004,14.2559}
};
new paint_info[2];
//
new race_info[2];
enum rainfo
{
	rName[MAX_PLAYER_NAME],
	rCar,
};
new RaceInfo[13][rainfo], RaceList = 0;
new RaceCar[] = {411,562,560,522};
new Float:RaceGonka[32][3] = {
	{1504.0450,-2494.1909,13.2818},
	{1581.0055,-2494.1929,13.2818},
	{1670.5765,-2494.4583,13.2818},
	{1791.9033,-2494.0471,13.2818},
	{1933.1456,-2494.2715,13.2663},
	{2030.5284,-2494.5786,13.2665},
	{2092.1445,-2506.2756,13.2656},
	{2104.7827,-2561.6477,13.2741},
	{2029.8335,-2593.1196,13.2740},
	{1916.6111,-2592.9927,13.2740},
	{1786.7148,-2592.7122,13.2740},
	{1659.3461,-2593.0691,13.2740},
	{1516.1382,-2593.6577,13.2740},
	{1436.4548,-2574.5940,13.2740},
	{1417.7380,-2524.5232,13.2740},
	{1445.3351,-2497.3611,13.2818},
	{1504.0450,-2494.1909,13.2818},
	{1581.0055,-2494.1929,13.2818},
	{1670.5765,-2494.4583,13.2818},
	{1791.9033,-2494.0471,13.2818},
	{1933.1456,-2494.2715,13.2663},
	{2030.5284,-2494.5786,13.2665},
	{2092.1445,-2506.2756,13.2656},
	{2104.7827,-2561.6477,13.2741},
	{2029.8335,-2593.1196,13.2740},
	{1916.6111,-2592.9927,13.2740},
	{1786.7148,-2592.7122,13.2740},
	{1659.3461,-2593.0691,13.2740},
	{1516.1382,-2593.6577,13.2740},
	{1436.4548,-2574.5940,13.2740},
	{1417.7380,-2524.5232,13.2740},
	{1413.7960,-2467.0986,13.5547}
};
new Float:RaceSpawns[12][4] = {
	{1488.8,-2481.6,13.2818,270.0},
	{1488.8,-2491.6,13.2818,270.0},
	{1488.8,-2501.6,13.2818,270.0},
	{1481.8,-2487.9,13.2818,270.0},
	{1481.8,-2497.9,13.2818,270.0},
	{1481.8,-2507.9,13.2818,270.0},
	{1474.8,-2483.6,13.2818,270.0},
	{1474.8,-2493.6,13.2818,270.0},
	{1474.8,-2503.6,13.2818,270.0},
	{1467.8,-2488.2,13.2818,270.0},
	{1467.8,-2498.2,13.2818,270.0},
	{1467.8,-2508.2,13.2818,270.0}
};

new rabotaMSG[12][] = {
	{"Здесь вы можете подработать грузчиком\n"},
	{"\n"},
	{"В здании на против, вы найдете раздевалку,\n"},
	{"А так же кассу, где Вы будете получать деньги за работу.\n\n"},
	{"\n"},
	{"Чтобы начать работу, необходимо переодеться в рабочую форму.\n"},
	{"Далее, берите в вагоне мешок, и несите его на склад.\n"},
	{"За один мешок, Вам будут платить 25 вирт.\n"},
	{"\n"},
	{"Как только вы захотите завершить рабочий день,\n"},
	{"Пройдите к кассе.\n"},
	{"\n"}
};
new pdddialogMSG[13][] = {
	{"<< 1. Общие правила >>\n\n"},
	{"Обгон транспортного средства разрешен только с левой стороны,\n"},
	{"при этом водители обязаны убедиться, что встречная полоса свободна на достаточном для обгона расстояние.\n"},
	{"При ДТП водители обязаны позвонить в полицию, и дождаться ДПС\n\n"},
	{"<< 2. Скорость движения >> \n\n"},
	{"В пределах города разрешается движение транспортных средств со скоростью не более 50 км/ч.\n"},
	{"В жилых зонах и на дворовых территориях не более 30 км/ч\n\n"},
	{"<< 3. Остановка и стоянка >>\n\n"},
	{"Остановка и стоянка транспортных средств разрешаются на правой стороне дороги на обочине.\n"},
	{"В специальных отведённых для этого местах\n\n"},
	{"<< 4. ДПС >> \n\n"},
	{"При виде автомобиля с включённой сиреной, водитель обязан сбавить скорость и прижаться к обочине.\n"},
	{"Водитель обязан предъявить паспорт/лицензии, если тот попросил"}
};

#define MAX_HOMECAR 6
enum carInfo
{
	carID[MAX_HOMECAR],
	carModel[MAX_HOMECAR],
	carColor_one[MAX_HOMECAR],
	carColor_two[MAX_HOMECAR],
	carPercent[MAX_HOMECAR],
	Float:carFuel[MAX_HOMECAR],
	carVehcom_1[MAX_HOMECAR],
	carVehcom_2[MAX_HOMECAR],
	carVehcom_3[MAX_HOMECAR],
	carVehcom_4[MAX_HOMECAR],
	carVehcom_5[MAX_HOMECAR],
	carVehcom_6[MAX_HOMECAR],
	carVehcom_7[MAX_HOMECAR],
	carVehcom_8[MAX_HOMECAR],
	carVehcom_9[MAX_HOMECAR],
	carVehcom_10[MAX_HOMECAR],
	carVehcom_11[MAX_HOMECAR],
	carVehcom_12[MAX_HOMECAR],
	carVehcom_13[MAX_HOMECAR],
	carVehcom_14[MAX_HOMECAR],
};
new CarInfo[MAX_PLAYERS][carInfo];
new garage_car[MAX_PLAYERS][MAX_HOMECAR];

#define BIZ_TAX 888
new pDWindow[MAX_VEHICLES];
enum pInfo
{
	pName[MAX_PLAYER_NAME+1],
	pKey[17],
	bool:pLogin,
	pEmail[32],
	pLevel,
	pAdmin,
	pHelper,
	pRatingSupport,
	pJobHeal, // podfraction. 1 - LS 2 - SF 3 - LV 4 - FC
	pJobHealLeader,
	pMestoJail,
	pIp[16],
	pvIp[16],
	pIpReg[16],
	pCheckip,
	pText,
	pKeyip[16],
	pSatiety,
	pDataReg[16],
	pDonateRank,
	pMats,
	pSex,
	pArrested,
	pMuted,
	pCrimes,
	Float:pExp,
	pCash,
	pPayCheck,
	pJailTime,
	pDrugs,
	pLeader,
	pMember,
	pRank,
	pChar[6],
	pJob,
	pModel,
	pPnumber,
	pDirectory,
	pVhoddata,
	pVhodMes,
	pVhodchas,
	pVhodminute,
	pLicenses,
	pSetUI,
	pNkeys,
	pAvtomas,
	pZakonp,
	pAddiction,
	pNarcoLomka,
	pWarns,
	OffWarns,
	punWarns,
	pFuel,
	pMarriedTo[MAX_PLAYER_NAME+1],
	pDrug[MAX_PLAYER_NAME+1],
	pMushrooms,
	Float:pFishes,
	pFishesPach,
	pBank,
	pKeys,
	pDonateAccount,
	pMobile,
	pDolg,
	pKrisha,
	pWantedLevel,
	pFinishedQuest[32],
	pGunSkill[6],
	pGunSkills[32],
	pStyleSkill[3], // [0] заходы [1] тренировка по (0 бокс. 1 кунгфу 2 кикбокс) [2] побед
	pStyleSkills[32],
	Float:pStyleAmmount,
	pStyleSelect, // выбранный стиль
	Float:job_skill[5],
	pTaxiRep,
	pDLevel,
	pDExp,
	pKvartiraKey,
	pPHouseKey,
	pPBizzKey,
	pPFarmKey,
	pPLimitBank,
	pLimitPay, // лимит на передачу
	pLimitAutoUgon, // лимит на автоугон
	pPayFlood,
	pLimitSellCar,
	pDMgruz,
	pPSkill,
	pPProc,
	pPMGruz,
	pQuestL, // Сюжетная линия
	pQuest, // Квест сюжетной линии
	pQuestP, // Прогресс квеста
	pQuestF, // Финишный прогресс квеста
	pQuestPF,
	pQuestShow,
	pDgruz,
	pRobHouse,
	pActivemail,
	pActiveGAuth,
	pQRCode[128],
	SalonCar,
	SalonTime,
	pDrivingSkill,
	pProdsSkill[2],
	pSpawnChange,
	pDuelID,
	pDuelIDP,
	pRMuteTime,
	pState,
	pRoolete[35],
	pAFK,
	bool:pRob,
	pPick,
	pDetachID, // fraction detach
	pszDetachName[24],
	pBlackList[15]
};
new pData[MAX_PLAYERS][pInfo];

stock GivePlayerWeaponEx(playerid,weaponid,ammo)
{
	new slot = GetWeaponSlot(weaponid);
	//SendMes(playerid,-1,"Записано в Слот %i оружие %i",slot,weaponid);
	WeaponInfo[playerid][wWeapon][slot] = weaponid;
	WeaponInfo[playerid][wAmmo][slot] += ammo;
	
	GivePlayerWeapon(playerid, weaponid, ammo);
	return true;
}

stock ResetPlayerWeaponEx(playerid)
{
	for(new i = 0; i <= 12; i++)
	{
		WeaponInfo[playerid][wWeapon][i] =
		WeaponInfo[playerid][wAmmo][i] = 0;
	}
	ResetPlayerWeapons(playerid);
}

// char type
publics: IsPlayerInAFK(playerid)
{
	if(gettime() - pData[playerid][pAFK] > 3) return true;
	else return false;
}
new PaintReg[MAX_PLAYERS char];

//

new max_gruz[MAX_VEHICLES];
#define Name(%1) pData[%1][pName]

stock GetPlayerSubnet(playerid, buffer[], size=sizeof(buffer))
{
	GetPlayerIp(playerid, buffer, size);
	for(new i=0,dots=0; ; ++i)
	switch(buffer[i])
	{
	case '\0':
		break;
	case '.':
		if(++dots == 2)
		{
			buffer[i] = '\0';
			break;
		}
	}
}

stock SetPlayerCheckpointEx(playerid,Float:x,Float:y,Float:z,Float:r)
{
	SetPVarInt(playerid,"checkpoint",1);
	return SetPlayerCheckpoint(playerid,x,y,z,r);
}
stock DisablePlayerCheckpointEx(playerid)
{
	DeletePVar(playerid,"checkpoint");
	return DisablePlayerCheckpoint(playerid);
}
#define SetPlayerCheckpoint SetPlayerCheckpointEx
#define DisablePlayerCheckpoint DisablePlayerCheckpointEx

public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
	return true;
}

stock sppos( playerid, Float:x, Float:y, Float:z,Float: rangle,virtualw, inter)
{
	SetPlayerVirtualWorld(playerid, virtualw);
	SetPlayerFacingAngle(playerid, rangle);
	SetPlayerPos( playerid, x, y, z );
	
	SetPlayerInterior(playerid,inter);
}

stock Set_Skin_Fix(playerid,skinid)
{
	SetPlayerSkin(playerid, skinid);
	return ClearAnim(playerid);
}

#define SetPlayerSkin Set_Skin_Fix

/******************************************************************************/
stock L_Kick(playerid,i,number = 9999)
{
	Kicktime[playerid] = SetTimerEx("KickTimer", 600,false, "i", playerid);
	return printf("Kicked is Player: %i TYPE: %i TYPEEX: %i",playerid,i,number);
}


forward KickTimer(playerid);// 
public KickTimer(playerid)
{
	if(Kicktime[playerid] != -1)
	{
		Kicktime[playerid] = -1;
		Kick(playerid);
	}
	return true;
}

enum hInfo
{
	Float:hEntrancex,
	Float:hEntrancey,
	Float:hEntrancez,
	Float:hCarx,
	Float:hCary,
	Float:hCarz,
	Float:hCarc,
	hOwner[MAX_PLAYER_NAME],
	hValue,
	hHel,
	hInt,
	bool:hLock,
	hTakings,
	hKlass,
	hPickup,
	hMIcon,
	hSafe[11],
	hSafes[128],
	hID,
	Text3D:hExitText,
	h_area,
	h_improve,
	h_prod
};
new HouseInfo[1000][hInfo];

#define h_improve_safe 		0b1 	//сейф
#define h_improve_store 	0b10    //шкаф
#define h_improve_freez 	0b100   //холодильник

enum kvartiri
{
	mysql_id,
	k_number,
	k_padik,
	k_floor,
	Text3D: dtext,
	k_area,
	k_int,
	k_owner[MAX_PLAYER_NAME],
	bool:k_lock,
	k_heal,
	k_price
};
new kvart_info[1000][kvartiri];
new total_kvart;

enum podeezdi
{
	mysql_id,
	Float:hEntrancex,
	Float:hEntrancey,
	Float:hEntrancez,
	Float:hCarx,
	Float:hCary,
	Float:hCarz,
	Float:hCarc,	
	p_floors,
	p_hint,
	p_word,
	p_area
};
new podeezd_info[1000][podeezdi];
new total_podeezd;
new padik_exit;

new Float:podeezd_ints[][]={
	{2268.0962,1647.3221,1084.2344,90.0, 1.0},
	{2240.9590, -1190.6875, 1033.7969,90.0, 15.0}
};
new Float:kvar_pos[][][] ={
	{// в элитном падике
		{2269.8523,1667.8555,1084.2469},
		{2271.3372,1662.5709,1084.2344},
		{2266.0425,1662.5414,1084.2344},
		{2271.3372,1652.5961,1084.2344},
		{2266.0459,1652.5419,1084.2344},
		{2271.3333,1642.1644,1084.2344},
		{2266.0464,1642.1273,1084.2344},
		{2271.3374,1633.4553,1084.2344},
		{2266.0479,1633.5109,1084.2344},
		{2269.8386,1627.5774,1084.2469}
	},
	{// в бич падике
		{2229.3772,-1150.4740,1029.7969},
		{2242.6282,-1159.7737,1029.7969},
		{2239.8367,-1159.6444,1029.7969},
		{2242.5232,-1170.8054,1029.7969},
		{2239.8416,-1170.7168,1029.7969},
		{2225.4656,-1189.9624,1029.7969},
		{2225.6250,-1187.2495,1029.7969},
		{2209.5479,-1189.9899,1029.7969},
		{2209.7258,-1187.3667,1029.7969},
		{2201.0579,-1188.6949,1029.7969}
	}
};
enum pMatss
{
	gBallas,
	gVagos,
	gGrove,
	gAztek,
	gRifa,
	bHells,
	bWarlocks,
	bPagans,
};
//new Furi[1][pMatss];
new bFuri[1][pMatss][4]; // [0] - Материалы, [1] - Продукты, [2] - Бензин, [3] Дальнобой товары.
new MatHaul[NUMBER_OF_ARMYTRUCKS];
new MatsGang[5];

enum pCrime
{
	pAccusedof[32],
	pVictim[32]
};
new PlayerCrime[MAX_PLAYERS][pCrime];
new JoinPed[117][1] = {
	{280},//LSPD1
	{281},//LSPD2
	{282},//LSPD3
	{283},//LSPD4
	{284},//LSPD5
	{285},//LSPD6
	{288},//LSPD7
	{76},//LSPD8
	//============
	{286},//FBI1
	{163},//FBI2
	{164},//FBI3
	{165},//FBI4
	{166},//FBI5
	{141},//FBI6
	//============
	{287},//ArmySF1
	{191},//ArmySF2
	//============
	{70},//Mediks1
	{274},//Mediks2
	{275},//Mediks3
	{276},//Mediks4
	{219},//Mediks5
	//============
	{223},//LCN1
	{124},//LCN2
	{113},//LCN3
	{214},//LCN4
	//============
	{120},//YAKUZA1
	{123},//YAKUZA3
	{169},//YAKUZA2
	{186},//YAKUZA4
	//============
	{57},//Goverment1
	{150},//Goverment2
	{98},//Goverment3
	{187},//Goverment4
	{147},//Goverment5
	//============
	{280},//SFPD1
	{281},//SFPD2
	{282},//SFPD3
	{283},//SFPD4
	{284},//SFPD5
	{285},//SFPD6
	{288},//SFPD7
	{76},//SFPD8
	//===========
	{250},//SFNEWS1
	{261},//SFNEWS2
	{211},//SFNEWS3
	{217},//SFNEWS4
	//===========
	{171},//Casino1
	{11},//Casino2
	//===========
	{59},//Instructors1
	{172},//Instructors2
	{189},//Instructors3
	{240},//Instructors4
	//==========
	{280},//LVPD1
	{281},//LVPD2
	{282},//LVPD3
	{283},//LVPD4
	{284},//LVPD5
	{285},//LVPD6
	{288},//LVPD7
	{76},//LVPD8
	//==========
	{112},//RussianMafia1
	{111},//RussianMafia2
	{125},//RussianMafia4
	{272},//RussianMafia3
	{214},//RussianMafia5
	//==========
	{105},//GROOVE1
	{106},//GROOVE2
	{107},//GROOVE3
	{269},//GROOVE4
	{270},//GROOVE5
	{271},//GROOVE6
	//==========
	{114},//Aztecas1
	{115},//Aztecas2
	{116},//Aztecas3
	//==========
	{102},//BALLAS1
	{103},//BALLAS2
	{104},//BALLAS3
	//==========
	{173},//RIFA1
	{174},//RIFA2
	{175},//RIFA3
	//==========
	{108},//VAGOS1
	{109},//VAGOS2
	{110},//VAGOS3
	//==========
	{287},//ArmyLV1
	{191},//ArmyLV2
	//==========
	{250},//LSNEWS1
	{261},//LSNEWS2
	{211},//LSNEWS3
	{217},//LSNEWS4
	//==========
	{287},//PED1
	{287},//PED2
	{191},//PED3
	{287},//PED4
	{287},//PED5
	{191},//PED6
	{287},//PED7
	{200},//PED8
	{230},//PED9
	{137},//PED10
	{212},//PED11
	{79},//PED12
	{78},//PED13
	{96},//PED14
	{90},//PED15
	{55},//PED16
	//==========
	{247},//Bikers1
	{248},//Bikers2
	{254},//Bikers3
	{298},//Bikers4
	{201},//Bikers5
	//--------Дополн скины ПД--------
	{265}, // Мужской 1
	{266}, // Мужской 2
	{267}, // Мужской 3
	{309},
	{304},
	{305},
	{306}
};
new FishNames[18][20] = {
	{"Камболу"},
	{"Скумбрия"},
	{"Карась"},
	{"Форель"},
	{"Треска"},
	{"Горбыль"},
	{"Красноперка"},
	{"Щука"},
	{"Парус"},
	{"Тунец"},
	{"Ель"},
	{"Дельфин"},
	{"Окула"},
	{"Черепаха"},
	{"Сом"},
	{"Рыба-меч"},
	{"Катран"},
	{"Сайда"}
};
new GribNames[3][20] = {
	{"Белый"},
	{"Мухомор"},
	{"Гроздь"}
};
publics: NoNalog(playerid)
{
	if(!IsPlayerConnected(playerid)) return false;
	new leader = pData[playerid][pLeader];
	new member = pData[playerid][pMember];
	new job = pData[playerid][pJob];
	new krish = pData[playerid][pKrisha];
	if(member == 5 || member == 6 || member == 12 || member==13 || member == 14|| member == 15|| member == 17 || member == 18 || member == 23 || member == 24 || member == 25 || member == 26 || member == 22 || member == 28 || member == 29 || member == 30 || member == 31 || member == 33) return true;
	if(leader == 5 || leader == 6 || leader == 12 || leader==13 || leader == 14|| leader == 15|| leader == 17 || leader == 18 || leader == 23 || leader == 24 || leader == 25 || leader == 26 || leader == 22 || leader == 28 || leader == 29 || leader == 30 || leader == 31 || leader == 33) return true;
	if(member==0 && job == 0) return true;
	if(member==0 && krish > 0) return true;
	return false;
}

publics: IsAMafia(playerid)
{
	if(!IsPlayerConnected(playerid)) return false;
	new leader = pData[playerid][pLeader];
	new member = pData[playerid][pMember];
	if(member == 5 || member == 6 || member == 14) return true;
	if(leader == 5|| leader == 6 || leader == 14) return true;
	return false;
}
publics: IsAGang(playerid)
{
	if(!IsPlayerConnected(playerid)) return false;
	new leader = pData[playerid][pLeader];
	new member = pData[playerid][pMember];
	if(member==12 || member==13 || member==15 || member==17 || member==18) return true;
	if(leader==12 || leader==13 || leader==15 || leader==17 || leader==18) return true;
	return false;
}
new Peds[57][1] = {
	{79},
	{254},{259},{249},{248},{247},{242},{239},{228},
	{185},{184},{160},{155},{135},{126},{122},{121},{101},
	{100},{96},{82},{83},{84},{294},{94},{73},{67},
	{28},{29},{24},{23},{22},{21},
	{20},{19},{18},{17},{15},
	{7},{2},{299},{297},{296},{293},{46},
	{198},{197},{196},
	{190},{193},{243},{178},{192},{199},{201},{214},
	{224}
};
publics: PrintBizInfo(playerid,targetid)
{
	new mafiatext[10];
	switch(BizzInfo[targetid][bMafia])
	{
	case 5: mafiatext = "LCN"; case 6: mafiatext = "Yakuza";
	case 14: mafiatext = "RM"; default: mafiatext = "Нет";
	}
	format(string,364, "======================[ %s ]======================\nПод контролем: %s\nВсего заработано: %i вирт\tВ этом часу заработано: %i вирт\nПродуктов: %i/%i\n%s: %i вирт\nСостояние: %s\nБаланс банка для оплаты электроэнергии: %i вирт\nНалог за электроэнергию: %i вирт\nЛицензия: %s\nЧасов закрыт/без продуктов: %i",
	BizzInfo[targetid][bMessage],mafiatext,BizzInfo[targetid][bTill],BizzPay[targetid],BizzInfo[targetid][bProducts],BizzMaxProds[targetid],(BizzInfo[targetid][bType] == 4)?("Цена бензина") : ("Цена за товар"),BizzInfo[targetid][bPrice],(!BizzInfo[targetid][bLocked])?("Открыт") : ("Закрыт"),BizzInfo[targetid][bLandTax],BizzLandTax[targetid],(!BizzInfo[targetid][bLicense])?("Отсутствует") : ("Есть"),BizzInfo[targetid][bLockTime]);
	return ShowPlayerDialog(playerid,10349,DIALOG_STYLE_MSGBOX, "Cостояние бизнеса",string, "$", "$");
}
stock BuyHouse(h)
{
	DestroyDynamicMapIcon(HouseInfo[h][hMIcon]);
	DestroyDynamicPickup(HouseInfo[h][hPickup]);

	if(strcmp(HouseInfo[h][hOwner],"None",true) == 0)
	{
		HouseInfo[h][hPickup] = CreateDynamicPickup(1273, 1, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]);
		HouseInfo[h][hMIcon] = CreateDynamicMapIcon(HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez], 31, COLOR_WHITE, 0, -1, -1,150);
	}
	else
	{
		HouseInfo[h][hPickup] = CreateDynamicPickup(1272, 1, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]);
		HouseInfo[h][hMIcon] = CreateDynamicMapIcon(HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez], 32, COLOR_WHITE, 0, -1, -1,150);
	}
	return true;
}
main() { }
stock vehicleforeach(vehicleid)
{
	foreach(new i: Player) if(house_car[i] == vehicleid) return i;
	return -1;
}
publics: FuelUpdate()
{
	foreach(new i: Vehicle)
	{
		if(!IsAPlane(i) && !IsABoat(i) && !IsNoFuel(i))
		{
			GetVehicleParamsEx(i,engine,lights,alarm,doors,bonnet,boot,objective);
			if(engine) car_data[i][fuell] -= 2.0000;
		}
	}
	return true;
}
publics: HPCheck()
{
	if(PickDate <= gettime() && Pick) ResetPick(), SendClientMessageToAll(0xBC331AFF, " Внмание! В штате закончились выборы. Посмотреть результаты: /votelist");
	foreach(new playerid: Player)
	{
		if(!pData[playerid][pLogin] || pData[playerid][pState] == PLAYER_STATE_WASTED) continue;
		
		UpdatePlayerHunger(playerid, -1);
		new Float:health;
		GetPlayerHealth(playerid, health);

		if(pData[playerid][pSatiety] == 49 || pData[playerid][pSatiety] == 24) 
			SCM(playerid,COLOR_LIGHTGREEN, " Вы проголодались! Посетите бар, закусочную или купите ХотДог. Узнать свою «Сытость» можно командой /satiety");
		
		if(pData[playerid][pSatiety] < 50 && health > 2 && pData[playerid][pLevel] > 1) 
			SetPlayerHealth(playerid, health-1.0);

		else if(pData[playerid][pSatiety] < 25 && health> 2 && pData[playerid][pLevel] > 1) 
			SetPlayerHealth(playerid, health-2.0);
	}
	return true;
} 
stock DollahScoreUpdate(playerid) return SetPlayerScore(playerid, pData[playerid][pLevel]);
publics: Float:GetDistanceBetweenPlayerss(p1,p2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2))
	{
		return -1.00;
	}
	AntiCheatGetPos(p1,x1,y1,z1);
	AntiCheatGetPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	new Float:plocx,Float:plocy,Float:plocz;
	AntiCheatGetPos(playerid, plocx, plocy, plocz);
	if(PlayerCuffedTime[playerid] != 0)
	{
		SetPlayerPos(playerid, plocx, plocy, plocz);
		TogglePlayerControllable(playerid, 0);
	}
	if(!ispassenger) // если чувак пытается залезть на водительское место
	{
	    if(car_data[vehicleid][Owner] != INVALID_PLAYER_ID && car_data[vehicleid][Owner] != playerid) // у тачки есть хозяин и это не он
	    {
	        CarUnLockForPlayer[playerid] = 3;
	        SetPVarInt(playerid,"VehLock",vehicleid);
	        SetVehicleParamsForPlayer(vehicleid, playerid, 0, 1); // закрываем дверь
		}
	}
	if(GetVehicleModel(vehicleid) == 584) return L_Kick(playerid,1),format(cString, 100, " %s был кикнут по подозрению в читерстве / {FFFFFF}[Код античита: #Spawn] ",pData[playerid][pName]),SendAdminMessage(COLOR_LIGHTRED,cString);
	SetPVarInt(playerid, "NoAB", 1);
	
	if(usemats[playerid] > 0 || GetPVarInt(playerid, !#_dGetMaterials))
	{
		if(!GetPVarInt(playerid, !#_dGetMaterials))
		{
			if(usemats[playerid] == 1) armmatsf += 250;
			if(usemats[playerid] == 2) lsamatbi += 250;
			if(usemats[playerid] == 3) armmatbi += 250;
			usemats[playerid] = 0;
		}

		if(GetPVarInt(playerid, !#_dGetMaterials) == 0xFF)
			lsamatbi += MAX_MATERIALS_GET;

		DeletePVar(playerid, !#_dGetMaterials);
		RemovePlayerAttachedObject(playerid, 1);
		SCM(playerid, COLOR_REDD,"  Вы уронили ящик");
		SetPlayerSpecialAction (playerid, SPECIAL_ACTION_NONE);
	}
	EnterVehT[playerid] = GetTickCount()+250;
	return true;
}
publics: IsAMedic(playerid)
{
	if(!IsPlayerConnected(playerid)) return false;
	if(!GetPVarInt(playerid,"Fraction_Duty")) return false;
	new leader = pData[playerid][pLeader];
	new member = pData[playerid][pMember];
	if(member == 22) return true;
	else if(leader == 22) return true;
	return false;
}
publics: IsAMayor(playerid)
{
	if(!IsPlayerConnected(playerid)) return false;
	if(!GetPVarInt(playerid,"Fraction_Duty")) return false;
	new leader = pData[playerid][pLeader];
	new member = pData[playerid][pMember];
	if(member == 7 || leader == 7) return true;
	return false;
}
publics: IsALicenser(playerid)
{
	if(!IsPlayerConnected(playerid)) return false;
	if(!GetPVarInt(playerid,"Fraction_Duty")) return false;
	new leader = pData[playerid][pLeader];
	new member = pData[playerid][pMember];
	if(member == 11 || leader == 11) return true;
	return false;
}
publics: IsACop(playerid)
{
	if(!IsPlayerConnected(playerid)) return false;
	if(!GetPVarInt(playerid,"Fraction_Duty")) return false;
	new leader = pData[playerid][pLeader];
	new member = pData[playerid][pMember];
	if(member == 1 || member == 10 || member == 21) return true;
	else if(leader == 1 || leader == 10 || leader == 21) return true;
	return false;
}
publics: IsAFbi(playerid)
{
	if(!IsPlayerConnected(playerid)) return false;
	if(!GetPVarInt(playerid,"Fraction_Duty")) return false;
	new leader = pData[playerid][pLeader];
	new member = pData[playerid][pMember];
	if(member == 2) return true;
	else if(leader == 2) return true;
	return false;
}
publics: IsAArm(playerid)
{
	if(!IsPlayerConnected(playerid)) return false;
	if(!GetPVarInt(playerid,"Fraction_Duty")) return false;
	new leader = pData[playerid][pLeader];
	new member = pData[playerid][pMember];
	if(member == 3 || member == 19) return true;
	else if(leader == 3 || leader == 19) return true;
	return false;
}

stock SpawnHouseCars(playerid)
{

	new b = pData[playerid][pPHouseKey];
	switch(HouseInfo[b][hKlass])
	{
	case 0..1: // house Nope and D Class
		{
			house_car[playerid] = CreateVehicle_R(CarInfo[playerid][carModel][0], HouseInfo[b][hCarx], HouseInfo[b][hCary], HouseInfo[b][hCarz], HouseInfo[b][hCarc] , CarInfo[playerid][carColor_one][0] ,CarInfo[playerid][carColor_two][0], -1);
			SetVehicleParamsEx(house_car[playerid],false,false,false,true,false,false,false);
			car_data[house_car[playerid]][fuell] = CarInfo[playerid][carFuel][0];
			LoadTuning(playerid,house_car[playerid],0);
			garage_car[playerid][0] = house_car[playerid];
		}
	case 2: // house C Class
		{
			SpawnCarOne(playerid,  1397.2958, -21.3153, 1000.6000, 180.0000, 5); // Load car #1
			SpawnCarTwo(playerid, 1390.3330, -21.3153, 1000.6000, 180.0000, 5); // Load car #2
			SpawnCarThree(playerid, 1384.6168, -21.3153, 1000.6000, 180.0000, 5); // Load car #3
		}
	case 3: // house B Class
		{
			SpawnCarOne(playerid, 1396.0000, -25.0000, 1000.6000, -90.0000,6); // Load car #1
			SpawnCarTwo(playerid, 1395.8748, -21.0000, 1000.6000, -90.0000,6); // Load car #2
			SpawnCarThree(playerid, 1396.0000, -17.0000, 1000.6000, -90.0000,6); // Load car #3
			SpawnCarFour(playerid, 1396.0000, -13.0000, 1000.6000, -90.0000,6); // Load car #4
		}
	case 4: // house A Class
		{
			SpawnCarOne(playerid,  1380.0000, -13.4861, 1000.6000, 180.0000,7); // Load car #1
			SpawnCarTwo(playerid, 1384.0000, -13.4861, 1000.6000, 180.0000,7); // Load car #2
			SpawnCarThree(playerid, 1388.0000, -13.4861, 1000.6000, 180.0000,7); // Load car #3
			SpawnCarFour(playerid, 1392.0000, -13.4861, 1000.6000, 180.0000,7); // Load car #4
			SpawnCarFive(playerid, 1396.0000, -13.4861, 1000.6000, 180.0000,7); // Load car #5
		}
	case 5: // house S Class
		{
			SpawnCarOne(playerid, 1390.0000, -12.9679, 1000.6000, -142.0000,8); // Load car #1
			SpawnCarTwo(playerid, 1397.0000, -12.9679, 1000.6000, -142.0000,8); // Load car #2
			SpawnCarThree(playerid, 1404.0000, -12.9679, 1000.6000, -142.0000,8); // Load car #3
			SpawnCarFour(playerid, 1390.0000, -24.4551, 1000.6000, -42.0000,8); // Load car #4
			SpawnCarFive(playerid, 1397.0000, -24.4551, 1000.6000, -42.0000,8); // Load car #5
			SpawnCarSix(playerid, 1404.0000, -24.4551, 1000.6000, -42.0000,8); // Load car #6
		}
	}
	return SetPVarInt(playerid,"chosencar",0);
}
stock DestroyHouseCars(playerid)
{
	if(pData[playerid][pPHouseKey] != INVALID_HOUSE_ID)
	{
		switch(HouseInfo[pData[playerid][pPHouseKey]][hKlass])
		{
		case 0..1: DestroyVehicleEX(garage_car[playerid][0]),garage_car[playerid][0] = -1;
		case 2:
			{
				DestroyVehicleEX(garage_car[playerid][0]),garage_car[playerid][0] = -1;
				DestroyVehicleEX(garage_car[playerid][1]),garage_car[playerid][1] = -1;
				DestroyVehicleEX(garage_car[playerid][2]),garage_car[playerid][2] = -1;
			}
		case 3:
			{
				DestroyVehicleEX(garage_car[playerid][0]),garage_car[playerid][0] = -1;
				DestroyVehicleEX(garage_car[playerid][1]),garage_car[playerid][1] = -1;
				DestroyVehicleEX(garage_car[playerid][2]),garage_car[playerid][2] = -1;
				DestroyVehicleEX(garage_car[playerid][3]),garage_car[playerid][3] = -1;
			}
		case 4:
			{
				DestroyVehicleEX(garage_car[playerid][0]),garage_car[playerid][0] = -1;
				DestroyVehicleEX(garage_car[playerid][1]),garage_car[playerid][1] = -1;
				DestroyVehicleEX(garage_car[playerid][2]),garage_car[playerid][2] = -1;
				DestroyVehicleEX(garage_car[playerid][3]),garage_car[playerid][3] = -1;
				DestroyVehicleEX(garage_car[playerid][4]),garage_car[playerid][4] = -1;
			}
		case 5:
			{
				DestroyVehicleEX(garage_car[playerid][0]),garage_car[playerid][0] = -1;
				DestroyVehicleEX(garage_car[playerid][1]),garage_car[playerid][1] = -1;
				DestroyVehicleEX(garage_car[playerid][2]),garage_car[playerid][2] = -1;
				DestroyVehicleEX(garage_car[playerid][3]),garage_car[playerid][3] = -1;
				DestroyVehicleEX(garage_car[playerid][4]),garage_car[playerid][4] = -1;
				DestroyVehicleEX(garage_car[playerid][5]),garage_car[playerid][5] = -1;
			}
		}
	}
	house_car[playerid] = -1;
	return SetPVarInt(playerid,"chosencar",0);
}
stock FallAnimation(playerid)
{
	if(IsPlayerApplyAnimation(playerid, "FALL_back") ||
			IsPlayerApplyAnimation(playerid, "FALL_collapse") ||
			IsPlayerApplyAnimation(playerid, "FALL_fall") ||
			IsPlayerApplyAnimation(playerid, "FALL_front") ||
			IsPlayerApplyAnimation(playerid, "FALL_glide") ||
			IsPlayerApplyAnimation(playerid, "FALL_land") ||
			IsPlayerApplyAnimation(playerid, "FALL_skyDive"))
	{
		return true;
	}
	return false;
}
stock Load_Anti_DM_Zone()
{
	anti_dm_zone[0] = CreateDynamicSphere(1154.3456,-1769.5636,16.5938,90);
	CreateDynamicSphere(829.0444,5.0235,1004.1870,50);
	CreateDynamicSphere(1480.9207,-1747.6909,15.3086,70);
	CreateDynamicSphere(263.6395,78.5962,1001.0391,10);
	CreateDynamicSphere(-2036.2848,-112.6223,496.5230,35);

	CreateDynamicSphere(1310.2367,-1369.0114,13.5568,50);
	CreateDynamicSphere(2850.9866,1291.0491,11.3906,100);
	CreateDynamicSphere(-1967.6156,117.4343,27.6875,70);
	CreateDynamicSphere(1995.1815,1017.2842,994.8906,100);
	CreateDynamicSphere(2238.6624,1631.8488,1008.3594,100);

	CreateDynamicSphere(1545.7631,-1290.8684,15.9647,60);
	CreateDynamicSphere(1130.5286,-1.7705,1000.6797,60);
	CreateDynamicSphere(370.5885,173.6026,1008.3828,70);
	CreateDynamicSphere(-2051.33,-114.83,1035.24,50);
	CreateDynamicSphere(-2038.1578,-95.2886,35.1641,50);

	CreateDynamicSphere(2188.6980,-2265.7634,13.4921,100);
	CreateDynamicSphere(226.2621,120.2606,999.0523,60);
	CreateDynamicSphere(-243.1432,-1356.9724,9.1190,150);
	CreateDynamicSphere(-1110.1237,-976.8359,129.2188,150);
	CreateDynamicSphere(21.0851,-15.3521,3.1172,150);
	anti_dm_zone[1] = CreateDynamicSphere(1948.0564,215.4476,29.3082,150);

}
stock IsATerra(playerid)
{
	if(pData[playerid][pMember] == 12 && PlayerToPoint(20.0,playerid,2651.4746,-2004.3387,13.3828) // Ballas
			||pData[playerid][pMember] == 13 && PlayerToPoint(20.0,playerid,2770.7471,-1628.7227,12.1775) // Vagos
			||pData[playerid][pMember] == 15 && PlayerToPoint(20.0,playerid,2492.7532,-1676.3687,13.3380) // Groove
			||pData[playerid][pMember] == 17 && PlayerToPoint(20.0,playerid,1668.5664,-2112.9648,13.5469) // Aztecas
			||pData[playerid][pMember] == 18 && PlayerToPoint(20.0,playerid,2184.1218,-1803.6334,13.3693)) return true; // Rifa
	else return false;
}
stock IsAClub(playerid)
{
	if(pData[playerid][pMember] == 24 && PlayerToPoint(20.0,playerid,681.5385,-477.8127,16.3359) // Mongols MC
			||pData[playerid][pMember] == 26 && PlayerToPoint(20.0,playerid,654.5726,1726.7938,6.9922) // Warlocks MC
			||pData[playerid][pMember] == 29 && PlayerToPoint(20.0,playerid,-249.9311,2603.0923,62.8582)) return true; // Pagans MC
	else return false;
}
stock IsAMedKit(playerid)
{
	if(pData[playerid][pMember] == 12 && PlayerToPoint(20.0,playerid,619.1865,-151.3998,1093.2360) // Ballas Base
			||pData[playerid][pMember] == 13 && PlayerToPoint(20.0,playerid,2794.1233,-1607.5570,-36.5231) // Vagos Base
			||pData[playerid][pMember] == 15 && PlayerToPoint(20.0,playerid,2496.0129,-1708.9232,1014.7422) // Groove Base
			||pData[playerid][pMember] == 17 && PlayerToPoint(20.0,playerid,1586.4243,-1606.0127,394.4919) // Aztecas Base
			||pData[playerid][pMember] == 18 && PlayerToPoint(20.0,playerid,284.8345,-142.5717,1161.2759) // rifa
			||pData[playerid][pMember] == 5 && PlayerToPoint(70.0,playerid,1265.7104,-793.7453,1084.0078) && GetPlayerVirtualWorld(playerid) == 2
			||pData[playerid][pMember] == 6 && PlayerToPoint(70.0,playerid,1265.7104,-793.7453,1084.0078) && GetPlayerVirtualWorld(playerid) == 0
			||pData[playerid][pMember] == 14 && PlayerToPoint(70.0,playerid,1235.7234,-823.1919,1083.1563) && GetPlayerVirtualWorld(playerid) == 1) return true;
	else return false;
}
stock DestroyMyVehs(playerid)
{
	new bool:null[6];
	if(pData[playerid][pPHouseKey] != INVALID_HOUSE_ID)
	{
		foreach(new i: Player)
		{
			if(GetPVarInt(i,"job_auto_seat") == garage_car[playerid][0]) null[0] = true;
			if(GetPVarInt(i,"job_auto_seat") == garage_car[playerid][1]) null[1] = true;
			if(GetPVarInt(i,"job_auto_seat") == garage_car[playerid][2]) null[2] = true;
			if(GetPVarInt(i,"job_auto_seat") == garage_car[playerid][3]) null[3] = true;
			if(GetPVarInt(i,"job_auto_seat") == garage_car[playerid][4]) null[4] = true;
			if(GetPVarInt(i,"job_auto_seat") == garage_car[playerid][5]) null[5] = true;
		}
		if(null[0]) caroff[garage_car[playerid][0]] = true; else if(HouseInfo[pData[playerid][pPHouseKey]][hKlass] >= 0) DestroyVehicleEX(garage_car[playerid][0]),garage_car[playerid][0] = -1;
		if(null[1]) caroff[garage_car[playerid][1]] = true; else if(HouseInfo[pData[playerid][pPHouseKey]][hKlass] >= 2) DestroyVehicleEX(garage_car[playerid][1]),garage_car[playerid][1] = -1;
		if(null[2]) caroff[garage_car[playerid][2]] = true; else if(HouseInfo[pData[playerid][pPHouseKey]][hKlass] >= 3) DestroyVehicleEX(garage_car[playerid][2]),garage_car[playerid][2] = -1;
		if(null[3]) caroff[garage_car[playerid][3]] = true; else if(HouseInfo[pData[playerid][pPHouseKey]][hKlass] >= 4) DestroyVehicleEX(garage_car[playerid][3]),garage_car[playerid][3] = -1;
		if(null[4]) caroff[garage_car[playerid][4]] = true; else if(HouseInfo[pData[playerid][pPHouseKey]][hKlass] >= 5) DestroyVehicleEX(garage_car[playerid][4]),garage_car[playerid][4] = -1;
		//house_car[playerid] = -1;
	}

	house_car[playerid] = -1;
	return true;
}
stock IsPlayerNearMafiaHouse(playerid)
{
	if(PlayerToPoint(70.0,playerid,1487.0521,2773.9417,10.8203) // YAKUZA
			||PlayerToPoint(70.0,playerid,961.1967,1736.3969,8.6484) // RUSSIAN
			||PlayerToPoint(50.0,playerid,1440.1334,752.5669,10.8203)) // LCN
	{
		return true;
	}
	return false;
}
stock IsABank(playerid)
{
	if(PlayerToPoint(10.0,playerid,495.1932,1308.4865,1774.4839) && GetPlayerVirtualWorld(playerid) == 44)
	{
		return true;
	}
	return false;
}
stock IsPlayerNearVehicle(playerid, vehicleid, Float:range)
{
	new Float:X, Float:Y, Float:Z;
	AntiCheatGetVehiclePos(vehicleid, X, Y, Z);
	if(IsPlayerInRangeOfPoint(playerid, range, X, Y, Z))return true;
	else return false;
}
stock IsNearOurCar(playerid)
{
	if(IsPlayerNearVehicle(playerid, house_car[playerid], 3.5)
			||IsPlayerNearVehicle(playerid, garage_car[playerid][0], 3.5)
			||IsPlayerNearVehicle(playerid, garage_car[playerid][1], 3.5)
			||IsPlayerNearVehicle(playerid, garage_car[playerid][2], 3.5)
			||IsPlayerNearVehicle(playerid, garage_car[playerid][3], 3.5)
			||IsPlayerNearVehicle(playerid, garage_car[playerid][4], 3.5)
			||IsPlayerNearVehicle(playerid, garage_car[playerid][5], 3.5))
	{
		return true;
	}
	return false;
}
stock PJ(carid){switch(GetVehicleModel(carid)){case 534,535,536,558,559,560,561,562,565,575,576,483,567:return true;}return false;}
stock zapretgun(playerid){switch(GetPlayerWeapon(playerid)){case 4,16,17,18,27,26,28,32,37,36,42,38,45,35:return true;}return false;}
stock IsABoat(carid){switch(GetVehicleModel(carid)){case 472,473,493,595,484,430,452..454,446:return true;}return false;}
stock IsABike(carid){switch(GetVehicleModel(carid)){case 448,435,449,450,457,462,464,465,481,485,501,509,510,530,564,569,570,584,594,606,607,608,610,611:return true;}return false;}
stock IsATanker(carid){switch(GetVehicleModel(carid)){case 514,515,403:return true;}return false;}
stock IsNoFuel(carid){switch(GetVehicleModel(carid)){case 481, 509, 510, 462:return true;}return false;}
stock IsACopCar(carid){switch(GetVehicleModel(carid)){case 427,523,596,597,598,497,599:return true;}return false;}
stock IsAFbiCar(carid) if(fbicar[0] <= carid <= fbicar[16]) return true; else return false;
stock IsAArmCar(carid){switch(GetVehicleModel(carid)){case 425,470,433,432,520,500,497,548,523:return true;}return false;}
stock IsAtWormPlace(playerid)
{
	if(PlayerToPoint(350.0,playerid,-256.47,-1353.23,8.39)) return true;
	else if(PlayerToPoint(200.0,playerid,1942.10,211.14,30.32)) return 2;
	else if(PlayerToPoint(250.0,playerid,-1104.82,-989.44,129.22)) return 3;
	else if(PlayerToPoint(250.0,playerid,-11.38,-69,3.12)) return 3;
	else if(PlayerToPoint(40.0,playerid,-207.20,-5.28,3.11)) return 3;
	return false;
}
stock IsAtFishPlace(playerid)
{
	if(PlayerToPoint(40.0,playerid,403.8266,-2088.7598,7.8359)) return true;
	else if(PlayerToPoint(40.0,playerid,1628.1157,577.1617,1.7578)) return 2;
	else if(PlayerToPoint(40.0,playerid,834.62,-2067.49,12.98)) return 3;
	return false;
}
stock IsAtTPlace(playerid)
{
	if(PlayerToPoint(10.0,playerid,256.4736,1414.5182,10.7075)) return true;
	else if(PlayerToPoint(10.0,playerid,-1046.7723,-670.7208,32.3516)) return 2;
	else if(PlayerToPoint(10.0,playerid,608.7718,847.8765,-43.1532)) return 3;
	else if(PlayerToPoint(10.0,playerid,-1873.0896,-1720.2430,21.7500)) return 4;
	else if(PlayerToPoint(10.0,playerid,-449.3336,-65.9115,59.4158)) return 5;
	else if(PlayerToPoint(10.0,playerid,-1978.6846,-2434.8274,30.6250)) return 6;
	else if(PlayerToPoint(10.0,playerid,2601.7222,-2226.5867,13.3732)) return 7;
	else if(PlayerToPoint(10.0,playerid,-1731.4509,118.9413,3.5547)) return 8;
	return false;
}
stock IsAtBPlace(playerid)
{
	if(PlayerToPoint(7.0,playerid,-1027.4069,-593.4584,32.0126)) return true;
	else if(PlayerToPoint(7.0,playerid,-514.4622,-543.0626,25.5234)) return 2;
	return false;
}
stock IsAtTTPlace(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid,10.0,2601.7222,-2226.5867,13.3732)) return true;
	else if(IsPlayerInRangeOfPoint(playerid,10.0,-1731.4509,118.9413,3.5547)) return 2;
	return false;
}
stock CheckPlayerDistanceToVehicle(Float:radi, playerid, vehicleid)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:PX,Float:PY,Float:PZ,Float:X,Float:Y,Float:Z;
		AntiCheatGetPos(playerid,PX,PY,PZ);
		AntiCheatGetVehiclePos(vehicleid, X,Y,Z);
		new Float:Distance = (X-PX)*(X-PX)+(Y-PY)*(Y-PY)+(Z-PZ)*(Z-PZ);
		if(Distance <= radi*radi) return true;
	}
	return false;
}
SetPosInFrontOfPlayer(playerid,giveplayerid,Float:distance)
{
	new Float:x,Float:y,Float:z,Float:a;
	AntiCheatGetPos(playerid, x, y,z);GetPlayerFacingAngle(playerid, a);
	x += (distance * floatsin(-a, degrees));
	y += (distance * floatcos(-a, degrees));
	SetPlayerPos(giveplayerid,x,y,z);SetPlayerFacingAngle(giveplayerid,a);
}
stock GetXYInFrontOfVehicle(vehid, &Float:x2, &Float:y2, Float:distance)
{
	new Float:a;
	AntiCheatGetVehiclePos(vehid, x2, y2, a);
	GetVehicleZAngle(vehid, a);
	x2 += (distance * floatsin(-a, degrees));
	y2 += (distance * floatcos(-a, degrees));
}
stock CheckPlayerDistanceToVehicleEx(Float:radi, playerid, vehicleid)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:PX,Float:PY,Float:PZ,Float:X,Float:Y,Float:Z;
		AntiCheatGetPos(playerid,PX,PY,PZ);
		AntiCheatGetVehiclePos(vehicleid, X,Y,Z);
		GetXYInFrontOfVehicle(vehicleid, X, Y, -3.0);
		new Float:Distance = (X-PX)*(X-PX)+(Y-PY)*(Y-PY)+(Z-PZ)*(Z-PZ);
		if(Distance <= radi*radi) return true;
	}
	return false;
}
stock GetXYInFrontOfPlayer(playerid, &Float:x2, &Float:y2, Float:distance)
{
	new Float:a;
	AntiCheatGetPos(playerid, x2, y2, a);
	GetPlayerFacingAngle(playerid, a);
	if(GetPlayerVehicleID(playerid)) GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
	x2 += (distance * floatsin(-a, degrees));
	y2 += (distance * floatcos(-a, degrees));
}
stock GetXYInBackOfPlayer(const playerid, &Float:x, &Float:y, const Float:distance)
{
	new Float:a; AntiCheatGetPos(playerid, x, y, a); GetPlayerFacingAngle(playerid, a);
	if (IsPlayerInAnyVehicle(playerid))
	{
		vid=GetPlayerVehicleID(playerid);
		if (vid > 0 && vid <= MAX_VEHICLES)GetVehicleZAngle(vid, a);
	}
	x -= (distance * floatsin(-a, degrees)); y -= (distance * floatcos(-a, degrees));
}
stock GetXYInBackOfVehicle(vehicleid, &Float:x2, &Float:y2, Float:distance)
{
	new Float:a;
	AntiCheatGetVehiclePos(vehicleid, x2, y2, a);
	GetVehicleZAngle(vehicleid, a);
	x2 += (distance * floatsin(-a+180, degrees));
	y2 += (distance * floatcos(-a+180, degrees));
}

// /bizwar
new WarStart;
new MFrakCD[20];
new ZoneWar;
new ZoneID;
new ZoneTimer;

new TotalGzR;
new TotalGzA;
new TotalGzB;
new TotalGzG;
new TotalGzV;
new OnZONE[131][20];
new ZoneOnBattle[131];
new allowedfactions[] = {12,13,15,17,18,24,26,29};
new GZSafeTime[131];
enum GzoneInfo
{
	gID,
	gZone,
	Float:gCoords[4],
	gFrakVlad,
	gNapad
}
new GZInfo[131][GzoneInfo], TOTALGZ;
new FrakCD[20];

publics: MzCheck()
{
	for(new i = 1;i <= TotalBizz; i++)
	{
		if(BizzInfo[i][bCapture] != 0)
		{
			if(BizzInfo[i][bMafia] == 0)
			{
				EndMafiaWar();
				GangZoneStopFlashForAll(ZoneWar);
				GangZoneHideForAll(ZoneWar);
				GangZoneDestroy(ZoneWar);
				printf("GangZoneDestroy [MafiaWar GZ] [ID: %i]",ZoneWar);
				SaveMySQL(4,i);
				return true;
			}
			ZoneTimer--;
			new ZonePlayer[20];
			foreach(new x: Player) // Счетчик убийств
			{
				if(!pData[x][pLogin]) continue;
				if(pData[x][pMember] == BizzInfo[i][bCapture] || pData[x][pMember] == BizzInfo[i][bMafia])
				{
					ZonePlayer[pData[x][pMember]] = 0;
					if(!GetPVarInt(x,"mWar_on"))
					{
						PlayerTextDrawShow(x, mWar[x]);
						SetPVarInt(x,"mWar_on",1);
						SetPlayerToTeamColor(x);
						GangZoneShowForAll(ZoneWar, 0xB2B2B2AA);
						GangZoneFlashForAll(ZoneWar,COLOR_RED);
					}
					format(YCMDstr,120,"~y~kills~n~~n~~g~%s:~w~ %i~n~~r~%s:~w~ %i",GetMafiaName(BizzInfo[i][bMafia]),CountOnZone[BizzInfo[i][bMafia]],GetMafiaName(BizzInfo[i][bCapture]),CountOnZone[BizzInfo[i][bCapture]]);
					PlayerTextDrawSetString(x,mWar[x],YCMDstr);
					if(PlayerToKvadrat(x, 208.99609375, 2479.546875, 357.99609375, 2551.546875) && IsAMafia(x)) ZonePlayer[pData[x][pMember]] ++; // заброшка
					else if(PlayerToKvadrat(x,286.9487, 871.2994, 402.0977, 926.5380) && IsAMafia(x)) ZonePlayer[pData[x][pMember]] ++; // Карьер ЛВ
					else if(PlayerToKvadrat(x,-1889.1348,-1751.2496, -1830.0239, -1560.2955) && IsAMafia(x)) ZonePlayer[pData[x][pMember]] ++; // Карьер СФ
				}
			}
			foreach(new x: Player) // Итог войны за бизнес
			{
				if(GetPVarInt(x,"mWar_on"))
				{
					if(ZoneTimer <= 2)
					{
						if(CountOnZone[BizzInfo[i][bCapture]] == 9999)
						{
							format(cString,144,"Вам удалось взять под контроль бизнес %s без войны",BizzInfo[i][bMessage]);
							SendFamilyMessage(BizzInfo[i][bCapture],0x114D71AA, cString);
							BizzInfo[i][bMafia] = BizzInfo[i][bCapture];
						}
						else if(CountOnZone[BizzInfo[i][bMafia]] > CountOnZone[BizzInfo[i][bCapture]] && ZonePlayer[BizzInfo[i][bMafia]] >= ZonePlayer[BizzInfo[i][bCapture]]
								|| ZonePlayer[BizzInfo[i][bMafia]] == 0 && ZonePlayer[BizzInfo[i][bCapture]] == 0 && CountOnZone[BizzInfo[i][bMafia]] > CountOnZone[BizzInfo[i][bCapture]]
								|| ZonePlayer[BizzInfo[i][bMafia]] >= 1 && ZonePlayer[BizzInfo[i][bCapture]] == 0 && CountOnZone[BizzInfo[i][bCapture]] >= CountOnZone[BizzInfo[i][bMafia]])
						{
							format(cString,144,"Вы отстояли свой бизнес: %s",BizzInfo[i][bMessage]);
							SendFamilyMessage(BizzInfo[i][bMafia],0x114D71AA, cString);
							SendFamilyMessage(BizzInfo[i][bCapture],COLOR_RED, " Вам не удалось завоевать ещё один бизнес");
						}
						else if(CountOnZone[BizzInfo[i][bCapture]] > CountOnZone[BizzInfo[i][bMafia]] && ZonePlayer[BizzInfo[i][bCapture]] >= ZonePlayer[BizzInfo[i][bMafia]]
								|| ZonePlayer[BizzInfo[i][bMafia]] == 0 && ZonePlayer[BizzInfo[i][bCapture]] == 0 && CountOnZone[BizzInfo[i][bCapture]] > CountOnZone[BizzInfo[i][bMafia]]
								|| ZonePlayer[BizzInfo[i][bCapture]] >= 1 && ZonePlayer[BizzInfo[i][bMafia]] == 0 && CountOnZone[BizzInfo[i][bCapture]] >= CountOnZone[BizzInfo[i][bMafia]])
						{
							SendFamilyMessage(BizzInfo[i][bCapture],COLOR_GREEN, " Вы завоевали новый бизнес");
							SendFamilyMessage(BizzInfo[i][bMafia],COLOR_RED, " Вы потеряли контроль над одним из своих бизнесов");
							BizzInfo[i][bMafia] = BizzInfo[i][bCapture];
						}
						else
						{
							SendFamilyMessage(BizzInfo[i][bCapture],COLOR_GREEN, " Вам нужно убить всех противников.");
							SendFamilyMessage(BizzInfo[i][bMafia],COLOR_RED, " Вам нужно убить всех противников.");
							ZoneTimer = 20;
							MFrakCD[BizzInfo[i][bMafia]] = 20;
							MFrakCD[BizzInfo[i][bCapture]] = 20;
							return true;
						}
						EndMafiaWar();
						SaveMySQL(4,i);
					}
					return true;
				}
			}
		}
	}
	return true;
}
stock EndMafiaWar()
{
	for(new i = 1;i <= TotalBizz; i++)
	{
		foreach(new x: Player)
		{
			if(GetPVarInt(x,"mWar_on"))
			{
				DeletePVar(x,"mWar_on");
				PlayerTextDrawHide(x, mWar[x]);
				for(new i_ = 0; i_ < 5; i_++) { SendDeathMessageToPlayer(x,INVALID_PLAYER_ID-1, INVALID_PLAYER_ID-1, 0); }
			}
		}
		CountOnZone[BizzInfo[i][bMafia]] = 0;
		CountOnZone[BizzInfo[i][bCapture]] = 0;
		MFrakCD[BizzInfo[i][bMafia]] = 0;
		MFrakCD[BizzInfo[i][bCapture]] = 0;
		BizzInfo[i][bCapture] = 0;
		SaveMySQL(4,i);
	}
	GangZoneStopFlashForAll(ZoneWar);
	GangZoneHideForAll(ZoneWar);
	GangZoneDestroy(ZoneWar);
	printf("GangZoneDestroy [MafiaWar GZ] [ID: %i]",ZoneWar);
	KillTimer(MzCheckTimer);
	WarStart = 7200;
	ZoneID = 0;
	ZoneTimer = 0;
	return true;
}
publics: GzCheck()
{
	UpdateFresh();
	Fresh();
	for(new i = 1; i <= TOTALGZ; i++)
	{
		if(ZoneOnBattle[i] == 0) continue;
		if(GZSafeTime[i] > 0) GZSafeTime[i] --;
		OnZONE[i][GZInfo[i][gFrakVlad]] = 0;
		OnZONE[i][GZInfo[i][gNapad]] = 0;
		foreach(new x: Player)
		{
			if(!pData[x][pLogin]) continue;
			new y = pData[x][pMember];
			if(y == GZInfo[i][gNapad] || y == GZInfo[i][gFrakVlad])
			{
				if(!GetPVarInt(x,"capture_on"))
				{
					PlayerTextDrawShow(x, Capture[x]);
					SetPVarInt(x,"capture_on",1);
					SetPlayerToTeamColor(x);
				}
				format(string,120,"~y~kills~n~~n~~g~%s:~w~ %i~n~~r~%s:~w~ %i",GetGangName(GZInfo[i][gFrakVlad]),CountOnZone[GZInfo[i][gFrakVlad]],GetGangName(GZInfo[i][gNapad]),CountOnZone[GZInfo[i][gNapad]]);
				PlayerTextDrawSetString(x,Capture[x],string);
				if(PlayerToKvadrat(x,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3])) OnZONE[i][y] ++;
			}
		}
		if(GZSafeTime[i] <= 2)
		{
			if(CountOnZone[GZInfo[i][gFrakVlad]] > CountOnZone[GZInfo[i][gNapad]] && OnZONE[i][GZInfo[i][gFrakVlad]] >= OnZONE[i][GZInfo[i][gNapad]]
					|| OnZONE[i][GZInfo[i][gNapad]] == 0 && OnZONE[i][GZInfo[i][gFrakVlad]] == 0 && CountOnZone[GZInfo[i][gFrakVlad]] > CountOnZone[GZInfo[i][gNapad]]
					|| OnZONE[i][GZInfo[i][gFrakVlad]] >= 1 && OnZONE[i][GZInfo[i][gNapad]] == 0 && CountOnZone[GZInfo[i][gFrakVlad]] >= CountOnZone[GZInfo[i][gNapad]])
			{
				format(cString, 144, " Закончилась война между: {FFFFFF}%s и %s",GetGangName(GZInfo[i][gFrakVlad]),GetGangName(GZInfo[i][gNapad]));
				ABroadCast(0xFF0000AA,cString,2);
				format(cString, 144, " В войне победили: {FFFFFF}%s",GetGangName(GZInfo[i][gFrakVlad]));
				ABroadCast(COLOR_BLUE,cString,2);
				format(cString, 144, " Число киллов и кол-во людей в КВ %s : {FFFFFF}%i убийств и %i человек в квадрате",GetGangName(GZInfo[i][gFrakVlad]),CountOnZone[GZInfo[i][gFrakVlad]],OnZONE[i][GZInfo[i][gFrakVlad]]);
				ABroadCast(COLOR_BLUE,cString,2);
				format(cString, sizeof(cString), " Число киллов и кол-во людей в КВ %s : {FFFFFF}%i убийств и %i человек в квадрате",GetGangName(GZInfo[i][gNapad]),CountOnZone[GZInfo[i][gNapad]],OnZONE[i][GZInfo[i][gNapad]]);
				ABroadCast(COLOR_BLUE,cString,2);

				SendFamilyMessage(GZInfo[i][gFrakVlad],0x00B953AA,"Вы отстояли свою территорию");
				SendFamilyMessage(GZInfo[i][gNapad],0xC56565AA,"Вам не удалось захватить территорию");
			}
			else if(CountOnZone[GZInfo[i][gNapad]] > CountOnZone[GZInfo[i][gFrakVlad]] && OnZONE[i][GZInfo[i][gNapad]] >= OnZONE[i][GZInfo[i][gFrakVlad]]
					|| OnZONE[i][GZInfo[i][gNapad]] == 0 && OnZONE[i][GZInfo[i][gFrakVlad]] == 0 && CountOnZone[GZInfo[i][gNapad]] > CountOnZone[GZInfo[i][gFrakVlad]]
					|| OnZONE[i][GZInfo[i][gNapad]] >= 1 && OnZONE[i][GZInfo[i][gFrakVlad]] == 0 && CountOnZone[GZInfo[i][gNapad]] >= CountOnZone[GZInfo[i][gFrakVlad]])
			{
				format(cString, sizeof(cString), " Закончилась война между: {FFFFFF}%s и %s",GetGangName(GZInfo[i][gFrakVlad]),GetGangName(GZInfo[i][gNapad]));
				ABroadCast(0xFF0000AA,cString,2);
				format(cString, sizeof(cString), " В войне победили: {FFFFFF}%s",GetGangName(GZInfo[i][gNapad]));
				ABroadCast(COLOR_BLUE,cString,2);
				format(cString, sizeof(cString), " Число киллов и кол-во людей в КВ %s : {FFFFFF}%i убийств и %i человек в квадрате",GetGangName(GZInfo[i][gFrakVlad]),CountOnZone[GZInfo[i][gFrakVlad]],OnZONE[i][GZInfo[i][gFrakVlad]]);
				ABroadCast(COLOR_BLUE,cString,2);
				format(cString, sizeof(cString), " Число киллов и кол-во людей в КВ %s : {FFFFFF}%i убийств и %i человек в квадрате",GetGangName(GZInfo[i][gNapad]),CountOnZone[GZInfo[i][gNapad]],OnZONE[i][GZInfo[i][gNapad]]);
				ABroadCast(COLOR_BLUE,cString,2);

				SendFamilyMessage(GZInfo[i][gNapad], 0x00B953AA," Вы взяли под свой контроль новую территорию");
				for(new m = 1; m <= TOTALGZ; m++)
				{
					if(GZInfo[m][gFrakVlad] == 12) TotalGzB++;
					if(GZInfo[m][gFrakVlad] == 13) TotalGzV++;
					if(GZInfo[m][gFrakVlad] == 15) TotalGzG++;
					if(GZInfo[m][gFrakVlad] == 17) TotalGzA++;
					if(GZInfo[m][gFrakVlad] == 18) TotalGzR++;
				}
				switch(GZInfo[i][gNapad])
				{
				case 12: format(string, 144, " Теперь ваша банда будет получать каждый час %i вирт",TotalGzB*200);
				case 13: format(string, 144, " Теперь ваша банда будет получать каждый час %i вирт",TotalGzV*200);
				case 15: format(string, 144, " Теперь ваша банда будет получать каждый час %i вирт",TotalGzG*200);
				case 17: format(string, 144, " Теперь ваша банда будет получать каждый час %i вирт",TotalGzA*200);
				case 18: format(string, 144, " Теперь ваша банда будет получать каждый час %i вирт",TotalGzR*200);
				}
				SendFamilyMessage(GZInfo[i][gFrakVlad], 0xC56565AA," Вы потеряли контроль одной из своих территорий");
				GZInfo[i][gFrakVlad] = GZInfo[i][gNapad];
				SendFamilyMessage(GZInfo[i][gNapad], 0x00B953AA, string);
			}
			else
			{
				GZSafeTime[i] = 120;
				return true;
			}
			EndCapture(i);
		}
	}
	for(new i = 1; i <= TOTALGZ; i++)
	{
		for(new z = 0;z<20;z++)
		{
			OnZONE[i][z] =0;
		}
	}
	return true;
}
stock EndCapture(i)
{
	foreach(new x: Player)
	{
		if(GetPVarInt(x,"capture_on"))
		{
			PlayerTextDrawHide(x, Capture[x]);
			DeletePVar(x,"capture_on");
			for(new i_ = 0; i_ < 5; i_++) { SendDeathMessageToPlayer(x,INVALID_PLAYER_ID-1, INVALID_PLAYER_ID-1, 0); }
		}
	}
	CountOnZone[GZInfo[i][gFrakVlad]] = 0;
	CountOnZone[GZInfo[i][gNapad]] = 0;
	GZInfo[i][gNapad] = 0;
	ZoneOnBattle[i] = 0;
	GangZoneStopFlashForAll(GZInfo[i][gZone]);
	GangZoneHideForAll(GZInfo[i][gZone]);
	GangZoneShowForAll(GZInfo[i][gZone],GetGangZoneColor(i));
	GZSafeTime[i] = 0;
	UpdateTable_int(TABLE_GANGZONE,"gang_owner",GZInfo[i][gFrakVlad],"id",GZInfo[i][gID]);
	return true;
}


stock IsInAllowed(playerid)
{
	for(new i = 0; i < sizeof(allowedfactions); i++)
	{
		if(pData[playerid][pMember] == allowedfactions[i]&&pData[playerid][pRank] >= 7) return true;
	}
	return false;
}
stock IsAPlane(carid){switch(GetVehicleModel(carid)){case 592,577,511,512,593,520,553,476,519,460,513,548,417,487,488,497,563,447,469:return true;}return false;}
publics: IsAGunsCar(carid)
{
	if(carid == gunscar[0]
			||carid == gunscar[1]
			||carid == gunscar[2]
			||carid == gunscar[3]
			||carid == gunscar[4]
			||carid == gunscar[5])
	{
		return true;
	}
	return false;
}
stock CreateTextDraws(playerid)
{
	CaptureTextDraws(playerid);
	MafiaWarTextDraws(playerid);

	ShopText[playerid] = CreatePlayerTextDraw(playerid,509.000000,180.000000,"Model: Landstalker");
	PlayerTextDrawBackgroundColor(playerid,ShopText[playerid],255);
	PlayerTextDrawFont(playerid,ShopText[playerid],1);
	PlayerTextDrawSetOutline(playerid,ShopText[playerid],1);
	PlayerTextDrawSetShadow(playerid,ShopText[playerid],0);
	PlayerTextDrawLetterSize(playerid,ShopText[playerid],0.270000,1.200000);
	PlayerTextDrawColor(playerid,ShopText[playerid],-1);
	PlayerTextDrawSetProportional(playerid,ShopText[playerid],1);
	//========================
	RouletText[playerid] = CreatePlayerTextDraw(playerid,434.000000, 318.000000,"");
	PlayerTextDrawBackgroundColor(playerid,RouletText[playerid], 255);
	PlayerTextDrawAlignment(playerid,RouletText[playerid], 0);
	PlayerTextDrawLetterSize(playerid,RouletText[playerid],0.500000, 2.100000);
	PlayerTextDrawFont(playerid,RouletText[playerid],0);
	PlayerTextDrawColor(playerid,RouletText[playerid],0xE1E1E1AA);
	PlayerTextDrawSetOutline(playerid,RouletText[playerid],0);
	PlayerTextDrawSetProportional(playerid,RouletText[playerid],2);
	PlayerTextDrawHide(playerid,RouletText[playerid]);
	// Кости
	PlayerBone[playerid][0] = CreatePlayerTextDraw(playerid, 556.603332, 142.333358, "Table_1");
	PlayerTextDrawLetterSize(playerid, PlayerBone[playerid][0], 0.491228, 1.524165);
	PlayerTextDrawAlignment(playerid, PlayerBone[playerid][0], 2);
	PlayerTextDrawColor(playerid, PlayerBone[playerid][0], 548012031);
	PlayerTextDrawUseBox(playerid, PlayerBone[playerid][0], true);
	PlayerTextDrawBoxColor(playerid, PlayerBone[playerid][0], 0);
	PlayerTextDrawSetShadow(playerid, PlayerBone[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, PlayerBone[playerid][0], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerBone[playerid][0], 51);
	PlayerTextDrawFont(playerid, PlayerBone[playerid][0], 0);
	PlayerTextDrawSetProportional(playerid, PlayerBone[playerid][0], 1);

	PlayerBone[playerid][1] = CreatePlayerTextDraw(playerid, 527.309020, 163.916000, "John_Turner~n~Andriano_Marez~n~Carl_Matador~n~--~n~--");
	PlayerTextDrawLetterSize(playerid, PlayerBone[playerid][1], 0.175188, 1.010665);
	PlayerTextDrawAlignment(playerid, PlayerBone[playerid][1], 1);
	PlayerTextDrawColor(playerid, PlayerBone[playerid][1], -1347440641);
	PlayerTextDrawUseBox(playerid, PlayerBone[playerid][1], true);
	PlayerTextDrawBoxColor(playerid, PlayerBone[playerid][1], 0);
	PlayerTextDrawSetShadow(playerid, PlayerBone[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, PlayerBone[playerid][1], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerBone[playerid][1], 51);
	PlayerTextDrawFont(playerid, PlayerBone[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, PlayerBone[playerid][1], 1);

	PlayerBone[playerid][2] = CreatePlayerTextDraw(playerid, 585.057067, 165.082687, "++~n~--~n~++~n~--~n~--");
	PlayerTextDrawLetterSize(playerid, PlayerBone[playerid][2], 0.175188, 1.010665);
	PlayerTextDrawAlignment(playerid, PlayerBone[playerid][2], 2);
	PlayerTextDrawColor(playerid, PlayerBone[playerid][2], -1347440641);
	PlayerTextDrawUseBox(playerid, PlayerBone[playerid][2], true);
	PlayerTextDrawBoxColor(playerid, PlayerBone[playerid][2], 0);
	PlayerTextDrawSetShadow(playerid, PlayerBone[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, PlayerBone[playerid][2], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerBone[playerid][2], 51);
	PlayerTextDrawFont(playerid, PlayerBone[playerid][2], 1);
	PlayerTextDrawSetProportional(playerid, PlayerBone[playerid][2], 1);

	PlayerBone[playerid][3] = CreatePlayerTextDraw(playerid, 527.086486, 214.666687, "Bet:_100000~n~Bank:_200000~n~Money:_330500");
	PlayerTextDrawLetterSize(playerid, PlayerBone[playerid][3], 0.186432, 1.115664);
	PlayerTextDrawAlignment(playerid, PlayerBone[playerid][3], 1);
	PlayerTextDrawColor(playerid, PlayerBone[playerid][3], -1347440641);
	PlayerTextDrawSetShadow(playerid, PlayerBone[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, PlayerBone[playerid][3], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerBone[playerid][3], 51);
	PlayerTextDrawFont(playerid, PlayerBone[playerid][3], 1);
	PlayerTextDrawSetProportional(playerid, PlayerBone[playerid][3], 1);

	FishingText[playerid] = CreatePlayerTextDraw(playerid,49.194732, 245.583328, "~y~Press: ~w~L.Alt~n~~n~~y~Tackle: ~w~0~n~~y~Worms: ~w~0~n~~y~Sonar: ~w~0");
	PlayerTextDrawAlignment(playerid,FishingText[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid,FishingText[playerid], 255);
	PlayerTextDrawFont(playerid,FishingText[playerid], 1);
	PlayerTextDrawLetterSize(playerid,FishingText[playerid], 0.388624, 1.220832);
	PlayerTextDrawColor(playerid,FishingText[playerid], 0xFFFF1FAA);
	PlayerTextDrawSetOutline(playerid,FishingText[playerid], 0);
	PlayerTextDrawSetProportional(playerid,FishingText[playerid], 1);
	PlayerTextDrawSetShadow(playerid,FishingText[playerid], 0);
	PlayerTextDrawSetSelectable(playerid,FishingText[playerid], 0);
	PlayerTextDrawHide(playerid,FishingText[playerid]);
	
	//================================= ROB's ==================================
	robsdraw[playerid] = CreatePlayerTextDraw(playerid, 200.995651, 391.999938, "~b~[IIIIIIIIIIIIIIIIIIIIIIIIIIIIII~b~]");
	PlayerTextDrawLetterSize(playerid, robsdraw[playerid], 0.584465, 2.889167);
	PlayerTextDrawAlignment(playerid, robsdraw[playerid], 1);
	PlayerTextDrawColor(playerid, robsdraw[playerid], -1);
	PlayerTextDrawSetShadow(playerid, robsdraw[playerid], 0);
	PlayerTextDrawSetOutline(playerid, robsdraw[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, robsdraw[playerid], 51);
	PlayerTextDrawFont(playerid, robsdraw[playerid], 1);
	PlayerTextDrawSetProportional(playerid, robsdraw[playerid], 1);
}
stock ResetNew(playerid)
{
	for(new i = 0; i <= 5; i++) garage_car[playerid][i] = -1;
	
	for(new idx = 0; idx < TOTALSTYLELIST; idx++)
	{
		if(strcmp(StyleList[idx][slName],pData[playerid][pName],false) == 0 || strcmp(StyleList[idx][slName_two],pData[playerid][pName],false) == 0)
		{
			strmid(StyleList[idx][slName],StyleList[idx+1][slName], 0, strlen(StyleList[idx+1][slName]), MAX_PLAYER_NAME);
			strmid(StyleList[idx][slName_two],StyleList[idx+1][slName_two], 0, strlen(StyleList[idx+1][slName_two]), MAX_PLAYER_NAME);
			StyleList[idx][slPrice] = StyleList[idx+1][slPrice];
			TOTALSTYLELIST--;
		}
	}

	//static pData[pInfo]
	inTaxi[playerid] = INVALID_PLAYER_ID;
	robh[playerid] = false;
	SelectCharPlace[playerid] = 0;
	pData[playerid][pBank] = 0;
	SelectCharID[playerid] = 0;
	SelectChar[playerid] = 0;
	PicCP[playerid] = 0;
	PicCP[playerid] = 0;
	enterbiz[playerid] = 0;
	TextDrawHideForPlayer(playerid, BoxPanel);
	job_car[playerid] = 0;
	proverkaforma[playerid] = 0;
	SetPlayerSkills(playerid);
	SelectCharPlace[playerid] = 0;
	pData[playerid][pAdmin] = 0;
	pData[playerid][pMember] = 0;
	gcontract[playerid] = 0;
	pData[playerid][pAdmin] = 0;
	pData[playerid][pHelper] = 0;
	tipster[playerid] = 0;
	CallInfo[playerid][callused] = 0;
	tipsterlisten[playerid] = 0;
	ResetPlayerWeaponEx(playerid);
	recognition[playerid] = 0;
	pData[playerid][pCash] = 0;
	dostup[playerid] = 0;
	tookmoped[playerid] = 0;
	house_car[playerid] = -1;
	pData[playerid][pHelper] = 0;
	ZoneOffer[playerid] = 999;
	pData[playerid][pJob] = 0;
	ZonePrice[playerid] = 0;
	Armour[playerid] = 0;
	robh[playerid] = false;
	KeysOffer[playerid] = 999;
	KeysPrice[playerid]= 999;
	KeysOffer[KeysOffer[playerid]] = 999;
	DrugOffer[playerid] = 999;
	DrugPrice[playerid]= 999;
	DrugGram[playerid]= 999;
	TicketOffer[playerid] = 999;
	TicketMoney[playerid] = 0;
	ProposeOffer[playerid] = 999;
	MarryWitness[playerid] = 999;
	MarryWitnessOffer[playerid] = 999;
	ProposedTo[playerid] = 999;
	GotProposedBy[playerid] = 999;
	DivorceOffer[playerid] = 999;
	SelectCharID[playerid] = 0;
	RaceCP[playerid] = 0;
	PicCP[playerid] = 0;
	SelectChar[playerid] = 0;
	PhoneOnline[playerid] = 0;
	ChosenSkin[playerid] = 0;
	InviteSkin[playerid] = 0;
	JobCP[playerid] = 0;
	GruzCP[playerid] = 0;
	OldSkin[playerid] = 320;
	TakingLesson[playerid] = 0;
	JobOffer[playerid] = 999;
	CP[playerid] = 0;
	RaceCP[playerid] = 0;
	TieTime[playerid] = 0;
	PlayerCuffed[playerid] = 0;
	PlayerCuffedTime[playerid] = 0;
	DrugGram[playerid] = 0;
	PlayerTied[playerid] = 0;
	Tel[playerid] = 255;
	Rekl[playerid] = 1;
	Report[playerid] = 0;
	SetAccountInfo(playerid,pData[playerid][pLogin],"pLogin");
	PlayerTazeTime[playerid] = 0;
	MarryWitness[playerid] = 999;
	MarryWitnessOffer[playerid] = 999;
	KrishaOffer[playerid] = 999;
	pData[playerid][pDLevel] = 0;
	pData[playerid][pDExp] = 0;
	pData[playerid][pDgruz] = 0;
	pData[playerid][pPSkill] = 0;
	pData[playerid][pPProc] = 0;
	pData[playerid][pPMGruz] = 0;
	OldSkin[playerid] = GetPlayerSkin(playerid);
	ChosenSkin[playerid] = OldSkin[playerid];
	InviteSkin[playerid] = OldSkin[playerid];
	//
	for(new i = 1; i <= TOTALGZ; i++) GangZoneShowForPlayer(playerid,GZInfo[i][gZone],GetGangZoneColor(i));
}

stock RemoveObjectsForPlayer(playerid)
{
	RemoveBuildingForPlayer(playerid, 2786, 2273.4609, 1596.4766, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2268.7188, 1596.4688, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2273.4609, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2268.7188, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2263.6563, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2258.2578, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2253.2344, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2263.6563, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2258.2578, 1596.4766, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2253.2344, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2254.1797, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2259.2188, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2264.6250, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2269.6719, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2274.4063, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2274.4063, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2269.6563, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2264.6094, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2259.1875, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2254.1563, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2216.5703, 1588.0938, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2216.5781, 1588.5703, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2216.5703, 1592.3984, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2216.5781, 1592.8750, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1833, 2217.0156, 1602.8125, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1833, 2217.5469, 1602.7969, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2217.0234, 1603.9297, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1835, 2217.0156, 1605.0469, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2592, 2217.0313, 1603.9219, 1006.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2217.5469, 1603.8984, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2592, 2217.5469, 1603.9141, 1006.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 1834, 2217.5469, 1605.0391, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2216.5703, 1614.2422, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2216.5781, 1614.7188, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2216.5703, 1618.5781, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2216.5781, 1619.0547, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2220.7188, 1588.0938, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6328, 1588.0781, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6641, 1588.6016, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2220.6953, 1588.5703, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2218.6172, 1588.3359, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2230.5703, 1589.1875, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2242.3672, 1589.1875, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6328, 1592.3828, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6641, 1592.9063, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2218.6172, 1592.6406, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2220.7188, 1592.3984, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2220.6953, 1592.8750, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2230.5703, 1594.7578, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2242.3672, 1594.7578, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1833, 2220.6719, 1602.8125, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1833, 2221.2031, 1602.7969, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2230.3750, 1602.7500, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2241.3125, 1602.7500, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2220.6797, 1603.9297, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2221.2031, 1603.8984, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2592, 2220.6875, 1603.9219, 1006.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 2592, 2221.2031, 1603.9141, 1006.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2243.1250, 1604.4375, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2232.1875, 1604.4375, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2239.4297, 1604.4531, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2228.4922, 1604.4531, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1834, 2221.2031, 1605.0391, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1835, 2220.6719, 1605.0469, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2241.3125, 1606.2734, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2230.3750, 1606.2734, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6328, 1614.2266, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2220.7188, 1614.2422, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2218.6172, 1614.4844, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6641, 1614.7500, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2220.6953, 1614.7188, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2230.5703, 1614.5938, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2241.4453, 1614.5547, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2220.7188, 1618.5781, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6328, 1618.5625, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6641, 1619.0859, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2220.6953, 1619.0547, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2218.6172, 1618.8203, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2230.5703, 1619.6563, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2241.4453, 1619.6094, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2264.6094, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2263.6563, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2258.2578, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2253.2344, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2259.1875, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2254.1563, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2258.2578, 1596.4766, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2263.6563, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2253.2344, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2254.1797, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2259.2188, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2264.6250, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2253.1250, 1609.6406, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1563, 1609.6016, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2257.2422, 1609.6406, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2255.2109, 1609.8750, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2253.1016, 1610.1172, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2257.2500, 1610.1172, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1875, 1610.1250, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2253.1016, 1614.1641, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2253.1250, 1613.6875, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1563, 1613.6484, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2257.2500, 1614.1641, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2257.2422, 1613.6875, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1875, 1614.1719, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2255.2109, 1613.9141, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2253.1250, 1617.5781, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2257.2422, 1617.5781, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1563, 1617.5469, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2255.2109, 1617.8125, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2253.1016, 1618.0547, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2257.2500, 1618.0547, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1875, 1618.0703, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2268.7188, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2269.6563, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2268.7188, 1596.4688, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2269.6719, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2269.2578, 1604.5938, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2269.7344, 1604.6172, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2269.7734, 1606.6484, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2269.2578, 1608.7422, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2269.2500, 1606.6797, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2269.7344, 1608.7344, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2269.5078, 1606.7031, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2273.4609, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2274.4063, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2273.4609, 1596.4766, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2274.4063, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2273.2969, 1606.6797, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2273.3047, 1604.5938, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2273.3047, 1608.7422, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2273.5469, 1606.7031, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2273.7813, 1604.6172, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2273.7813, 1608.7344, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 1117.2813, -1.6484, 1002.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1125.1406, -3.4141, 1000.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1127.0781, -1.6797, 1000.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1125.1484, -0.0313, 1000.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 2640, 1135.0469, -3.0781, 1000.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 2640, 1133.6875, -1.6250, 1000.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 2640, 1135.0000, -0.1797, 1000.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 2640, 1124.8203, 3.7969, 1000.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 2640, 1125.8672, 3.7969, 1000.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 2640, 1127.8828, 3.7969, 1000.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 2640, 1126.8828, 3.7969, 1000.5234, 0.25);
	//========================Грузчики
	RemoveBuildingForPlayer(playerid, 3744, 2193.2578, -2286.2891, 14.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 3574, 2193.2578, -2286.2891, 14.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 5262, 2152.7109, -2256.7813, 15.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 3633, 2158.0078, -2257.2656, 16.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3633, 2167.6641, -2256.7813, 12.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 3633, 2167.6641, -2256.7813, 13.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 3633, 2167.6641, -2256.7813, 14.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 3632, 2167.8047, -2257.3516, 16.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 3632, 2167.1719, -2257.1250, 16.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 3577, 2170.0781, -2257.6641, 16.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 3632, 2169.3516, -2258.0703, 17.2422, 0.25);
	RemoveBuildingForPlayer(playerid, 3632, 2168.8281, -2257.5234, 17.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 3632, 2150.6641, -2251.5547, 12.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 3632, 2150.2813, -2250.8516, 12.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 3633, 2150.6953, -2252.9141, 16.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 3632, 2149.8125, -2253.3672, 16.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 3633, 2153.7734, -2253.0859, 14.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 3633, 2154.5078, -2254.4766, 14.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 3632, 2158.5703, -2251.0156, 15.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 3632, 2158.0469, -2250.5078, 15.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 5132, 2163.2891, -2251.6094, 14.1406, 0.25);
	//==================================================================
	RemoveBuildingForPlayer(playerid, 3630, 2217.5859, -2284.6641, 15.2344, 0.25); // У грузчиков
	RemoveBuildingForPlayer(playerid, 17772, 2870.2422, -1589.3906, 16.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 17550, 2870.2229, -1589.3374, 16.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 10575, -2716.3516, 217.4766, 5.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 11313, -1935.8594, 239.5313, 35.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 11319, -1904.5313, 277.8984, 42.9531, 0.25);
	RemoveBuildingForPlayer(playerid, 9625, -2425.7266, 1027.9922, 52.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 9093, 2386.6563, 1043.6016, 11.5938, 0.25);
	// Парковка у мэрии
	RemoveBuildingForPlayer(playerid, 4057, 1479.5547, -1693.1406, 19.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 4210, 1479.5625, -1631.4531, 12.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1457.9375, -1620.6953, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1496.8672, -1707.8203, 13.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1430.1719, -1719.4688, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1451.6250, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1467.9844, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1485.1719, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1713.5078, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.6953, -1716.7031, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1505.1797, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1713.7031, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1289, 1504.7500, -1711.8828, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1516.0000, -1748.6016, 13.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1258, 1445.0078, -1704.7656, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1702.3594, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1676.6875, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1258, 1445.0078, -1692.2344, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1656.2500, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1636.2344, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1445.8125, -1650.0234, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1619.0547, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1443.2031, -1592.9453, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1457.7266, -1710.0625, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1461.6563, -1707.6875, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1704.6406, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1463.0625, -1701.5703, 13.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.6953, -1702.5313, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1457.5547, -1697.2891, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1694.0469, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.3828, -1692.3906, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 4186, 1479.5547, -1693.1406, 19.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1461.1250, -1687.5625, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1463.0625, -1690.6484, 13.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 641, 1458.6172, -1684.1328, 11.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1457.2734, -1666.2969, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1682.7188, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1471.4063, -1666.1797, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.3828, -1682.3125, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1458.2578, -1659.2578, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1449.8516, -1655.9375, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1477.9375, -1652.7266, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1479.6094, -1653.2500, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1457.3516, -1650.5703, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1454.4219, -1642.4922, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1467.8516, -1646.5938, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1472.8984, -1651.5078, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1465.9375, -1639.8203, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1466.4688, -1637.9609, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1449.5938, -1635.0469, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1467.7109, -1632.8906, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1465.8906, -1629.9766, 15.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1472.6641, -1627.8828, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1479.4688, -1626.0234, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 3985, 1479.5625, -1631.4531, 12.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 4206, 1479.5547, -1639.6094, 13.6484, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1465.8359, -1608.3750, 15.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1229, 1466.4844, -1598.0938, 14.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1451.3359, -1596.7031, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1471.3516, -1596.7031, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1704.5938, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1494.2109, -1694.4375, 13.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1693.7344, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1496.9766, -1686.8516, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 641, 1494.1406, -1689.2344, 11.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1682.6719, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1480.6094, -1666.1797, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1488.2266, -1666.1797, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1486.4063, -1651.3906, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1491.3672, -1646.3828, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1493.1328, -1639.4531, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1486.1797, -1627.7656, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1491.2188, -1632.6797, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1494.4141, -1629.9766, 15.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1494.3594, -1608.3750, 15.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1488.5313, -1596.7031, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1229, 1498.0547, -1598.0938, 14.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1288, 1504.7500, -1705.4063, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1287, 1504.7500, -1704.4688, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1286, 1504.7500, -1695.0547, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1285, 1504.7500, -1694.0391, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1498.9609, -1684.6094, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1504.1641, -1662.0156, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1504.7188, -1670.9219, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1503.1875, -1621.1250, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1501.2813, -1624.5781, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1498.3594, -1616.9688, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1504.8906, -1596.7031, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1508.4453, -1668.7422, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1505.6953, -1654.8359, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1508.5156, -1647.8594, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1513.2734, -1642.4922, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1258, 1510.8906, -1607.3125, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1721.6328, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1705.2734, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1229, 1524.2188, -1693.9688, 14.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1688.0859, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1229, 1524.2188, -1673.7109, 14.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1668.0781, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1647.6406, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1621.9609, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1525.3828, -1611.1563, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1528.9531, -1605.8594, 15.6250, 0.25);
	//****************************************************************************
	RemoveBuildingForPlayer(playerid, 1250, 997.4141, 1707.5234, 10.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 1251, 997.0469, 1710.9531, 11.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 1251, 998.0938, 1755.6875, 11.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 1250, 997.7266, 1759.1250, 10.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 11372, -2076.4375, -107.9297, 36.9688, 0.25);
	RemoveBuildingForPlayer(playerid, 11014, -2076.4375, -107.9297, 36.9688, 0.25);
	RemoveBuildingForPlayer(playerid, 985, 2497.4063, 2777.0703, 11.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 986, 2497.4063, 2769.1094, 11.5313, 0.25);
	//=========================== Удалёные обьекты =============================
	RemoveBuildingForPlayer(playerid, 1411, 347.1953, 1799.2656, 18.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, 342.9375, 1796.2891, 18.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 950, -2021.5469, -118.9141, 1034.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2034.8047, -117.4531, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2028.1563, -117.6719, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2028.1563, -117.0391, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2028.1406, -116.4375, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2026.6094, -117.6719, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2025.1250, -117.6719, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2023.4766, -117.6719, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2026.5859, -117.0391, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2025.1250, -117.0391, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2023.4766, -117.0391, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2026.6094, -116.4375, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2025.1563, -116.4375, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2023.4766, -116.4375, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2033.0625, -114.3594, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2028.1563, -115.7813, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2026.6094, -115.7813, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2025.1250, -115.7813, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1721, -2023.4766, -115.7813, 1034.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 950, -2021.5469, -113.8125, 1034.7031, 0.25);
	//==============================================================================
	RemoveBuildingForPlayer(playerid, 2786, 1968.7344, 1029.6641, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1967.4063, 1029.6563, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1968.7344, 1021.6875, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1967.4063, 1021.6875, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1968.7344, 1014.0000, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1967.4063, 1014.0000, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1968.7344, 1006.3438, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1967.4063, 1006.3438, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1941.0234, 1014.2266, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1939.6953, 1014.2188, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1941.0234, 1021.4141, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1939.6953, 1021.4141, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1941.8438, 1029.1328, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1940.5547, 1029.4766, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1942.1250, 1006.5703, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1940.8828, 1006.1094, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 1938.0469, 986.6250, 992.8828, 0.01);// casinno fortune
	RemoveBuildingForPlayer(playerid, 1895, 1940.6875, 989.1719, 992.8828, 0.01);// casinno fortune
	RemoveBuildingForPlayer(playerid, 2785, 1940.8828, 1006.1094, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2098, 1941.5234, 1006.3828, 993.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1942.1250, 1006.5703, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 1943.2188, 986.5234, 992.8828, 0.01);// casinno fortune
	RemoveBuildingForPlayer(playerid, 2785, 1939.6953, 1014.2188, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2098, 1940.3906, 1014.2031, 993.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1941.0234, 1014.2266, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1939.6953, 1021.4141, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2098, 1940.3906, 1021.4141, 993.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1941.0234, 1021.4141, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 14568, 1953.6797, 994.2813, 992.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 14566, 1954.3984, 994.9922, 992.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 14567, 1955.1172, 995.7109, 992.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1957.4453, 987.6719, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1957.7188, 987.1953, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 1959.3984, 1010.1172, 992.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1960.3672, 1015.6641, 992.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1960.3672, 1020.1719, 992.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1961.9609, 992.2031, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1962.4063, 991.8750, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1962.3438, 1015.6641, 992.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1962.3438, 1020.1797, 992.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1964.5703, 998.4531, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1965.1016, 998.3047, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 1963.7109, 1010.1172, 992.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1967.4063, 1014.0000, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1967.4063, 1006.3438, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1968.7344, 1006.3438, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1968.7344, 1014.0000, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1967.4063, 1021.6875, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1968.7344, 1021.6875, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1940.5547, 1029.4766, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2098, 1941.2188, 1029.2969, 993.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1941.8438, 1029.1328, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 1959.3984, 1025.6953, 992.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 1963.7109, 1025.6953, 992.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1967.4063, 1029.6563, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1968.7344, 1029.6641, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1964.5469, 1037.2813, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1965.0938, 1037.3516, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1961.9219, 1043.3594, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1962.3984, 1043.6328, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1957.3203, 1047.9766, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1957.6563, 1048.4141, 992.9844, 0.25);
	//==========================================================================
}
public OnPlayerConnect(playerid)
{	
	gPlayerAnimLibsPreloaded[playerid] = false;
	pData[playerid][pPick] = 
	SelectWavesRadio[playerid] =
	pData[playerid][pState] = 0;
	pData[playerid][pLogin] = false;
	if(pickonline < playerid) pickonline++;
	Death{playerid} = 0;
	pData[playerid][pRMuteTime] = 0;
	pData[playerid][pDetachID] = 0;
	
	race_state[playerid] = -1;
	SetPVarInt(playerid,"randa",-1);
	
	Farmtimer[playerid] =
	enter_acs[playerid] =
	pData[playerid][pDuelID] = -1;
	pData[playerid][pDuelIDP] = -1;
	cto_mechanic[playerid] = -1;

	SetPVarInt(playerid,"InWorkshop",-1);
	pPressed[playerid] = -1;
	startaddiction[playerid] = 0;
	gz_autorob[playerid] = -1;
	SetPVarInt(playerid,"fixTaxiSkill",9999);
	EnterVehT[playerid] = 0;
	Streamer_VisibleItems(STREAMER_TYPE_OBJECT, 500, playerid);
	if(restart_time) return L_Kick(playerid,2);
	SetPVarInt(playerid,"chosencar",0);
	show_td[playerid] = 0;
	//TextDrawShowForPlayer(playerid, URL);
	SetPVarInt(playerid,"AntiBunny",0);
	EnablePlayerCameraTarget(playerid, 1);
	MinusPercent[playerid] = 0;
	UdarPercent[playerid] = 0;
	job_car[playerid] = 0;

	EnterGarage[playerid] =
	trailer_id[playerid] = 0;
	changename[playerid] = 0;
	loaded_type[playerid] = 0;
	RobTickRTC[playerid] = 0;
	NewTazer[playerid] = false;
	cuffto[playerid] = 9999;
	Convoi[playerid] = 9999;
	MafiaMatsSell[playerid] = 9999;
	MafiaMatsSellPrice[playerid] = 9999;
	SmenaSkina[playerid] = 9999;
	AutoSaloon[playerid] = false;
	zips[playerid] = false;
	CP[playerid] = 0;
	format(string,34+11, "{33AA33}Склад армии ЛВ: {FFFFFF}%i", armmatbi);
	UpdateDynamic3DTextLabelText(LvaLable, 0xFFFF00FF, string);
	CarOffer[playerid] = 9999;
	chooses[playerid] = 1000;
	CarPrice[playerid] = 0;
	BoyWin[playerid] = 0;
	
	LiveOffer[playerid] = 
	LiveOfferls[playerid] = 
	LiveOfferlv[playerid] = 
	BoyOffer[playerid] = 999;
	
	updatecheck[playerid] = 9999;
	times[playerid] = true;
	choosebiz[playerid] = 0;
	accept_car_damage[playerid] = 0;
	last_vehicle_health[playerid] = 0;
	SDuty[playerid] = 0;
	ChatOOC[playerid] = 1;
	shotTime[playerid] = 0;
	ClearAnim(playerid);
	shot[playerid] = 0;
	trailer_on[playerid] = 0;
	SetPlayerHealth(playerid, 100);
	GangZoneShowForPlayer(playerid, SFa, COLOR_YELLOW2);
	GangZoneShowForPlayer(playerid, Army, COLOR_YELLOW2);
	GangZoneShowForPlayer(playerid, LSport, COLOR_YELLOW2);
	
	SpecAd[playerid] = 65535;
	SpecID[playerid] = 65535;
	
	
	TimeNumberShot[playerid] = 
	TimeNumberShotTarget[playerid] = 
	Spectate[playerid] = 
	LastReconClick[playerid][0] =
	LastReconClick[playerid][1] = 0;
	
	ReconSelect[playerid] = INVALID_TEXT_DRAW;
	ReconSelectSub[playerid] = INVALID_TEXT_DRAW;

	SetPlayerArmour(playerid, 0);
	SetPlayerColor(playerid, TEAM_HIT_COLOR);
	pData[playerid][SalonCar] = INVALID_VEHICLE_ID;
	pData[playerid][SalonTime] = 0;
	SetPVarInt(playerid,"SelectAvto",-1);

	renderServerLogoForPlayer(playerid);
	mapInitLSaRemove(playerid);
	//----------------------------------
	SERIU[playerid][sID] = INVALID_PLAYER_ID;
	
	SERIU[playerid][SAFK][0] = SERIU[playerid][SAFK][1] = SERIU[playerid][SAFK][2] = 0;
	
	for(new i = 0; i <= 12; i++)
	{
		WeaponInfo[playerid][wWeapon][i] =
		WeaponInfo[playerid][wAmmo][i] = 0;
	}
	CreateSpeedForPlayer(playerid);
	return true;
}
stock LoadRecon(playerid)
{
	ReconPlayer[0] = CreatePlayerTextDraw(playerid,530.000000, 180.000000, "x");
	PlayerTextDrawBackgroundColor(playerid, ReconPlayer[0], 0x000000AA);
	PlayerTextDrawFont(playerid, ReconPlayer[0], 3);
	PlayerTextDrawLetterSize(playerid,ReconPlayer[0], 0.000000, 20.600000);
	PlayerTextDrawColor(playerid,ReconPlayer[0], 0xE1E1E1AA);
	PlayerTextDrawSetOutline(playerid,ReconPlayer[0], 1);
	PlayerTextDrawSetProportional(playerid,ReconPlayer[0], 1);
	PlayerTextDrawSetShadow(playerid,ReconPlayer[0], 2);
	PlayerTextDrawUseBox(playerid,ReconPlayer[0], 1);
	PlayerTextDrawBoxColor(playerid,ReconPlayer[0], 0x00000055);
	PlayerTextDrawTextSize(playerid,ReconPlayer[0], 640.000, 0.000000);
	ReconPlayer[1] = CreatePlayerTextDraw(playerid,529.000000, 179.000000, "x");
	PlayerTextDrawBackgroundColor(playerid,ReconPlayer[1], 0x000000AA);
	PlayerTextDrawFont(playerid,ReconPlayer[1], 3);
	PlayerTextDrawLetterSize(playerid,ReconPlayer[1], 0.000000, 20.600000);
	PlayerTextDrawColor(playerid,ReconPlayer[1], 0xE1E1E1AA);
	PlayerTextDrawSetOutline(playerid,ReconPlayer[1], 1);
	PlayerTextDrawSetProportional(playerid,ReconPlayer[1], 1);
	PlayerTextDrawSetShadow(playerid,ReconPlayer[1], 2);
	PlayerTextDrawUseBox(playerid,ReconPlayer[1], 1);
	PlayerTextDrawBoxColor(playerid,ReconPlayer[1], 0xAAAAAA33);
	PlayerTextDrawTextSize(playerid,ReconPlayer[1], 641.000000, 0.000000);
	ReconPlayer[2] = CreatePlayerTextDraw(playerid,0.000, 180.000, "x");
	PlayerTextDrawBackgroundColor(playerid,ReconPlayer[2], 0x000000AA);
	PlayerTextDrawFont(playerid,ReconPlayer[2], 3);
	PlayerTextDrawLetterSize(playerid,ReconPlayer[2], 0.000000, 18.540);
	PlayerTextDrawColor(playerid,ReconPlayer[2], 0xE1E1E1AA);
	PlayerTextDrawSetOutline(playerid,ReconPlayer[2], 1);
	PlayerTextDrawSetProportional(playerid,ReconPlayer[2], 1);
	PlayerTextDrawSetShadow(playerid,ReconPlayer[2], 2);
	PlayerTextDrawUseBox(playerid,ReconPlayer[2], 1);
	PlayerTextDrawBoxColor(playerid,ReconPlayer[2], 0x00000055);
	PlayerTextDrawTextSize(playerid,ReconPlayer[2], 70.000, 0.000000);
	ReconPlayer[3] = CreatePlayerTextDraw(playerid,0.000, 179.000, "x");
	PlayerTextDrawBackgroundColor(playerid,ReconPlayer[3], 0x000000AA);
	PlayerTextDrawFont(playerid,ReconPlayer[3], 3);
	PlayerTextDrawLetterSize(playerid,ReconPlayer[3], 0.000000, 18.746);
	PlayerTextDrawColor(playerid,ReconPlayer[3], 0xE1E1E1AA);
	PlayerTextDrawSetOutline(playerid,ReconPlayer[3], 1);
	PlayerTextDrawSetProportional(playerid,ReconPlayer[3], 1);
	PlayerTextDrawSetShadow(playerid,ReconPlayer[3], 2);
	PlayerTextDrawUseBox(playerid,ReconPlayer[3], 1);
	PlayerTextDrawBoxColor(playerid,ReconPlayer[3], 0xAAAAAA33);
	PlayerTextDrawTextSize(playerid,ReconPlayer[3], 71.000, 0.000000);
	ReconPlayer[4] = CreatePlayerTextDraw(playerid,535.000, 210.000, "~n~~g~::Level:~n~~g~::Warns:~n~~r~::Armour:~n~~r~::Health:~n~~b~::CarHP:~n~~b~::Speed:~n~~y~::Ping:~n~~y~::Ammo:~n~~p~::Shot:~n~~p~::TimeShot:~n~~g~::AFKTime:~n~~g~::Engine:");
	PlayerTextDrawBackgroundColor(playerid,ReconPlayer[4], 0x000000AA);
	PlayerTextDrawSetProportional(playerid,ReconPlayer[4], 1);
	PlayerTextDrawLetterSize(playerid,ReconPlayer[4], 0.200, 1.100);
	PlayerTextDrawColor(playerid,ReconPlayer[4], 0xFFFFFFAA);
	PlayerTextDrawFont(playerid,ReconPlayer[4], 1);
	PlayerTextDrawSetShadow(playerid,ReconPlayer[4], 2);
	PlayerTextDrawSetOutline(playerid,ReconPlayer[4], 1);
	PlayerTextDrawUseBox(playerid,ReconPlayer[4], 0);
	ReconPlayer[5] = CreatePlayerTextDraw(playerid,575.000, 210.000, " ");
	PlayerTextDrawBackgroundColor(playerid,ReconPlayer[5], 0x000000AA);
	PlayerTextDrawSetProportional(playerid,ReconPlayer[5], 1);
	PlayerTextDrawLetterSize(playerid,ReconPlayer[5], 0.200, 1.100);
	PlayerTextDrawColor(playerid,ReconPlayer[5], 0xFFFFFFAA);
	PlayerTextDrawFont(playerid,ReconPlayer[5], 1);
	PlayerTextDrawSetShadow(playerid,ReconPlayer[5], 2);
	PlayerTextDrawSetOutline(playerid,ReconPlayer[5], 1);
	PlayerTextDrawUseBox(playerid,ReconPlayer[5], 0);
	ReconPlayer[6] = CreatePlayerTextDraw(playerid,585.000000, 190.000000, " ");
	PlayerTextDrawBackgroundColor(playerid,ReconPlayer[6], 0x000000AA);
	PlayerTextDrawSetProportional(playerid,ReconPlayer[6], 1);
	PlayerTextDrawLetterSize(playerid,ReconPlayer[6], 0.300, 1.400);
	PlayerTextDrawColor(playerid,ReconPlayer[6], 0xFFFFFFAA);
	PlayerTextDrawFont(playerid,ReconPlayer[6], 1);
	PlayerTextDrawAlignment(playerid,ReconPlayer[6], 2);
	PlayerTextDrawSetShadow(playerid,ReconPlayer[6], 2);
	PlayerTextDrawSetOutline(playerid,ReconPlayer[6], 1);
	PlayerTextDrawUseBox(playerid,ReconPlayer[6], 0);
	CreateReconButtonn(playerid,35.000, 195.000, "Change", 7);
	CreateReconButtonn(playerid,35.000, 212.000, "Check >>", 8);
	CreateReconButtonn(playerid,35.000, 229.000, "Drop >>", 9);
	CreateReconButtonn(playerid,35.000, 246.000, "Kick >>", 10);
	CreateReconButtonn(playerid,35.000, 263.000, "Warn", 11);
	CreateReconButtonn(playerid,35.000, 280.000, "Ban >>", 12);
	CreateReconButtonn(playerid,35.000, 297.000, "Stats >>", 13);
	CreateReconButtonn(playerid,35.000, 314.000, "Refresh", 14);
	CreateReconButtonn(playerid,35.000, 331.000, "Exit", 15);
	CreateReconButtonn(playerid,100.000, 212.000, "Check-GM", 16);//Check >>
	CreateReconButtonn(playerid,100.000, 229.000, "Check-GM2", 17);//Check >>
	CreateReconButtonn(playerid,100.000, 246.000, "Check-GMCar", 18);//Check >>
	CreateReconButtonn(playerid,100.000, 263.000, "ResetShot", 19);//Check >>
	CreateReconButtonn(playerid,100.000, 229.000, "Mute", 20);//Drop >>
	CreateReconButtonn(playerid,100.000, 246.000, "Slap", 21);//Drop >>
	CreateReconButtonn(playerid,100.000, 263.000, "Prison", 22);//Drop >>
	CreateReconButtonn(playerid,100.000, 280.000, "Freeze", 23);//Drop >>
	CreateReconButtonn(playerid,100.000, 297.000, "UnFreeze", 24);//Drop >>
	CreateReconButtonn(playerid,100.000, 246.000, "SKick", 25);//Kick >>
	CreateReconButtonn(playerid,100.000, 263.000, "Kick", 26);//Kick >>
	CreateReconButtonn(playerid,100.000, 280.000, "Ban", 27);//Ban >>
	CreateReconButtonn(playerid,100.000, 297.000, "SBan", 28);//Ban >>
	CreateReconButtonn(playerid,100.000, 314.000, "IBan", 29);//Ban >>
	CreateReconButtonn(playerid,100.000, 297.000, "Stats", 30);//Stats >>
	CreateReconButtonn(playerid,100.000, 314.000, "IWep", 31);//Stats >>
	CreateReconButtonn(playerid,100.000, 331.000, "GetIP", 32);//Stats >>
	CreateReconButtonn(playerid,100.000, 348.000, "Serial/S0b", 33);//Stats >>
	CreateReconButtonn(playerid,585.00, 350.00, "Help", 34); // Рекон клавиша
	Seriu[playerid][0] = CreatePlayerTextDraw(playerid,589.00, 145.00, "Nik Anson~n~ID: 666");
	PlayerTextDrawAlignment(playerid,Seriu[playerid][0], 2);
	PlayerTextDrawLetterSize(playerid,Seriu[playerid][0],  0.240000, 0.899999);
	Seriu[playerid][1] = CreatePlayerTextDraw(playerid,578.00, 165.00, "1 : 1 / 8~n~0~n~0~n~50~n~0~n~0 / 0~n~86~n~0 : 0 ~n~0 / 0 : 0%~n~0 / 0 : 0%~n~23 : 0");
	PlayerTextDrawLetterSize(playerid,Seriu[playerid][1], 0.199999, 0.899999);
	for(new h; h < 2; h ++)
	{
		PlayerTextDrawBackgroundColor(playerid,Seriu[playerid][h], 255);
		PlayerTextDrawFont(playerid,Seriu[playerid][h], 1);
		PlayerTextDrawColor(playerid,Seriu[playerid][h], -1);
		PlayerTextDrawSetOutline(playerid,Seriu[playerid][h], 1);
		PlayerTextDrawSetProportional(playerid,Seriu[playerid][h], 1);
		PlayerTextDrawSetShadow(playerid,Seriu[playerid][h],0);
	}
}
stock UpdateFish(playerid)
{
	if(GetPVarInt(playerid,"fish_sonar")) format(string,128," ~y~Tackle: ~w~%i~n~~y~Worms: ~w~%i~n~~y~Sonar: ~w~%.2f~n~~n~~y~Press: ~g~L.ALT",GetPVarInt(playerid,"fish_gear"),GetPVarInt(playerid,"fish_worms"),Sonar[IsAtFishPlace(playerid)]);
	else format(string,128," ~y~Tackle: ~w~%i~n~~y~Worms: ~w~%i~n~~n~~y~Press: ~g~L.ALT",GetPVarInt(playerid,"fish_gear"),GetPVarInt(playerid,"fish_worms"));
	PlayerTextDrawSetString(playerid,FishingText[playerid],string);
	return true;
}
forward RemovePlayerAttachedObjectDelay(playerid,slot);
public RemovePlayerAttachedObjectDelay(playerid,slot)
{
	RemovePlayerAttachedObject(playerid,slot);
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	new gun,ammo;

	switch(dialogid)
	{
		case 8998: // Выход с подъезда
		{
			if(!response) return 1;
			new i = GetPVarInt(playerid, "podeezd");
			if(listitem == 0)
			{
				SetPlayerPos(playerid, podeezd_info[i][hEntrancex], podeezd_info[i][hEntrancey], podeezd_info[i][hEntrancez]);
				SetPlayerInterior(playerid,0 );
				SetPlayerVirtualWorld(playerid,0);
				DeletePVar(playerid, "podeezd");
				return 1;
			}
			else
			{
				new p_int = podeezd_info[i][p_hint];
				SetPlayerPos(playerid, podeezd_ints[p_int][0],podeezd_ints[p_int][1],podeezd_ints[p_int][2]);
				SetPlayerFacingAngle(playerid, podeezd_ints[p_int][3]);
				SetPlayerInterior(playerid, floatround(podeezd_ints[p_int][4]) );
				SetPlayerVirtualWorld(playerid, podeezd_info[i][p_word]+ (listitem-1));
				return 1;
			}
		}
		case 8999: // Вход в подъезд
		{
			if(!response) return DeletePVar(playerid, "podeezd");
			new i = GetPVarInt(playerid, "podeezd");
			if(listitem == 0)
			{
				
			}
			else
			{
				new p_int = podeezd_info[i][p_hint];
				SetPlayerPos(playerid, podeezd_ints[p_int][0],podeezd_ints[p_int][1],podeezd_ints[p_int][2]);
				SetPlayerFacingAngle(playerid, podeezd_ints[p_int][3]);
				SetPlayerInterior(playerid, floatround(podeezd_ints[p_int][4]) );
				SetPlayerVirtualWorld(playerid, podeezd_info[i][p_word]+ (listitem-1));
				return 1;
			}
			return true;
		}
		case 99:
		{
			if(!response)return 1;
			new mes[1560];
			strcat(mes,"{ffffff}3. Чат сервера.\n\
			OOC (Out of Character) - это все, что касается реального мира.\n\
			IC (In Character) - это все, что касается виртуального мира, то есть игры.\n\
			{ef5350}Запрещено:{ffffff}\n\
			- Ругательство, оскорбления или нецензурная речь.\n\
			- Угрозы игрокам (Не относящиеся к игровому процессу).\n\
			- Писать сообщения в верхнем регистре (Caps Lock).\n");
			strcat(mes,"- Писать в чат объявлений сообщения не относящихся к Role Play.\n\
			- Использование OOC информации в IC (Metagaming).\n\
			- Писать одно и тоже сообщение слишком часто.\n\
			- Обсуждать, критиковать действия администрации.\n\
			- Реклама сторонних ресурсов.\n\n");
			strcat(mes,"4. Администрация.\n\
			- Сообщать администрации о каких либо нарушениях из данных правил (/mm >> Репорт).\n\
			- Администрация самостоятельно выбирает штрафные санкции для каждого из случаев.\n\
			- Запрещено препятствовать администрации в работе.\n\
			- Решение администрации является окончательным и не подлежит обсуждению.\n\n");
			strcat(mes,"5. Торговля.\n\
			- Запрещены любые денежные махинации.\n\
			- Запрещена продажа / покупка чего либо, за реальные деньги.\n\
			- Запрещен обмен внеигровых предметов в любой форме, на игровые.\n\
			- Запрещена продажа / передача аккаунтов.");
		    ShowPlayerDialog(playerid,0,0,"Правила сервера",mes, "Закрыть", "");
		    return 1;
		}
		case 55535:
		{
			return 1;
		}
		case 89: // просмотр заказа /delivery
		{
			if(!response)return 1;
			new delivery_str[200];
			new deli_id = strval(inputtext[1]);

			format(delivery_str, sizeof delivery_str, "Номер заказа: %d\n\nНаименование: %s\nЗаказчик: %s\nАдрес: дом №%d",deli_id,delivery_food_name(delivery_info[deli_id][food]), HouseInfo[delivery_info[deli_id][adress]][hOwner],delivery_info[deli_id][adress]);
			ShowPlayerDialog(playerid,90,DIALOG_STYLE_MSGBOX,"Информация о заказе",delivery_str ,"Принять","Закрыть");
			SetPVarInt(playerid, "delivery_id", deli_id);
			return 1;
		}
		case 90:
		{
			if(!response)return 1;
			new dd = GetPVarInt(playerid, "delivery_id");
			if(delivery_info[dd][accept] == 2)
				return SCM(playerid,COLOR_RED,"Данный заказ уже выполняется!"); 

			new house = delivery_info[dd][adress];
			delivery_info[dd][accept] = 2;
			SetPVarInt(playerid, "delivery_step", 1); // этап получение заказа
			SendMes(playerid, 0x4db6acFF, " Вы приняли заказ от %s. Заберите его в любой из закусочных", HouseInfo[house][hOwner]);
			//
			return 1;
		}
		case 81: // холодильник
		{
		    if(!response) return 1;
		    if(!GetPVarInt(playerid, !#pPickHouseId)) return 1;
			new i = (GetPVarInt(playerid, !#pPickHouseId)-1);
			new freez_str[25];
			format(freez_str, sizeof freez_str, "Продуктов %d ед.", HouseInfo[i][h_prod]);

		    ShowPlayerDialog(playerid,81,DIALOG_STYLE_TABLIST,freez_str,ShowFreezProd,"Съесть","Закрыть");
		    if(HouseInfo[i][h_prod] < 10*(listitem+1))
		    {
				SendClientMessage(playerid,0xAFAFAFAA,"У Вас в холодильнике недостаточно продуктов");
				SendClientMessage(playerid,0xAFAFAFAA,"Используйте телефон для заказа ");
				return 1;
		    }

			UpdatePlayerHunger(playerid, 20*(listitem+1));
			
			HouseInfo[i][h_prod] -= 10*(listitem+1);
			ApplyAnimation(playerid,"FOOD","EAT_Burger", 2.0,0,0,0,0,5000,1);
			SetTimerEx("RemovePlayerAttachedObjectDelay",3800,false,"ii",playerid,1);
	        if(listitem == 0) SetPlayerAttachedObject(playerid,1,19346,6,0.059000,0.059999,0.000000,-97.399963,0.000000,0.000000);
	        else if(listitem == 1) SetPlayerAttachedObject(playerid,1,2703,6,0.079999,0.065999,0.015999,0.000000,-11.100000,84.900047,1.000000,1.000000,1.000000);
	        else if(listitem == 2) SetPlayerAttachedObject(playerid,1,2702,6,0.049000,0.056000,0.098999,73.800193,-104.900100,-11.700014,1.000000,1.000000,1.000000);
			return 1;
		}
	    case 2256:{
	        if(!response) {
	            WheelBet[playerid] = 0;
	            return 1;
			}

			if(strval(inputtext) < 1000 || strval(inputtext) > 1000000)
				return  SCM(playerid,COLOR_RED,"Сумма ставки от 1000 до 1.000.000!");
		
			if(strval(inputtext) > pData[playerid][pCash])
				return SCM(playerid,COLOR_RED,"У вас недостаточно денег!");

			new wheel;

	        if(IsPlayerInDynamicArea(playerid, Fortune[0])) wheel = 0;
	        if(IsPlayerInDynamicArea(playerid, Fortune[1])) wheel = 1;
	        if(IsPlayerInDynamicArea(playerid, Fortune[2])) wheel = 2;

	        if(WheelTimer[wheel] != -1)return SCM(playerid,COLOR_RED,"Игра уже начата!");
	        
	        WheelBetMoney[playerid] = strval(inputtext);
	        WheelTimer[wheel] = SetTimerEx("WheelTooo",200,1,"d",wheel);
	        SendMes(playerid, COLOR_BLUEGREEN, " Ваша ставка $%d", WheelBetMoney[playerid]);
	        pData[playerid][pCash] -= WheelBetMoney[playerid];
	        PlayerPlaySound(playerid, 4200, 0.0,0.0,0.0);
	        return 1;
	        
	    }
	    case 2255: {
	        if(!response)return 1;
	        ShowPlayerDialog(playerid, 2256, DIALOG_STYLE_INPUT, "{FFFFFF}Введите вашу ставку","{ffffff}Сумма ставки от 1.000 до 1.000.000:","ОК","Отмена");
	        
         	WheelBet[playerid] = listitem+1;
	        return 1;
	    }
	    case 22321: {
	        if(!response)return 1;
	        new taxid = getTaxiId(playerid);
	        g_tInfo[taxid][e_iPrice] = strval(inputtext);
			//UpdateTable_int(const table[], const set[], const set_, const where[], where_)
	        UpdateTable_int(TABLE_TAXI, "price", g_tInfo[taxid][e_iPrice], "owner", taxid);
	        SendMes(playerid, COLOR_BLUEGREEN, " Вы изменили цену аренды такси на $%d", g_tInfo[taxid][e_iPrice]);
	        return 1;

	    }
	    case 22320: {
	        if(!response)return 1;
	        if(listitem == 0) {
				ShowPlayerDialog(playerid, 22321, DIALOG_STYLE_INPUT, "{FFFFFF}Таксопарк >{00BF2B} Цены","{ffffff}Введите цену за машину:","ОК","Отмена");
				return 1;
			}
			else if(listitem == 1) {
				new szQuery[0xff+24];
				mysql_format(DATABASE, szQuery, sizeof szQuery, "SELECT * FROM `"TABLE_TAXI"` WHERE `owner`='%s' LIMIT 1", pData[playerid][pName]);
				mysql_query(DATABASE, szQuery);

				new price, dailyprofit,dailyrents,totalprofit,totalrents;

				cache_get_value_name_int(0, "price", price);
				cache_get_value_name_int(0, "dailyprofit", dailyprofit);
				cache_get_value_name_int(0, "dailyrents", dailyrents);
				cache_get_value_name_int(0, "totalprofit", totalprofit);
				cache_get_value_name_int(0, "totalrents", totalrents);

				format(szQuery, sizeof(szQuery), "{FFFFFF}Таксопарк[%d]\n\
					\n\
					Цена за аренду:	%d\n\
					\n\
					Всего прибыли: %d\n\
					Всего арендовано такси: %d\n\
					\n\
					За сегодня прибыли: %d\n\
					За сегодня арендовано такси: %d", getTaxiId(playerid),
					price,
					totalprofit,
					totalrents,
					dailyprofit,
					dailyrents
					);

				ShowPlayerDialog(playerid, 22322, DIALOG_STYLE_MSGBOX, "{FFFFFF}Таксопарк >{00BF2B} Статистика", szQuery, "ОК", "Отмена");
				return 1;
			}
	        
	    }
	    case 167: { // подтверждение заправки
			new givep = GetPVarInt(playerid, "refillcar")-1;

			if(response) {      // Если согласен
				if(!pData[givep][pLogin]) return SCM(playerid,COLOR_GREY," Игрок оффлайн");
				if(pData[playerid][pCash] < cenabenza[givep]) return SCM(playerid,COLOR_GREY," У вас недостаточно денег");

				new car 	= GetPlayerVehicleID(playerid);
				new Fuelstr[123];

				format(Fuelstr, sizeof Fuelstr, " Автомеханик %s заправил ваш автомобиль на 300 литров за %i вирт",Name(givep),cenabenza[givep]);
				SCM(playerid, 0x6495EDFF, Fuelstr);

				format(Fuelstr, sizeof Fuelstr, " Вы заправили машину %s за %i вирт.",Name(playerid),cenabenza[givep]);
				SCM(givep, 0x6495EDFF, Fuelstr);

				format(Fuelstr, sizeof Fuelstr, " ~r~-%i", cenabenza[givep]);
				GameTextForPlayer(playerid, Fuelstr, 5000, 1);

				pData[playerid][pCash] 					-= cenabenza[givep];
				BizzInfo[gcontract[givep]][bTill] 		+= cenabenza[givep]/2;
				BizzPay[gcontract[givep]] 				+= cenabenza[givep]/2;
				BizzInfo[gcontract[givep]][bProducts] 	-= 150;
				pData[givep][pPayCheck] 				+= cenabenza[givep]/2;
				car_data[car][fuell] 					= 200;
			}
			else SendClientMessage(givep, COLOR_GREY, "Игрок отказался от заправки");
			DeletePVar(playerid, "refillcar");
			return 1;
	    }
	    case 165: { // подтверждение починки
			new givep = GetPVarInt(playerid, "repaircar")-1;
			if(response) {
				new vehicleid = GetPlayerVehicleID(playerid);
				SetVehicleHealth(vehicleid, 1000.0);
				RepairVehicle(vehicleid);

				pData[playerid][pCash]  -= GetPVarInt(playerid, "repairprice");
				pData[givep][pPayCheck] += GetPVarInt(playerid, "repairprice");

				new str[100];
				format(str,sizeof(str),"~g~+$%d",GetPVarInt(playerid, "repairprice"));
			 	GameTextForPlayer(givep, str, 5000, 1);
			 	format(str,sizeof(str),"Вы отремонтировали машину %s, %d было добавлено к зарплате",Name(playerid),GetPVarInt(playerid, "repairprice"));
			 	SendClientMessage(givep,COLOR_BLUE,str);
			}
			else SendClientMessage(givep, COLOR_GREY, "Игрок отказался от починки");
            DeletePVar(playerid, "repairprice");
			DeletePVar(playerid, "repaircar");
			return 1;
	    }
	    case 22319:
		{
		    if (!response)return 1;
		    new TaxModel, TaxId;
		    if(job_lvl(pData[playerid][job_skill][job_taxi]) < listitem*15)
		    	return SendClientMessage(playerid, 0xf44336FF, "Мы не можем дать вам эту машину :c");
		    
		    if 		(listitem == 0) TaxModel = 420;
		    else if (listitem == 1) TaxModel = 507;
		    else if (listitem == 2) TaxModel = 405;
		    else if (listitem == 3) TaxModel = 560;
		    
		   	new id;

		    if(IsPlayerInDynamicArea(playerid, g_szTaxiArea[0])){ // lv
				TaxId = CreateVehicle_R(TaxModel,2473.4785,1332.7693,10.5215,180.8972,6,6,600);
				id = 0;
			}
   			if(IsPlayerInDynamicArea(playerid, g_szTaxiArea[1])){ // sf
				TaxId = CreateVehicle_R(TaxModel,-2279.9229,173.3691,34.8441,180.8972,6,6,600);
				id = 1;
			}
   			if(IsPlayerInDynamicArea(playerid, g_szTaxiArea[2])){ // ls
				TaxId = CreateVehicle_R(TaxModel,1099.1792,-1754.9694,13.0312,89.8972,6,6,600);
				id = 2;
    		}

			 ///// тут
    		new TAXI_RENT_PRICE = g_tInfo[id][e_iPrice] * (listitem+1);
    		////
		    if(TAXI_RENT_PRICE > pData[playerid][pCash])
	    		return SCM(playerid, COLOR_GRAD1, " У вас недостаточно средств!");

			new szQuery[0xFF];
   			mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `"TABLE_TAXI"` SET `dailyprofit`=dailyprofit+%d, `totalprofit`=totalprofit+%d, `dailyrents`=dailyrents+1, `totalrents`=totalrents+1 WHERE `id`=%d LIMIT 1", TAXI_RENT_PRICE, TAXI_RENT_PRICE, id+1);
			mysql_query(DATABASE, szQuery);

			SendMes(playerid, 0x6495EDFF, "Вы взяли такси в аренду за %d$", TAXI_RENT_PRICE);
   			pData[playerid][pCash] -= TAXI_RENT_PRICE;
		   	new szPrice[12];
		   	format(szPrice, 12, "~r~-%d",TAXI_RENT_PRICE);
		    GameTextForPlayer(playerid, szPrice, 3000, 1);
			    
		    police[TaxId] = CreateDynamicObject(19308,0,0,0,0,0,0);
			AttachDynamicObjectToVehicle(police[TaxId], TaxId, 0.000000, -0.400000, 0.854999, 0.000000, 0.000000, 0.0);
   			car_data[TaxId][TypeCar] = TYPE_TAXI;
      		car_data[TaxId][Temp] = true;
        	car_data[TaxId][Owner] = playerid;
		    return 1;
	    }
		case 5525: // предложение адвоката
	    {
		    if (!response)return 1;
		    
	        if(listitem == 0) {
	            if(pData[playerid][pCash] < GetPVarInt(playerid,"FreePrice")) return SCM(playerid,COLOR_GREY," У вас недостаточно денег");
				pData[playerid][pCash] -= GetPVarInt(playerid,"FreePrice");
				pData[GetPVarInt(playerid,"FreeOffer")][pCash]+= GetPVarInt(playerid,"FreePrice");
	        }
	        else if(listitem == 1) {
	            if(pData[playerid][pBank] < GetPVarInt(playerid,"FreePrice")) return SCM(playerid,COLOR_GREY," У вас недостаточно денег");
				pData[playerid][pBank] -= GetPVarInt(playerid,"FreePrice");
				pData[GetPVarInt(playerid,"FreeOffer")][pCash]+= GetPVarInt(playerid,"FreePrice");
	        }
	        else if(listitem == 2) {
	            SCM(playerid, 0x6495EDFF, " Вы отказались от услуг адвоката");
				SendMes(GetPVarInt(playerid,"FreeOffer"), 0x6495EDFF, "%s отказался от ваших услуг",pData[playerid][pName]);
				DeletePVar(playerid,"FreeOffer");
				DeletePVar(playerid,"FreePrice");
				return 1;
	        }
	        SetAccountInfo(playerid, pData[playerid][pBank], "pBank");
			SendMes(playerid, 0x6495EDFF, " Вы заплатили адвокату %s %i вирт.",pData[GetPVarInt(playerid,"FreeOffer")][pName], GetPVarInt(playerid,"FreePrice"));
			SendMes(GetPVarInt(playerid,"FreeOffer"), 0x6495EDFF, " Вы выпустили %s из тюрьмы за %i вирт.",pData[playerid][pName],GetPVarInt(playerid,"FreePrice"));
			DeletePVar(playerid,"FreeOffer");
			DeletePVar(playerid,"FreePrice");
			pData[playerid][pJailTime] = 2;
			PlayerCuffed[playerid] = 0;
			return 1;
	    }
	    case 5533:
	    {
	        if (!response)return 1;
         	foreach(new i: OnPlayersStream[playerid])
		    {
					if(strfind(inputtext, Name(i)) != -1)
					{//дикухааааааааааааааааааааааааааааааааааааааааааааааааААААААААААааааааааа
					    GPS_ON(playerid, GetPVarFloat(i, "TaxiGPScorX"),GetPVarFloat(i, "TaxiGPScorY"),GetPVarFloat(i, "TaxiGPScorZ"));
						SendMes(playerid,-1,"playerid - %d",i);
						return 1;
					}
			}
	        
		    return 1;
	    }
	    case 5532:
	    {
	        if (!response)return 1;
	        if(listitem == 0){ // Выбрать пункт назначение в GPS
	            cmd_gps(playerid);
				return 1;
	        }
			else if (listitem == 1) { // Установить метку на карте
			    SendClientMessage(playerid, COLOR_WHITE, "Установите метку на карте!");
			    return 1;
			}
	        return 1;
	    }
	case 11120:
	{
		new idd = GetPVarInt(playerid, !#p_dNewsEnter);
		DeletePVar(playerid, !#p_dNewsEnter); // lcnsf
		if (!response)
		{
			//ShowPlayerDialog(playerid, 11120, DIALOG_STYLE_MSGBOX, "Лифт", "{FFFFFF}Куда вы хотите?", "Офис", "Крыша");
			if(idd == 1) // sfnews down pick
			{
				SetPlayerPos(playerid, -2056.6829,454.2705,139.7422);
				SetPlayerFacingAngle(playerid, 135.5532);
			}
			else if(idd == 2)
			{
				SetPlayerPos(playerid,-2056.0376,460.4589,35.1723);
				SetPlayerFacingAngle(playerid, 311.6809);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
			}
			else if(idd == 3) // from office to roof
			{
				if OnPlayerEther[playerid] > 0 *then
				{
					SendClientMessage(playerid, COLOR_WHITE, " Вы вышли из прямого эфира");
					OnPlayerEther[playerid] = 0;
				}
				SetPlayerPos(playerid, -2056.6829,454.2705,139.7422);
				SetPlayerFacingAngle(playerid, 135.5532);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
			}
			return 1;
		}
		if(idd == 1 || idd == 2) // sfnews down pick
		{	
			if( !(pData[playerid][pMember] == 9 || pData[playerid][pMember] == 16 || pData[playerid][pMember] == 20 || pData[playerid][pAdmin] >= 1 || pData[playerid][pNkeys] == 9 || IsACop(playerid) || IsAFbi(playerid) ))
				return SCM(playerid, COLOR_RED, " У вас нет пропуска");
			SetPlayerPos(playerid,1442.4484,-1069.8578,1717.9871);
			SetPlayerFacingAngle(playerid, 270.3965);
			SetPlayerVirtualWorld(playerid,2);
			SetPlayerInterior(playerid,1);
		}
		else if(idd == 3) // from office to street
		{
			if OnPlayerEther[playerid] > 0 *then
			{
				SendClientMessage(playerid, COLOR_WHITE, " Вы вышли из прямого эфира");
				OnPlayerEther[playerid] = 0;
			}
			SetPlayerPos(playerid,-2056.0376,460.4589,35.1723);
			SetPlayerFacingAngle(playerid, 311.6809);
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
		}

	}
	case 11111:
	{
		if(!response)
		{
			DeletePVar(playerid, !#_dCodeEditName);
			DeletePVar(playerid, !#_dPromoCodes);
			DeletePVar(playerid, !#_dCodeEditLvl);
			DeletePVar(playerid, !#_dCodeEditMoney);
			DeletePVar(playerid, !#_dCodeEditBoostMoney);
			DeletePVar(playerid, !#_dCodeEdit);
			return 1;

		}
		//SendMes(playerid, 0xDEADEDFF, "pvar = %d, inputtext = %s", GetPVarInt(playerid, !#_dPromoCodes), inputtext);
		if(strcmp(inputtext, "Добавить промокод")) // если игрок выбрал промокод, а не добавить 
		{
			new strpatched[24+1];
			new szQuery[64+24];
			if(!GetPVarInt(playerid, !#_dCodeEdit))
			{
				SetPVarString(playerid, !#_dCodeEditName, inputtext);
				mysql_format(DATABASE, szQuery, sizeof(szQuery), "SELECT * FROM `promocode` WHERE `code`='%e'", inputtext);  
				//SendMes(playerid, 0xDEADEDFF, "inn %s", inputtext);
			}
			else
			{
				GetPVarString(playerid, !#_dCodeEditName, strpatched, sizeof strpatched);
				mysql_format(DATABASE, szQuery, sizeof(szQuery), "SELECT * FROM `promocode` WHERE `code`='%e'", strpatched);
				//SendMes(playerid, 0xDEADEDFF, "strpatched %s", strpatched);
			}
			
			new Cache:result = mysql_query(DATABASE, szQuery);

			if(cache_num_rows())
			{

				new lvl, money,boostmoney;
				cache_get_value_name_int(0,"boostmoney", boostmoney);
				cache_get_value_name_int(0,"money", money);
				cache_get_value_name_int(0,"lvl", lvl);

				SetPVarInt(playerid, !#_dCodeEdit, 0xFF);
				SetPVarInt(playerid, !#_dCodeEditLvl, lvl);
				SetPVarInt(playerid, !#_dCodeEditMoney, money);
				SetPVarInt(playerid, !#_dCodeEditBoostMoney, boostmoney);

				strpatched = "";
				format(YCMDstr, sizeof(YCMDstr), "Уровень:\t%d\nДеньги:\t%d\nДеньги(Boost):\t%d\n{FF0000}Удалить промокод", lvl, money, boostmoney);
				ShowPlayerDialog(playerid, 11111+1, DIALOG_STYLE_TABLIST, "{FFFFFF}Редактирование >{00BF2B} Промокод",  YCMDstr, "Выбрать", "Отмена");
				cache_delete(result);
				return 1;
			}
			else
			{
				cache_delete(result);
				DeletePVar(playerid, !#_dCodeEditName);
				DeletePVar(playerid, !#_dPromoCodes);
				DeletePVar(playerid, !#_dCodeEditLvl);
				DeletePVar(playerid, !#_dCodeEditMoney);
				DeletePVar(playerid, !#_dCodeEditBoostMoney);
				DeletePVar(playerid, !#_dCodeEdit);
				return SCM(playerid, COLOR_GREY, " Промокод не найден!");
			}
			
		}
		else // Добавить промокод
		{

			ShowPlayerDialog(playerid, 11111+2, DIALOG_STYLE_INPUT, "{FFFFFF}Создать >{00BF2B} Промокод", "{FFFFFF}Введите Имя промокода, уровень, деньги, деньги во время буста\nНапример: {00BF2B}#Noxe, 5, 100000, 200000", "Выбрать", "Отмена");
			
			return 1;
		}
	}
	case 11111+1:
	{
		if(!response)
		{
			DeletePVar(playerid, !#_dCodeEditName);
			DeletePVar(playerid, !#_dPromoCodes);
			DeletePVar(playerid, !#_dCodeEditLvl);
			DeletePVar(playerid, !#_dCodeEditMoney);
			DeletePVar(playerid, !#_dCodeEditBoostMoney);
			DeletePVar(playerid, !#_dCodeEdit);
			return 1;
		}
		if(GetPVarInt(playerid, !#_dCodeEdit) == 0xFF)
		{
			if(listitem == 0) // lvl
			{
				SetPVarInt(playerid, !#_dCodeEdit, GetPVarInt(playerid, !#_dCodeEdit)+(listitem+1));
				ShowPlayerDialog(playerid, 11111+1, DIALOG_STYLE_INPUT, "{FFFFFF}Редактирование >{00BF2B} Промокод", "{FF0000}Введите новое значение 'Уровень'", "Выбрать", "Отмена");
			}
			else if(listitem == 1) // money
			{
				SetPVarInt(playerid, !#_dCodeEdit, GetPVarInt(playerid, !#_dCodeEdit)+(listitem+1));
				ShowPlayerDialog(playerid, 11111+1, DIALOG_STYLE_INPUT, "{FFFFFF}Редактирование >{00BF2B} Промокод", "{FF0000}Введите новое значение 'Деньги'", "Выбрать", "Отмена");
			}
			else if(listitem == 2) // boostmoney
			{
				SetPVarInt(playerid, !#_dCodeEdit, GetPVarInt(playerid, !#_dCodeEdit)+(listitem+1));
				ShowPlayerDialog(playerid, 11111+1, DIALOG_STYLE_INPUT, "{FFFFFF}Редактирование >{00BF2B} Промокод", "{FF0000}Введите новое значение 'Деньги(Boost)'", "Выбрать", "Отмена");

			}
			else if(listitem == 3) // delete
			{
				new strpatched[24+1];
				new szQuery[64+24];
				GetPVarString(playerid, !#_dCodeEditName, strpatched, sizeof strpatched);
				mysql_format(DATABASE, szQuery, sizeof(szQuery), "DELETE FROM `promocode` WHERE `code`='%e'", strpatched);
				mysql_query(DATABASE, szQuery);
				SendMes(playerid, COLOR_GREEN, " Промокод %s удален", strpatched);

			}
		}
		else
		{
			listitem = GetPVarInt(playerid, !#_dCodeEdit)-0xFF-1;
			new szQuery[64+24];
			if(listitem == 0)
			{
				new strpatched[24+1];
				GetPVarString(playerid, !#_dCodeEditName, strpatched, sizeof strpatched);
				mysql_format(DATABASE, szQuery, sizeof(szQuery), "UPDATE `promocode` SET `lvl`='%d' WHERE `code`='%e'", strval(inputtext), strpatched);
				mysql_query(DATABASE, szQuery);
			}
			else if(listitem == 1)
			{
				new strpatched[24+1];
				GetPVarString(playerid, !#_dCodeEditName, strpatched, sizeof strpatched);
				mysql_format(DATABASE, szQuery, sizeof(szQuery), "UPDATE `promocode` SET `money`='%d' WHERE `code`='%e'", strval(inputtext), strpatched);
				mysql_query(DATABASE, szQuery);
			}
			else if(listitem == 2)
			{
				new strpatched[24+1];
				GetPVarString(playerid, !#_dCodeEditName, strpatched, sizeof strpatched);
				mysql_format(DATABASE, szQuery, sizeof(szQuery), "UPDATE `promocode` SET `boostmoney`='%d' WHERE `code`='%e'", strval(inputtext), strpatched);
				mysql_query(DATABASE, szQuery);
			}

			DeletePVar(playerid, !#_dCodeEditName);
			DeletePVar(playerid, !#_dPromoCodes);
			DeletePVar(playerid, !#_dCodeEditLvl);
			DeletePVar(playerid, !#_dCodeEditMoney);
			DeletePVar(playerid, !#_dCodeEditBoostMoney);
			DeletePVar(playerid, !#_dCodeEdit);

			cmd_promocode(playerid);
		}

	}
	case 11111+2:
	{
		if(!response)
		{
			DeletePVar(playerid, !#_dCodeEditName);
			DeletePVar(playerid, !#_dPromoCodes);
			DeletePVar(playerid, !#_dCodeEditLvl);
			DeletePVar(playerid, !#_dCodeEditMoney);
			DeletePVar(playerid, !#_dCodeEditBoostMoney);
			DeletePVar(playerid, !#_dCodeEdit);
			return 1;
		}
		new strpatched[24+1];
		new _x, __x, ___x;
		if(sscanf(inputtext, "p<,>s[24]ddd", strpatched, _x, __x, ___x))
		{
			ShowPlayerDialog(playerid, 11111+2, DIALOG_STYLE_INPUT, "{FFFFFF}Создать >{00BF2B} Промокод", "{FFFFFF}Введите Имя промокода, уровень, деньги, деньги во время буста\nНапример: {00BF2B}#Noxe, 5, 100000, 200000", "Выбрать", "Отмена");
			SCM(playerid, COLOR_GREY, " Количество аргументов не совпадает с определенным");
			return 1;
		}
		if(strpatched[0] != '#')
		{
			ShowPlayerDialog(playerid, 11111+2, DIALOG_STYLE_INPUT, "{FFFFFF}Создать >{00BF2B} Промокод", "{FFFFFF}Введите Имя промокода, уровень, деньги, деньги во время буста\nНапример: {00BF2B}#Noxe, 5, 100000, 200000", "Выбрать", "Отмена");
			SCM(playerid, COLOR_GREY, " Промокод должен начинатся с {00BF2B}#");
			return 1;
		}
		new szQuery[152];
		mysql_format(DATABASE, szQuery, sizeof(szQuery), "SELECT * FROM `promocode` WHERE `code`='%e'", strpatched);
		new Cache:result = mysql_query(DATABASE, szQuery);
		new rows = cache_num_rows(); 
		cache_delete(result);

		if(rows)
		{
			ShowPlayerDialog(playerid, 11111+2, DIALOG_STYLE_INPUT, "{FFFFFF}Создать >{00BF2B} Промокод", "{FFFFFF}Введите Имя промокода, уровень, деньги, деньги во время буста\nНапример: {00BF2B}#Noxe, 5, 100000, 200000", "Выбрать", "Отмена");
			SCM(playerid, COLOR_GREY, " Промокод уже существует");
			return 1;
		}
		
		mysql_format(DATABASE, szQuery, sizeof(szQuery), "INSERT INTO `promocode` (code, lvl, money, boostmoney) VALUES ('%e', '%d', '%d', '%d')", strpatched, _x, __x, ___x);
		mysql_query(DATABASE, szQuery);
		SCM(playerid, COLOR_GREEN, " Промокод создан");

		cmd_promocode(playerid);
	}
	
	case 1971:
		{
			if(response)
			{
				if(!listitem) ShowPlayerDialog(playerid, 1972, DIALOG_STYLE_INPUT, "{FFFFFF}Ускоренная прокачка | {ae433d}Бонус","{FFFFFF}Введите количество дней:\nПримечания:\n\
				- Количество дней не может быть ниже 0  [отключение]\n\
				- Количество дней не может быть выше 10 [активация]\n", "Выбрать", "Назад");
				else if(listitem == 1) ShowPlayerDialog(playerid, 1973, DIALOG_STYLE_INPUT, "{FFFFFF}Прокачка новичкам | {ae433d}Бонус","{FFFFFF}Введите количество дней:\nПримечания:\n\
				- Количество дней не может быть ниже 0  [отключение]\n\
				- Количество дней не может быть выше 10 [активация]\n", "Выбрать", "Назад");
				else if(listitem == 2)
				{
					ShowPlayerDialog(playerid, 750, 2, "{FFFFFF}Выборы | {ae433d}Управление", "{FFFFFF}Начать выборы\nЗакончить выоборы\nИзменить имена кандидатов\nПоставить ограничение по уровню", "Выбрать", "Назад");
				}
			}
		}
	case 750:
		{
			if(response) 
			{
				switch(listitem)
				{
				case 0:
					{
						if(Pick) return SendClientMessage(playerid, COLOR_GREY, " В штате уже проходят выборы!");
						ShowPlayerDialog(playerid, 754, DIALOG_STYLE_INPUT, "{FFFFFF}Выборы | {ae433d}Управление","{FFFFFF}Введите количество часов:\nПримечания:\n\
						- Количество часов не может быть ниже 1 ч.\n\
						- Количество часов не может быть выше 10 ч.\n", "Выбрать", "Назад");
					}	
				case 1:
					{
						if(!Pick) return SendClientMessage(playerid, COLOR_GREY, " В штате нет выборов!");
						SendClientMessageToAll(0x3737FC00, " Внимание! Выборы отменены администрацией штата!");
						ResetPick();
					}
				case 2:
					{
						if(!Pick) return SendClientMessage(playerid, COLOR_GREY, " В штате нет выборов!");
						new sttr[255];
						for(new i = 0; i <= 6; i++)
						{
							format(format_string,128,"Слот №%i - %s\n",i, PickName[i]);
							strcat(sttr, format_string);
						}
						ShowPlayerDialog(playerid,751, 2, "Кандидаты", sttr,"Выбрать", "Назад");
					}
				case 3:
					{
						if(!Pick) return SendClientMessage(playerid, COLOR_GREY, " В штате нет выборов!");
						ShowPlayerDialog(playerid, 755, DIALOG_STYLE_INPUT, "{FFFFFF}Выборы | {ae433d}Управление","{FFFFFF}Введите минимальный уровень:\nПримечания:\n\
						- Уровень не может быть ниже 0.\n\
						- Уровень не может быть выше 20.\n", "Выбрать", "Назад");
					}
				}
			}
			else cmd_boost(playerid);
		}
	case 751:
		{
			if(response)
			{
				format(format_string, 90, "{FFFFFF}Введите имя кандидата на слот номер №%i:", listitem);
				ShowPlayerDialog(playerid, 752, 1, "Кандидат", format_string, "Выбрать", "Назад");
				SetPVarInt(playerid, "NumberPick", listitem);
			}
			else ShowPlayerDialog(playerid, 750, 2, "{FFFFFF}Выборы | {ae433d}Управление", "{FFFFFF}Начать выборы\nЗакончить выоборы\nИзменить имена кандидатов\nПоставить ограничение по уровню", "Выбрать", "Назад");
		}
	case 752:
		{
			if(response) 
			{ 
				new c = GetPVarInt(playerid, "NumberPick");
				if(sscanf(inputtext,"s[32]",PickName[c])) { format(format_string, 90, "Введите имя кандидата на слот номер №%i:", c); return ShowPlayerDialog(playerid, 752, 1, "Кандидат", format_string, "Принять", "Отмена"); }
				format(PickNames, 256, "%s, %s, %s, %s, %s, %s, %s",PickName[0], PickName[1], PickName[2], PickName[3], PickName[4], PickName[5], PickName[6]);
				format(format_string,55," Вы добавили в кандидаты: %s",PickName[c]);
				SendClientMessage(playerid, -1,format_string);
				DeletePVar(playerid, "NumberPick");
			}
			else ShowPlayerDialog(playerid, 750, 2, "{FFFFFF}Выборы | {ae433d}Управление", "{FFFFFF}Начать выборы\nЗакончить выоборы\nИзменить имена кандидатов\nПоставить ограничение по уровню", "Выбрать", "Назад");
		}
	case 753:
		{
			if(response)
			{
				if(!strcmp(pData[playerid][pName],PickName[listitem],true)) return SendClientMessage(playerid, -1, " Ты не можешь проголосовать за себя!");
				PickTime[listitem]++;
				format(format_string,50," Вы проголосовали за: %s", PickName[listitem]);
				SendClientMessage(playerid, COLOR_BLUE, format_string);
				format(PickTimes,128,"%d,%d,%d,%d,%d,%d,%d",PickTime[0],PickTime[1],PickTime[2],PickTime[3],PickTime[4],PickTime[5],PickTime[6]);
				pData[playerid][pPick] = 1;
			}
		}
	case 754:
		{
			if(response)
			{
				new nimbers;
				if(sscanf(inputtext,"i",nimbers)) return ShowPlayerDialog(playerid, 754, DIALOG_STYLE_INPUT, "{FFFFFF}Выборы | {ae433d}Управление","{FFFFFF}Введите минимальный уровень:\nПримечания:\n\
						- Количество часов не может быть меньше 1.\n\
						- Количество часов не может быть больше 10.\n", "Выбрать", "Назад");
				
				else if(!(1 <= nimbers <= 10)) return ShowPlayerDialog(playerid, 754, DIALOG_STYLE_INPUT, "{FFFFFF}Выборы | {ae433d}Управление","{FFFFFF}Введите минимальный уровень:\nПримечания:\n\
						- Уровень не может быть ниже 1.\n\
						- Уровень не может быть выше 20.\n", "Выбрать", "Назад");
				
				format(format_string, sizeof format_string, " Внимание! В штате начались выборы. Длительность %i часов (Мэрия)",nimbers);
				SendClientMessageToAll(0x3737FC00, format_string);
				
				PickDate = gettime() + (nimbers *3600);
				Pick = 1;
				for(new i = 0; i < 7; i++) { strmid(PickName[i],"None",0,strlen("None"),MAX_PLAYER_NAME); PickTime[i] = 0; }
				
			}
		}
	case 755:
		{
			if(response)
			{
				new nimbers;
				if(sscanf(inputtext,"i",nimbers)) return ShowPlayerDialog(playerid, 755, DIALOG_STYLE_INPUT, "{FFFFFF}Выборы | {ae433d}Управление","{FFFFFF}Введите минимальный уровень:\nПримечания:\n\
						- Уровень не может быть ниже 0.\n\
						- Уровень не может быть выше 20.\n", "Выбрать", "Назад");
				
				else if(!(0 <= nimbers <= 20)) return ShowPlayerDialog(playerid, 755, DIALOG_STYLE_INPUT, "{FFFFFF}Выборы | {ae433d}Управление","{FFFFFF}Введите минимальный уровень:\nПримечания:\n\
						- Уровень не может быть ниже 0.\n\
						- Уровень не может быть выше 20.\n", "Выбрать", "Назад");
				SendMes(playerid,-1," Ограничение по уровню: %i",nimbers);
				PickLevel = nimbers;
			}
		}
	case 1972:
		{
			if(!response) return cmd_boost(playerid);
			new nimbers;
			if(sscanf(inputtext,"i",nimbers))return ShowPlayerDialog(playerid, 1972, DIALOG_STYLE_INPUT, "{FFFFFF}Ускоренная прокачка | {ae433d}Бонус","{FFFFFF}Введите количество дней:\nПримечания:\n\
				- Количество дней не может быть ниже 0  [отключение]\n\
				- Количество дней не может быть выше 10 [активация]\n", "Выбрать", "Назад");
			else if(!(0 <= nimbers <= 10)) return ShowPlayerDialog(playerid, 1972, DIALOG_STYLE_INPUT, "{FFFFFF}Ускоренная прокачка | {ae433d}Бонус","{FFFFFF}Введите количество дней:\nПримечания:\n\
				- Количество дней не может быть ниже 0  [отключение]\n\
				- Количество дней не может быть выше 10 [активация]\n", "Выбрать", "Назад");
			
			if(nimbers > 0)
			{
				format(format_string, sizeof format_string, "UPDATE `boost` SET `boost_1` = '%i', `boost_2` = '0' WHERE 1",gettime() + (nimbers *86400));
				mysql_query(DATABASE,format_string);
				
				booston = gettime() + (nimbers *86400);
				booston2 = 0;
				SendRconCommand("hostname Noxe-Rp.Ru | Акция: X3 | Client 0.3.7");
			}
			else
			{
				SendRconCommand("hostname "HostName"");
				booston = 0;
				mysql_query(DATABASE,"UPDATE `boost` SET `boost_1` = '0' WHERE 1");
			}
			
			cmd_boost(playerid);
		}
	case 1973:
		{
			if(!response) return cmd_boost(playerid);
			new nimbers;
			if(sscanf(inputtext,"i",nimbers))return ShowPlayerDialog(playerid, 1973, DIALOG_STYLE_INPUT, "{FFFFFF}Прокачка новичкам | {ae433d}Бонус","{FFFFFF}Введите количество дней:\nПримечания:\n\
				- Количество дней не может быть ниже 0  [отключение]\n\
				- Количество дней не может быть выше 10 [активация]\n", "Выбрать", "Назад");
			else if(!(0 <= nimbers <= 10)) return ShowPlayerDialog(playerid, 1973, DIALOG_STYLE_INPUT, "{FFFFFF}Прокачка новичкам| {ae433d}Бонус","{FFFFFF}Введите количество дней:\nПримечания:\n\
				- Количество дней не может быть ниже 0  [отключение]\n\
				- Количество дней не может быть выше 10 [активация]\n", "Выбрать", "Назад");
			
			if(nimbers > 0)
			{
				format(format_string, sizeof format_string, "UPDATE `boost` SET `boost_2` = '%i', `boost_1` = '0' WHERE 1",gettime() + (nimbers *86400));
				mysql_query(DATABASE,format_string);
				
				booston2 = gettime() + (nimbers *86400);
				booston = 0;
				SendRconCommand("hostname Noxe-Rp.Ru | Акция для новичков");
			}
			else
			{
				SendRconCommand("hostname "HostName"");
				booston2 = 0;
				mysql_query(DATABASE,"UPDATE `boost` SET boost_2 = 0 WHERE 1");
			}
			cmd_boost(playerid);
		}
	case 3001:
		{
			if(!response) return true;
			if(!strlen(inputtext))return  ShowPlayerDialog(playerid,3001,DIALOG_STYLE_INPUT, "Цена за Звонки и SMS", "Введите сумму", "Готово", "Отмена");
			new moneys;
			moneys = strval(inputtext);
			if(moneys < 1 || moneys > 500)
			{
				SendClientMessage(playerid, COLOR_GREY, "Минимальная сумма - 1, максимальная - 600!");
				ShowPlayerDialog(playerid,3001,DIALOG_STYLE_INPUT, "Цена за Звонки и SMS", "Введите сумму", "Готово", "Отмена");
				return true;
			}
			format(string, 188, "[SFN] Цена за Звонки и SMS, в размере %i вирт. установлена ген. Директором %s.", moneys, Name(playerid));
			SendFamilyMessage(9,COLOR_YELLOW2, string);
			SmsPriceNews[0] = moneys;
		}
	case 3002:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialog(playerid,3002,DIALOG_STYLE_INPUT, "Цена за Звонки и SMS", "Введите сумму", "Готово", "Отмена");
			new moneys;
			moneys = strval(inputtext);
			if(moneys < 1 || moneys > 500)
			{
				SendClientMessage(playerid, COLOR_GREY, "Минимальная сумма - 1, максимальная - 600!");
				ShowPlayerDialog(playerid,3002,DIALOG_STYLE_INPUT, "Цена за Звонки и SMS", "Введите сумму", "Готово", "Отмена");
				return true;
			}
			format(string, 170, "[LSN] Цена за Звонки и SMS, в размере %i вирт. установлена ген. Директором %s.", moneys, Name(playerid));
			SendFamilyMessage(16,COLOR_YELLOW2, string);
			SmsPriceNews[1] = moneys;
			return true;
		}
	case 3003:
		{
			if(!response) return true;
			if(!strlen(inputtext))
			{
				ShowPlayerDialog(playerid,3003,DIALOG_STYLE_INPUT, "Цена за Звонки и SMS", "Введите сумму", "Готово", "Отмена");
			}
			new moneys;
			moneys = strval(inputtext);
			if(moneys < 1 || moneys > 500)
			{
				SendClientMessage(playerid, COLOR_GREY, "Минимальная сумма - 1, максимальная - 600!");
				ShowPlayerDialog(playerid,3003,DIALOG_STYLE_INPUT, "Цена за Звонки и SMS", "Введите сумму", "Готово", "Отмена");
				return true;
			}
			format(string, 170, "[LVN] Цена за Звонки и SMS, в размере %i вирт. установлена ген. Директором %s.", moneys, Name(playerid));
			SendFamilyMessage(20,COLOR_YELLOW2, string);
			SmsPriceNews[2] = moneys;
			return true;
		}
	case 31: // SF news
		{
			if(!response) return true;
			if(!strlen(inputtext))
			{
				ShowPlayerDialog(playerid,31,DIALOG_STYLE_INPUT, "Цена за объявления", "Введите сумму", "Готово", "Отмена");
			}
			new moneys;
			moneys = strval(inputtext);
			if(moneys < 1 || moneys > 50)
			{
				SendClientMessage(playerid, COLOR_GREY, "Минимальная сумма - 1, максимальная - 5000!");
				ShowPlayerDialog(playerid,31,DIALOG_STYLE_INPUT, "Цена за объявления", "Введите сумму", "Готово", "Отмена");
				return true;
			}
			format(string, 170, "Цена за символ, в размере %i вирт. установлена ген. Директором %s.", moneys, Name(playerid));
			SendFamilyMessage(9,COLOR_YELLOW2, string);
			addd[1] = moneys;
			return true;
		}
	case 32:// LS news
		{
			if(!response) return true;
			if(!strlen(inputtext))
			{
				ShowPlayerDialog(playerid,32,DIALOG_STYLE_INPUT, "Цена за объявления", "Введите сумму", "Готово", "Отмена");
			}
			new moneys;
			moneys = strval(inputtext);
			if(moneys < 1 || moneys > 50)
			{
				SendClientMessage(playerid, COLOR_GREY, "Минимальная сумма - 1, максимальная - 5000!");
				ShowPlayerDialog(playerid,32,DIALOG_STYLE_INPUT, "Цена за объявления", "Введите сумму", "Готово", "Отмена");
				return true;
			}
			format(string, 170, "Цена за символ, в размере %i вирт. установлена ген. Директором %s.", moneys, Name(playerid));
			SendFamilyMessage(16,COLOR_YELLOW2, string);
			addd[0] = moneys;
			return true;
		}
	case 33: // LV news
		{
			if(!response) return true;
			if(!strlen(inputtext))
			{
				ShowPlayerDialog(playerid,33,DIALOG_STYLE_INPUT, "Цена за объявления", "Введите сумму", "Готово", "Отмена");
			}
			new moneys;
			moneys = strval(inputtext);
			if(moneys < 1 || moneys > 50)
			{
				SendClientMessage(playerid, COLOR_GREY, "Минимальная сумма - 1, максимальная - 5000!");
				ShowPlayerDialog(playerid,33,DIALOG_STYLE_INPUT, "Цена за объявления", "Введите сумму", "Готово", "Отмена");
				return true;
			}
			format(string, 170, "Цена за символ, в размере %i вирт. установлена ген. Директором %s.", moneys, Name(playerid));
			SendFamilyMessage(20,COLOR_YELLOW2, string);
			addd[2] = moneys;
			return true;
		}
	case 3113:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					switch(pData[playerid][pMember])
					{
					case 9: ShowPlayerDialog(playerid,31,DIALOG_STYLE_INPUT, "{FFFFFF}Стоимость | {ae433d}Управление", "{FFFFFF}Введите сумму", "»", "x");
					case 16: ShowPlayerDialog(playerid,32,DIALOG_STYLE_INPUT, "{FFFFFF}Стоимость | {ae433d}Управление", "{FFFFFF}Введите сумму", "»", "x");
					case 20:  ShowPlayerDialog(playerid,33,DIALOG_STYLE_INPUT, "{FFFFFF}Стоимость | {ae433d}Управление", "{FFFFFF}Введите сумму", "»", "x");
					}
				}
			case 1:
				{
					switch(pData[playerid][pMember])
					{
					case 9:	ShowPlayerDialog(playerid,3001,DIALOG_STYLE_INPUT, "{FFFFFF}Стоимость | {ae433d}Управление", "{FFFFFF}Введите сумму", "»", "x");
					case 16:	ShowPlayerDialog(playerid,3002,DIALOG_STYLE_INPUT, "{FFFFFF}Стоимость | {ae433d}Управление", "{FFFFFF}Введите сумму", "»", "x");
					case 20:	ShowPlayerDialog(playerid,3003,DIALOG_STYLE_INPUT, "{FFFFFF}Стоимость | {ae433d}Управление", "{FFFFFF}Введите сумму", "»", "x");
					}
				}
			}
		}
	case 11518:
		{
			if(!response) return true;
			switch(pData[playerid][pMember])
			{
			case 9: ViborNews = 1;
			case 16: ViborNews = 0;
			case 20: ViborNews = 2;
			}
			if AdvertInfo[listitem+1][ViborNews][adOnEdit] *then return SendClientMessage(playerid,COLOR_GREY,"В данный момент объявление уже редактируется");
			SetPVarInt(playerid, "AdvertID", listitem+1);
			AdvertInfo[GetPVarInt(playerid, "AdvertID")][ViborNews][adOnEdit] = 1;
			ShowPlayerDialog(playerid, 11519, 2, "{FFFFFF}Объявление | {ae433d}Новости", "[1] Отправить объявление\n[2] Прочитать объявление\n[3] Редактировать объявление\n[4] Удалить объявление\n[5] Отправить администрации", "»", "«");
		}
	case 11519:
		{
			new full = 0;
			switch(pData[playerid][pMember])
			{
			case 16: full = 0;
			case 9: full = 1;
			case 20: full = 2;
			}
			if(!response) { AdvertList(playerid); AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adOnEdit] = 0; DeletePVar(playerid, "AdvertID"); return true; }
			switch(listitem)
			{
			case 0:
				{
					if(adCheck2 > gettime()) return SendClientMessage(playerid,COLOR_GRAD1," Объявление можно отправлять раз в 15 секунд"),ShowPlayerDialog(playerid, 11519, 2, "{FFFFFF}Объявление | {ae433d}Новости", "[1] Отправить объявление\n[2] Прочитать объявление\n[3] Редактировать объявление\n[4] Удалить объявление\n[5] Отправить администрации", "»", "«");
					adCheck2 = gettime()+15;
					format(format_string, sizeof format_string, " Объявление: %s. Прислал: %s. Тел: %i",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText], AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adName],AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adPhone]);
					SendClientMessageToAll(TEAM_GROVE_COLOR, format_string);
					switch(pData[playerid][pMember])
					{
					case 9:
						{
							if(strcmp(AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adEditName], "None", true) == 0)
							{
								format(format_string, sizeof format_string, "    Отредактировал сотрудник SF News: %s", Name(playerid));
								SendClientMessageToAll(TEAM_GROVE_COLOR, format_string);
							}
							else
							{
								format(format_string, sizeof format_string, "    Отредактировал сотрудник SF News: %s", AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adEditName]);
								SendClientMessageToAll(TEAM_GROVE_COLOR, format_string);
							}
						}
					case 16:
						{
							if(strcmp(AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adEditName], "None", true) == 0)
							{
								format(format_string, sizeof format_string, "    Отредактировал сотрудник LS News: %s", Name(playerid));
								SendClientMessageToAll(TEAM_GROVE_COLOR, format_string);
							}
							else
							{
								format(format_string, sizeof format_string, "    Отредактировал сотрудник LS News: %s", AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adEditName]);
								SendClientMessageToAll(TEAM_GROVE_COLOR, format_string);
							}
						}
					case 20:
						{
							if(strcmp(AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adEditName], "None", true) == 0)
							{
								format(format_string, sizeof format_string, "    Отредактировал сотрудник LV News: %s", Name(playerid));
								SendClientMessageToAll(TEAM_GROVE_COLOR, format_string);
							}
							else
							{
								format(format_string, sizeof format_string, "    Отредактировал сотрудник LV News: %s", AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adEditName]);
								SendClientMessageToAll(TEAM_GROVE_COLOR, format_string);
							}
						}
					}
					for(new i = GetPVarInt(playerid, "AdvertID"); i <= TOTALADVERT[full] - 1; i++)
					{
						AdvertInfo[i][full][adPhone] = AdvertInfo[i+1][full][adPhone];
						strmid(AdvertInfo[i][full][adText],AdvertInfo[i+1][full][adText],0,strlen(AdvertInfo[i+1][full][adText]), 100);
						strmid(AdvertInfo[i][full][adName],AdvertInfo[i+1][full][adName],0,strlen(AdvertInfo[i+1][full][adName]), 100);
						//strmid(AdvertInfo[i][full][adEditName],AdvertInfo[i+1][full][adEditName],"None",strlen(AdvertInfo[i+1][full][adEditName]), 100);
						strmid(AdvertInfo[i][full][adEditName],"None",0,MAX_PLAYER_NAME,MAX_PLAYER_NAME);
						AdvertInfo[i][full][adOnEdit] = 0;
					}
					TOTALADVERT[full]--;
					DeletePVar(playerid, "AdvertID");
					AdvertList(playerid);
				}
			case 1:
				{
					format(string, 128, " Текст: %s. Прислал: %s",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText],AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adName]);
					ShowPlayerDialog(playerid, 11520, 0, "{FFFFFF}Объявление | {ae433d}Новости", string, "«", "");
				}
			case 2:
				{
					format(string, 128, " Текст: %s. Прислал: %s",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText],AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adName]);
					ShowPlayerDialog(playerid, 11521, 1, "{FFFFFF}Объявление | {ae433d}Новости", string, "»", "«");
				}
			case 3:
				{
					for(new i = GetPVarInt(playerid, "AdvertID"); i <= TOTALADVERT[full] - 1; i++)
					{
						AdvertInfo[i][full][adPhone] = AdvertInfo[i+1][full][adPhone];
						strmid(AdvertInfo[i][full][adText],AdvertInfo[i+1][full][adText],0,strlen(AdvertInfo[i+1][full][adText]), 50);
						strmid(AdvertInfo[i][full][adName],AdvertInfo[i+1][full][adName],0,strlen(AdvertInfo[i+1][full][adName]), 50);
						AdvertInfo[i][full][adOnEdit] = 0;
						strmid(AdvertInfo[i][full][adEditName],"None",0,MAX_PLAYER_NAME,MAX_PLAYER_NAME);
					}
					TOTALADVERT[full]--;
					SendClientMessage(playerid, COLOR_GREEN, "Объявление удалено");
					DeletePVar(playerid, "AdvertID");
					AdvertList(playerid);
				}
			case 4:
				{
					format(string, 128, " News Report: %s. Прислал: %s (Отправил: %s)",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText], AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adName], Name(playerid));
					SendAdminMessage(0xD97700AA, string);
					for(new i = GetPVarInt(playerid, "AdvertID"); i <= TOTALADVERT[full] - 1; i++)
					{
						AdvertInfo[i][full][adPhone] = AdvertInfo[i+1][full][adPhone];
						strmid(AdvertInfo[i][full][adText],AdvertInfo[i+1][full][adText],0,strlen(AdvertInfo[i+1][full][adText]), 50);
						strmid(AdvertInfo[i][full][adName],AdvertInfo[i+1][full][adName],0,strlen(AdvertInfo[i+1][full][adName]), 50);
						AdvertInfo[i][full][adOnEdit] = 0;
						strmid(AdvertInfo[i][full][adEditName],"None",0,MAX_PLAYER_NAME,MAX_PLAYER_NAME);
					}
					TOTALADVERT[full]--;
					SendClientMessage(playerid, COLOR_LIGHTRED, " Объявление отправлено администрации");
					
					DeletePVar(playerid, "AdvertID");
					AdvertList(playerid);
				}
			}
		}
	case 11520: ShowPlayerDialog(playerid, 11519, 2, "{FFFFFF}Объявление | {ae433d}Новости", "[1] Отправить объявление\n[2] Прочитать объявление\n[3] Редактировать объявление\n[4] Удалить объявление\n[5] Отправить администрации", "»", "«");
	case 11521:
		{
			if(!response) return ShowPlayerDialog(playerid, 11519, 2, "{FFFFFF}Объявление | {ae433d}Новости", "[1] Отправить объявление\n[2] Прочитать объявление\n[3] Редактировать объявление\n[4] Удалить объявление\n[5] Отправить администрации", "»", "«");
			new full = 0;
			switch(pData[playerid][pMember])
			{
			case 9: full = 1;
			case 16: full = 0;
			case 20: full = 2;
			}
			if(!strlen(inputtext))
			{
				format(string, 128, " Текст: %s. Прислал: %s",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText],AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adName]);
				return ShowPlayerDialog(playerid, 11521, 1, "Объявления", string, "Принять", "Назад");
			}
			strmid(AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText], inputtext, 0, 128, 128);
			strmid(AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adEditName], Name(playerid), 0, 128, 128);
			SendClientMessage(playerid, COLOR_LIGHTGREEN, " Объявление отредактировано и сохранено");
			ShowPlayerDialog(playerid, 11519, 2, "{FFFFFF}Объявление | {ae433d}Новости", "[1] Отправить объявление\n[2] Прочитать объявление\n[3] Редактировать объявление\n[4] Удалить объявление\n[5] Отправить администрации", "»", "«");
		}
	case 2223:
		{
			if !response *then return true;
			switch(listitem)
			{
			case 0:
				{
					if OnPlayerEther[playerid] > 0 *then return SendClientMessage(playerid,COLOR_GREY," Вы уже находитесь в эфире!");
					OnPlayerEther[playerid] = 1;
					format(string, 90, " %s начал(а) прямой эфир", Name(playerid));
					SendFamilyMessage(pData[playerid][pMember],COLOR_GREEN, string);
					return true;
				}
			case 1:
				{
					if !OnPlayerEther[playerid] *then return SendClientMessage(playerid,COLOR_GREY," Вы не находитесь в эфире!");
					OnPlayerEther[playerid] = 0;
					format(string, 90, " %s вышел(а) из прямого эфира", Name(playerid));
					SendFamilyMessage(pData[playerid][pMember],COLOR_GREEN, string);
					return true;
				}
			case 2:
				{
					switch(pData[playerid][pMember])
					{
					case 16: ViborNews = 0;
					case 9: ViborNews = 1;
					case 20: ViborNews = 2;
					}
					if OnSmsNews[ViborNews] *then return SendClientMessage(playerid,COLOR_GREY," Приём звонков/смс уже включен!");
					format(string, 128, " %s начал(а) приём звонков от слушателей", Name(playerid));
					SendFamilyMessage(pData[playerid][pMember],COLOR_GREEN, string);
					OnSmsNews[ViborNews] = true;
					return true;
				}
			case 3:
				{
					switch(pData[playerid][pMember])
					{
					case 16: ViborNews = 0;
					case 9: ViborNews = 1;
					case 20: ViborNews = 2;
					}
					if !OnSmsNews[ViborNews] *then return SendClientMessage(playerid,COLOR_GREY," Приём звонков/смс был выключен ранее!");
					format(string, 128, " %s завершил(а) приём звонков от слушателей", Name(playerid));
					SendFamilyMessage(pData[playerid][pMember],COLOR_GREEN, string);
					OnSmsNews[ViborNews] = false;
					foreach(new i: Player)
					{
						if(OnPlayerEther[i] == pData[playerid][pMember])
						{
							SetPlayerSpecialAction(i,SPECIAL_ACTION_STOPUSECELLPHONE);
							SendClientMessage(i, COLOR_YELLOW, " Звонок завершён.");
							Tel[i] = 255;
							OnPlayerEther[i] = 0;
						}
					}
					return true;
				}
			case 4: AdvertList(playerid);
			case 5: cmd_newsbank(playerid);
			case 6: if(pData[playerid][pLeader] == 9 || pData[playerid][pLeader] == 16 || pData[playerid][pLeader] == 20)ShowPlayerDialog(playerid, 3113, DIALOG_STYLE_LIST, "{FFFFFF}Управление | {ae433d}Новости", "Установить цену за объявления\nУстановить цену за звонки и SMS", "»", "«");
			}
		}
	case 8454:
		{
			if(!response) return true;
			if(pData[playerid][pCash] < strlen(ReportQ[playerid])*addd[0]) return SendClientMessage(playerid, COLOR_WHITE,  " У Вас не достаточно денег");
			if(TOTALADVERT[0] >= 15) return SendClientMessage(playerid,COLOR_GREY," Список объявлений заполнен. Попробуйте подать объявление позже.");
			pData[playerid][pCash] -= strlen(ReportQ[playerid])*addd[0];
			SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
			FracBank[0][fLsnews] += strlen(ReportQ[playerid])*addd[0];
			TOTALADVERT[0] ++;
			AdvertInfo[TOTALADVERT[0]][0][adPhone] = pData[playerid][pPnumber];
			strmid(AdvertInfo[TOTALADVERT[0]][0][adText],ReportQ[playerid],0,128,128);
			strmid(AdvertInfo[TOTALADVERT[0]][0][adName],Name(playerid),0,MAX_PLAYER_NAME,MAX_PLAYER_NAME);
			strmid(AdvertInfo[TOTALADVERT[0]][0][adEditName],"None",0,MAX_PLAYER_NAME,MAX_PLAYER_NAME);
			AdvertInfo[TOTALADVERT[0]][0][adOnEdit] = 0;
			format(string,32, "~r~-$%i", strlen(ReportQ[playerid])*addd[0]);
			GameTextForPlayer(playerid, string, 5000, 1);
			SendClientMessage(playerid, COLOR_WHITE, " Ваше обьявление будет подано после проверки");
			adCheck = gettime()+15;

			SendFamilyMessage(16, COLOR_GREEN, " Поступило новое объявление");
		}
	case 8455:
		{
			if(!response) return true;
			if(pData[playerid][pCash] < strlen(ReportQ[playerid])*addd[1]) return SendClientMessage(playerid, COLOR_WHITE,  " У Вас не достаточно денег");
			if(TOTALADVERT[1] >= 15) return SendClientMessage(playerid,COLOR_GREY," Список объявлений заполнен. Попробуйте подать объявление позже.");
			pData[playerid][pCash] -= strlen(ReportQ[playerid])*addd[1];
			SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
			FracBank[0][fSfnews] += strlen(ReportQ[playerid])*addd[1];
			TOTALADVERT[1] ++;
			AdvertInfo[TOTALADVERT[1]][1][adPhone] = pData[playerid][pPnumber];
			strmid(AdvertInfo[TOTALADVERT[1]][1][adText],ReportQ[playerid],0,128,128);
			strmid(AdvertInfo[TOTALADVERT[1]][1][adName],Name(playerid),0,MAX_PLAYER_NAME,MAX_PLAYER_NAME);
			strmid(AdvertInfo[TOTALADVERT[1]][1][adEditName],"None",0,MAX_PLAYER_NAME,MAX_PLAYER_NAME);
			AdvertInfo[TOTALADVERT[1]][1][adOnEdit] = 0;
			format(string,32, "~r~-$%i", strlen(ReportQ[playerid])*addd[1]);
			GameTextForPlayer(playerid, string, 5000, 1);
			SendClientMessage(playerid, COLOR_WHITE, " Ваше обьявление будет подано после проверки");
			adCheck = gettime()+15;

			SendFamilyMessage(9, COLOR_GREEN, " Поступило новое объявление");
		}
	case 8456:
		{
			if(!response) return true;
			if(pData[playerid][pCash] < strlen(ReportQ[playerid])*addd[2]) return SendClientMessage(playerid, COLOR_WHITE,  " У Вас не достаточно денег");
			if(TOTALADVERT[2] >= 15) return SendClientMessage(playerid,COLOR_GREY," Список объявлений заполнен. Попробуйте подать объявление позже.");
			pData[playerid][pCash] -= strlen(ReportQ[playerid])*addd[2];
			SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
			FracBank[0][fLvnews] += strlen(ReportQ[playerid])*addd[2];
			TOTALADVERT[2] ++;
			AdvertInfo[TOTALADVERT[2]][2][adPhone] = pData[playerid][pPnumber];
			strmid(AdvertInfo[TOTALADVERT[2]][2][adText],ReportQ[playerid],0,128,128);
			strmid(AdvertInfo[TOTALADVERT[2]][2][adEditName],"None",0,MAX_PLAYER_NAME,MAX_PLAYER_NAME);
			strmid(AdvertInfo[TOTALADVERT[2]][2][adName],Name(playerid),0,MAX_PLAYER_NAME,MAX_PLAYER_NAME);
			AdvertInfo[TOTALADVERT[2]][2][adOnEdit] = 0;
			format(string,32, "~r~-$%i", strlen(ReportQ[playerid])*addd[2]);
			GameTextForPlayer(playerid, string, 5000, 1);
			SendClientMessage(playerid, COLOR_WHITE, " Ваше обьявление будет подано после проверки");
			adCheck = gettime()+15;

			SendFamilyMessage(20, COLOR_GREEN, " Поступило новое объявление");
		}
	case 7752:
		{
			if(!response) return true;
			SetPVarInt(playerid,"slotcar",listitem);
			
			new randcar = GetPVarInt(playerid,"randcar");
			format(string,500,"{FFFFFF}Слот номер: %i\nВы желаете заменить автомобиль или получить половину гос.стоимости?\nЗаменить %s[%i] на %s[%i]\nГосударственная стоимость %s: %i вирт", listitem,VehicleNames[ShopCar[randcar][0]-400],ShopCar[randcar][0],VehicleNames[CarInfo[playerid][carModel][listitem]-400],CarInfo[playerid][carModel][listitem],VehicleNames[ShopCar[randcar][0]-400],ShopCar[randcar][1]);
			ShowPlayerDialog(playerid,7853,DIALOG_STYLE_MSGBOX,"{FFFFFF}Рулетка | {B1413D}Автомобиль",string,"Заменить","Деньги");
		}
	case 7853:
		{
			if(!response)
			{
				pData[playerid][pCash] += ShopCar[GetPVarInt(playerid,"randcar")][1]/2;
				SendMes(playerid,COLOR_GOLD," Вы получаете %i вирт за выигранный автомобиль",ShopCar[GetPVarInt(playerid,"randcar")][1]/2);
				
				format(format_string, 150, "UPDATE `gifts` SET `name` = '%s', `use` = '1', `result` = '%i' WHERE `code` = '%s'",pData[playerid][pName],ShopCar[GetPVarInt(playerid,"randcar")][1]/2, pData[playerid][pRoolete]);
				mysql_query(DATABASE,format_string);
				
				DeletePVar(playerid,"randcar");
				return true;
			}
			CarInfo[playerid][carModel][GetPVarInt(playerid,"slotcar")] = ShopCar[GetPVarInt(playerid, "randcar")][0];
			CarInfo[playerid][carColor_one][GetPVarInt(playerid,"slotcar")] = 0;
			CarInfo[playerid][carColor_two][GetPVarInt(playerid,"slotcar")] = 0;
			CarInfo[playerid][carPercent][GetPVarInt(playerid,"slotcar")] = 100;
			CarInfo[playerid][carFuel][GetPVarInt(playerid,"slotcar")] = 200;
			SCM(playerid,COLOR_GOLD, " Вы забрали выигранный автомобиль. Вам нужно подождать 24 часа/либо (( /fixcar )) заплатить");
			
			
			format(format_string, 150, "UPDATE `gifts` SET `name` = '%s', `use` = '1', `result` = '%i' WHERE `code` = '%s'",pData[playerid][pName],ShopCar[GetPVarInt(playerid,"randcar")][0], pData[playerid][pRoolete]);
			mysql_query(DATABASE,format_string);
			
			DeletePVar(playerid,"randcar");
			return true;
		}
	case 7754:
		{
			if(!response) return true;
			SetPVarInt(playerid,"slotcar",listitem);
			
			new randcar = GetPVarInt(playerid,"randcar");
			format(string,500,"{FFFFFF}Слот номер: %i\nВы желаете заменить скин или получить половину гос.стоимости?\nЗаменить %i на %i\nГосударственная стоимость %s: 5000 вирт", listitem,pData[playerid][pChar][listitem+1],randcar);
			ShowPlayerDialog(playerid,7855,DIALOG_STYLE_MSGBOX,"{FFFFFF}Рулетка | {B1413D}Одежда",string,"Заменить","Деньги");
		}
	case 7855:
		{
			if(!response)
			{
				pData[playerid][pCash] += 2500;
				SendClientMessage(playerid,COLOR_GOLD," Вы получаете 2500 вирт за выигранный скин");
				
				format(format_string, 150, "UPDATE `gifts` SET `name` = '%s', `use` = '1', `result` = '2500' WHERE `code` = '%s'",pData[playerid][pName], pData[playerid][pRoolete]);
				mysql_query(DATABASE,format_string);
				
				DeletePVar(playerid,"randcar");
				return true;
			}
			pData[playerid][pChar][listitem+1] = GetPVarInt(playerid, "randcar");
			SCM(playerid,COLOR_GOLD, " Вы забрали выигранный скин. Вам нужно подождать 24 часа/либо переодеться в доме/квартире");
			
			
			format(format_string, 150, "UPDATE `gifts` SET `name` = '%s', `use` = '1', `result` = '-%i' WHERE `code` = '%s'",pData[playerid][pName],GetPVarInt(playerid, "randcar"), pData[playerid][pRoolete]);
			mysql_query(DATABASE,format_string);
			
			DeletePVar(playerid,"randcar");
			return true;
		}
	case 1994:
		{
			if(!response) return true;
			ClearAnimations(playerid);
			switch(listitem)
			{
				case 0: ApplyAnimation(playerid, "DANCING", "dnce_M_b", 4.1, 1, 0, 0, 1, 1 , 1);
				case 1: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE1);
				case 2: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
				case 3: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE3);
				case 4: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE4);
				case 5: ApplyAnimation(playerid, "SMOKING", "M_smklean_loop", 4.1, 1, 0, 0, 1, 1, 1);
				case 6: ApplyAnimation(playerid, "SUNBATHE", "ParkSit_M_in", 4.1, 0, 0, 0, 1, 1, 1);
				case 7: ApplyAnimation(playerid, "SUNBATHE", "SitnWait_in_W", 4.1, 0, 0, 0, 1, 1, 1);
				case 8: ApplyAnimation(playerid, "CRACK", "Bbalbat_Idle_01", 4.1, 0, 0, 0, 1, 1, 1);
				case 9: ApplyAnimation(playerid, "CRACK", "crckdeth1", 4.1, 0, 0, 0, 1, 1, 1);
				case 10: ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.1, 0, 0, 0, 1, 1, 1);
				case 11: ApplyAnimation(playerid, "CRACK", "crckdeth3", 4.1, 0, 0, 0, 1, 1, 1);
				case 12: ApplyAnimation(playerid, "CRACK", "crckdeth4", 4.1, 0, 0, 0, 1, 1, 1);
				case 13: ApplyAnimation(playerid, "CRACK", "crckidle1", 4.1, 0, 0, 0, 1, 1, 1);
				case 14: ApplyAnimation(playerid, "CRACK", "crckidle2", 4.1, 0, 0, 0, 1, 1, 1);
				case 15: ApplyAnimation(playerid, "CRACK", "crckidle3", 4.1, 0, 0, 0, 1, 1, 1);
				case 16: ApplyAnimation(playerid, "CRACK", "crckidle4", 4.1, 0, 0, 0, 1, 1, 1);
				case 17: ApplyAnimation(playerid, "DEALER", "DEALER_IDLE", 4.1, 0, 0, 0, 1, 1, 1);
				case 18: ApplyAnimation(playerid, "PED", "gang_gunstand", 4.1, 0, 0, 0, 1, 1, 1);
				case 19: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_HANDSUP);
				case 20: ApplyAnimation(playerid, "PED", "DUCK_cower", 4.1, 0, 0, 0, 1, 1, 1);
				case 21: ApplyAnimation(playerid, "PED", "DOOR_LHinge_O", 4.1, 0, 1, 1, 1, 1 ,1);
				case 22: ApplyAnimation(playerid, "PED", "FLOOR_hit", 4.1, 0, 0, 0, 1, 1, 1);
				case 23: ApplyAnimation(playerid, "PED", "FLOOR_hit_f", 4.1, 0, 0, 0, 1, 1, 1);
				case 24: ApplyAnimation(playerid, "PED", "run_right", 4.1, 1, 1, 1, 1, 1 ,1);
				case 25: ApplyAnimation(playerid, "PED", "SEAT_down", 4.1, 0, 0, 0, 1, 1 ,1);
				case 26: ApplyAnimation(playerid, "PED", "WALK_drunk", 4.1, 1, 1, 1, 1, 1 ,1);
			}
			return ShowPlayerDialog(playerid, 1994, DIALOG_STYLE_LIST, "Анимации", "[0] Танец 1\n[1] Танец 2\n[2] Танец 3\n[3] Танец 4\n[4] Танец 5\n[5] Курить\n[6] Поза 1\n[7] Поза 2\n[8] Поза 3\n[9] Поза 4\n[10] Поза 5\n[11] Поза 6\n[12] Поза 7\n[13] Поза 8\n[14] Поза 9\n[15] Поза 10\n[16] Поза 11\n[17] Диллер\n[18] Поза 12\n[19] Руки вверх\n[20] Поза 13\n[21] Поза 14\n[22] Поза 15\n[23] Поза 16\n[24] Поза 17\n[25] Поза 18","Выбрать","Назад");
			//return ShowPlayerDialog(playerid, 1994, DIALOG_STYLE_LIST, "AnimList", "[0] Dance 0\n[1] Dance 1\n[2] Dance 2\n[3] Dance 3\n[4] Dance 4\n[5] Smoking\n[6] Sunbathe1\n[7] Sunbathe2\n[8] Crack1\n[9] Crack2\n[10] Crack3\n[11] Crack4\n[12] Crack5\n[13] Crack6\n[14] Crack7\n[15] Crack8\n[16] Crack9\n[17] Dealer\n[18] Ped\n[19] Руки вверх\n[20] Ped1\n[21] Ped2\n[22] Ped3\n[23] Ped4\n[24] Ped5\n[25] Ped6\n[26] Ped7", "Готово", "Отмена");
		}
		
	case 1375:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					if(!IsPlayerInRangeOfPoint(playerid, 6, -514.2097,-543.8253,25.5234) && !IsPlayerInRangeOfPoint(playerid, 6, -1027.4011,-593.5901,32.0126)) return SCM(playerid,COLOR_GREY," Вы не на месте закупки");
					ShowPlayerDialog(playerid,1377,DIALOG_STYLE_LIST,"Выберите тип бизнеса","Бары и клубы\nЗакусочные\nМагазины 24/7\nЗаправки", "Выбрать", "Назад");
				}
			case 1: {ShowPlayerDialog(playerid,1386,DIALOG_STYLE_LIST,"Выберите тип бизнеса","Бары и клубы\nЗакусочные\nМагазины 24/7\nЗаправки", "Выбрать", "Назад");}
			case 2: ShowPlayerDialog(playerid,1376,DIALOG_STYLE_LIST,"Выберите тип бизнеса","Бары и клубы\nЗакусочные\nМагазины 24/7\nЗаправки", "Выбрать", "Назад");
			case 3: {cmd_pskill(playerid);}
			case 4: {ShowPlayerDialog(playerid,1228,DIALOG_STYLE_MSGBOX, " ", "Вы уверены, что хотите выбросить продукты?", "Выбросить", "Отмена");}
			}
			return true;
		}
	case 2120:
		{
			if(!response) return true;
			new cash[7],is = 0;
			new szQuery[1024];
			szQuery[0] = EOS;
			strcat(szQuery,"{FFFFFF}Инициатор\t{FFFFFF}Вооружение\t{FFFFFF}Ставка\t{FFFFFF}Зона\nСоздать новое состязание\n",sizeof szQuery);
			for(new i; i < 20; i++)
			{
				if(MatchInfo[i][mPlayer_1] == -1 || MatchInfo[i][mZone] == -1) continue;
				
				MatchInfo[is][mID] = i;
				is++;
				
				format(cash,sizeof cash,"%i",MatchInfo[i][mPrice]);
				strcat(szQuery,pData[MatchInfo[i][mPlayer_1]][pName],sizeof szQuery);
				strcat(szQuery,"\t",sizeof szQuery);
				switch(MatchInfo[i][mWeapon])
				{
				case 24: strcat(szQuery,"Deagle",sizeof szQuery);
				case 25: strcat(szQuery,"Shotgun",sizeof szQuery);
				case 31: strcat(szQuery,"M4",sizeof szQuery);
				case 30: strcat(szQuery,"Ak47",sizeof szQuery);
				case 29: strcat(szQuery,"MP5",sizeof szQuery);
				}
				strcat(szQuery,"\t",sizeof szQuery);
				strcat(szQuery,cash,sizeof szQuery);
				strcat(szQuery,"\t",sizeof szQuery);
				switch(MatchInfo[i][mZone])
				{
				case 0: strcat(szQuery,"Stock",sizeof szQuery);
				case 1: strcat(szQuery,"Jail",sizeof szQuery);
				}
				strcat(szQuery,"\n",sizeof szQuery);
			}
			ShowPlayerDialog(playerid, 2121, DIALOG_STYLE_TABLIST_HEADERS, !"{FFFFFF}Перечень | {ae433d}Дуэль",szQuery, !"Выбрать", !"Отмена");
		}
	case 2121:
		{
			if(!response) return true;
			if(pData[playerid][pDuelID] != -1) return true;
			switch(listitem)
			{
			case 0:
				{
					for(new i; i < 20; i++)
					{
						if(MatchInfo[i][mPlayer_1] == -1)
						{
							MatchInfo[i][mZone] =
							MatchInfo[i][mPrice] = -1;
							
							pData[playerid][pDuelID] = i;
							MatchInfo[i][mPlayer_1] = playerid;
							break;
						}
					}
					if(pData[playerid][pDuelID] == -1) return SendClientMessage(playerid,COLOR_GREY," Достигнут лимит состязаний.");
					ShowPlayerDialog(playerid,2122,DIALOG_STYLE_LIST,"{FFFFFF}Оружие | {ae433d}Дуэль","Deagle\nShotgun\nM4\nAk47\nMP5", "Выбрать", "Назад");
				}
			default:
				{
					if(MatchInfo[MatchInfo[listitem-1][mID]][mPlayer_1] == -1) return true;
					if(MatchInfo[MatchInfo[listitem-1][mID]][mPrice] > pData[playerid][pCash]) return SendClientMessage(playerid,COLOR_GREY,"Для участия в состязание недостаточно денег.");
					pData[playerid][pCash] -= MatchInfo[MatchInfo[listitem-1][mID]][mPrice];
					
					pData[playerid][pDuelIDP] = MatchInfo[MatchInfo[listitem-1][mID]][mPlayer_1];
					pData[MatchInfo[MatchInfo[listitem-1][mID]][mPlayer_1]][pDuelIDP] = playerid;
					pData[MatchInfo[MatchInfo[listitem-1][mID]][mPlayer_1]][pDuelID] = pData[playerid][pDuelID] = MatchInfo[MatchInfo[listitem-1][mID]][mPrice];
					GivePlayerWeaponEx(MatchInfo[MatchInfo[listitem-1][mID]][mPlayer_1],MatchInfo[MatchInfo[listitem-1][mID]][mWeapon],200);
					GivePlayerWeaponEx(playerid,MatchInfo[MatchInfo[listitem-1][mID]][mWeapon],200);
					
					if(!MatchInfo[MatchInfo[listitem-1][mID]][mZone])
					{
						SetPlayerHealth(MatchInfo[MatchInfo[listitem-1][mID]][mPlayer_1],100.0);
						SetPlayerPos(MatchInfo[MatchInfo[listitem-1][mID]][mPlayer_1],1072.1063,2077.2295,10.8203);
						SetPlayerInterior(MatchInfo[MatchInfo[listitem-1][mID]][mPlayer_1], 0);
						SetPlayerFacingAngle(MatchInfo[MatchInfo[listitem-1][mID]][mPlayer_1], 0.2898);
						SetPlayerVirtualWorld(MatchInfo[MatchInfo[listitem-1][mID]][mPlayer_1], MatchInfo[MatchInfo[listitem-1][mID]][mPlayer_1]);
						
						
						SetPlayerHealth(playerid,100.0);
						SetPlayerPos(playerid,1070.5472,2121.6252,10.8203);
						SetPlayerInterior(playerid, 0);
						SetPlayerFacingAngle(playerid, 162.2846);
						SetPlayerVirtualWorld(playerid, MatchInfo[MatchInfo[listitem-1][mID]][mPlayer_1]);
					}
					else
					{
						SetPlayerHealth(MatchInfo[MatchInfo[listitem-1][mID]][mPlayer_1],100.0);
						SetPlayerInterior(MatchInfo[MatchInfo[listitem-1][mID]][mPlayer_1], 2);
						SetPlayerPos(MatchInfo[MatchInfo[listitem-1][mID]][mPlayer_1],2563.2029,-1305.6848,1031.4219);
						SetPlayerFacingAngle(MatchInfo[MatchInfo[listitem-1][mID]][mPlayer_1], 55.6157);
						SetPlayerVirtualWorld(MatchInfo[MatchInfo[listitem-1][mID]][mPlayer_1], MatchInfo[MatchInfo[listitem-1][mID]][mPlayer_1]);
						
						
						SetPlayerHealth(playerid,100.0);
						SetPlayerInterior(playerid, 2);
						SetPlayerPos(playerid,2531.9954,-1282.0161,1031.4219);
						SetPlayerFacingAngle(playerid, 228.3857);
						SetPlayerVirtualWorld(playerid, MatchInfo[MatchInfo[listitem-1][mID]][mPlayer_1]);
					}
					MatchInfo[MatchInfo[listitem-1][mID]][mPlayer_1] = MatchInfo[MatchInfo[listitem-1][mID]][mZone] = -1;
				}
			}
		}
	case 2122:
		{
			if(!response) 
			{
				MatchInfo[pData[playerid][pDuelID]][mZone] =
				MatchInfo[pData[playerid][pDuelID]][mPrice] = -1;
				MatchInfo[pData[playerid][pDuelID]][mPlayer_1] = -1;
				
				pData[playerid][pDuelID] = -1;
				new szQuery[1024];
				szQuery[0] = EOS;
				new cash[5],is = 0;
				strcat(szQuery,"{FFFFFF}Инициатор\t{FFFFFF}Вооружение\t{FFFFFF}Ставка\t{FFFFFF}Зона\nСоздать новое состязание\n",sizeof szQuery);
				for(new i; i < 20; i++)
				{
					if(MatchInfo[i][mPlayer_1] == -1 || MatchInfo[i][mZone] == -1) continue;
					
					MatchInfo[is][mID] = i;
					is++;
					format(cash,sizeof cash,"%i",MatchInfo[i][mPrice]);
					strcat(szQuery,pData[MatchInfo[i][mPlayer_1]][pName],sizeof szQuery);
					strcat(szQuery,"\t",sizeof szQuery);
					switch(MatchInfo[i][mWeapon])
					{
					case 24: strcat(szQuery,"Deagle",sizeof szQuery);
					case 25: strcat(szQuery,"Shotgun",sizeof szQuery);
					case 31: strcat(szQuery,"M4",sizeof szQuery);
					case 30: strcat(szQuery,"Ak47",sizeof szQuery);
					case 29: strcat(szQuery,"MP5",sizeof szQuery);
					}
					strcat(szQuery,"\t",sizeof szQuery);
					strcat(szQuery,cash,sizeof szQuery);
					strcat(szQuery,"\t",sizeof szQuery);
					switch(MatchInfo[i][mZone])
					{
					case 0: strcat(szQuery,"Stock",sizeof szQuery);
					case 1: strcat(szQuery,"Jail",sizeof szQuery);
					}
					strcat(szQuery,"\n",sizeof szQuery);
				}
				return ShowPlayerDialog(playerid, 2121, DIALOG_STYLE_TABLIST_HEADERS, !"{FFFFFF}Перечень | {ae433d}Дуэль",szQuery, !"Выбрать", !"Отмена");
			}
			switch(listitem)
			{
			case 0: MatchInfo[pData[playerid][pDuelID]][mWeapon] = 24;
			case 1: MatchInfo[pData[playerid][pDuelID]][mWeapon] = 25;
			case 2: MatchInfo[pData[playerid][pDuelID]][mWeapon] = 31;
			case 3: MatchInfo[pData[playerid][pDuelID]][mWeapon] = 30;
			case 4: MatchInfo[pData[playerid][pDuelID]][mWeapon] = 29;
			}
			ShowPlayerDialog(playerid, 2123, DIALOG_STYLE_INPUT, "{FFFFFF}Ставка | {ae433d}Дуэль","{FFFFFF}Введите уровень ставки:\nПримечания:\n\
			- Уровень ставки не может быть ниже 1000\n\
			- Уровень ставки не может быть выше 100000\n", "Выбрать", "Назад");
		}
	case 2123:
		{
			if(!response) return ShowPlayerDialog(playerid,2122,DIALOG_STYLE_LIST,"{FFFFFF}Оружие | {ae433d}Дуэль","Deagle\nShotgun\nM4\nAk47\nSniper rifle", "Выбрать", "Назад");
			new nimbers;
			if(sscanf(inputtext,"i",nimbers))return ShowPlayerDialog(playerid, 2123, DIALOG_STYLE_INPUT, "{FFFFFF}Ставка | {ae433d}Дуэль","{FFFFFF}Введите уровень ставки:\nПримечания:\n\
			- Уровень ставки не может быть ниже 1000\n\
			- Уровень ставки не может быть выше 100000\n", "Выбрать", "Назад");
			else if(!(1000 <= nimbers <= 100000)) return ShowPlayerDialog(playerid, 2123, DIALOG_STYLE_INPUT, "{FFFFFF}Ставка | {ae433d}Дуэль","{FFFFFF}Введите уровень ставки:\nПримечания:\n\
			- Уровень ставки не может быть ниже 1000\n\
			- Уровень ставки не может быть выше 100000\n", "Выбрать", "Назад");
			else if(nimbers > pData[playerid][pCash])
			{
				MatchInfo[pData[playerid][pDuelID]][mPlayer_1] = MatchInfo[pData[playerid][pDuelID]][mZone] = -1;
				pData[playerid][pDuelID] = -1;
				return SendClientMessage(playerid,COLOR_GREY," Для запуска состязание недостаточно денег.");
			}
			MatchInfo[pData[playerid][pDuelID]][mPrice] = nimbers;
			
			ShowPlayerDialog(playerid,2124,DIALOG_STYLE_LIST,"{FFFFFF}Зона | {ae433d}Дуэль","Stock\nJail", "Выбрать", "Назад");
			
		}
	case 2124:
		{
			if(!response) return ShowPlayerDialog(playerid, 2123, DIALOG_STYLE_INPUT, "{FFFFFF}Ставка | {ae433d}Дуэль","{FFFFFF}Введите уровень ставки:\nПримечания:\n\
			- Уровень ставки не может быть ниже 1000\n\
			- Уровень ставки не может быть выше 100000\n", "Выбрать", "Назад");
			
			MatchInfo[pData[playerid][pDuelID]][mZone] = listitem;
			pData[playerid][pCash] -= MatchInfo[pData[playerid][pDuelID]][mPrice];
			
			SendClientMessage(playerid,COLOR_GREY," Отлично! Вы создали состязание.");
			return true;
		}
	case 1376:
		{
			if(!response) return cmd_prodmenu(playerid);
			string = "";
			strcat(string,"{FFFFFF}[Бизнес]  {0076FC}[Цена за 1 продукт]  {10762D}[Требуется продуктов]\n\n");
			for(new i = 1; i <= TotalBizz; i++)
			{
				if(BizzInfo[i][bType] != listitem+1) continue;
				format(YCMDstr,64,"{FFFFFF}%s  {0076FC}%i  {10762D}%i\n",BizzInfo[i][bMessage], BizzInfo[i][bProdPrice], BizzMaxProds[i]-BizzInfo[i][bProducts]);
				strcat(string,YCMDstr);
			}
			return ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Мониторинг",string, "Готово", "");
		}
	case 1386:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0: cmd_sellprodsone(playerid);
			case 1: cmd_sellprodstwo(playerid);
			case 2: cmd_sellprodsthree(playerid);
			case 3: cmd_sellprodsfour(playerid);
			}
		}
	case 1377:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					new newcar = GetPlayerVehicleID(playerid);
					if(newcar >= comptruck[4] && newcar <= comptruck[9])
					{
						format(YCMDstr,128,"Введите количество продуктов от 1 до %i",pData[playerid][pPMGruz]);
						ShowPlayerDialog(playerid,1378, DIALOG_STYLE_INPUT, "Закупка товаров / еды",YCMDstr, "Готово", "Отмена");
					}
					else return SCM(playerid,COLOR_GREY," Нужно быть в транспортном средстве, которое может перевозить данный тип груза");
				}
			case 1:
				{
					new newcar = GetPlayerVehicleID(playerid);
					if(newcar >= comptruck[4] && newcar <= comptruck[9])
					{
						format(YCMDstr,128,"Введите количество продуктов от 1 до %i",pData[playerid][pPMGruz]);
						ShowPlayerDialog(playerid,1379, DIALOG_STYLE_INPUT, "Закупка товаров / еды",YCMDstr, "Готово", "Отмена");
					}
					else return SCM(playerid,COLOR_GREY," Нужно быть в транспортном средстве, которое может перевозить данный тип груза");
				}
			case 2:
				{
					new newcar = GetPlayerVehicleID(playerid);
					if(newcar >= comptruck[4] && newcar <= comptruck[9])
					{
						format(YCMDstr,128,"Введите количество продуктов от 1 до %i",pData[playerid][pPMGruz]);
						ShowPlayerDialog(playerid,1380, DIALOG_STYLE_INPUT, "Закупка товаров / еды",YCMDstr, "Готово", "Отмена");
					}
					else return SCM(playerid,COLOR_GREY," Нужно быть в транспортном средстве, которое может перевозить данный тип груза");
				}
			case 3:
				{
					new newcar = GetPlayerVehicleID(playerid);
					if(newcar >= comptruck[2] && newcar <= comptruck[3])
					{
						ShowPlayerDialog(playerid,1381, DIALOG_STYLE_INPUT, "Закупка топлива","Введите количество литров от 1 до 1000", "Готово", "Отмена");
					}
					else return SCM(playerid,COLOR_GREY," Нужно быть в транспортном средстве, которое может перевозить данный тип груза");
				}
			}
		}
	case 1378:
		{
			new newcar = GetPlayerVehicleID(playerid);
			if(newcar >= comptruck[4] && newcar <= comptruck[9])
			{
				if(!response || pData[playerid][pJob] != 5) return true;
				if(!strlen(inputtext) || strval(inputtext) < 0) return SCM(playerid,COLOR_GREY," Неверное количество!");
				if(strval(inputtext) < 0 || strval(inputtext) > pData[playerid][pPMGruz]) return SendMes(playerid,COLOR_GREY," Минимальное количество - 1,максимальное - %i",pData[playerid][pPMGruz]);
				if(pData[playerid][pCash] < strval(inputtext)*15) return SCM(playerid,COLOR_GREY," У Вас не достаточно денег!");
				if(car_prods[GetPlayerVehicleID(playerid)][3]+strval(inputtext) > pData[playerid][pPMGruz]) return SCM(playerid,COLOR_GREY," В вашем транспортном средстве нет места");
				if(job_car[playerid] != GetPlayerVehicleID(playerid)) return SCM(playerid,COLOR_GREY," Это не ваш автомобиль!");
				SetPVarInt(playerid, "kolvo", strval(inputtext));
				format(string,256,"Вы собираетесь купить продукты для Баров / Клубов\n\n{FFD500}Количество: %d\n{E51212}Стоимость: %d вирт\n{1CA628}Скидка: 0 вирт",strval(inputtext),strval(inputtext)*15);
				return ShowPlayerDialog(playerid,1382,DIALOG_STYLE_MSGBOX,"Покупка продуктов",string,"Купить","Отмена");
			}
			else return SCM(playerid,COLOR_GREY," Вы должны находиться в транспортном средстве");
		}
	case 1379:
		{
			new newcar = GetPlayerVehicleID(playerid);
			if(newcar >= comptruck[4] && newcar <= comptruck[9])
			{
				if(!response || pData[playerid][pJob] != 5) return true;
				if(!strlen(inputtext) || strval(inputtext) < 0) return SCM(playerid,COLOR_GREY," Неверное количество!");
				if(strval(inputtext) < 0 || strval(inputtext) > pData[playerid][pPMGruz]) return SendMes(playerid,COLOR_GREY," Минимальное количество - 1,максимальное - %i",pData[playerid][pPMGruz]);
				if(pData[playerid][pCash] < strval(inputtext)*15) return SCM(playerid,COLOR_GREY," У Вас не достаточно денег!");
				if(car_prods[GetPlayerVehicleID(playerid)][3]+strval(inputtext) > pData[playerid][pPMGruz]) return SCM(playerid,COLOR_GREY," В вашем транспортном средстве нет места");
				if(job_car[playerid] != GetPlayerVehicleID(playerid)) return SCM(playerid,COLOR_GREY," Это не ваш автомобиль!");
				SetPVarInt(playerid, "kolvo", strval(inputtext));
				format(string,256,"Вы собираетесь купить продукты для закусочных\n\n{FFD500}Количество: %d\n{E51212}Стоимость: %d вирт\n{1CA628}Скидка: 0 вирт",strval(inputtext),strval(inputtext)*15);
				return ShowPlayerDialog(playerid,1383,DIALOG_STYLE_MSGBOX,"Покупка продуктов",string,"Купить","Отмена");
			}
			else return SCM(playerid,COLOR_GREY," Вы должны находиться в транспортном средстве");
		}
	case 1380:
		{
			new newcar = GetPlayerVehicleID(playerid);
			if(newcar >= comptruck[4] && newcar <= comptruck[9])
			{
				if(!response || pData[playerid][pJob] != 5) return true;
				if(!strlen(inputtext) || strval(inputtext) < 0) return SCM(playerid,COLOR_GREY," Неверное количество!");
				if(strval(inputtext) < 0 || strval(inputtext) > pData[playerid][pPMGruz]) return SendMes(playerid,COLOR_GREY," Минимальное количество - 1,максимальное - %i",pData[playerid][pPMGruz]);
				if(pData[playerid][pCash] < strval(inputtext)*15) return SCM(playerid,COLOR_GREY," У Вас не достаточно денег!");
				if(car_prods[GetPlayerVehicleID(playerid)][2]+strval(inputtext) > pData[playerid][pPMGruz]) return SCM(playerid,COLOR_GREY," В вашем транспортном средстве нет места");
				if(job_car[playerid] != GetPlayerVehicleID(playerid)) return SCM(playerid,COLOR_GREY," Это не ваш автомобиль!");
				SetPVarInt(playerid, "kolvo", strval(inputtext));
				format(string,256,"Вы собираетесь купить товары для Магазинов 24/7\n\n{FFD500}Количество: %d\n{E51212}Стоимость: %d вирт\n{1CA628}Скидка: 0 вирт",strval(inputtext),strval(inputtext)*15);
				return ShowPlayerDialog(playerid,1384,DIALOG_STYLE_MSGBOX,"Покупка продуктов",string,"Купить","Отмена");
			}
			else return SCM(playerid,COLOR_GREY," Вы должны находиться в транспортном средстве");
		}
	case 1381:
		{
			new newcar = GetPlayerVehicleID(playerid);
			if(newcar >= comptruck[2] && newcar <= comptruck[3])
			{
				if(!response || pData[playerid][pJob] != 5) return true;
				if(!strlen(inputtext) || strval(inputtext) < 0) return SCM(playerid,COLOR_GREY," Неверное количество!");
				if(strval(inputtext) < 0 || strval(inputtext) > 1000) return SCM(playerid,COLOR_GREY," Минимальное количество - 1,максимальное - 1000");
				if(pData[playerid][pCash] < strval(inputtext)*15) return SCM(playerid,COLOR_GREY," У Вас не достаточно денег!");
				if(car_prods[GetPlayerVehicleID(playerid)][1]+strval(inputtext) > 1000+pData[playerid][pPMGruz]) return SCM(playerid,COLOR_GREY," В вашем транспортном средстве нет места");
				if(job_car[playerid] != GetPlayerVehicleID(playerid)) return SCM(playerid,COLOR_GREY," Это не ваш автомобиль!");
				SetPVarInt(playerid, "kolvo", strval(inputtext));
				format(string,256,"Вы собираетесь купить топливо для заправок\n\n{FFD500}Количество: %d\n{E51212}Стоимость: %d вирт\n{1CA628}Скидка: 0 вирт",strval(inputtext),strval(inputtext)*15);
				return ShowPlayerDialog(playerid,1385,DIALOG_STYLE_MSGBOX,"Покупка продуктов",string,"Купить","Отмена");
			}
			else return SCM(playerid,COLOR_GREY," Вы должны находиться в транспортном средстве");
		}
	case 1382:
		{
			if(!response) return true;
			if(pData[playerid][pCash] < GetPVarInt(playerid,"kolvo")*15) return SCM(playerid,COLOR_GREY," У вас недостаточно денег");
			car_prods[GetPlayerVehicleID(playerid)][3] += GetPVarInt(playerid,"kolvo");
			pData[playerid][pCash]-=GetPVarInt(playerid,"kolvo")*15;
			SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
			SendMes(playerid,TEAM_GROVE_COLOR," Товары: %i / %i",car_prods[GetPlayerVehicleID(playerid)][2],pData[playerid][pPMGruz]);
			SendMes(playerid,TEAM_GROVE_COLOR," Еда: %i / %i",car_prods[GetPlayerVehicleID(playerid)][3],pData[playerid][pPMGruz]);
			DeletePVar(playerid,"Kolvo");
			return true;
		}
	case 1383:
		{
			if(!response) return true;
			if(pData[playerid][pCash] < GetPVarInt(playerid,"kolvo")*15) return SCM(playerid,COLOR_GREY," У вас недостаточно денег");
			car_prods[GetPlayerVehicleID(playerid)][3] += GetPVarInt(playerid,"kolvo");
			pData[playerid][pCash]-=GetPVarInt(playerid,"kolvo")*15;
			SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
			SendMes(playerid,TEAM_GROVE_COLOR," Товары: %i / %i",car_prods[GetPlayerVehicleID(playerid)][2],pData[playerid][pPMGruz]);
			SendMes(playerid,TEAM_GROVE_COLOR," Еда: %i / %i",car_prods[GetPlayerVehicleID(playerid)][3],pData[playerid][pPMGruz]);
			DeletePVar(playerid,"Kolvo");
			return true;
		}
	case 1384:
		{
			if(!response) return true;
			if(pData[playerid][pCash] < GetPVarInt(playerid,"kolvo")*15) return SCM(playerid,COLOR_GREY," У вас недостаточно денег");
			car_prods[GetPlayerVehicleID(playerid)][2] += GetPVarInt(playerid,"kolvo");
			pData[playerid][pCash]-=GetPVarInt(playerid,"kolvo")*15;
			SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
			SendMes(playerid,TEAM_GROVE_COLOR," Товары: %i / %i",car_prods[GetPlayerVehicleID(playerid)][2],pData[playerid][pPMGruz]);
			SendMes(playerid,TEAM_GROVE_COLOR," Еда: %i / %i",car_prods[GetPlayerVehicleID(playerid)][3],pData[playerid][pPMGruz]);
			DeletePVar(playerid,"Kolvo");
			return true;
		}
	case 1385:
		{
			if(!response) return true;
			if(pData[playerid][pCash] < GetPVarInt(playerid,"kolvo")*15) return SCM(playerid,COLOR_GREY," У вас недостаточно денег");
			car_prods[GetPlayerVehicleID(playerid)][1] += GetPVarInt(playerid,"kolvo");
			pData[playerid][pCash]-=GetPVarInt(playerid,"kolvo")*15;
			SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
			SendMes(playerid,TEAM_GROVE_COLOR," Топливо: %i / %i",car_prods[GetPlayerVehicleID(playerid)][1],1000+pData[playerid][pPMGruz]);
			DeletePVar(playerid,"Kolvo");
			return true;
		}
	case 1387:
		{
			if(!response) return true;
			new bizz = GetPVarInt(playerid,"bizz");
			if(strcmp(BizzInfo[bizz][bOwner],"None",true) == 0) return SCM(playerid,COLOR_GREY," У бизнеса нет владельца");
			if(BizzInfo[bizz][bProducts] == BizzMaxProds[bizz]) return SCM(playerid,COLOR_GREY," Склад продуктов у данного бизнеса заполнен");
			new null = 0;
			if(BizzInfo[bizz][bProducts]+car_prods[GetPlayerVehicleID(playerid)][3] > BizzMaxProds[bizz]) null = BizzMaxProds[bizz]-BizzInfo[bizz][bProducts];
			else null = car_prods[GetPlayerVehicleID(playerid)][3];
			pData[playerid][pCash]+=null*16;
			SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
			BizzInfo[bizz][bProducts] += null;
			car_prods[GetPlayerVehicleID(playerid)][3] = car_prods[GetPlayerVehicleID(playerid)][3]-null;
			SendMes(playerid,TEAM_GROVE_COLOR," Товары: %i / %i",car_prods[GetPlayerVehicleID(playerid)][2],pData[playerid][pPMGruz]);
			SendMes(playerid,TEAM_GROVE_COLOR," Еда: %i / %i",car_prods[GetPlayerVehicleID(playerid)][3],pData[playerid][pPMGruz]);
			if(null >= pData[playerid][pPSkill]*50)
			{
				if(booston || (booston2 && pData[playerid][pLevel] < 7)) pData[playerid][pPProc] += 2;
				else pData[playerid][pPProc] += 1;
				if(pData[playerid][pPProc] >= 100) pData[playerid][pPProc] = 100;
				SetAccountInfo(playerid, pData[playerid][pPProc], "pPProc");
			}
			else SendMes(playerid,COLOR_GREY," Вы привезли меньше, чем %i единиц. Процент не был добавлен к скиллу",pData[playerid][pPSkill]*50);
			DeletePVar(playerid,"bizz");
			ExpExp(playerid);
			SaveMySQL(4,bizz);
			return true;
		}
	case 1388:
		{
			if(!response) return true;
			new bizz = GetPVarInt(playerid,"bizz");
			if(strcmp(BizzInfo[bizz][bOwner],"None",true) == 0) return SCM(playerid,COLOR_GREY," У бизнеса нет владельца");
			if(BizzInfo[bizz][bProducts] == BizzMaxProds[bizz]) return SCM(playerid,COLOR_GREY," Склад продуктов у данного бизнеса заполнен");
			new null = 0;
			if(BizzInfo[bizz][bProducts]+car_prods[GetPlayerVehicleID(playerid)][3] > BizzMaxProds[bizz]) null = BizzMaxProds[bizz]-BizzInfo[bizz][bProducts];
			else null = car_prods[GetPlayerVehicleID(playerid)][3];
			pData[playerid][pCash]+=null*16;
			SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
			BizzInfo[bizz][bProducts] += null;
			car_prods[GetPlayerVehicleID(playerid)][3] = car_prods[GetPlayerVehicleID(playerid)][3]-null;
			SendMes(playerid,TEAM_GROVE_COLOR," Товары: %i / %i",car_prods[GetPlayerVehicleID(playerid)][2],pData[playerid][pPMGruz]);
			SendMes(playerid,TEAM_GROVE_COLOR," Еда: %i / %i",car_prods[GetPlayerVehicleID(playerid)][3],pData[playerid][pPMGruz]);
			if(null >= pData[playerid][pPSkill]*50)
			{
				if(booston || (booston2 && pData[playerid][pLevel] < 7)) pData[playerid][pPProc] += 2;
				else pData[playerid][pPProc] += 1;
				if(pData[playerid][pPProc] >= 100) pData[playerid][pPProc] = 100;
				SetAccountInfo(playerid, pData[playerid][pPProc], "pPProc");
			}
			else SendMes(playerid,COLOR_GREY," Вы привезли меньше, чем %i единиц. Процент не был добавлен к скиллу",pData[playerid][pPSkill]*50);
			DeletePVar(playerid,"bizz");
			ExpExp(playerid);
			SaveMySQL(4,bizz);
			return true;
		}
	case 1389:
		{
			if(!response) return true;
			new bizz = GetPVarInt(playerid,"bizz");
			if(strcmp(BizzInfo[bizz][bOwner],"None",true) == 0) return SCM(playerid,COLOR_GREY," У бизнеса нет владельца");
			if(BizzInfo[bizz][bProducts] == BizzMaxProds[bizz]) return SCM(playerid,COLOR_GREY," Склад продуктов у данного бизнеса заполнен");
			new null = 0;
			if(BizzInfo[bizz][bProducts]+car_prods[GetPlayerVehicleID(playerid)][2] > BizzMaxProds[bizz]) null = BizzMaxProds[bizz]-BizzInfo[bizz][bProducts];
			else null = car_prods[GetPlayerVehicleID(playerid)][2];
			pData[playerid][pCash]+=null*16;
			SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
			BizzInfo[bizz][bProducts] += null;
			car_prods[GetPlayerVehicleID(playerid)][2] = car_prods[GetPlayerVehicleID(playerid)][2]-null;
			SendMes(playerid,TEAM_GROVE_COLOR," Товары: %i / %i",car_prods[GetPlayerVehicleID(playerid)][2],pData[playerid][pPMGruz]);
			SendMes(playerid,TEAM_GROVE_COLOR," Еда: %i / %i",car_prods[GetPlayerVehicleID(playerid)][3],pData[playerid][pPMGruz]);
			if(null >= pData[playerid][pPSkill]*50)
			{
				if(booston || (booston2 && pData[playerid][pLevel] < 7)) pData[playerid][pPProc] += 2;
				else pData[playerid][pPProc] += 1;
				if(pData[playerid][pPProc] >= 100) pData[playerid][pPProc] = 100;
				SetAccountInfo(playerid, pData[playerid][pPProc], "pPProc");
			}
			else SendMes(playerid,COLOR_GREY," Вы привезли меньше, чем %i единиц. Процент не был добавлен к скиллу",pData[playerid][pPSkill]*50);
			DeletePVar(playerid,"bizz");
			ExpExp(playerid);
			SaveMySQL(4,bizz);
			return true;
		}
	case 1390:
		{
			if(!response) return true;
			new bizz = GetPVarInt(playerid,"bizz");
			if(strcmp(BizzInfo[bizz][bOwner],"None",true) == 0) return SCM(playerid,COLOR_GREY," У бизнеса нет владельца");
			if(BizzInfo[bizz][bProducts] == BizzMaxProds[bizz]) return SCM(playerid,COLOR_GREY," Склад продуктов у данного бизнеса заполнен");
			new null = 0;
			if(BizzInfo[bizz][bProducts]+car_prods[GetPlayerVehicleID(playerid)][1] > BizzMaxProds[bizz]) null = BizzMaxProds[bizz]-BizzInfo[bizz][bProducts];
			else null = car_prods[GetPlayerVehicleID(playerid)][1];
			pData[playerid][pCash]+=null*16;
			SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
			BizzInfo[bizz][bProducts] += null;
			car_prods[GetPlayerVehicleID(playerid)][1] = car_prods[GetPlayerVehicleID(playerid)][1]-null;
			SendMes(playerid,TEAM_GROVE_COLOR," Топливо: %i / %i",car_prods[GetPlayerVehicleID(playerid)][1],1000+pData[playerid][pPMGruz]);
			if(booston || (booston2 && pData[playerid][pLevel] < 7)) pData[playerid][pPProc] += 2;
			else pData[playerid][pPProc] += 1;
			if(pData[playerid][pPProc] >= 100) pData[playerid][pPProc] = 100;
			SetAccountInfo(playerid, pData[playerid][pPProc], "pPProc");
			DeletePVar(playerid,"bizz");
			ExpExp(playerid);
			SaveMySQL(4,bizz);
			return true;
		}
	case 1228:
		{
			if(!response) return true;
			car_prods[GetPlayerVehicleID(playerid)][1] = 0;
			car_prods[GetPlayerVehicleID(playerid)][2] = 0;
			car_prods[GetPlayerVehicleID(playerid)][3] = 0;
			SendMes(playerid,TEAM_GROVE_COLOR," Топливо: %i / %i",car_prods[GetPlayerVehicleID(playerid)][1],1000+pData[playerid][pPMGruz]);
			SendMes(playerid,TEAM_GROVE_COLOR," Товары: %i / %i",car_prods[GetPlayerVehicleID(playerid)][2],pData[playerid][pPMGruz]);
			SendMes(playerid,TEAM_GROVE_COLOR," Еда: %i / %i",car_prods[GetPlayerVehicleID(playerid)][3],pData[playerid][pPMGruz]);
			DeletePVar(playerid,"bizz");
			return true;
		}

	case 1783:
		{
			if(!response) return ShowPlayerDialog(playerid, 1784, DIALOG_STYLE_MSGBOX, "Хот доги", "Установить объект на данное место?", "Да", "Нет");
			return EditDynamicObject(playerid,GetPVarInt(playerid,"st_object"));
		}
	case 1784:
		{
			if(!response)
			{
				DestroyDynamicObject(GetPVarInt(playerid,"st_object"));
				DeletePVar(playerid,"st_object");
				SCM(playerid,COLOR_RED," Прилавок не был установлен!");
			}
			else
			{
				new Float:x, Float:y, Float:z, Float:rz;
				GetDynamicObjectPos(GetPVarInt(playerid,"st_object"),x,y,z);
				GetDynamicObjectRot(GetPVarInt(playerid,"st_object"), rz, rz, rz);
				DeletePVar(playerid,"st_object");
				StallInfo[TOTALSTALL][stPos][0] = x;
				StallInfo[TOTALSTALL][stPos][1] = y;
				StallInfo[TOTALSTALL][stPos][2] = z;
				StallInfo[TOTALSTALL][stPos][3] = rz;
				StallInfo[TOTALSTALL][stText] = CreateDynamic3DTextLabel( "Не работает", 0xFF8C37FF, StallInfo[TOTALSTALL][stPos][0], StallInfo[TOTALSTALL][stPos][1], StallInfo[TOTALSTALL][stPos][2], 8.0 );
				SendMes(playerid,COLOR_GREEN,"Прилавок под номером %i установлен!",TOTALSTALL+1);
				new szQuery[96+4*24];
				mysql_format(DATABASE, szQuery,  sizeof(szQuery), "INSERT INTO `"TABLE_STALL"` (`pos_x`, `pos_y`, `pos_z`, `pos_r`) VALUES ('%f', '%f', '%f', '%f')",x, y, z, rz);
				mysql_query(DATABASE, szQuery);
				TOTALSTALL++;
			}
			return true;
		}
	case 1344:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0: GPS_ON(playerid, 2230.4875,-2211.9368,13.5469);
			case 1..5: GPS_ON(playerid, FarmInfo[listitem][fMenu][0], FarmInfo[listitem][fMenu][1], FarmInfo[listitem][fMenu][2]);
			}
		}
	case 1203:
		{
		    new Taxist = inTaxi[playerid];
		    inTaxi[playerid] = INVALID_PLAYER_ID;
		    if(GetPVarInt(playerid,"fixTaxiSkill") != Taxist && pData[playerid][pIp] != pData[Taxist][pIp])
		    {
				if(!response){
				    pData[Taxist][pTaxiRep] --;
			 		return true;
				}
			    else {
			        pData[Taxist][pTaxiRep] ++;
			 		return true;
			    }
			}
		}
	case 1322:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0: ShowPlayerDialog(playerid,1356, DIALOG_STYLE_INPUT, " ","Сколько вы хотите купить зерна?", "Готово", "Отмена");
			case 1: ShowPlayerDialog(playerid,1357, DIALOG_STYLE_INPUT, " ","Сколько вы хотите продать зерна?", "Готово", "Отмена");
			case 2: ShowPlayerDialog(playerid,1358, DIALOG_STYLE_INPUT, " ","Сколько вы хотите купить урожая?", "Готово", "Отмена");
			case 3: ShowPlayerDialog(playerid,1359, DIALOG_STYLE_INPUT, " ","Сколько вы хотите продать урожая?", "Готово", "Отмена");
			}
		}
	case 1359:
		{
			if(!response || pData[playerid][pJob] != 5) return true;
			if(!strlen(inputtext) || strval(inputtext) <= 0) return SCM(playerid,COLOR_GREY," Неверное количество!");
			if(GetPlayerVehicleID(playerid) < comptruck[0] && GetPlayerVehicleID(playerid) > comptruck[1]) return SCM(playerid,COLOR_GREY," Вы должны находиться в фургоне"), RemovePlayerFromVehicle(playerid);
			if(job_car[playerid] != GetPlayerVehicleID(playerid)) return SCM(playerid,COLOR_GREY," Это не ваш автомобиль!");
			if(PlayerToPoint(15, playerid,1630.0807,2323.3582,10.8203) && car_prods[GetPlayerVehicleID(playerid)][0] != 0)
			{
				if(car_prods[GetPlayerVehicleID(playerid)][0] < strval(inputtext)) return SCM(playerid,COLOR_GREY," В машине недостаточно урожая");
				pData[playerid][pCash]+=strval(inputtext)*34;
				SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
				car_prods[GetPlayerVehicleID(playerid)][0] -= strval(inputtext);
				format(YCMDstr, 124, "{FFFFFF}Склад с урожаем\n\nУрожая продано: {0C9599}%i\n{FFFFFF}Цена: {0C9599}%i вирт", strval(inputtext), strval(inputtext)*UrojSell);
				ShowPlayerDialog(playerid,9998,DIALOG_STYLE_MSGBOX, " ", YCMDstr, "Закрыть", "");
			}
			else if(PlayerToPoint(15, playerid,2178.3220,-1660.2120,14.9782) && car_prods[GetPlayerVehicleID(playerid)][1] != 0)
			{
				if(car_prods[GetPlayerVehicleID(playerid)][1] < strval(inputtext)) return SCM(playerid,COLOR_GREY," В машине  Недостаточно наркотиков");
				pData[playerid][pCash]+=strval(inputtext)*34;
				SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
				car_prods[GetPlayerVehicleID(playerid)][1] -= strval(inputtext);
				format(YCMDstr, 124, "{FFFFFF}Наркопритон\n\nНаркотиков продано: {0C9599}%i\n{FFFFFF}Цена: {0C9599}%i вирт", strval(inputtext), strval(inputtext)*NarkSell);
				ShowPlayerDialog(playerid,9998,DIALOG_STYLE_MSGBOX, " ", YCMDstr, "Закрыть", "");
			}
			else return SCM(playerid,COLOR_GREY," Вы должны находиться у места продажи урожая / наркопритона");
		}
	case 7205:
		{
			if(response)
			{
				if(CarOffer[playerid] == 9999) return SCM(playerid,COLOR_GREY," Игрок отменил обмен / вам никто не предлагал обмен автомобилями");
				ShowPlayerDialog(playerid,7787,DIALOG_STYLE_MSGBOX, "Подтверждение", "Вы уверены, что хотите обменяться автомобилями?", "Да", "Отмена");
				return true;
			}
			else
			{
				SCM(playerid,COLOR_GREY," Вы отказались от сделки");
				SCM(CarOffer[playerid],COLOR_GREY," Игрок отказался от сделки");
				DeletePVar(CarOffer[playerid],"CarOffer");
				CarPrice[playerid] = 0;
				CarOffer[playerid] = 9999;
				return true;
			}
		}
	case 7787:
		{
			if(CarOffer[playerid] == 9999) return SCM(playerid,COLOR_GREY," Игрок отменил обмен / вам никто не предлагал обмен автомобилями");
			if(!response)
			{
				SCM(playerid,COLOR_GREY," Вы отказались от сделки");
				SCM(CarOffer[playerid],COLOR_GREY," Игрок отказался от сделки");
				DeletePVar(CarOffer[playerid],"CarOffer");
				CarPrice[playerid] = 0;
				CarOffer[playerid] = 9999;
				return true;
			}
			if(CarOffer[playerid] == 9999) return SCM(playerid,COLOR_GREY," Игрок отменил обмен / вам никто не предлагал обмен автомобилями");
			SendMes(playerid,COLOR_BLUE,"Ждите подтверждение %s",Name(CarOffer[playerid]));
			format(YCMDstr, 256, "{FFFFFF}Вы собираетесь обменяться своим личным транспортом с %s\n\n{F1E100}Вы отдаете:\n\t{FFFFFF}%s[%i]\tPercent: (%i)\n\n{F1E100}Вы получаете:\n\t{FFFFFF}%s[%i]\tPercent: (%i)\n\t%i вирт\n\nВы согласны на сделку?",
			Name(playerid), VehicleNames[GetVehicleModel(house_car[CarOffer[playerid]])-400],GetVehicleModel(house_car[CarOffer[playerid]]),CarInfo[CarOffer[playerid]][carPercent][GetPVarInt(CarOffer[playerid],"chosencar")],VehicleNames[GetVehicleModel(house_car[playerid])-400],GetVehicleModel(house_car[playerid]),CarInfo[playerid][carPercent][GetPVarInt(playerid,"chosencar")],CarPrice[playerid]);
			ShowPlayerDialog(CarOffer[playerid],7206,DIALOG_STYLE_MSGBOX, "Подтверждение", YCMDstr, "Согласен", "Отмена");
			return true;
		}
	case 7206:
		{
			new i = GetPVarInt(playerid,"CarOffer")-1;
			if(response)
			{
				
				if(!GetPVarInt(i,"Resolut_Vehicle")) return true;
				if(!GetPVarInt(playerid,"CarOffer")) return true;
			
				if(!ProxDetectorS(8.0, playerid, i)) return SCM(playerid, COLOR_GREY, " Игрок должен находиться рядом с вами"), CarPrice[i] = 0, CarOffer[i] = 9999, DeletePVar(playerid,"CarOffer");
				if(pData[i][pCash] < CarPrice[i]) return SCM(playerid, COLOR_GREY, " У игрока нет столько денег"), CarPrice[i] = 0, CarOffer[i] = 9999, DeletePVar(playerid,"CarOffer");
				pData[i][pCash] -= CarPrice[i];
				pData[playerid][pCash] += CarPrice[i];
				SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
				SetAccountInfo(i, pData[i][pCash], "pCash");
				new previous_data;
				previous_data = CarInfo[playerid][carModel][GetPVarInt(playerid,"chosencar")];
				CarInfo[playerid][carModel][GetPVarInt(playerid,"chosencar")] = CarInfo[i][carModel][GetPVarInt(i,"chosencar")];
				CarInfo[i][carModel][GetPVarInt(i,"chosencar")] = previous_data;
				previous_data = CarInfo[playerid][carColor_one][GetPVarInt(playerid,"chosencar")];
				CarInfo[playerid][carColor_one][GetPVarInt(playerid,"chosencar")] = CarInfo[i][carColor_one][GetPVarInt(i,"chosencar")];
				CarInfo[i][carColor_one][GetPVarInt(i,"chosencar")] = previous_data;
				previous_data = CarInfo[playerid][carColor_two][GetPVarInt(playerid,"chosencar")];
				CarInfo[playerid][carColor_two][GetPVarInt(playerid,"chosencar")] = CarInfo[i][carColor_two][GetPVarInt(i,"chosencar")];
				CarInfo[i][carColor_two][GetPVarInt(i,"chosencar")] = previous_data;
				previous_data = CarInfo[playerid][carPercent][GetPVarInt(playerid,"chosencar")];
				CarInfo[playerid][carPercent][GetPVarInt(playerid,"chosencar")] = CarInfo[i][carPercent][GetPVarInt(i,"chosencar")];
				CarInfo[i][carPercent][GetPVarInt(i,"chosencar")] = previous_data;
				previous_data = CarInfo[playerid][carVehcom_1][GetPVarInt(playerid,"chosencar")];
				CarInfo[playerid][carVehcom_1][GetPVarInt(playerid,"chosencar")] = CarInfo[i][carVehcom_1][GetPVarInt(i,"chosencar")];
				CarInfo[i][carVehcom_1][GetPVarInt(i,"chosencar")] = previous_data;
				previous_data = CarInfo[playerid][carVehcom_2][GetPVarInt(playerid,"chosencar")];
				CarInfo[playerid][carVehcom_2][GetPVarInt(playerid,"chosencar")] = CarInfo[i][carVehcom_2][GetPVarInt(i,"chosencar")];
				CarInfo[i][carVehcom_2][GetPVarInt(i,"chosencar")] = previous_data;
				previous_data = CarInfo[playerid][carVehcom_3][GetPVarInt(playerid,"chosencar")];
				CarInfo[playerid][carVehcom_3][GetPVarInt(playerid,"chosencar")] = CarInfo[i][carVehcom_3][GetPVarInt(i,"chosencar")];
				CarInfo[i][carVehcom_3][GetPVarInt(i,"chosencar")] = previous_data;
				previous_data = CarInfo[playerid][carVehcom_4][GetPVarInt(playerid,"chosencar")];
				CarInfo[playerid][carVehcom_4][GetPVarInt(playerid,"chosencar")] = CarInfo[i][carVehcom_4][GetPVarInt(i,"chosencar")];
				CarInfo[i][carVehcom_4][GetPVarInt(i,"chosencar")] = previous_data;
				previous_data = CarInfo[playerid][carVehcom_5][GetPVarInt(playerid,"chosencar")];
				CarInfo[playerid][carVehcom_5][GetPVarInt(playerid,"chosencar")] = CarInfo[i][carVehcom_5][GetPVarInt(i,"chosencar")];
				CarInfo[i][carVehcom_5][GetPVarInt(i,"chosencar")] = previous_data;
				previous_data = CarInfo[playerid][carVehcom_6][GetPVarInt(playerid,"chosencar")];
				CarInfo[playerid][carVehcom_6][GetPVarInt(playerid,"chosencar")] = CarInfo[i][carVehcom_6][GetPVarInt(i,"chosencar")];
				CarInfo[i][carVehcom_6][GetPVarInt(i,"chosencar")] = previous_data;
				previous_data = CarInfo[playerid][carVehcom_7][GetPVarInt(playerid,"chosencar")];
				CarInfo[playerid][carVehcom_7][GetPVarInt(playerid,"chosencar")] = CarInfo[i][carVehcom_7][GetPVarInt(i,"chosencar")];
				CarInfo[i][carVehcom_7][GetPVarInt(i,"chosencar")] = previous_data;
				previous_data = CarInfo[playerid][carVehcom_8][GetPVarInt(playerid,"chosencar")];
				CarInfo[playerid][carVehcom_8][GetPVarInt(playerid,"chosencar")] = CarInfo[i][carVehcom_8][GetPVarInt(i,"chosencar")];
				CarInfo[i][carVehcom_8][GetPVarInt(i,"chosencar")] = previous_data;
				previous_data = CarInfo[playerid][carVehcom_9][GetPVarInt(playerid,"chosencar")];
				CarInfo[playerid][carVehcom_9][GetPVarInt(playerid,"chosencar")] = CarInfo[i][carVehcom_9][GetPVarInt(i,"chosencar")];
				CarInfo[i][carVehcom_9][GetPVarInt(i,"chosencar")] = previous_data;
				previous_data = CarInfo[playerid][carVehcom_10][GetPVarInt(playerid,"chosencar")];
				CarInfo[playerid][carVehcom_10][GetPVarInt(playerid,"chosencar")] = CarInfo[i][carVehcom_10][GetPVarInt(i,"chosencar")];
				CarInfo[i][carVehcom_10][GetPVarInt(i,"chosencar")] = previous_data;
				previous_data = CarInfo[playerid][carVehcom_11][GetPVarInt(playerid,"chosencar")];
				CarInfo[playerid][carVehcom_11][GetPVarInt(playerid,"chosencar")] = CarInfo[i][carVehcom_11][GetPVarInt(i,"chosencar")];
				CarInfo[i][carVehcom_11][GetPVarInt(i,"chosencar")] = previous_data;
				previous_data = CarInfo[playerid][carVehcom_12][GetPVarInt(playerid,"chosencar")];
				CarInfo[playerid][carVehcom_12][GetPVarInt(playerid,"chosencar")] = CarInfo[i][carVehcom_12][GetPVarInt(i,"chosencar")];
				CarInfo[i][carVehcom_12][GetPVarInt(i,"chosencar")] = previous_data;
				previous_data = CarInfo[playerid][carVehcom_13][GetPVarInt(playerid,"chosencar")];
				CarInfo[playerid][carVehcom_13][GetPVarInt(playerid,"chosencar")] = CarInfo[i][carVehcom_13][GetPVarInt(i,"chosencar")];
				CarInfo[i][carVehcom_13][GetPVarInt(i,"chosencar")] = previous_data;
				previous_data = CarInfo[playerid][carVehcom_14][GetPVarInt(playerid,"chosencar")];
				CarInfo[playerid][carVehcom_14][GetPVarInt(playerid,"chosencar")] = CarInfo[i][carVehcom_14][GetPVarInt(i,"chosencar")];
				CarInfo[i][carVehcom_14][GetPVarInt(i,"chosencar")] = previous_data;
				previous_data = house_car[playerid];
				house_car[playerid] = house_car[i];
				house_car[i] = previous_data;
				SaveMySQL(10,playerid);
				SaveMySQL(10,i);
				SendMes(playerid,0x6495EDFF," Вы обменялись автомобилями с %s",pData[i][pName]);
				SendMes(i, 0x6495EDFF,"Вы обменялись автомобилями с %s",pData[playerid][pName]);
				MoneyLog(pData[playerid][pName],Name(i), CarPrice[i], "(-)ChangeCar");
				CarPrice[i] = 0;
				CarOffer[i] = 9999;
				DestroyHouseCars(playerid);
				DestroyHouseCars(i);
				//if(HGet(playerid)) SpawnHouseCars(playerid);
				//if(HGet(playerid)) SpawnHouseCars(i);
				DeletePVar(playerid,"CarOffer");
				return true;
			}
			else
			{
				SCM(playerid,COLOR_GREY," Вы отказались от сделки");
				SCM(i,COLOR_GREY," Игрок отказался от сделки");
				CarPrice[i] = 0;
				CarOffer[i] = 9999;
				DeletePVar(playerid,"CarOffer");
				return true;
			}
		}
	case 1358:
		{
			if(!response || pData[playerid][pJob] != 5) return true;
			if(!strlen(inputtext) || strval(inputtext) < 0) return SCM(playerid,COLOR_GREY," Неверное количество!");
			if(GetPlayerVehicleID(playerid) < comptruck[0] || GetPlayerVehicleID(playerid) > comptruck[1]) return SCM(playerid,COLOR_GREY," Вы должны находиться в фургоне"), RemovePlayerFromVehicle(playerid);
			if(job_car[playerid] != GetPlayerVehicleID(playerid)) return SCM(playerid,COLOR_GREY," Это не ваш автомобиль!");
			new null = 0;
			for(new i = 1; i <= TOTALFARM; i++) if(PlayerToPoint(10, playerid,FarmInfo[i][fMenu][0], FarmInfo[i][fMenu][1], FarmInfo[i][fMenu][2])) null = i;
			if(!null) return SCM(playerid,COLOR_GREY," Вы должны находиться возле фермы");
			if(strcmp(FarmInfo[null][fOwner],"None",true) == 0) return SCM(playerid,COLOR_GREY," У фермы нет владельца");
			if(FarmInfo[null][fProds] < strval(inputtext)) return SCM(playerid,COLOR_GREY," На складе фермы недостаточно урожая");
			if(pData[playerid][pCash] < strval(inputtext)*FarmInfo[null][fProds_Price]) return SCM(playerid,COLOR_GREY," Недостаточно средств");
			switch(FarmInfo[null][fProds_Selling])
			{
			case 1:
				{
					if(strval(inputtext) > 1000-car_prods[GetPlayerVehicleID(playerid)][0]) return SCM(playerid,COLOR_GREY," В машине не хватает места");
					car_prods[GetPlayerVehicleID(playerid)][0] += strval(inputtext);
					format(YCMDstr, 124, "{FFFFFF}Ферма номер: {B41010}%i\n\n{FFFFFF}Урожая куплено: {0C9599}%i\n{FFFFFF}Цена: {0C9599}%i вирт", null-1, strval(inputtext),strval(inputtext)*FarmInfo[null][fProds_Price]);
					ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX, " ", YCMDstr, "Закрыть", "");
					SCM(playerid,COLOR_GREEN," Вы можете продать урожай на склад {FFFFFF}(( /gps >> [1] По работе >> [3] Склад для урожая с ферм ))");
					SendMes(playerid,TEAM_GROVE_COLOR," Зерна в машине: %i / 1000",car_grain[GetPlayerVehicleID(playerid)][0]);
					SendMes(playerid,TEAM_GROVE_COLOR," Урожая в машине: %i / 1000",car_prods[GetPlayerVehicleID(playerid)][0]);
					SendMes(playerid,TEAM_GROVE_COLOR," Наркотиков в машине: %i / 1000",car_prods[GetPlayerVehicleID(playerid)][1]);
				}
			case 2:
				{
					if(strval(inputtext) > 1000-car_prods[GetPlayerVehicleID(playerid)][1]) return SCM(playerid,COLOR_GREY," В машине не хватает места");
					car_prods[GetPlayerVehicleID(playerid)][1] += strval(inputtext);
					format(YCMDstr, 124, "{FFFFFF}Ферма номер: {B41010}%i\n\n{FFFFFF}Наркотиков куплено: {0C9599}%i\n{FFFFFF}Цена: {0C9599}%i вирт", null-1, strval(inputtext),strval(inputtext)*FarmInfo[null][fProds_Price]);
					ShowPlayerDialog(playerid,9999,DIALOG_STYLE_MSGBOX, " ", YCMDstr, "Закрыть", "");
					SCM(playerid,COLOR_GREEN," Вы можете продать наркотики в притон {FFFFFF}(( /gps >> [0] Важное >> [7] Наркопритон ))");
					SendMes(playerid,TEAM_GROVE_COLOR," Зерна в машине: %i / 1000",car_grain[GetPlayerVehicleID(playerid)][0]);
					SendMes(playerid,TEAM_GROVE_COLOR," Урожая в машине: %i / 1000",car_prods[GetPlayerVehicleID(playerid)][0]);
					SendMes(playerid,TEAM_GROVE_COLOR," Наркотиков в машине: %i / 1000",car_prods[GetPlayerVehicleID(playerid)][1]);
				}
			}
			FarmInfo[null][fProds] -= strval(inputtext);
			FarmStatPay[null][5] += strval(inputtext);
			FarmStatDay[null][5] += strval(inputtext);
			pData[playerid][pCash]-=strval(inputtext)*FarmInfo[null][fProds_Price];
			SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
			FarmStatPay[null][8] += strval(inputtext)*FarmInfo[null][fProds_Price];
			FarmStatDay[null][8] += strval(inputtext)*FarmInfo[null][fProds_Price];
			return FarmInfo[null][fBank]+=strval(inputtext)*FarmInfo[null][fProds_Price];
		}
	case 1357:
		{
			new newcar = GetPlayerVehicleID(playerid);
			if(newcar >= comptruck[0] && newcar <= comptruck[1])
			{
				if(!response || pData[playerid][pJob] != 5) return true;
				if(GetPlayerVehicleID(playerid) < comptruck[0] || GetPlayerVehicleID(playerid) > comptruck[1]) return SCM(playerid,COLOR_GREY," Вы должны находиться в фургоне"), RemovePlayerFromVehicle(playerid);
				if(GetPVarInt(playerid,"rentcar_job") != GetPlayerVehicleID(playerid)) return SCM(playerid,COLOR_GREY," Это не ваш автомобиль!");
				if(!strlen(inputtext) || strval(inputtext) < 0 || strval(inputtext) > car_grain[GetPlayerVehicleID(playerid)][0]) return SCM(playerid,COLOR_GREY," В автомобиле недостаточно зерна!");
				new null = 0;
				for(new i = 1; i <= TOTALFARM; i++) if(PlayerToPoint(15, playerid,FarmInfo[i][fMenu][0], FarmInfo[i][fMenu][1], FarmInfo[i][fMenu][2])) null = i;
				if(!null) return SCM(playerid,COLOR_GREY," Вы должны находиться возле фермы");
				if(strcmp(FarmInfo[null][fOwner],"None",true) == 0) return SCM(playerid,COLOR_GREY," У фермы нет владельца");
				if(FarmInfo[null][fGrain]+strval(inputtext) > 10000) return SCM(playerid,COLOR_GREY," На ферме достаточно зерна");
				if(FarmInfo[null][fBank] < strval(inputtext)*FarmInfo[null][fGrain_Price]) return SCM(playerid,COLOR_GREY," На балансе фермы недостаточно денег");
				FarmInfo[null][fBank]-=strval(inputtext)*FarmInfo[null][fGrain_Price];
				FarmStatPay[null][6] += strval(inputtext)*FarmInfo[null][fGrain_Price];
				FarmStatDay[null][6] += strval(inputtext)*FarmInfo[null][fGrain_Price];
				FarmInfo[null][fGrain]+=strval(inputtext);
				pData[playerid][pCash]+=strval(inputtext)*FarmInfo[null][fGrain_Price];
				SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
				car_grain[GetPlayerVehicleID(playerid)][0]-=strval(inputtext);
				FarmStatPay[null][4] += strval(inputtext);
				FarmStatDay[null][4] += strval(inputtext);
				format(YCMDstr, 124, "{FFFFFF}Ферма номер: {B41010}%i\n\n{FFFFFF}Зерна продано: {0C9599}%i\n{FFFFFF}Цена: {0C9599}%i вирт", null-1, strval(inputtext),strval(inputtext)*FarmInfo[null][fGrain_Price]);
				ShowPlayerDialog(playerid,9998,DIALOG_STYLE_MSGBOX, " ", YCMDstr, "Закрыть", "");
				return true;
			}
		}
	case 1357+10000:
	{
		if(!response)
		{
			return RemovePlayerFromVehicle(playerid);
		}
		new _vehicleidx = GetPlayerVehicleID(playerid);
		new _arrayData[2];
		Streamer_GetArrayData(STREAMER_TYPE_PICKUP, g_szGangBoatStat[_vehicleidx][e_iPickup], E_STREAMER_EXTRA_ID, _arrayData);
		if(_arrayData[0] != _vehicleidx)
			return 1;

		DestroyDynamicPickup(g_szGangBoatStat[_vehicleidx][e_iPickup]);
		DestroyDynamic3DTextLabel(Text3D:_arrayData[1]);
		SetPlayerRaceCheckpoint(playerid, 1, 2955.7334, -1485.0795, 1.6218, 2955.7334, -1485.0795, 1.6218, 10.5);
	}
	case 1346:
		{
			new newcar = GetPlayerVehicleID(playerid);
			if(newcar >= comptruck[0] && newcar <= comptruck[1])
			{
				if(!response || pData[playerid][pJob] != 5) return RemovePlayerFromVehicle(playerid);
				if(GetPVarInt(playerid,"rentcar_job") != GetPlayerVehicleID(playerid)) return SCM(playerid,COLOR_GREY," Это не ваш автомобиль!");
				car_grain[GetPlayerVehicleID(playerid)][1] = 0;
				car_grain[GetPlayerVehicleID(playerid)][2] = 0;
				DestroyDynamicPickup(car_pickup[GetPlayerVehicleID(playerid)]);
				if(car_text[GetPlayerVehicleID(playerid)] != Text3D:INVALID_3DTEXT_ID) Delete3DTextLabel(car_text[GetPlayerVehicleID(playerid)]);
				car_pickup[GetPlayerVehicleID(playerid)] = 0;
				if(pData[playerid][pCash] < (car_grain[GetPlayerVehicleID(playerid)][0]-car_grain[GetPlayerVehicleID(playerid)][2])*4) return SCM(playerid,COLOR_GREY," Недостаточно средств!"), car_grain[GetPlayerVehicleID(playerid)][0] = car_grain[GetPlayerVehicleID(playerid)][2];
				pData[playerid][pCash] -= (car_grain[GetPlayerVehicleID(playerid)][0]-car_grain[GetPlayerVehicleID(playerid)][2])*4;
				SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
				format(YCMDstr, 124, "{FFFFFF}Склад с зерном\n\nЗерна куплено: {0C9599}%i\n{FFFFFF}Цена: {0C9599}%i вирт", car_grain[GetPlayerVehicleID(playerid)][0]-car_grain[GetPlayerVehicleID(playerid)][2], (car_grain[GetPlayerVehicleID(playerid)][0]-car_grain[GetPlayerVehicleID(playerid)][2])*ZernBuy);
				ShowPlayerDialog(playerid,9997,DIALOG_STYLE_MSGBOX, " ", YCMDstr, "Закрыть", "");
				SendMes(playerid,TEAM_GROVE_COLOR," Зерна в машине: %i / 1000",car_grain[GetPlayerVehicleID(playerid)][0]);
				SendMes(playerid,TEAM_GROVE_COLOR," Урожая в машине: %i / 1000",car_prods[GetPlayerVehicleID(playerid)][0]);
				SendMes(playerid,TEAM_GROVE_COLOR," Наркотиков в машине: %i / 1000",car_prods[GetPlayerVehicleID(playerid)][1]);
				SCM(playerid,COLOR_GREEN," Загрузка зерна завершена. Вы можете продать зерно на ферму {FFFFFF}(( /gps >> [5] Фермы ))");
			}
			else return SCM(playerid,COLOR_GREY," Вы должны находиться в фургоне"), RemovePlayerFromVehicle(playerid);
		}
	case 1356:
		{
			new newcar = GetPlayerVehicleID(playerid);
			if(newcar >= comptruck[0] && newcar <= comptruck[1])
			{
				if(!response || pData[playerid][pJob] != 5) return true;
				if(GetPVarInt(playerid,"rentcar_job") != GetPlayerVehicleID(playerid)) return SCM(playerid,COLOR_GREY," Это не ваш автомобиль!");
				if(!strlen(inputtext) || strval(inputtext) > 1000 || strval(inputtext) < 50) return ShowPlayerDialog(playerid,1356, DIALOG_STYLE_INPUT, "Загрузка зерна","Введите количество зерна на загрузку", "Ок", "Отмена"), SCM(playerid, COLOR_GREY, " Минимальное количество зерна - 50, максимальное - 1000");
				if(car_grain[GetPlayerVehicleID(playerid)][0]+strval(inputtext) > 1000) return SCM(playerid,COLOR_GREY," Грузовик полон!");
				if(!PlayerToPoint(10.0,playerid,2191.9878,-2262.4209,13.6586)) return SCM(playerid,COLOR_GREY," В данном месте нельзя заказать продукты");
				if(pData[playerid][pCash] < strval(inputtext)*4) return SCM(playerid, COLOR_WHITE," У вас не хватает денег!");
				new Float:x, Float:y, Float:z;
				GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(GetPlayerVehicleID(playerid),false,false,false,doors,false,false,false);
				SetVehicleVelocity(GetPlayerVehicleID(playerid), 0.0, 0.0, 0.0);
				AntiCheatGetVehiclePos(GetPlayerVehicleID(playerid), x, y, z);
				GetXYInBackOfPlayer(playerid, x, y,3.5);
				car_pickup[GetPlayerVehicleID(playerid)] = CreateDynamicPickup(19197,23,x,y,z+0.5);
				car_grain[GetPlayerVehicleID(playerid)][1] = strval(inputtext);
				car_grain[GetPlayerVehicleID(playerid)][2] = car_grain[GetPlayerVehicleID(playerid)][0];
				new LBLstring[32];
				LBLstring = "";
				format(LBLstring, 32, "Загружено\n{ffffff}%i / %i",car_grain[GetPlayerVehicleID(playerid)][0], car_grain[GetPlayerVehicleID(playerid)][1]);
				car_text[GetPlayerVehicleID(playerid)] = Create3DTextLabel(LBLstring,0x5CABBDAA,x,y,z+1,15.0,0);
				SCM(playerid, 0x0073B7AA, " Машина на месте. Теперь вы и грузчики могут загружать ее");
				SCM(playerid, 0x0073B7AA, " Если решите завершить загрузку, сядьте снова в машину");
				RemovePlayerFromVehicle(playerid);
				return true;
			}
			else return SCM(playerid,COLOR_GREY," Вы должны находиться в фургоне");
		}
	case 1345:
		{
			if(!response || !GetPlayerVehicleID(playerid) || !GetPVarInt(playerid,"farm_id")) return true;
			new car, rand;
			for(new i = 1; i <= TOTALFARM; i++) if(GetPlayerVehicleID(playerid) >= FarmInfo[i][fSeed_Car][0] && GetPlayerVehicleID(playerid) <= FarmInfo[i][fSeed_Car][1]) car++;
			if(car == 0) return L_Kick(playerid,3);
			car = GetPlayerVehicleID(playerid);
			if(!Farmcar_works[car])
			{
				switch(GetPVarInt(playerid,"farm_id"))
				{
				case 1: rand = random(4), SetPlayerRaceCheckpoint(playerid,1,Farmcar_coord_one[rand][0],Farmcar_coord_one[rand][1],Farmcar_coord_one[rand][2],0,0,0,5.0);
				case 2: rand = random(4), SetPlayerRaceCheckpoint(playerid,1,Farmcar_coord_two[rand][0],Farmcar_coord_two[rand][1],Farmcar_coord_two[rand][2],0,0,0,5.0);
				case 3: rand = random(4), SetPlayerRaceCheckpoint(playerid,1,Farmcar_coord_three[rand][0],Farmcar_coord_three[rand][1],Farmcar_coord_three[rand][2],0,0,0,5.0);
				case 4: rand = random(4), SetPlayerRaceCheckpoint(playerid,1,Farmcar_coord_four[rand][0],Farmcar_coord_four[rand][1],Farmcar_coord_four[rand][2],0,0,0,5.0);
				case 5: rand = random(4), SetPlayerRaceCheckpoint(playerid,1,Farmcar_coord_five[rand][0],Farmcar_coord_five[rand][1],Farmcar_coord_five[rand][2],0,0,0,5.0);
				}
				SetPVarInt(playerid,"farm_status",3);
			}
			else
			{
				if(Farmcar_text[car] != Text3D:INVALID_3DTEXT_ID) Delete3DTextLabel(Farmcar_text[car]);
				DestroyDynamicPickup(Farmcar_pickup[car]);
				Farmcar_pickup[car] = 0;
				DeletePVar(playerid,"farm_status");
				if(Farmcar_prods[car] > 1000) Farmcar_prods[car] = 1000;
				RemovePlayerAttachedObject(playerid,3);
				DisablePlayerCheckpoint(playerid);
				Farmcar_works[car] = false;
				format(cString, 56, "{00AB06} Урожая в машине: %d / 1000",Farmcar_prods[car]);
				SCM(playerid, COLOR_GREEN,cString);
				SCM(playerid,0x0073B7AA," Сбор урожая завершен.Теперь направляйтесь к ферме и разгрузитесь {FFFFFF}(( Командой /funload ))");
			}
			return true;
		}
	case 150:
		{
			if(response)
			{
				new farm;
				if(GetPVarInt(playerid,"farm_id"))return SCM(playerid,COLOR_GREY," Вы уже начали работу");
				for(new i = 1; i <= TOTALFARM; i++)
				{
					if(!PlayerToPoint(20, playerid,FarmInfo[i][fMenu][0], FarmInfo[i][fMenu][1], FarmInfo[i][fMenu][2])) continue;
					farm = i;
					//SendMes(playerid,COLOR_WHITE," farm = %i",farm);
				}
				if(GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pPFarmKey] != farm) return SCM(playerid,COLOR_GREY," Вы состоите в организации");
				if(!farm) return SCM(playerid,COLOR_GREY," Вы должны находиться возле раздевалки у фермы!");
				if(FGet(playerid) && pData[playerid][pPFarmKey] == farm)
				{
					SetPVarInt(playerid,"farm_rank",4);
					switch(pData[playerid][pSex]) { case 0: SetPlayerSkin(playerid,34); default: SetPlayerSkin(playerid,31); }
				}
				else if(GetFarmjob(playerid,farm) == 2)
				{
					SetPVarInt(playerid,"farm_rank",3);
					switch(pData[playerid][pSex]) { case 0: SetPlayerSkin(playerid,161); default: SetPlayerSkin(playerid,198); }
				}
				else if(GetFarmjob(playerid,farm))
				{
					SetPVarInt(playerid,"farm_rank",2);
					FarmStatPay[farm][1] ++;
					FarmStatDay[farm][1] ++;
					switch(pData[playerid][pSex]) { case 0: SetPlayerSkin(playerid,158); default: SetPlayerSkin(playerid,157); }
				}
				else
				{
					SetPVarInt(playerid,"farm_rank",1);
					FarmStatPay[farm][0] ++;
					FarmStatDay[farm][0] ++;
					switch(pData[playerid][pSex]) { case 0: SetPlayerSkin(playerid,132); default: SetPlayerSkin(playerid,131); }
				}
				SetPVarInt(playerid,"farm_id",farm);
				DeletePVar(playerid,"farm_status");
				//SendMes(playerid,COLOR_WHITE," farm = %i",GetPVarInt(playerid,"farm_id"));
			}
			else
			{
				new farm;
				if(!GetPVarInt(playerid,"farm_id"))return SCM(playerid,COLOR_GREY," Вы не начинали работу");
				for(new i = 1; i <= TOTALFARM; i++) if(IsPlayerInRangeOfPoint(playerid,20.0,FarmInfo[i][fCloakroom][0],FarmInfo[i][fCloakroom][1], FarmInfo[i][fCloakroom][2])) farm = i;
				if(!farm) return SCM(playerid,COLOR_GREY," Вы должны находиться возле раздевалки у фермы!");
				if(GetPVarInt(playerid,"farm_id") != farm) return SCM(playerid,COLOR_GREY," Вы не начинали работу на данной ферме!");
				pData[playerid][pCash] += GetPVarInt(playerid,"farm_zp");
				SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
				if(!GetPVarInt(playerid,"Fraction_Duty")) SetPlayerSkin(playerid,pData[playerid][pChar][0]);
				else SetPlayerSkin(playerid,pData[playerid][pModel]);
				DisablePlayerCheckpoint(playerid);
				DisablePlayerRaceCheckpoint(playerid);
				RemovePlayerAttachedObject(playerid,3);
				if(GetPVarInt(playerid,"farm_zp") > 0 && FarmInfo[GetPVarInt(playerid,"farm_id")][fBank] < GetPVarInt(playerid,"farm_zp")) SCM(playerid,COLOR_REDD," Банк фермы не может выдать вам зарплату. Банк фермы пуст");
				else if(GetPVarInt(playerid,"farm_zp") > 0 && FarmInfo[GetPVarInt(playerid,"farm_id")][fBank] >= GetPVarInt(playerid,"farm_zp"))
				{
					format(string, 16, "~g~+$%i",GetPVarInt(playerid,"farm_zp")), GameTextForPlayer(playerid, string, 5000, 1);
					FarmInfo[GetPVarInt(playerid,"farm_id")][fBank] -= GetPVarInt(playerid,"farm_zp");
					if(FarmInfo[GetPVarInt(playerid,"farm_id")][fBank] < 0) FarmInfo[GetPVarInt(playerid,"farm_id")][fBank] = 0;
					FarmStatDay[farm][7] += GetPVarInt(playerid,"farm_zp");
					FarmStatPay[farm][7] += GetPVarInt(playerid,"farm_zp");
					SCM(playerid,COLOR_GREEN," Спасибо за работу, приходите еще!");
				}
				else if(!GetPVarInt(playerid,"farm_zp")) SCM(playerid,COLOR_GREY," Вы ничего не заработали");
				SCM(playerid,COLOR_GREEN,"  Рабочий день окончен");
				DeletePVar(playerid,"farm_id");
				DeletePVar(playerid,"farm_status");
				DeletePVar(playerid,"farm_rank");
				DeletePVar(playerid,"farm_zp");
			}
			return true;
		}
	case 1757:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					if(!GetPVarInt(playerid,"Offer")) return SCM(playerid,COLOR_GREY," Вы не предлагали купить нарко");
					DrugOffer[GetPVarInt(playerid,"Offer")] = 999;
					DrugPrice[GetPVarInt(playerid,"Offer")] = 999;
					DrugGram[GetPVarInt(playerid,"Offer")] = 999;
					DeletePVar(playerid,"Offer");
				}
			case 1:
				{
					if(!GetPVarInt(playerid,"LiveOffer")) return SCM(playerid,COLOR_GREY," Вы не предлагали никому интервью");
					switch(pData[playerid][pMember])
					{
					case 9: LiveOffer[GetPVarInt(playerid,"LiveOffer")] = 999;
					case 16: LiveOfferls[GetPVarInt(playerid,"LiveOffer")] = 999;
					case 20: LiveOfferlv[GetPVarInt(playerid,"LiveOffer")] = 999;
					}
					DeletePVar(playerid,"LiveOffer"); 
				}
			case 2:
				{
					if(updatecheck[playerid] == 9999) return SCM(playerid,COLOR_GREY," Принятых вызовов нет");
					updatecheck[playerid] = 9999;
				}
			case 3:
				{
					if(updatecheck[playerid] == 9999) return SCM(playerid,COLOR_GREY," Принятых вызовов нет");
					updatecheck[playerid] = 9999;
				}
			case 4:
				{
					if(updatecheck[playerid] == 9999) return SCM(playerid,COLOR_GREY," Принятых вызовов нет");
					updatecheck[playerid] = 9999;
				}
			case 5:
				{
					if(updatecheck[playerid] == 9999) return SCM(playerid,COLOR_GREY," Принятых вызовов нет");
					updatecheck[playerid] = 9999;
				}
			case 6:
				{
					if(!GetPVarInt(playerid,"CarOffer")) return SCM(playerid,COLOR_GREY," Вы не предлагали никому обмен авто");
					CarOffer[GetPVarInt(playerid,"CarOffer")-1] = 9999;
					CarPrice[GetPVarInt(playerid,"CarOffer")-1] = 0;
					DeletePVar(playerid,"CarOffer");
					DeletePVar(playerid,"Resolut_Vehicle");
					DeletePVar(GetPVarInt(playerid,"CarOffer")-1,"Resolut_Vehicle");
				}
			case 7:
				{
					if(GetPVarInt(playerid,"job_auto_time") < 1) return SCM(playerid,COLOR_GREY," Вы не начинали миссию автоугона");
					if(caroff[GetPVarInt(playerid,"job_auto_seat")] == true) DestroyVehicleEX(GetPVarInt(playerid,"job_auto_seat"));
					else SetVehicleToRespawn(GetPVarInt(playerid,"job_auto_seat"));
					caroff[GetPVarInt(playerid,"job_auto_seat")] = false;
					DeletePVar(playerid,"job_auto_time");
					SCM(playerid, COLOR_BLUE, " [SMS]: Ты нас разочаровал! Миссия провалена");
					DeletePVar(playerid,"job_auto");
					SetPVarInt(playerid,"randa",-1);
					if(gz_autorob[playerid] != -1)
					{
						GangZoneDestroy(gz_autorob[playerid]);
						printf("GangZoneDestroy [Robbing GZ] [ID: %i] for playerid: %i",gz_autorob[playerid],playerid);
						gz_autorob[playerid] = -1;
					}
				}
			}
			GameTextForPlayer(playerid,"~r~cancelled", 3500, 1);
			return true;
		}
	case 1467:
		{
			if(!response)
			{
				if(GetPVarInt(playerid,"help_dialog") > 1) return ShowHelpDialog(playerid, 0);
				else return SetPVarInt(playerid,"help_dialog",0);
			}
			else if(!GetPVarInt(playerid,"help_dialog")) return ShowHelpDialog(playerid, 0);
			else if(GetPVarInt(playerid,"help_dialog") == 1) ShowHelpDialog(playerid, listitem+1);
			else if(GetPVarInt(playerid,"help_dialog") > 1) ShowHelpDialog(playerid, GetPVarInt(playerid,"help_dialog")-1);
			return true;
		}
	case 1755:
		{
			if(!response) return true;
			string = "";
			for(new i = 1; i <= TotalBizz; i++)
			{
				if(BizzInfo[i][bType] != listitem+1) continue;
				format(YCMDstr,128,"{FFFFFF}%s {0076FC}%i вирт\n",BizzInfo[i][bMessage], BizzInfo[i][bPrice]);
				strcat(string,YCMDstr);
			}
			return ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Мониторинг бизнесов",string, "Закрыть", "");
		}
	case 9600:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0: ShowPlayerDialog(playerid, 9601, DIALOG_STYLE_INPUT, "Установить цену зерна","Введите цену зерна\n\nВНИМАНИЕ: Цена должна быть не менее 5 вирт\nи не более 15 вирт","Установить","Назад");
			case 1: ShowPlayerDialog(playerid, 9602, DIALOG_STYLE_INPUT, "Установить цену продуктов","Введите цену продуктов\n\nВНИМАНИЕ: Цена должна быть не менее 20 вирт\nи не более 30 вирт","Установить","Назад");
			case 2: ShowPlayerDialog(playerid, 9603, DIALOG_STYLE_INPUT, "Установить цену работы","Введите цену работы\n\nВНИМАНИЕ: Цена должна быть не менее 30 вирт\nи не более 200 вирт","Установить","Назад");
			case 3: ShowPlayerDialog(playerid, 9604, DIALOG_STYLE_INPUT, "Пополнить 'LandTax' счёт","Введите сумму для пополнения","Пополнить","Назад");
			case 4: ShowPlayerDialog(playerid, 9605, DIALOG_STYLE_INPUT, "Пополнить банк фермы","Введите сумму для пополнения","Пополнить","Назад");
			case 5: ShowPlayerDialog(playerid, 9606, DIALOG_STYLE_INPUT, "Вывести деньги с банка фермы","Введите сумму для вывода","Вывести","Назад");
			case 6: FarmStatsPay(playerid,GetPVarInt(playerid,"farm_id"));
			case 7: FarmStatsDay(playerid,GetPVarInt(playerid,"farm_id"));
			case 8: ShowPlayerDialog(playerid, 9607, DIALOG_STYLE_LIST, "Продаваемый продукт","Картофель\nВеселая трава","Применить","Назад");
			case 9..16: ShowPlayerDialog(playerid, 9608, DIALOG_STYLE_INPUT, "Нанять рабочего","Введите ид игрока в данное окно\n\nВНИМАНИЕ: Введите -1 для увольнения","Далее","Назад"), SetPVarInt(playerid,"farm_slot",listitem-8);
			}
		}
	case 9607:
		{
			if(!FGet(playerid) && GetPVarInt(playerid,"farm_rank") < 3) return true;
			if(!response)
			{
				format(string,500,"Установить цену зерна\nУстановить цену продуктов\nУстановить цену работы\nВвести вирты на счёт 'LandTax'\nВвести вирты на ферму\nВывести вирты с фермы\nСтатистика за прошлый час\nСтатистика за этот день");
				format(string,500,"%s\nСменить продаваемый продукт\nНазначить Зама [1]\nНазначить Зама [2]\nНазначить Зама [3]\nНазначить Фермера [1]\nНазначить Фермера [2]\nНазначить Фермера [3]\nНазначить Фермера [4]\nНазначить Фермера [5]",string);
				return ShowPlayerDialog(playerid, 9600, DIALOG_STYLE_LIST, "Панель настроек",string, "Выбрать", "Отмена");
			}
			switch(listitem)
			{
			case 0: SCM(playerid,0x6BB3FFAA," Продаваемый продукт: Картофель");
			case 1: SCM(playerid,0x6BB3FFAA," Продаваемый продукт: Весёлая трава");
			}
			FarmInfo[GetPVarInt(playerid,"farm_id")][fProds_Selling] = listitem+1;
			format(string,500,"Установить цену зерна\nУстановить цену продуктов\nУстановить цену работы\nВвести вирты на счёт 'LandTax'\nВвести вирты на ферму\nВывести вирты с фермы\nСтатистика за прошлый час\nСтатистика за этот день");
			format(string,500,"%s\nСменить продаваемый продукт\nНазначить Зама [1]\nНазначить Зама [2]\nНазначить Зама [3]\nНазначить Фермера [1]\nНазначить Фермера [2]\nНазначить Фермера [3]\nНазначить Фермера [4]\nНазначить Фермера [5]",string);
			return ShowPlayerDialog(playerid, 9600, DIALOG_STYLE_LIST, "Панель настроек",string, "Выбрать", "Отмена");
		}
	case 9608:
		{
			if(!FGet(playerid) && GetPVarInt(playerid,"farm_rank") < 3) return true;
			if(!response)
			{
				format(string,500,"Установить цену зерна\nУстановить цену продуктов\nУстановить цену работы\nВвести вирты на счёт 'LandTax'\nВвести вирты на ферму\nВывести вирты с фермы\nСтатистика за прошлый час\nСтатистика за этот день");
				format(string,500,"%s\nСменить продаваемый продукт\nНазначить Зама [1]\nНазначить Зама [2]\nНазначить Зама [3]\nНазначить Фермера [1]\nНазначить Фермера [2]\nНазначить Фермера [3]\nНазначить Фермера [4]\nНазначить Фермера [5]",string);
				return ShowPlayerDialog(playerid, 9600, DIALOG_STYLE_LIST, "Панель настроек",string, "Выбрать", "Отмена");
			}
			switch(GetPVarInt(playerid,"farm_slot"))
			{
			case 1..3: format(string,50,"%i 1 %i",strval(inputtext),GetPVarInt(playerid,"farm_slot"));
			default: format(string,50,"%i 2 %i",strval(inputtext),GetPVarInt(playerid,"farm_slot")-3);
			}
			cmd_finvite(playerid, string);
			format(string,500,"Установить цену зерна\nУстановить цену продуктов\nУстановить цену работы\nВвести вирты на счёт 'LandTax'\nВвести вирты на ферму\nВывести вирты с фермы\nСтатистика за прошлый час\nСтатистика за этот день");
			format(string,500,"%s\nСменить продаваемый продукт\nНазначить Зама [1]\nНазначить Зама [2]\nНазначить Зама [3]\nНазначить Фермера [1]\nНазначить Фермера [2]\nНазначить Фермера [3]\nНазначить Фермера [4]\nНазначить Фермера [5]",string);
			return ShowPlayerDialog(playerid, 9600, DIALOG_STYLE_LIST, "Панель настроек",string, "Выбрать", "Отмена");
		}
	case 9601:
		{
			if(!FGet(playerid) && GetPVarInt(playerid,"farm_rank") < 3) return true;
			new i = pData[playerid][pPFarmKey];
			if(!response)
			{
				format(string,500,"Установить цену зерна\nУстановить цену продуктов\nУстановить цену работы\nВвести вирты на счёт 'LandTax'\nВвести вирты на ферму\nВывести вирты с фермы\nСтатистика за прошлый час\nСтатистика за этот день");
				format(string,500,"%s\nСменить продаваемый продукт\nНазначить Зама [1]\nНазначить Зама [2]\nНазначить Зама [3]\nНазначить Фермера [1]\nНазначить Фермера [2]\nНазначить Фермера [3]\nНазначить Фермера [4]\nНазначить Фермера [5]",string);
				return ShowPlayerDialog(playerid, 9600, DIALOG_STYLE_LIST, "Панель настроек",string, "Выбрать", "Отмена");
			}
			if(strval(inputtext) < 5 || strval(inputtext) >= 15) return ShowPlayerDialog(playerid, 9601, DIALOG_STYLE_INPUT, "Установить цену зерна","Введите цену зерна\n\nВНИМАНИЕ: Цена должна быть не менее 5 вирт\nи не более 15 вирт","Установить","Назад");
			FarmInfo[i][fGrain_Price] = strval(inputtext);
			SendMes(playerid,0x6BB3FFAA," Цена зерна установлена, в размере %i вирт",strval(inputtext));
			format(string,500,"Установить цену зерна\nУстановить цену продуктов\nУстановить цену работы\nВвести вирты на счёт 'LandTax'\nВвести вирты на ферму\nВывести вирты с фермы\nСтатистика за прошлый час\nСтатистика за этот день");
			format(string,500,"%s\nСменить продаваемый продукт\nНазначить Зама [1]\nНазначить Зама [2]\nНазначить Зама [3]\nНазначить Фермера [1]\nНазначить Фермера [2]\nНазначить Фермера [3]\nНазначить Фермера [4]\nНазначить Фермера [5]",string);
			return ShowPlayerDialog(playerid, 9600, DIALOG_STYLE_LIST, "Панель настроек",string, "Выбрать", "Отмена");
		}
	case 9602:
		{
			if(!FGet(playerid) && GetPVarInt(playerid,"farm_rank") < 3) return true;
			new i = pData[playerid][pPFarmKey];
			if(!response)
			{
				format(string,500,"Установить цену зерна\nУстановить цену продуктов\nУстановить цену работы\nВвести вирты на счёт 'LandTax'\nВвести вирты на ферму\nВывести вирты с фермы\nСтатистика за прошлый час\nСтатистика за этот день");
				format(string,500,"%s\nСменить продаваемый продукт\nНазначить Зама [1]\nНазначить Зама [2]\nНазначить Зама [3]\nНазначить Фермера [1]\nНазначить Фермера [2]\nНазначить Фермера [3]\nНазначить Фермера [4]\nНазначить Фермера [5]",string);
				return ShowPlayerDialog(playerid, 9600, DIALOG_STYLE_LIST, "Панель настроек",string, "Выбрать", "Отмена");
			}
			if(strval(inputtext) <= 20 || strval(inputtext) >= 30) return ShowPlayerDialog(playerid, 9602, DIALOG_STYLE_INPUT, "Установить цену продуктов","Введите цену продуктов\n\nВНИМАНИЕ: Цена должна быть не менее 20 вирт\nи не более 30 вирт","Установить","Назад");
			FarmInfo[i][fProds_Price] = strval(inputtext);
			SendMes(playerid,0x6BB3FFAA," Цена продажи продуктов установлена, в размере %i вирт",strval(inputtext));
			format(string,500,"Установить цену зерна\nУстановить цену продуктов\nУстановить цену работы\nВвести вирты на счёт 'LandTax'\nВвести вирты на ферму\nВывести вирты с фермы\nСтатистика за прошлый час\nСтатистика за этот день");
			format(string,500,"%s\nСменить продаваемый продукт\nНазначить Зама [1]\nНазначить Зама [2]\nНазначить Зама [3]\nНазначить Фермера [1]\nНазначить Фермера [2]\nНазначить Фермера [3]\nНазначить Фермера [4]\nНазначить Фермера [5]",string);
			return ShowPlayerDialog(playerid, 9600, DIALOG_STYLE_LIST, "Панель настроек",string, "Выбрать", "Отмена");
		}
	case 9603:
		{
			if(!FGet(playerid) && GetPVarInt(playerid,"farm_rank") < 3) return true;
			new i = pData[playerid][pPFarmKey];
			if(!response)
			{
				format(string,500,"Установить цену зерна\nУстановить цену продуктов\nУстановить цену работы\nВвести вирты на счёт 'LandTax'\nВвести вирты на ферму\nВывести вирты с фермы\nСтатистика за прошлый час\nСтатистика за этот день");
				format(string,500,"%s\nСменить продаваемый продукт\nНазначить Зама [1]\nНазначить Зама [2]\nНазначить Зама [3]\nНазначить Фермера [1]\nНазначить Фермера [2]\nНазначить Фермера [3]\nНазначить Фермера [4]\nНазначить Фермера [5]",string);
				return ShowPlayerDialog(playerid, 9600, DIALOG_STYLE_LIST, "Панель настроек",string, "Выбрать", "Отмена");
			}
			if(strval(inputtext) < 30 || strval(inputtext) > 200) return ShowPlayerDialog(playerid, 9603, DIALOG_STYLE_INPUT, "Установить цену работы","Введите цену работы\n\nВНИМАНИЕ: Цена должна быть не менее 30 вирт\nи не более 200 вирт","Установить","Назад");
			FarmInfo[i][fZp] = strval(inputtext);
			SendMes(playerid,0x6BB3FFAA," Цена работы установлена, в размере %i вирт",strval(inputtext));
			format(string,sizeof(string),"Установить цену зерна\nУстановить цену продуктов\nУстановить цену работы\nВвести вирты на счёт 'LandTax'\nВвести вирты на ферму\nВывести вирты с фермы\nСтатистика за прошлый час\nСтатистика за этот день");
			format(string,sizeof(string),"%s\nСменить продаваемый продукт\nНазначить Зама [1]\nНазначить Зама [2]\nНазначить Зама [3]\nНазначить Фермера [1]\nНазначить Фермера [2]\nНазначить Фермера [3]\nНазначить Фермера [4]\nНазначить Фермера [5]",string);
			return ShowPlayerDialog(playerid, 9600, DIALOG_STYLE_LIST, "Панель настроек",string, "Выбрать", "Отмена");
		}
	case 9604:
		{
			if(!FGet(playerid) && GetPVarInt(playerid,"farm_rank") < 3) return true;
			new i = pData[playerid][pPFarmKey];
			if(!response)
			{
				format(string,500,"Установить цену зерна\nУстановить цену продуктов\nУстановить цену работы\nВвести вирты на счёт 'LandTax'\nВвести вирты на ферму\nВывести вирты с фермы\nСтатистика за прошлый час\nСтатистика за этот день");
				format(string,500,"%s\nСменить продаваемый продукт\nНазначить Зама [1]\nНазначить Зама [2]\nНазначить Зама [3]\nНазначить Фермера [1]\nНазначить Фермера [2]\nНазначить Фермера [3]\nНазначить Фермера [4]\nНазначить Фермера [5]",string);
				return ShowPlayerDialog(playerid, 9600, DIALOG_STYLE_LIST, "Панель настроек",string, "Выбрать", "Отмена");
			}
			if(FarmInfo[i][fLandTax]+strval(inputtext) > 84000) return SCM(playerid,COLOR_GREY," Неверная сумма. Максимально допустимая сумма 84000 вирт (7 дней)"), ShowPlayerDialog(playerid, 9604, DIALOG_STYLE_INPUT, "Пополнить 'LandTax' счёт","Введите сумму для пополнения","Пополнить","Назад");
			if(strval(inputtext) < 0 || strval(inputtext) > pData[playerid][pBank]) return ShowPlayerDialog(playerid, 9604, DIALOG_STYLE_INPUT, "Пополнить 'LandTax' счёт","Введите сумму для пополнения","Пополнить","Назад");
			FarmInfo[i][fLandTax]+=strval(inputtext);
			pData[playerid][pBank]-=strval(inputtext);
			SetAccountInfo(playerid, pData[playerid][pBank], "pBank");
			SendMes(playerid,0x6BB3FFAA," Вы перевели на 'LandTax' счёт фермы %i вирт",strval(inputtext));
			format(string,sizeof(string),"Установить цену зерна\nУстановить цену продуктов\nУстановить цену работы\nВвести вирты на счёт 'LandTax'\nВвести вирты на ферму\nВывести вирты с фермы\nСтатистика за прошлый час\nСтатистика за этот день");
			format(string,sizeof(string),"%s\nСменить продаваемый продукт\nНазначить Зама [1]\nНазначить Зама [2]\nНазначить Зама [3]\nНазначить Фермера [1]\nНазначить Фермера [2]\nНазначить Фермера [3]\nНазначить Фермера [4]\nНазначить Фермера [5]",string);
			return ShowPlayerDialog(playerid, 9600, DIALOG_STYLE_LIST, "Панель настроек",string, "Выбрать", "Отмена");
		}
	case 9605:
		{
			if(!FGet(playerid) && GetPVarInt(playerid,"farm_rank") < 3) return true;
			new i = pData[playerid][pPFarmKey];
			if(!response)
			{
				format(string,500,"Установить цену зерна\nУстановить цену продуктов\nУстановить цену работы\nВвести вирты на счёт 'LandTax'\nВвести вирты на ферму\nВывести вирты с фермы\nСтатистика за прошлый час\nСтатистика за этот день");
				format(string,500,"%s\nСменить продаваемый продукт\nНазначить Зама [1]\nНазначить Зама [2]\nНазначить Зама [3]\nНазначить Фермера [1]\nНазначить Фермера [2]\nНазначить Фермера [3]\nНазначить Фермера [4]\nНазначить Фермера [5]",string);
				return ShowPlayerDialog(playerid, 9600, DIALOG_STYLE_LIST, "Панель настроек",string, "Выбрать", "Отмена");
			}
			if(FarmInfo[i][fBank] > 1000000000) return SCM(playerid,COLOR_GREY," Нет места!");
			if(strval(inputtext) < 0 || strval(inputtext) > pData[playerid][pBank]) return ShowPlayerDialog(playerid, 9605, DIALOG_STYLE_INPUT, "Пополнить банк фермы","Введите сумму для пополнения","Пополнить","Назад");
			FarmInfo[i][fBank]+=strval(inputtext);
			pData[playerid][pBank]-=strval(inputtext);
			SetAccountInfo(playerid, pData[playerid][pBank], "pBank");
			SendMes(playerid,0x6BB3FFAA," Вы пополнили счёт фермы на %i вирт",strval(inputtext));
			format(string,500,"Установить цену зерна\nУстановить цену продуктов\nУстановить цену работы\nВвести вирты на счёт 'LandTax'\nВвести вирты на ферму\nВывести вирты с фермы\nСтатистика за прошлый час\nСтатистика за этот день");
			format(string,500,"%s\nСменить продаваемый продукт\nНазначить Зама [1]\nНазначить Зама [2]\nНазначить Зама [3]\nНазначить Фермера [1]\nНазначить Фермера [2]\nНазначить Фермера [3]\nНазначить Фермера [4]\nНазначить Фермера [5]",string);
			return ShowPlayerDialog(playerid, 9600, DIALOG_STYLE_LIST, "Панель настроек",string, "Выбрать", "Отмена");
		}
	case 9606:
		{
			if(!FGet(playerid)) return true;
			new i = pData[playerid][pPFarmKey];
			if(!response)
			{
				format(string,500,"Установить цену зерна\nУстановить цену продуктов\nУстановить цену работы\nВвести вирты на счёт 'LandTax'\nВвести вирты на ферму\nВывести вирты с фермы\nСтатистика за прошлый час\nСтатистика за этот день");
				format(string,500,"%s\nСменить продаваемый продукт\nНазначить Зама [1]\nНазначить Зама [2]\nНазначить Зама [3]\nНазначить Фермера [1]\nНазначить Фермера [2]\nНазначить Фермера [3]\nНазначить Фермера [4]\nНазначить Фермера [5]",string);
				return ShowPlayerDialog(playerid, 9600, DIALOG_STYLE_LIST, "Панель настроек",string, "Выбрать", "Отмена");
			}
			if(strval(inputtext) < 0 || strval(inputtext) > FarmInfo[i][fBank]) return ShowPlayerDialog(playerid, 9606, DIALOG_STYLE_INPUT, "Вывести деньги с банка фермы","Введите сумму для вывода","Вывести","Назад");
			FarmInfo[i][fBank]-=strval(inputtext);
			pData[playerid][pBank]+=strval(inputtext);
			SetAccountInfo(playerid, pData[playerid][pBank], "pBank");
			SendMes(playerid,0x6BB3FFAA," Вы сняли со счёта фермы %i вирт",strval(inputtext));
			format(string,500,"Установить цену зерна\nУстановить цену продуктов\nУстановить цену работы\nВвести вирты на счёт 'LandTax'\nВвести вирты на ферму\nВывести вирты с фермы\nСтатистика за прошлый час\nСтатистика за этот день");
			format(string,500,"%s\nСменить продаваемый продукт\nНазначить Зама [1]\nНазначить Зама [2]\nНазначить Зама [3]\nНазначить Фермера [1]\nНазначить Фермера [2]\nНазначить Фермера [3]\nНазначить Фермера [4]\nНазначить Фермера [5]",string);
			return ShowPlayerDialog(playerid, 9600, DIALOG_STYLE_LIST, "Панель настроек",string, "Выбрать", "Отмена");
		}
	case 9592:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0: ShowPlayerDialog(playerid, 6000, DIALOG_STYLE_INPUT, "Пополнить банк автомастерской","Введите сумму для пополнения","Пополнить","Назад");
			case 1: ShowPlayerDialog(playerid, 6001, DIALOG_STYLE_INPUT, "Пополнить 'LandTax' счёт","Введите сумму для пополнения","Пополнить","Назад");
			case 2: ShowPlayerDialog(playerid, 6002, DIALOG_STYLE_INPUT, "Снять деньги с банка","Введите сумму для снятия","Снять","Назад");
			case 3: ShowPlayerDialog(playerid, 6003, DIALOG_STYLE_INPUT, "Установить стоимость 1 продукта","Введите стоимость одного продукта\n\nВНИМАНИЕ: Сумма стоимости должна быть\nне менее 50 вирт и не более 100 вирт","Установить","Назад");
			case 4: ShowPlayerDialog(playerid, 6004, DIALOG_STYLE_INPUT, "Установить зарплату рабочим","Введите сумму зарплаты\n\nВНИМАНИЕ: Сумма должна быть не менее 1 вирт\nи не более 10 вирт","Установить","Назад");
			case 5..12: ShowPlayerDialog(playerid, 6005, DIALOG_STYLE_INPUT, "Нанять рабочего","Введите ид игрока в данное окно\n\nВНИМАНИЕ: Введите -1 для увольнения","Далее","Назад"), SetPVarInt(playerid,"w_slot",listitem-4);
			}
			return true;
		}
	case 6005:
		{
			if(!WGet(playerid)) return true;
			new i = GetPVarInt(playerid,"wShop");
			if(!response)
			{
				return ShowPlayerDialog(playerid, 9592, DIALOG_STYLE_LIST, "Панель управления","[1] Пополнить банк автомастерской\n[2] Пополнить 'LandTax' счёт\n[3] Снять деньги с банка\n[4] Установить стоимость 1 продукта\n[5] Установить зарплату рабочим\n[6] Нанять заместителя (1)\
					\n[7] Нанять заместителя (2)\n[8] Нанять заместителя (3)\n[9] Нанять механика (1)\n[10] Нанять механика (2)\n[11] Нанять механика (3)\n[12] Нанять механика (4)\n[13] Нанять механика (5)", "Выбрать", "Отмена");
			}
			if(!IsPlayerConnected(strval(inputtext)) && strval(inputtext) != -1) return SCM(playerid,COLOR_GREY," Игрок не в сети!"), ShowPlayerDialog(playerid, 6005, DIALOG_STYLE_INPUT, "Нанять рабочего","Введите ид игрока в данное окно\n\nВНИМАНИЕ: Введите -1 для увольнения","Далее","Назад");
			switch(GetPVarInt(playerid,"w_slot"))
			{
			case 1:
				{
					if(strval(inputtext) == -1)
					{
						if(strcmp(WorkshopInfo[i][wDeputy1],"None",true) == 0) return SCM(playerid,COLOR_GREY," Данный слот не занят!"), ShowPlayerDialog(playerid, 6005, DIALOG_STYLE_INPUT, "Нанять рабочего","Введите ид игрока в данное окно\n\nВНИМАНИЕ: Введите -1 для увольнения","Далее","Назад");
						SendMes(playerid,0x6BB3FFAA," Вы уволили %s с должности заместителя [1]",WorkshopInfo[i][wDeputy1]), strmid(WorkshopInfo[i][wDeputy1],"None", 0, strlen("None"), 24);
					}
					else
					{
						if(pData[strval(inputtext)][pLevel] < 6) return SCM(playerid,COLOR_GREY," Принимать игроков можно с 5 игрового уровня");
						strmid(WorkshopInfo[i][wDeputy1],pData[strval(inputtext)][pName], 0, strlen(pData[strval(inputtext)][pName]), 24);
						SendMes(playerid,0x6BB3FFAA," Вы приняли %s на должность заместителя [1]",WorkshopInfo[i][wDeputy1]);
						SendMes(strval(inputtext),0x6BB3FFAA," %s принял вас на должность заместителя [1]",pData[playerid][pName]);
					}
				}
			case 2:
				{
					if(strval(inputtext) == -1)
					{
						if(strcmp(WorkshopInfo[i][wDeputy2],"None",true) == 0) return SCM(playerid,COLOR_GREY," Данный слот не занят!"), ShowPlayerDialog(playerid, 6005, DIALOG_STYLE_INPUT, "Нанять рабочего","Введите ид игрока в данное окно\n\nВНИМАНИЕ: Введите -1 для увольнения","Далее","Назад");
						SendMes(playerid,0x6BB3FFAA," Вы уволили %s с должности заместителя [2]",WorkshopInfo[i][wDeputy2]), strmid(WorkshopInfo[i][wDeputy2],"None", 0, strlen("None"), 24);
					}
					else
					{
						if(pData[strval(inputtext)][pLevel] < 6) return SCM(playerid,COLOR_GREY," Принимать игроков можно с 5 игрового уровня");
						strmid(WorkshopInfo[i][wDeputy2],pData[strval(inputtext)][pName], 0, strlen(pData[strval(inputtext)][pName]), 24);
						SendMes(playerid,0x6BB3FFAA," Вы приняли %s на должность заместителя [2]",WorkshopInfo[i][wDeputy2]);
						SendMes(strval(inputtext),0x6BB3FFAA," %s принял вас на должность заместителя [2]",pData[playerid][pName]);
					}
				}
			case 3:
				{
					if(strval(inputtext) == -1)
					{
						if(strcmp(WorkshopInfo[i][wDeputy3],"None",true) == 0) return SCM(playerid,COLOR_GREY," Данный слот не занят!"), ShowPlayerDialog(playerid, 6005, DIALOG_STYLE_INPUT, "Нанять рабочего","Введите ид игрока в данное окно\n\nВНИМАНИЕ: Введите -1 для увольнения","Далее","Назад");
						SendMes(playerid,0x6BB3FFAA," Вы уволили %s с должности заместителя [3]",WorkshopInfo[i][wDeputy3]), strmid(WorkshopInfo[i][wDeputy3],"None", 0, strlen("None"), 24);
					}
					else
					{
						if(pData[strval(inputtext)][pLevel] < 6) return SCM(playerid,COLOR_GREY," Принимать игроков можно с 5 игрового уровня");
						strmid(WorkshopInfo[i][wDeputy3],pData[strval(inputtext)][pName], 0, strlen(pData[strval(inputtext)][pName]), 24);
						SendMes(playerid,0x6BB3FFAA," Вы приняли %s на должность заместителя [3]",WorkshopInfo[i][wDeputy3]);
						SendMes(strval(inputtext),0x6BB3FFAA," %s принял вас на должность заместителя [3]",pData[playerid][pName]);
					}
				}
			case 4:
				{
					if(strval(inputtext) == -1)
					{
						if(strcmp(WorkshopInfo[i][wMechanic1],"None",true) == 0) return SCM(playerid,COLOR_GREY," Данный слот не занят!"), ShowPlayerDialog(playerid, 6005, DIALOG_STYLE_INPUT, "Нанять рабочего","Введите ид игрока в данное окно\n\nВНИМАНИЕ: Введите -1 для увольнения","Далее","Назад");
						SendMes(playerid,0x6BB3FFAA," Вы уволили %s с должности механика [1]",WorkshopInfo[i][wMechanic1]), strmid(WorkshopInfo[i][wMechanic1],"None", 0, strlen("None"), 24);
					}
					else
					{
						strmid(WorkshopInfo[i][wMechanic1],pData[strval(inputtext)][pName], 0, strlen(pData[strval(inputtext)][pName]), 24);
						SendMes(playerid,0x6BB3FFAA," Вы приняли %s на должность механика [1]",WorkshopInfo[i][wMechanic1]);
						SendMes(strval(inputtext),0x6BB3FFAA," %s принял вас на должность механика [1]",pData[playerid][pName]);
					}
				}
			case 5:
				{
					if(strval(inputtext) == -1)
					{
						if(strcmp(WorkshopInfo[i][wMechanic2],"None",true) == 0) return SCM(playerid,COLOR_GREY," Данный слот не занят!"), ShowPlayerDialog(playerid, 6005, DIALOG_STYLE_INPUT, "Нанять рабочего","Введите ид игрока в данное окно\n\nВНИМАНИЕ: Введите -1 для увольнения","Далее","Назад");
						SendMes(playerid,0x6BB3FFAA," Вы уволили %s с должности механика [2]",WorkshopInfo[i][wMechanic2]), strmid(WorkshopInfo[i][wMechanic2],"None", 0, strlen("None"), 24);
					}
					else
					{
						strmid(WorkshopInfo[i][wMechanic2],pData[strval(inputtext)][pName], 0, strlen(pData[strval(inputtext)][pName]), 24);
						SendMes(playerid,0x6BB3FFAA," Вы приняли %s на должность механика [2]",WorkshopInfo[i][wMechanic2]);
						SendMes(strval(inputtext),0x6BB3FFAA," %s принял вас на должность механика [2]",pData[playerid][pName]);
					}
				}
			case 6:
				{
					if(strval(inputtext) == -1)
					{
						if(strcmp(WorkshopInfo[i][wMechanic3],"None",true) == 0) return SCM(playerid,COLOR_GREY," Данный слот не занят!"), ShowPlayerDialog(playerid, 6005, DIALOG_STYLE_INPUT, "Нанять рабочего","Введите ид игрока в данное окно\n\nВНИМАНИЕ: Введите -1 для увольнения","Далее","Назад");
						SendMes(playerid,0x6BB3FFAA," Вы уволили %s с должности механика [3]",WorkshopInfo[i][wMechanic3]), strmid(WorkshopInfo[i][wMechanic3],"None", 0, strlen("None"), 24);
					}
					else
					{
						strmid(WorkshopInfo[i][wMechanic3],pData[strval(inputtext)][pName], 0, strlen(pData[strval(inputtext)][pName]), 24);
						SendMes(playerid,0x6BB3FFAA," Вы приняли %s на должность механика [3]",WorkshopInfo[i][wMechanic3]);
						SendMes(strval(inputtext),0x6BB3FFAA," %s принял вас на должность механика [3]",pData[playerid][pName]);
					}
				}
			case 7:
				{
					if(strval(inputtext) == -1)
					{
						if(strcmp(WorkshopInfo[i][wMechanic4],"None",true) == 0) return SCM(playerid,COLOR_GREY," Данный слот не занят!"), ShowPlayerDialog(playerid, 6005, DIALOG_STYLE_INPUT, "Нанять рабочего","Введите ид игрока в данное окно\n\nВНИМАНИЕ: Введите -1 для увольнения","Далее","Назад");
						SendMes(playerid,0x6BB3FFAA," Вы уволили %s с должности механика [4]",WorkshopInfo[i][wMechanic4]), strmid(WorkshopInfo[i][wMechanic4],"None", 0, strlen("None"), 24);
					}
					else
					{
						strmid(WorkshopInfo[i][wMechanic4],pData[strval(inputtext)][pName], 0, strlen(pData[strval(inputtext)][pName]), 24);
						SendMes(playerid,0x6BB3FFAA," Вы приняли %s на должность механика [4]",WorkshopInfo[i][wMechanic4]);
						SendMes(strval(inputtext),0x6BB3FFAA," %s принял вас на должность механика [4]",pData[playerid][pName]);
					}
				}
			case 8:
				{
					if(strval(inputtext) == -1)
					{
						if(strcmp(WorkshopInfo[i][wMechanic5],"None",true) == 0) return SCM(playerid,COLOR_GREY," Данный слот не занят!"), ShowPlayerDialog(playerid, 6005, DIALOG_STYLE_INPUT, "Нанять рабочего","Введите ид игрока в данное окно\n\nВНИМАНИЕ: Введите -1 для увольнения","Далее","Назад");
						SendMes(playerid,0x6BB3FFAA," Вы уволили %s с должности механика [5]",WorkshopInfo[i][wMechanic5]), strmid(WorkshopInfo[i][wMechanic5],"None", 0, strlen("None"), 24);
					}
					else
					{
						strmid(WorkshopInfo[i][wMechanic5],pData[strval(inputtext)][pName], 0, strlen(pData[strval(inputtext)][pName]), 24);
						SendMes(playerid,0x6BB3FFAA," Вы приняли %s на должность механика [5]",WorkshopInfo[i][wMechanic5]);
						SendMes(strval(inputtext),0x6BB3FFAA," %s принял вас на должность механика [5]",pData[playerid][pName]);
					}
				}
			}
			DeletePVar(playerid,"w_slot");
			return ShowPlayerDialog(playerid, 9592, DIALOG_STYLE_LIST, "Панель управления","[1] Пополнить банк автомастерской\n[2] Пополнить 'LandTax' счёт\n[3] Снять деньги с банка\n[4] Установить стоимость 1 продукта\n[5] Установить зарплату рабочим\n[6] Нанять заместителя (1)\
				\n[7] Нанять заместителя (2)\n[8] Нанять заместителя (3)\n[9] Нанять механика (1)\n[10] Нанять механика (2)\n[11] Нанять механика (3)\n[12] Нанять механика (4)\n[13] Нанять механика (5)", "Выбрать", "Отмена");
		}
	case 6000:
		{
			if(!WGet(playerid)) return true;
			new i = GetPVarInt(playerid,"wShop");
			if(!response)
			{
				return ShowPlayerDialog(playerid, 9592, DIALOG_STYLE_LIST, "Панель управления","[1] Пополнить банк автомастерской\n[2] Пополнить 'LandTax' счёт\n[3] Снять деньги с банка\n[4] Установить стоимость 1 продукта\n[5] Установить зарплату рабочим\n[6] Нанять заместителя (1)\
					\n[7] Нанять заместителя (2)\n[8] Нанять заместителя (3)\n[9] Нанять механика (1)\n[10] Нанять механика (2)\n[11] Нанять механика (3)\n[12] Нанять механика (4)\n[13] Нанять механика (5)", "Выбрать", "Отмена");
			}
			if(WorkshopInfo[i][wBank] > 1000000000) return SCM(playerid,COLOR_GREY," Нет места!");
			if(strval(inputtext) < 0 || strval(inputtext) > pData[playerid][pBank]) return ShowPlayerDialog(playerid, 6000, DIALOG_STYLE_INPUT, "Пополнить банк автомастерской","Введите сумму для пополнения","Пополнить","Назад");
			WorkshopInfo[i][wBank]+=strval(inputtext);
			pData[playerid][pBank]-=strval(inputtext);
			SetAccountInfo(playerid, pData[playerid][pBank], "pBank");
			SendMes(playerid,0x6BB3FFAA," Вы пополнили счёт банка автомастерской на %i вирт",strval(inputtext));
			return ShowPlayerDialog(playerid, 9592, DIALOG_STYLE_LIST, "Панель управления","[1] Пополнить банк автомастерской\n[2] Пополнить 'LandTax' счёт\n[3] Снять деньги с банка\n[4] Установить стоимость 1 продукта\n[5] Установить зарплату рабочим\n[6] Нанять заместителя (1)\
				\n[7] Нанять заместителя (2)\n[8] Нанять заместителя (3)\n[9] Нанять механика (1)\n[10] Нанять механика (2)\n[11] Нанять механика (3)\n[12] Нанять механика (4)\n[13] Нанять механика (5)", "Выбрать", "Отмена");
		}
	case 6001:
		{
			if(!WGet(playerid)) return true;
			new i = GetPVarInt(playerid,"wShop");
			if(!response)
			{
				return ShowPlayerDialog(playerid, 9592, DIALOG_STYLE_LIST, "Панель управления","[1] Пополнить банк автомастерской\n[2] Пополнить 'LandTax' счёт\n[3] Снять деньги с банка\n[4] Установить стоимость 1 продукта\n[5] Установить зарплату рабочим\n[6] Нанять заместителя (1)\
					\n[7] Нанять заместителя (2)\n[8] Нанять заместителя (3)\n[9] Нанять механика (1)\n[10] Нанять механика (2)\n[11] Нанять механика (3)\n[12] Нанять механика (4)\n[13] Нанять механика (5)", "Выбрать", "Отмена");
			}
			if(WorkshopInfo[i][wLandTax]+strval(inputtext) > 84000) return SCM(playerid,COLOR_GREY," Неверная сумма. Максимально допустимая сумма 84000 вирт (7 дней)"), ShowPlayerDialog(playerid, 6001, DIALOG_STYLE_INPUT, "Пополнить 'LandTax' счёт","Введите сумму для пополнения","Пополнить","Назад");
			if(strval(inputtext) < 0 || strval(inputtext) > pData[playerid][pBank]) return ShowPlayerDialog(playerid, 6001, DIALOG_STYLE_INPUT, "Пополнить 'LandTax' счёт","Введите сумму для пополнения","Пополнить","Назад");
			WorkshopInfo[i][wLandTax]+=strval(inputtext);
			pData[playerid][pBank]-=strval(inputtext);
			SetAccountInfo(playerid, pData[playerid][pBank], "pBank");
			SendMes(playerid,0x6BB3FFAA," Вы пополнили 'LandTax' счёт автомастерской на %i вирт",strval(inputtext));
			return ShowPlayerDialog(playerid, 9592, DIALOG_STYLE_LIST, "Панель управления","[1] Пополнить банк автомастерской\n[2] Пополнить 'LandTax' счёт\n[3] Снять деньги с банка\n[4] Установить стоимость 1 продукта\n[5] Установить зарплату рабочим\n[6] Нанять заместителя (1)\
				\n[7] Нанять заместителя (2)\n[8] Нанять заместителя (3)\n[9] Нанять механика (1)\n[10] Нанять механика (2)\n[11] Нанять механика (3)\n[12] Нанять механика (4)\n[13] Нанять механика (5)", "Выбрать", "Отмена");
		}
	case 6002:
		{
			if(!WGet(playerid)) return true;
			new i = GetPVarInt(playerid,"wShop");
			if(!response)
			{
				return ShowPlayerDialog(playerid, 9592, DIALOG_STYLE_LIST, "Панель управления","[1] Пополнить банк автомастерской\n[2] Пополнить 'LandTax' счёт\n[3] Снять деньги с банка\n[4] Установить стоимость 1 продукта\n[5] Установить зарплату рабочим\n[6] Нанять заместителя (1)\
					\n[7] Нанять заместителя (2)\n[8] Нанять заместителя (3)\n[9] Нанять механика (1)\n[10] Нанять механика (2)\n[11] Нанять механика (3)\n[12] Нанять механика (4)\n[13] Нанять механика (5)", "Выбрать", "Отмена");
			}
			if(strval(inputtext) < 0 || strval(inputtext) > WorkshopInfo[i][wBank]) return ShowPlayerDialog(playerid, 6002, DIALOG_STYLE_INPUT, "Снять деньги с банка","Введите сумму для снятия","Снять","Назад");
			WorkshopInfo[i][wBank]-=strval(inputtext);
			pData[playerid][pBank]+=strval(inputtext);
			SetAccountInfo(playerid, pData[playerid][pBank], "pBank");
			SendMes(playerid,0x6BB3FFAA," Вы сняли со счёта автомастерской %i вирт",strval(inputtext));
			return ShowPlayerDialog(playerid, 9592, DIALOG_STYLE_LIST, "Панель управления","[1] Пополнить банк автомастерской\n[2] Пополнить 'LandTax' счёт\n[3] Снять деньги с банка\n[4] Установить стоимость 1 продукта\n[5] Установить зарплату рабочим\n[6] Нанять заместителя (1)\
				\n[7] Нанять заместителя (2)\n[8] Нанять заместителя (3)\n[9] Нанять механика (1)\n[10] Нанять механика (2)\n[11] Нанять механика (3)\n[12] Нанять механика (4)\n[13] Нанять механика (5)", "Выбрать", "Отмена");
		}
	case 6003:
		{
			if(!WGet(playerid)) return true;
			new i = GetPVarInt(playerid,"wShop");
			if(!response)
			{
				return ShowPlayerDialog(playerid, 9592, DIALOG_STYLE_LIST, "Панель управления","[1] Пополнить банк автомастерской\n[2] Пополнить 'LandTax' счёт\n[3] Снять деньги с банка\n[4] Установить стоимость 1 продукта\n[5] Установить зарплату рабочим\n[6] Нанять заместителя (1)\
					\n[7] Нанять заместителя (2)\n[8] Нанять заместителя (3)\n[9] Нанять механика (1)\n[10] Нанять механика (2)\n[11] Нанять механика (3)\n[12] Нанять механика (4)\n[13] Нанять механика (5)", "Выбрать", "Отмена");
			}
			if(strval(inputtext) < 50 || strval(inputtext) > 100) return ShowPlayerDialog(playerid, 6003, DIALOG_STYLE_INPUT, "Установить стоимость 1 продукта","Введите стоимость одного продукта\n\nВНИМАНИЕ: Сумма стоимости должна быть\nне менее 50 вирт и не более 100 вирт","Установить","Назад");
			WorkshopInfo[i][wPriceProds] = strval(inputtext);
			SendMes(playerid,0x6BB3FFAA," Стоимость одного продукта равна %i вирт",strval(inputtext));
			return ShowPlayerDialog(playerid, 9592, DIALOG_STYLE_LIST, "Панель управления","[1] Пополнить банк автомастерской\n[2] Пополнить 'LandTax' счёт\n[3] Снять деньги с банка\n[4] Установить стоимость 1 продукта\n[5] Установить зарплату рабочим\n[6] Нанять заместителя (1)\
				\n[7] Нанять заместителя (2)\n[8] Нанять заместителя (3)\n[9] Нанять механика (1)\n[10] Нанять механика (2)\n[11] Нанять механика (3)\n[12] Нанять механика (4)\n[13] Нанять механика (5)", "Выбрать", "Отмена");
		}
	case 6004:
		{
			if(!WGet(playerid)) return true;
			new i = GetPVarInt(playerid,"wShop");
			if(!response)
			{
				return ShowPlayerDialog(playerid, 9592, DIALOG_STYLE_LIST, "Панель управления","[1] Пополнить банк автомастерской\n[2] Пополнить 'LandTax' счёт\n[3] Снять деньги с банка\n[4] Установить стоимость 1 продукта\n[5] Установить зарплату рабочим\n[6] Нанять заместителя (1)\
					\n[7] Нанять заместителя (2)\n[8] Нанять заместителя (3)\n[9] Нанять механика (1)\n[10] Нанять механика (2)\n[11] Нанять механика (3)\n[12] Нанять механика (4)\n[13] Нанять механика (5)", "Выбрать", "Отмена");
			}
			if(strval(inputtext) < 1 || strval(inputtext) > 10) return ShowPlayerDialog(playerid, 6004, DIALOG_STYLE_INPUT, "Установить зарплату рабочим","Введите сумму зарплаты\n\nВНИМАНИЕ: Сумма должна быть не менее 1 вирт\nи не более 10 вирт","Установить","Назад");
			WorkshopInfo[i][wZp] = strval(inputtext);
			SendMes(playerid,0x6BB3FFAA," Заработная плата рабочим равна %i вирт",strval(inputtext));
			return ShowPlayerDialog(playerid, 9592, DIALOG_STYLE_LIST, "Панель управления","[1] Пополнить банк автомастерской\n[2] Пополнить 'LandTax' счёт\n[3] Снять деньги с банка\n[4] Установить стоимость 1 продукта\n[5] Установить зарплату рабочим\n[6] Нанять заместителя (1)\
				\n[7] Нанять заместителя (2)\n[8] Нанять заместителя (3)\n[9] Нанять механика (1)\n[10] Нанять механика (2)\n[11] Нанять механика (3)\n[12] Нанять механика (4)\n[13] Нанять механика (5)", "Выбрать", "Отмена");
		}
	case 6500:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					new i = GetPVarInt(playerid,"installation_");
					if(CarInfo[i][carPercent][GetPVarInt(i,"chosencar")] >= 100) return SCM(playerid,COLOR_GREY," Игроку не нужна замена двигателя!");
					new cost = 0;
					switch(GetVehicleModel(house_car[i]))
					{
					case 400: cost = 650; case 404: cost = 500; case 436: cost = 500; case 439: cost = 750; case 458: cost = 600;
					case 466: cost = 550; case 475: cost = 950; case 478: cost = 500; case 479: cost = 550; case 492: cost = 700;
					case 516: cost = 700; case 517: cost = 750; case 518: cost = 850; case 526: cost = 550; case 527: cost = 500;
					case 542: cost = 600; case 543: cost = 500; case 546: cost = 700; case 547: cost = 550; case 549: cost = 600;
					case 567: cost = 1000; case 419: cost = 4000; case 421: cost = 4150; case 445: cost = 4050; case 489: cost = 4400;
					case 491: cost = 4000; case 533: cost = 4100; case 534: cost = 3600; case 554: cost = 4200; case 555: cost = 5000;
					case 561: cost = 4050; case 579: cost = 4650; case 580: cost = 5000; case 589: cost = 3500; case 603: cost = 4000;
					case 418: cost = 3500; case 461: cost = 5000; case 581: cost = 5000; case 586: cost = 4000; case 401: cost = 1700;
					case 405: cost = 2000; case 412: cost = 1750; case 422: cost = 1550; case 426: cost = 2100; case 467: cost = 1850;
					case 474: cost = 1850; case 495: cost = 2100; case 496: cost = 2400; case 507: cost = 2250; case 529: cost = 2200; case 536: cost = 2000;
					case 540: cost = 1650; case 550: cost = 2400; case 551: cost = 2400; case 566: cost = 1750; case 575: cost = 2300;
					case 576: cost = 1750; case 585: cost = 1750; case 600: cost = 2100; case 402: cost = 15000; case 411: cost = 15000;
					case 415: cost = 15000; case 429: cost = 15000; case 451: cost = 20000; case 506: cost = 15000; case 541: cost = 20000;
					case 522: cost = 15000; case 434: cost = 16000; case 477: cost = 9500; case 480: cost = 10000; case 535: cost = 8500;
					case 545: cost = 7000; case 558: cost = 8500; case 559: cost = 9000; case 560: cost = 8950; case 562: cost = 9000;
					case 565: cost = 9000; case 587: cost = 9000; case 602: cost = 8000; case 521: cost = 8000; case 463: cost = 8000;
					case 468: cost = 7000;
					default: cost = 3500;
					}
					SetPVarInt(i,"cost",cost*(100-CarInfo[i][carPercent][GetPVarInt(i,"chosencar")]));
					SetPVarInt(i,"prods",200);
					SetPVarInt(i,"detals",99);
					SetPVarInt(playerid,"installation",1);
					SCM(playerid,COLOR_GREEN," Ожидайте подтверждения игрока!");
					format(string,164,"Механик %s предлагает вам поставить новый двигатель\nСтоимость нового двигателя: %i вирт",pData[playerid][pName],GetPVarInt(i,"cost"));
					ShowPlayerDialog(i, 6501, DIALOG_STYLE_MSGBOX, "Установка детали:",string, "Установить", "Отмена");
				}
			case 1: ShowPlayerDialog(playerid,6502,DIALOG_STYLE_INPUT,"Установка детали:","Введите 2 цвета, через пробел\n\nПример: 0 0", "Далее","Отмена");
			default:
				{
					new i = GetPVarInt(playerid,"installation_");
					new till = WorkshopInfo[GetPVarInt(i,"InWorkshop")][wPriceProds];
					SetPVarInt(i,"cost",till*AllTuningComponentsInfo[AwtomasMassiveID[playerid][listitem-2]][Cost]);
					SetPVarInt(i,"prods",200);
					SetPVarInt(i,"detals",AllTuningComponentsInfo[AwtomasMassiveID[playerid][listitem-2]][idcomp]);
					SetPVarInt(playerid,"installation",1);
					AddVehicleComponent(house_car[i],AllTuningComponentsInfo[AwtomasMassiveID[playerid][listitem-2]][idcomp]);
					SCM(playerid,COLOR_GREEN,"Ожидайте подтверждения игрока!");
					format(string,164,"Механик %s предлагает вам поставить деталь %s\t\"%s\"\nСтоимость установки детали: %i вирт",pData[playerid][pName],AllTuningComponentsInfo[AwtomasMassiveID[playerid][listitem-2]][Type],AllTuningComponentsInfo[AwtomasMassiveID[playerid][listitem-2]][Name],GetPVarInt(i,"cost"));
					ShowPlayerDialog(i, 6501, DIALOG_STYLE_MSGBOX, "Установка детали:",string, "Установить", "Отмена");
				}
			}
			return true;
		}
	case 6501:
		{
			if(response)
			{
				if(WorkshopInfo[GetPVarInt(playerid,"InWorkshop")][wProds] < GetPVarInt(playerid,"prods"))
				{
					if(GetPVarInt(playerid,"detals") > 100) RemoveVehicleComponent(house_car[playerid],GetPVarInt(playerid,"detals"));
					LoadTuning(playerid,house_car[playerid],GetPVarInt(playerid,"chosencar"));
					DeletePVar(playerid,"cost");
					DeletePVar(playerid,"prods");
					DeletePVar(playerid,"detals");
					DeletePVar(cto_mechanic[playerid],"installation");
					SCM(playerid,COLOR_LIGHTRED," У автомастерской недостаточно продуктов!");
					return SetPlayerChatBubble(playerid," Недостаточно продуктов",COLOR_GREEN,30.0,10000);
				}
				if(pData[playerid][pBank] < GetPVarInt(playerid,"cost"))
				{
					if(GetPVarInt(playerid,"detals") > 100) RemoveVehicleComponent(house_car[playerid],GetPVarInt(playerid,"detals"));
					LoadTuning(playerid,house_car[playerid],GetPVarInt(playerid,"chosencar"));
					DeletePVar(playerid,"cost");
					DeletePVar(playerid,"prods");
					DeletePVar(playerid,"detals");
					DeletePVar(cto_mechanic[playerid],"installation");
					SCM(playerid,COLOR_LIGHTRED," У вас  Недостаточно средств на банк. счете!");
					return SetPlayerChatBubble(playerid," Недостаточно денег",COLOR_GREEN,30.0,10000);
				}
				switch(GetPVarInt(playerid,"detals"))
				{
				case 99:
					{
						new Float:p[3]; AntiCheatGetVehiclePos(house_car[playerid],p[0],p[1],p[2]);
						SetPlayerCheckpoint(cto_mechanic[playerid],p[0]+4,p[1],p[2], 1.0);
					}
				case 100:
					{
						new Float:p[3]; AntiCheatGetVehiclePos(house_car[playerid],p[0],p[1],p[2]);
						SetPlayerCheckpoint(cto_mechanic[playerid],p[0]-4,p[1],p[2], 1.0);
					}
				default:
					{
						new Float:p[3], rando = random(2); AntiCheatGetVehiclePos(house_car[playerid],p[0],p[1],p[2]);
						if(rando == 0) SetPlayerCheckpoint(cto_mechanic[playerid],p[0],p[1]-2,p[2], 1.0);
						else SetPlayerCheckpoint(cto_mechanic[playerid],p[0],p[1]+2,p[2], 1.0);
					}
				}
				SCM(playerid,COLOR_GREEN," Ожидайте пока механик установит деталь");
				SetPlayerChatBubble(playerid,"Подтвердил сделку",COLOR_GREEN,30.0,10000);
				SCM(cto_mechanic[playerid],COLOR_GREEN," Установите деталь (( Встаньте на красный чекпоинт ))");
				return SetPVarInt(cto_mechanic[playerid],"installation",2);
			}
			else
			{
				if(GetPVarInt(playerid,"detals") > 100) RemoveVehicleComponent(house_car[playerid],GetPVarInt(playerid,"detals"));
				DeletePVar(playerid,"cost");
				DeletePVar(playerid,"prods");
				DeletePVar(playerid,"detals");
				DeletePVar(playerid,"number");
				DeletePVar(playerid,"color0");
				DeletePVar(playerid,"color1");
				DeletePVar(cto_mechanic[playerid],"installation");
				SetPlayerChatBubble(playerid," Отменил сделку",COLOR_GREEN,30.0,10000);
				SCM(cto_mechanic[playerid],COLOR_GREEN," Игрок отменил установку детали");
				LoadTuning(playerid,house_car[playerid],GetPVarInt(playerid,"chosencar"));
			}
			return true;
		}
	case 6502:
		{
			if(!response) return true;
			new Colors[2];
			if(sscanf(inputtext, "p< >ii",Colors[0],Colors[1])) return ShowPlayerDialog(playerid,6502,DIALOG_STYLE_INPUT,"Установка детали:","Введите 2 цвета, через пробел\n\nПример: 0 0", "Далее","Отмена");
			if(Colors[0] < 0 || Colors[0] > 255 || Colors[1] < 0 || Colors[1] > 255) return ShowPlayerDialog(playerid,6502,DIALOG_STYLE_INPUT,"Установка детали:","Введите 2 цвета, через пробел\n\nПример: 0 0", "Далее","Отмена");
			new i = GetPVarInt(playerid,"installation_");
			new till = WorkshopInfo[GetPVarInt(i,"InWorkshop")][wPriceProds];
			SetPVarInt(i,"cost",till*500);
			SetPVarInt(i,"prods",100);
			SetPVarInt(i,"detals",100);
			SetPVarInt(i,"color0",Colors[0]);
			SetPVarInt(i,"color1",Colors[1]);
			SetPVarInt(playerid,"installation",1);
			ChangeVehicleColor(house_car[i], Colors[0], Colors[1]);
			SCM(playerid,COLOR_GREEN,"Ожидайте подтверждения игрока!");
			format(string,164,"Механик %s предлагает вам перекрасить ваш автомобиль\nСтоимость перекраски: %i вирт",pData[playerid][pName],GetPVarInt(i,"cost"));
			return ShowPlayerDialog(i, 6501, DIALOG_STYLE_MSGBOX, "Установка детали:",string, "Установить", "Отмена");
		}
	case 139:
		{
			if(GetPlayerVirtualWorld(playerid) == 0) return true;
			if(response)
			{
				if(GetPVarInt(playerid,"Workshop") || GetPVarInt(playerid,"Fraction_Duty")) return SCM(playerid,COLOR_GREY," Вы уже начали работу");
				if(GetWorkshopW(playerid,GetPlayerVirtualWorld(playerid))) SetPVarInt(playerid,"Workshop__",3), SetPlayerSkin(playerid,221);
				else if(GetWorkshop(playerid,GetPlayerVirtualWorld(playerid)) == 2) SetPVarInt(playerid,"Workshop__",2), SetPlayerSkin(playerid,222);
				else if(GetWorkshop(playerid,GetPlayerVirtualWorld(playerid)) == 1) SetPVarInt(playerid,"Workshop__",1), SetPlayerSkin(playerid,50);
				else if(GetWorkshop(playerid,GetPlayerVirtualWorld(playerid)) && pData[playerid][pSex] == 1) SetPlayerSkin(playerid,225);
				else return SCM(playerid,COLOR_GREY," Вы тут не работаете");
				SendMes(playerid,0x6BB3FFAA,"  Вы начали работу в автомастерской номер %i",GetPlayerVirtualWorld(playerid)-1);
				SetPVarInt(playerid,"Workshop",GetPlayerVirtualWorld(playerid));
				DeletePVar(playerid,"Workshop_");
			}
			else
			{
				if(!GetPVarInt(playerid,"Workshop")) return SCM(playerid,COLOR_GREY," Вы не начинали тут работу");
				SendMes(playerid,0x6BB3FFAA," Вы закончили свою работу. Вами заработано %i вирт",GetPVarInt(playerid,"Workshop_"));
				SetPlayerSkin(playerid,pData[playerid][pChar][0]);
				format(cString, 20, "~g~+$%i",GetPVarInt(playerid,"Workshop_"));
				GameTextForPlayer(playerid, cString, 2000, 1);
				pData[playerid][pPayCheck] += GetPVarInt(playerid,"Workshop_")/3;
				SetAccountInfo(playerid, pData[playerid][pPayCheck], "pPayCheck");
				WorkshopInfo[GetPVarInt(playerid,"Workshop")][wBank]-=GetPVarInt(playerid,"Workshop_");
				DeletePVar(playerid,"Workshop");
				DeletePVar(playerid,"Workshop_");
				DeletePVar(playerid,"Workshop__");
			}
			return true;
		}
	case 135:
		{
			if(!response) return true;
			return ExitBone(playerid);
		}
	case 136:
		{
			if(!response) return true;
			if(strval(inputtext) < 1000 || strval(inputtext) > 300000000) return SCM(playerid,COLOR_GREY," Неверная ставка");
			new null = 0;
			for(new i; i < 5; i++) if(GetPVarInt(BoneInfo[GetPVarInt(playerid,"BoneStol")-1][Gamer][i],"BoneStol_")) null++;
			if(null > 0) return SCM(playerid,COLOR_GREY," Кто то из игроков уже поставил ставку");
			if(BoneInfo[GetPVarInt(playerid,"BoneStol")-1][GameStart] != 0) return SCM(playerid,COLOR_GREY," Вы не можете изменить ставку в процессе игры!");
			BoneInfo[GetPVarInt(playerid,"BoneStol")-1][Bet] = strval(inputtext);
			SCM(playerid,COLOR_INDIGO," Ставка успешно установлена!");
			return UpdateBone(GetPVarInt(playerid,"BoneStol")-1);
		}
	case 5576:
		{
			if(!response || RouletStol[playerid] == 0 || RouletPlay[RouletStol[playerid]] || RouletBet[playerid] != 0) return true;
			switch(RouletStol[playerid])
			{
			case 1,5,12: {
					if(strval(inputtext) < 500 || strval(inputtext) > 5000 || pData[playerid][pCash] < strval(inputtext)) return ShowPlayerDialog(playerid,5576,DIALOG_STYLE_INPUT,"Ставка","Минимальная ставка: 500 вирт\nМаксимальняа ставка: 5000 вирт\nВведите сумму:","Играть","Закрыть"); }
			case 2,7,10: {
					if(strval(inputtext) < 2000 || strval(inputtext) > 20000 || pData[playerid][pCash] < strval(inputtext)) return ShowPlayerDialog(playerid,5576,DIALOG_STYLE_INPUT,"Ставка","Минимальная ставка: 2000 вирт\nМаксимальняа ставка: 20000 вирт\nВведите сумму:","Играть","Закрыть"); }
			case 3,8,11: {
					if(strval(inputtext) < 5000 || strval(inputtext) > 50000 || pData[playerid][pCash] < strval(inputtext)) return ShowPlayerDialog(playerid,5576,DIALOG_STYLE_INPUT,"Ставка","Минимальная ставка: 5000 вирт\nМаксимальняа ставка: 50000 вирт\nВведите сумму:","Играть","Закрыть"); }
			case 4,6,9: {
					if(strval(inputtext) < 10000 || strval(inputtext) > 100000 || pData[playerid][pCash] < strval(inputtext)) return ShowPlayerDialog(playerid,5576,DIALOG_STYLE_INPUT,"Ставка","Минимальная ставка: 10000 вирт\nМаксимальняа ставка: 100000 вирт\nВведите сумму:","Играть","Закрыть"); }
			}
			RouletBet[playerid] = strval(inputtext);
			GetCasinoNumber(playerid);
			pData[playerid][pCash]-=strval(inputtext);
			MoneyLog(pData[playerid][pName],"None", strval(inputtext), "(-)RouletBet");
			SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
			DestroyObject(RouletObject[playerid]);
			new obj = CreateObject(random(3) + 1930,GetPVarFloat(playerid,"RX"),GetPVarFloat(playerid,"RY"),GetPVarFloat(playerid,"RZ"),0.00,0.00,0.00);
			SetObjectPos(obj,GetPVarFloat(playerid,"RX"),GetPVarFloat(playerid,"RY"),GetPVarFloat(playerid,"RZ"));
			RouletObject[playerid] = obj;
			new str[40];
			if(GetPVarInt(playerid,"RNumber_") > 4)
			{
				switch(GetPVarInt(playerid,"RNumber"))
				{
				case 116, 118, 120: str = "3 to 1"; case 121: str = "1 st 12";
				case 122: str = "2 nd 12"; case 123: str = "3 rd 12";
				case 124: str = "1 to 18"; case 125: str = "Even";
				case 126: str = "Red"; case 127: str = "Black";
				case 128: str = "Odd"; case 129: str = "19 to 36";
				}
			}
			else GetPVarString(playerid,"RNumbers",str,sizeof(str));
			format(string,144,"~<~~>~~up~~down~~n~~g~Money: %i~n~~y~Bet: %s",RouletBet[playerid],str);
			return PlayerTextDrawSetString(playerid,RouletText[playerid],string);
		}
	case 5490:
		{
			if(!response) return true;
			if(RouletPlay[RouletStol[playerid]] == false) pData[playerid][pCash]+=RouletBet[playerid], SetAccountInfo(playerid, pData[playerid][pCash], "pCash"), MoneyLog(pData[playerid][pName],"None", RouletBet[playerid], "(+)ResetRouletBet");
			DestroyObject(RouletObject[playerid]);
			RouletBet[playerid] = 0;
			RouletStol[playerid] = 0;
			DeletePVar(playerid,"RX");
			DeletePVar(playerid,"RY");
			DeletePVar(playerid,"RZ");
			DeletePVar(playerid,"RXONE");
			DeletePVar(playerid,"RYONE");
			DeletePVar(playerid,"RZONE");
			DeletePVar(playerid,"RNumber");
			DeletePVar(playerid,"RNumbers");
			DeletePVar(playerid,"RNumber_");
			PlayerTextDrawHide(playerid,RouletText[playerid]);
			TogglePlayerControllable(playerid, true);
			SetCameraBehindPlayer(playerid);
			return true;
		}
	case 202:
		{
			if(!response) return true;
			if(SpecAd[playerid] != INVALID_PLAYER_ID) SpecID[SpecAd[playerid]] = 65535;
			SpecAd[playerid] = 65535;
			new mess[40];format(mess, sizeof(mess), "%s",inputtext);cmd_re(playerid, mess);
		}
	case 115:
		{
			if(response){new mess[40];format(mess, sizeof(mess), "%i %s",SpecAd[playerid],inputtext);cmd_kick(playerid, mess);}
		}
	case 101:
		{
			if(response){new mess[40];format(mess, sizeof(mess), "%i %s",SpecAd[playerid],inputtext);cmd_warn(playerid, mess);}
		}
	case 102:
		{
			if(response){new mess[40];format(mess, sizeof(mess), "%i %s",SpecAd[playerid],inputtext);cmd_ban(playerid, mess);}
		}
	case 116:
		{
			if(response){new mess[40];format(mess, sizeof(mess), "%i %s",SpecAd[playerid],inputtext);cmd_sban(playerid, mess);}
		}
	case 117:
		{
			if(response){new mess[40];format(mess, sizeof(mess), "%i %s",SpecAd[playerid],inputtext);cmd_iban(playerid, mess);}
		}

	case 50:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0: ShowPlayerDialog(playerid, 50+1, DIALOG_STYLE_LIST, "Бомжи", "230\n79\n78\n137\n200", "Выбрать", "Отмена");
			case 1: ShowPlayerDialog(playerid, 50+2, DIALOG_STYLE_LIST, "Полиция", "76\n280\n281\n282\n283\n284\n285\n288", "Выбрать", "Отмена");
			case 2: ShowPlayerDialog(playerid, 50+3, DIALOG_STYLE_LIST, "Армия", "191\n287", "Выбрать", "Отмена");
			case 3: ShowPlayerDialog(playerid, 50+4, DIALOG_STYLE_LIST, "Medic", "70\n219\n274\n275\n276", "Выбрать", "Отмена");
			case 4: ShowPlayerDialog(playerid, 50+5, DIALOG_STYLE_LIST, "Мэрия", "57\n98\n147\n187\n150", "Выбрать", "Отмена");
			case 5: ShowPlayerDialog(playerid, 50+6, DIALOG_STYLE_LIST, "Автошкола", "59\n172\n189\n240", "Выбрать", "Отмена");
			case 6: ShowPlayerDialog(playerid, 50+7, DIALOG_STYLE_LIST, "News", "211\n217\n250\n261", "Выбрать", "Отмена");
			case 7: ShowPlayerDialog(playerid, 50+8, DIALOG_STYLE_LIST, "LCN", "113\n124\n214\n223", "Выбрать", "Отмена");
			case 8: ShowPlayerDialog(playerid, 50+9, DIALOG_STYLE_LIST, "Yakuza", "120\n123\n169\n186", "Выбрать", "Отмена");
			case 9: ShowPlayerDialog(playerid, 50+10, DIALOG_STYLE_LIST, "Russian Mafia", "272\n112\n125\n214\n111", "Выбрать", "Отмена");
			case 10: ShowPlayerDialog(playerid, 50+11, DIALOG_STYLE_LIST, "Rifa", "173\n174\n175", "Выбрать", "Отмена");
			case 11: ShowPlayerDialog(playerid, 50+12, DIALOG_STYLE_LIST, "Grove street", "105\n106\n107\n269\n270\n271", "Выбрать", "Отмена");
			case 12: ShowPlayerDialog(playerid, 50+13, DIALOG_STYLE_LIST, "Ballas", "102\n103\n104", "Выбрать", "Отмена");
			case 13: ShowPlayerDialog(playerid, 50+14, DIALOG_STYLE_LIST, "Vagos", "108\n109\n110", "Выбрать", "Отмена");
			case 14: ShowPlayerDialog(playerid, 50+15, DIALOG_STYLE_LIST, "Aztec", "114\n115\n116\n226", "Выбрать", "Отмена");
			}
		}
	case 50+1:
		{
			if(!response) return true;
			SetPlayerArmour(SmenaSkina[playerid],float(0));
			switch(listitem)
			{
			case 0: SetPlayerSkin(SmenaSkina[playerid], 230);
			case 1: SetPlayerSkin(SmenaSkina[playerid], 79);
			case 2: SetPlayerSkin(SmenaSkina[playerid], 78);
			case 3: SetPlayerSkin(SmenaSkina[playerid], 137);
			case 4: SetPlayerSkin(SmenaSkina[playerid], 200);
			}
			return ShowPlayerDialog(playerid, 50+1, DIALOG_STYLE_LIST, "Бомжи", "230\n79\n78\n137\n200", "Сменить", "Готово");
		}
	case 50+2:
		{
			if(!response) return true;
			SetPlayerArmour(SmenaSkina[playerid],float(0));
			switch(listitem)
			{
			case 0: SetPlayerSkin(SmenaSkina[playerid], 76);
			case 1: SetPlayerSkin(SmenaSkina[playerid], 280);
			case 2: SetPlayerSkin(SmenaSkina[playerid], 281);
			case 3: SetPlayerSkin(SmenaSkina[playerid], 282);
			case 4: SetPlayerSkin(SmenaSkina[playerid], 283);
			case 5: SetPlayerSkin(SmenaSkina[playerid], 284);
			case 6: SetPlayerSkin(SmenaSkina[playerid], 285);
			case 7: SetPlayerSkin(SmenaSkina[playerid], 288);
			}
			return ShowPlayerDialog(playerid, 50+2, DIALOG_STYLE_LIST, "Полиция", "76\n280\n281\n282\n283\n284\n285\n288", "Сменить", "Готово");
		}
	case 50+3:
		{
			if(!response) return true;
			SetPlayerArmour(SmenaSkina[playerid],float(0));
			switch(listitem)
			{
			case 0: SetPlayerSkin(SmenaSkina[playerid], 191);
			case 1: SetPlayerSkin(SmenaSkina[playerid], 287);
			}
			return ShowPlayerDialog(playerid, 50+3, DIALOG_STYLE_LIST, "Армия", "191\n287", "Сменить", "Готово");
		}
	case 50+4:
		{
			if(!response) return true;
			SetPlayerArmour(SmenaSkina[playerid],float(0));
			switch(listitem)
			{
			case 0: SetPlayerSkin(SmenaSkina[playerid], 70);
			case 1: SetPlayerSkin(SmenaSkina[playerid], 219);
			case 2: SetPlayerSkin(SmenaSkina[playerid], 274);
			case 3: SetPlayerSkin(SmenaSkina[playerid], 275);
			case 4: SetPlayerSkin(SmenaSkina[playerid], 276);
			}
			return ShowPlayerDialog(playerid, 50+4, DIALOG_STYLE_LIST, "МЧС", "70\n219\n274\n275\n276", "Сменить", "Готово");
		}
	case 50+5:
		{
			if(!response) return true;
			SetPlayerArmour(SmenaSkina[playerid],float(0));
			switch(listitem)
			{
			case 0: SetPlayerSkin(SmenaSkina[playerid], 57);
			case 1: SetPlayerSkin(SmenaSkina[playerid], 98);
			case 2: SetPlayerSkin(SmenaSkina[playerid], 147);
			case 3: SetPlayerSkin(SmenaSkina[playerid], 187);
			case 4: SetPlayerSkin(SmenaSkina[playerid], 150);
			}
			return ShowPlayerDialog(playerid, 50+5, DIALOG_STYLE_LIST, "Мэрия", "57\n98\n147\n187\n150", "Сменить", "Готово");
		}
	case 50+6:
		{
			if(!response) return true;
			SetPlayerArmour(SmenaSkina[playerid],float(0));
			switch(listitem)
			{
			case 0: SetPlayerSkin(SmenaSkina[playerid], 59);
			case 1: SetPlayerSkin(SmenaSkina[playerid], 172);
			case 2: SetPlayerSkin(SmenaSkina[playerid], 189);
			case 3: SetPlayerSkin(SmenaSkina[playerid], 240);
			}
			return ShowPlayerDialog(playerid, 50+6, DIALOG_STYLE_LIST, "Автошкола", "59\n172\n189\n240", "Сменить", "Готово");
		}
	case 50+7:
		{
			if(!response) return true;
			SetPlayerArmour(SmenaSkina[playerid],float(0));
			switch(listitem)
			{
			case 0: SetPlayerSkin(SmenaSkina[playerid], 211);
			case 1: SetPlayerSkin(SmenaSkina[playerid], 217);
			case 2: SetPlayerSkin(SmenaSkina[playerid], 250);
			case 3: SetPlayerSkin(SmenaSkina[playerid], 261);
			}
			return ShowPlayerDialog(playerid, 50+7, DIALOG_STYLE_LIST, "News", "211\n217\n250\n261", "Сменить", "Готово");
		}
	case 50+8:
		{
			if(!response) return true;
			SetPlayerArmour(SmenaSkina[playerid],float(0));
			switch(listitem)
			{
			case 0: SetPlayerSkin(SmenaSkina[playerid], 113);
			case 1: SetPlayerSkin(SmenaSkina[playerid], 124);
			case 2: SetPlayerSkin(SmenaSkina[playerid], 214);
			case 3: SetPlayerSkin(SmenaSkina[playerid], 223);
			}
			return ShowPlayerDialog(playerid, 50+8, DIALOG_STYLE_LIST, "LCN", "113\n124\n214\n223", "Сменить", "Готово");
		}
	case 50+9:
		{
			if(!response) return true;
			SetPlayerArmour(SmenaSkina[playerid],float(0));
			switch(listitem)
			{
			case 0: SetPlayerSkin(SmenaSkina[playerid], 120);
			case 1: SetPlayerSkin(SmenaSkina[playerid], 123);
			case 2: SetPlayerSkin(SmenaSkina[playerid], 169);
			case 3: SetPlayerSkin(SmenaSkina[playerid], 186);
			}
			return ShowPlayerDialog(playerid, 50+9, DIALOG_STYLE_LIST, "Yakuza", "120\n123\n169\n186", "Сменить", "Готово");
		}
	case 50+10:
		{
			if(!response) return true;
			SetPlayerArmour(SmenaSkina[playerid],float(0));
			switch(listitem)
			{
			case 0: SetPlayerSkin(SmenaSkina[playerid], 272);
			case 1: SetPlayerSkin(SmenaSkina[playerid], 112);
			case 2: SetPlayerSkin(SmenaSkina[playerid], 125);
			case 3: SetPlayerSkin(SmenaSkina[playerid], 214);
			case 4: SetPlayerSkin(SmenaSkina[playerid], 111);
			}
			return ShowPlayerDialog(playerid, 50+10, DIALOG_STYLE_LIST, "Russian Mafia", "272\n112\n125\n214\n111", "Сменить", "Готово");
		}
	case 50+11:
		{
			if(!response) return true;
			SetPlayerArmour(SmenaSkina[playerid],float(0));
			switch(listitem)
			{
			case 0: SetPlayerSkin(SmenaSkina[playerid], 173);
			case 1: SetPlayerSkin(SmenaSkina[playerid], 174);
			case 2: SetPlayerSkin(SmenaSkina[playerid], 175);
			}
			return ShowPlayerDialog(playerid, 50+11, DIALOG_STYLE_LIST, "Rifa", "173\n174\n175", "Сменить", "Готово");
		}
	case 50+12:
		{
			if(!response) return true;
			SetPlayerArmour(SmenaSkina[playerid],float(0));
			switch(listitem)
			{
			case 0: SetPlayerSkin(SmenaSkina[playerid], 105);
			case 1: SetPlayerSkin(SmenaSkina[playerid], 106);
			case 2: SetPlayerSkin(SmenaSkina[playerid], 107);
			case 3: SetPlayerSkin(SmenaSkina[playerid], 269);
			case 4: SetPlayerSkin(SmenaSkina[playerid], 270);
			case 5: SetPlayerSkin(SmenaSkina[playerid], 271);
			}
			return ShowPlayerDialog(playerid, 50+12, DIALOG_STYLE_LIST, "Grove street", "105\n106\n107\n269\n270\n271", "Сменить", "Готово");
		}
	case 50+13:
		{
			if(!response) return true;
			SetPlayerArmour(SmenaSkina[playerid],float(0));
			switch(listitem)
			{
			case 0: SetPlayerSkin(SmenaSkina[playerid], 102);
			case 1: SetPlayerSkin(SmenaSkina[playerid], 103);
			case 2: SetPlayerSkin(SmenaSkina[playerid], 104);
			}
			return ShowPlayerDialog(playerid, 50+13, DIALOG_STYLE_LIST, "Ballas", "102\n103\n104", "Сменить", "Готово");
		}
	case 50+14:
		{
			if(!response) return true;
			SetPlayerArmour(SmenaSkina[playerid],float(0));
			switch(listitem)
			{
			case 0: SetPlayerSkin(SmenaSkina[playerid], 108);
			case 1: SetPlayerSkin(SmenaSkina[playerid], 109);
			case 2: SetPlayerSkin(SmenaSkina[playerid], 110);
			}
			return ShowPlayerDialog(playerid, 50+14, DIALOG_STYLE_LIST, "Vagos", "108\n109\n110", "Сменить", "Готово");
		}
	case 50+15:
		{
			if(!response) return true;
			SetPlayerArmour(SmenaSkina[playerid],float(0));
			switch(listitem)
			{
			case 0: SetPlayerSkin(SmenaSkina[playerid], 114);
			case 1: SetPlayerSkin(SmenaSkina[playerid], 115);
			case 2: SetPlayerSkin(SmenaSkina[playerid], 116);
			case 3: SetPlayerSkin(SmenaSkina[playerid], 226);
			}
			return ShowPlayerDialog(playerid, 50+15, DIALOG_STYLE_LIST, "Aztec", "114\n115\n116\n226", "Выбрать", "Отмена");
		}
	case 14009:
		{
			new x;
			switch(GetPVarInt(playerid,"AutoShop"))
			{
			case 3,4: x = 2;
			}
			if(response) SetPVarInt(playerid,"CarShop",x+1);
			else SetPVarInt(playerid,"CarShop",x+2);
			ShowBuyCar(playerid);
		}
	case 14010:
		{
			if(!response) return true;
			new soodsa = ShopCar[GetPVarInt(playerid, "SelectAvto")][1]-ShopCar[GetPVarInt(playerid, "SelectAvto")][1]*20/100;
			if(pData[playerid][pBank] < ShopCar[GetPVarInt(playerid, "SelectAvto")][1] && booston == 0) return SCM(playerid,COLOR_WHITE," На вашем банковском счету недостаточно денег!");
			else if(pData[playerid][pBank] < soodsa && booston > 0) return SCM(playerid,COLOR_WHITE," На вашем банковском счету недостаточно денег!");
			CarInfo[playerid][carModel][GetPVarInt(playerid,"chosencar")] = ShopCar[GetPVarInt(playerid, "SelectAvto")][0];
			CarInfo[playerid][carColor_one][GetPVarInt(playerid,"chosencar")] = GetPVarInt(playerid,"BuyColor");
			CarInfo[playerid][carColor_two][GetPVarInt(playerid,"chosencar")] = GetPVarInt(playerid,"BuyColor1");
			if(booston == 0) pData[playerid][pBank] -= ShopCar[GetPVarInt(playerid, "SelectAvto")][1],MoneyLog(pData[playerid][pName],"None", ShopCar[GetPVarInt(playerid, "SelectAvto")][1], "(-)BuyCarAutoSaloon");
			else pData[playerid][pBank] -= ShopCar[GetPVarInt(playerid, "SelectAvto")][1]-ShopCar[GetPVarInt(playerid, "SelectAvto")][1]*20/100,MoneyLog(pData[playerid][pName],"None", ShopCar[GetPVarInt(playerid, "SelectAvto")][1]-ShopCar[GetPVarInt(playerid, "SelectAvto")][1]*20/100, "(-)BuyCarAutoSaloon");
			SetAccountInfo(playerid, pData[playerid][pBank], "pBank");
			CarInfo[playerid][carPercent][GetPVarInt(playerid,"chosencar")] = 100;
			CarInfo[playerid][carFuel][GetPVarInt(playerid,"chosencar")] = 200;
			SaveMySQL(10,playerid);

			ExitCar(playerid);
			SCM(playerid,COLOR_GREEN, " Вы приобрели автомобиль. Вам нужно подождать 24 часа/либо (( /fixcar )) заплатить");
			SetPVarInt(playerid, !#_buyCar, 0xFF);
		}
	case 14012:
		{
			if(!response) return GameTextForPlayer(playerid, string, 2000, 3), ShowMenuForPlayer(BuyClothes[0], playerid);//Выводим меню дальше
			if(pData[playerid][pSex] == 0)//Если мужик то...
			{
				switch(booston)
				{
				case 0:
					{
						if(pData[playerid][pBank] < SkinMen[ChangeSkin[playerid]][1])
						{
							SCM(playerid,COLOR_GREY," Недостаточно денег на банковском счету");//Пишем грустное сообщение
							ShowMenuForPlayer(BuyClothes[0], playerid);//Возвращаем меню, вдруг захочет что-то подешевле....
							return true;
						}
						pData[playerid][pBank]-= SkinMen[ChangeSkin[playerid]][1];
						pData[playerid][pChar][0] = SkinMen[ChangeSkin[playerid]][0];
						format(YCMDstr, 12, "~r~-$%i",SkinMen[ChangeSkin[playerid]][1]);
						SetAccountInfo(playerid, pData[playerid][pBank], "pBank");
						GameTextForPlayer(playerid, YCMDstr, 2000, 1);
					}
				default:
					{
						if(pData[playerid][pBank] < SkinMen[ChangeSkin[playerid]][1]-SkinMen[ChangeSkin[playerid]][1]*20/100)
						{
							SCM(playerid,COLOR_GREY," Недостаточно денег на банковском счету");//Пишем грустное сообщение
							ShowMenuForPlayer(BuyClothes[0], playerid);//Возвращаем меню, вдруг захочет что-то подешевле....
							return true;
						}
						pData[playerid][pBank]-= SkinMen[ChangeSkin[playerid]][1]-SkinMen[ChangeSkin[playerid]][1]*20/100;
						pData[playerid][pChar][0] = SkinMen[ChangeSkin[playerid]][0];
						format(YCMDstr, 12, "~r~-$%i",SkinMen[ChangeSkin[playerid]][1]-SkinMen[ChangeSkin[playerid]][1]*20/100);
						SetAccountInfo(playerid, pData[playerid][pBank], "pBank");
						GameTextForPlayer(playerid, YCMDstr, 2000, 1);
					}
				}
			}
			else//Если девушка то...
			{
				switch(booston)
				{
				case 0:
					{
						if(pData[playerid][pBank] < SkinMale[ChangeSkin[playerid]][1])
						{
							SCM(playerid,COLOR_GREY," Недостаточно денег на банковском счету");//Пишем грустное сообщение
							ShowMenuForPlayer(BuyClothes[0], playerid);//Возвращаем меню, вдруг захочет что-то подешевле....
							return true;
						}
						pData[playerid][pBank]-= SkinMale[ChangeSkin[playerid]][1];
						pData[playerid][pChar][0] = SkinMale[ChangeSkin[playerid]][0];
						format(YCMDstr, 12, "~r~-$%i",SkinMale[ChangeSkin[playerid]][1]);
						SetAccountInfo(playerid, pData[playerid][pBank], "pBank");
						GameTextForPlayer(playerid, YCMDstr, 2000, 1);
					}
				default:
					{
						if(pData[playerid][pBank] < SkinMale[ChangeSkin[playerid]][1]-SkinMale[ChangeSkin[playerid]][1]*20/100)
						{
							SCM(playerid,COLOR_GREY," Недостаточно денег на банковском счету");//Пишем грустное сообщение
							ShowMenuForPlayer(BuyClothes[0], playerid);//Возвращаем меню, вдруг захочет что-то подешевле....
							return true;
						}
						pData[playerid][pBank]-= SkinMale[ChangeSkin[playerid]][1]-SkinMale[ChangeSkin[playerid]][1]*20/100;
						pData[playerid][pChar][0] = SkinMale[ChangeSkin[playerid]][0];
						format(YCMDstr, 12, "~r~-$%i",SkinMale[ChangeSkin[playerid]][1]-SkinMale[ChangeSkin[playerid]][1]*20/100);
						SetAccountInfo(playerid, pData[playerid][pBank], "pBank");
						GameTextForPlayer(playerid, YCMDstr, 2000, 1);
					}
				}
			}
			switch(zips[playerid])
			{
			case false: SetPlayerVirtualWorld(playerid, 2);
			case true: SetPlayerVirtualWorld(playerid, 1);
			}
			pData[playerid][pChar][0] = GetPlayerSkin(playerid);// При выходе
			TogglePlayerControllable(playerid, 1);//Размораживаем
			SetPlayerPos(playerid,221.7944,-8.4229,1002.2109);//тпкаем обратно в амгаз
			SetPlayerFacingAngle(playerid,273.5792);//Bla bla
			SetPlayerInterior(playerid,5);//Даём инт. магазина
			SetCameraBehindPlayer(playerid);//Включаем управление камерой
			//SetAccountInfo(playerid, pData[playerid][pChar][0], "pChar");
			if(pData[playerid][pQuestL] == 1 && pData[playerid][pQuest] == 4) CheckQuest(playerid); // Чек прохождения квеста
		}
	case 14011:
		{
			if(response) ExitCar(playerid);
		}
	case 11228:
		{
			PlayerPlaySound(playerid, 4201, 0.0, 0.0, 0);
			ShowPlayerDialog(playerid,11229,DIALOG_STYLE_MSGBOX,"Задание","Привет.Для начала я представлюсь.Меня зовут Джанк,и я помогу тебе освоиться в этом городе и найти работу\nВ порту требуются грузчики - это отличный способ заработать для сдачи на водительские права.\nЕсли справишься с задачей,то через некоторое время я напишу тебе снова.\nУ меня будут дела посложнее,но и награда будет соответствующая.\n{DDCD70}Задача: Перетащить 15 мешков\n{17B757}Награда: 1000 вирт"
			,"Готово","");
			SCM(playerid,COLOR_YELLOW," Используйте команду /quest, чтобы повторно посмотреть текущий квест");
		//	SCM(playerid,COLOR_WHITE," {108491}Задание выполнено");
			pData[playerid][pQuestL] = 1;
			SetAccountInfo(playerid, pData[playerid][pQuestL], "pQuestL");
			pData[playerid][pQuest] = 1;
			SetAccountInfo(playerid, pData[playerid][pQuest], "pQuest");
			pData[playerid][pQuestP] = 0;
			SetAccountInfo(playerid, pData[playerid][pQuestP], "pQuestP");
			pData[playerid][pQuestF] = 5;
			SetAccountInfo(playerid, pData[playerid][pQuestF], "pQuestF");
			pData[playerid][pQuestPF] = 15;
			SetAccountInfo(playerid, pData[playerid][pQuestPF], "pQuestPF");
			pData[playerid][pQuestShow] = 1;
			SetAccountInfo(playerid, pData[playerid][pQuestShow], "pQuestShow");
			return 1;
		}
	case 1343:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					switch(pData[playerid][pQuestL])
					{
					case 0: SCM(playerid,COLOR_GREY," Сюжетная линия гость уже пройдена");
					case 1:
						{
							if(pData[playerid][pQuest] == 1) {ShowPlayerDialog(playerid,11229,DIALOG_STYLE_MSGBOX,"Задание","Привет.Для начала я представлюсь.Меня зовут Джанк,и я помогу тебе освоиться в этом городе и найти работу\nВ порту требуются грузчики - это отличный способ заработать для сдачи на водительские права.\nЕсли справишься с задачей,то через некоторое время я напишу тебе снова.\nУ меня будут дела посложнее,но и награда будет соответствующая.\n{DDCD70}Задача: Претащить 15 мешков\n{17B757}Награда: 1000 вирт"
								,"Готово",""); }
							else if(pData[playerid][pQuest] == 2) {	ShowPlayerDialog(playerid,11230,DIALOG_STYLE_MSGBOX,"Задание","Это снова Джанк,вижу тебе нужны права.\nУ меня есть знакомые в Автошколе,они помогут тебе сдать совершенно бесплатно.\nЧтобы добраться до Автошколы,воспользуйся Автобусом или Такси.\n{DDCD70}Задача: Пройдите автосдачу на права(Не покупая права у инструктора!)\n{17B757}Награда: Бесплатная сдача на права"
								,"Готово",""); }
							else if(pData[playerid][pQuest] == 3) {	ShowPlayerDialog(playerid,13372,DIALOG_STYLE_MSGBOX,"Задание","Тут неподалёку есть ферма,где можно неплохо заработать.\nМожешь использовать gps или найти таксиста и попросить его отвезти тебя.\nЕсли ты сможешь за раз собрать 30 кустов урожая,то я поделюсь с тобой своей прибылью\n{DDCD70}Задача: Собрать 30 единиц урожая\n{17B757}Награда: 2000 вирт"
								,"Готово",""); }
							else if(pData[playerid][pQuest] == 4) {	ShowPlayerDialog(playerid,13374,DIALOG_STYLE_MSGBOX,"Задание","Теперь у тебя есть права и деньги. Пора бы приодеться\nВ каждом городе есть магазин одежды. Доедь до него и купи что-нибудь приличное.\nИ не забывай использовать gps\n{DDCD70}Задача: Купить любой скин\n{17B757}Награда: 1000 вирт"
								,"Готово",""); }
							else if(pData[playerid][pQuest] == 5) {	ShowPlayerDialog(playerid,13375,DIALOG_STYLE_MSGBOX,"Задание","Теперь ты можешь поехать в Мэрию и получить там паспорт\n{DDCD70}Задача: Войти в мэрию\n{17B757}Награда: 2 уровень,4000 вирт"
								,"Готово",""); }
						}
					}
				}
			case 1: SCM(playerid,COLOR_GREY," На разработке");
			case 2: QuestStats(playerid,playerid);
			case 3: ShowPlayerDialog(playerid, 1443, DIALOG_STYLE_INPUT, "Ввод ид","Введите ID игрока,\nчью статистику вы хотите посмотреть.\n Игрок должен быть онлайн!","Далее","Назад");
			}
		}
	case 1443:
		{
			if(!response) return ShowPlayerDialog(playerid,1343,DIALOG_STYLE_LIST, "Управление квестами","Текущий квест\nВыбор сюжетной линии [Временно не работает]\nСтатистика\nЧужая статистика", "Далее", "Выход");
			if(IsPlayerConnected(strval(inputtext))) { QuestStats(playerid,strval(inputtext));}
			else SCM(playerid,COLOR_GREY," Игрок не найден"),ShowPlayerDialog(playerid, 1443, DIALOG_STYLE_INPUT, "Ввод ид","Введите ID игрока,\nчью статистику вы хотите посмотреть.\n Игрок должен быть онлайн!","Далее","Назад");
		}
	case 1342:
		{
			if(!response) return ShowPlayerDialog(playerid, 10411, DIALOG_STYLE_LIST, "MainMenu", MainMenuMode, "Выбрать", "Назад");
			//ShowPlayerDialog(playerid,1342,DIALOG_STYLE_LIST, "Рыбалка","Начать / Закончить рыбалку\nНакопать червей\nПриготовить рыбу\nСъесть рыбу\nИнформация\nПомощь", "Выбор", "Выход");
			switch(listitem)
			{
			case 0:
				{
					if(!IsAtFishPlace(playerid)) return SCM(playerid,0x81DA99AA,"  Вы должны находиться возле причала");
					if(!GetPVarInt(playerid,"fish_began"))
					{
						if(!GetPVarInt(playerid,"fish_rod")) return SCM(playerid,0x81DA99AA," У вас нет удочки");
						if(!GetPVarInt(playerid,"fish_gear")) return SCM(playerid,0x81DA99AA," У вас нет снастей");
						if(!GetPVarInt(playerid,"fish_worms")) return SCM(playerid,0x81DA99AA," У вас нет червей");
						UpdateFish(playerid);
						PlayerTextDrawShow(playerid,FishingText[playerid]);
						SetPlayerAttachedObject(playerid, 0,18632,6,0.079376,0.037070,0.007706,181.482910,0.000000,0.000000,1.000000,1.000000,1.000000);
						SetPVarInt(playerid,"fish_began",1);
						DeletePVar(playerid,"fish_time");
						DeletePVar(playerid,"fish_ready");
					}
					else
					{
						//if(ribachit[playerid] == 1) return SCM(playerid,0x81DA99AA," В данный момент нельзя завершить рыбалку");
						RemovePlayerAttachedObject(playerid,0);
						DeletePVar(playerid,"fish_began");
						DeletePVar(playerid,"fish_ready");
						DeletePVar(playerid,"fish_time");
						ClearAnim(playerid);
						PlayerTextDrawHide(playerid,FishingText[playerid]);
					}
				}
			case 1:
				{
					if(!IsAtWormPlace(playerid)) return SCM(playerid,0x81DA99AA," Неудачное место для поиска");
					if(random(2) == 1) ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 6.1, 0, 0, 0, 0, 0,1),  SetPVarInt(playerid,"fish_worms",GetPVarInt(playerid,"fish_worms")+10), SCM(playerid,0x81DA99AA,"Вы нашли 10 червей!"), ShowPlayerDialog(playerid,1342,DIALOG_STYLE_LIST, "Рыбалка","Начать / Закончить рыбалку\nНакопать червей\nПриготовить рыбу\nСъесть рыбу\nПродать рыбу\nИнформация\nПомощь", "Выбор", "Выход");
					else return ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 6.1, 0, 0, 0, 0, 0,1), SCM(playerid,0x81DA99AA,"Вы ничего не нашли"), ShowPlayerDialog(playerid,1342,DIALOG_STYLE_LIST, "Рыбалка","Начать / Закончить рыбалку\nНакопать червей\nПриготовить рыбу\nСъесть рыбу\nПродать рыбу\nИнформация\nПомощь", "Выбор", "Выход");
				}
			case 2:
				{
					if(pData[playerid][pFishesPach] >= 25) return SCM(playerid,0x81DA99AA,"У вас 25 / 25 пачек рыбы");
					if(pData[playerid][pFishes] < 20) return SCM(playerid,0x81DA99AA," Для создания требуется 20 кг. рыбы");
					pData[playerid][pFishesPach]++;
					SetAccountInfo(playerid, pData[playerid][pFishesPach], "pFishesPach");
					pData[playerid][pFishes]-=float(20);
					SendMes(playerid,0x81DA99AA,"Вы приготовили рыбу. У вас %i / 25 пачек.",pData[playerid][pFishesPach]);
					ShowPlayerDialog(playerid,1342,DIALOG_STYLE_LIST, "Рыбалка","Начать / Закончить рыбалку\nНакопать червей\nПриготовить рыбу\nСъесть рыбу\nПродать рыбу\nИнформация\nПомощь", "Выбор", "Выход");
				}
			case 3:
				{
					if(pData[playerid][pFishesPach] < 1) return SCM(playerid,0x81DA99AA,"Недостаточно рыбы");
					pData[playerid][pFishesPach]--;
					SetAccountInfo(playerid, pData[playerid][pFishesPach], "pFishesPach");
					UpdatePlayerHunger(playerid, 100);
					SendMes(playerid,0x81DA99AA,"«Сытость» пополнена до 100. У вас %i / 25 пачек.",pData[playerid][pFishesPach]);
					ShowPlayerDialog(playerid,1342,DIALOG_STYLE_LIST, "Рыбалка","Начать / Закончить рыбалку\nНакопать червей\nПриготовить рыбу\nСъесть рыбу\nПродать рыбу\nИнформация\nПомощь", "Выбор", "Выход");
				}
			case 4:
				{
					for(new i = 1; i <= TotalBizz; i++)
					{
						if(pData[playerid][pFishes] < 2) return SCM(playerid,0x81DA99AA," Недостаточно рыбы");
						if (PlayerToPoint(10, playerid,BizzInfo[i][bBarX], BizzInfo[i][bBarY], BizzInfo[i][bBarZ]) && BizzInfo[i][bType] == 2 && GetPlayerVirtualWorld(playerid) == BizzInfo[i][bVirtualWorld])
						{
							pData[playerid][pCash] +=floatround(pData[playerid][pFishes])*5;
							SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
							if(BizzInfo[i][bProducts]+floatround(pData[playerid][pFishes]) < 2000) BizzInfo[i][bProducts]+=floatround(pData[playerid][pFishes]);
							else BizzInfo[i][bProducts]=2000;
							format(cString,64, " Вы продали %.2f кг. рыбы. Выручка: %i вирт",pData[playerid][pFishes],floatround(pData[playerid][pFishes]));
							SCM(playerid,0x81DA99AA,cString);
							pData[playerid][pFishes] = 0;
							SaveMySQL(4,i);
							ShowPlayerDialog(playerid,1342,DIALOG_STYLE_LIST, "Рыбалка","Начать / Закончить рыбалку\nНакопать червей\nПриготовить рыбу\nСъесть рыбу\nПродать рыбу\nИнформация\nПомощь", "Выбор", "Выход");
							break;
						}
					}
				}
			case 5:
				{
					format(string,464,"============== Готовность ==============\n\
									\nУдочка:\t- %s\
									\nСнастей:\t- %i шт.\
									\nЧервей:\t- %i шт.\n\n\
									============== Информация ==============\n\n\
									Пачек рыбы приготовлено:\t- %i шт.\
									\nРыбы поймано:\t- %.2f кг.\
									\n\n============== Сонар ==============\n\n\
									Сонар:\t- %s",(!GetPVarInt(playerid,"fish_rod"))?("Нету") : ("Есть"),GetPVarInt(playerid,"fish_gear"),GetPVarInt(playerid,"fish_worms"),
					pData[playerid][pFishesPach],pData[playerid][pFishes],(!GetPVarInt(playerid,"fish_sonar"))?("Нету") : ("Есть"));
					ShowPlayerDialog(playerid,10349,DIALOG_STYLE_MSGBOX, "Информация",string, "Скрыть", "");
				}
			case 6: ShowPlayerDialog(playerid,10349,DIALOG_STYLE_MSGBOX, "Помощь по рыбалке","ШАГ 1: Купите удочку и всё необходимое в магазине 24/7\nШАГ 2: Ищите рыбные места для рыбалки\nШАГ 3: Оснастите удочку и наживите червя\nШАГ 4: Подсекайте рыбу клавишей L.ALT", "Скрыть", "");
			}
		}
	case 7925:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					if(pData[playerid][pCash] < 500) return SCM(playerid,-1,"  Недостаточно денег");
					ShowPlayerDialog(playerid, 7927, 1, "Патроны", "Введите количество патронов\nкоторые будут в комплекте с оружием.", "Купить", "отмена");
					return true;
				}
			case 1:
				{
					if(pData[playerid][pCash] < 300) return SCM(playerid,-1,"  Недостаточно денег");
					ShowPlayerDialog(playerid, 7928, 1, "Патроны", "Введите количество патронов\nкоторые будут в комплекте с оружием.", "Купить", "отмена");
					return true;
				}
			case 2:
				{
					if(pData[playerid][pCash] < 750) return SCM(playerid,-1,"  Недостаточно денег");
					ShowPlayerDialog(playerid, 7929, 1, "Патроны", "Введите количество патронов\nкоторые будут в комплекте с оружием.", "Купить", "отмена");
					return true;
				}
			case 3:
				{
					if(pData[playerid][pCash] < 500) return SCM(playerid,-1,"  Недостаточно денег");
					ShowPlayerDialog(playerid, 7930, 1, "Патроны", "Введите количество патронов\nкоторые будут в комплекте с оружием.", "Купить", "отмена");
					return true;
				}
			case 4:
				{
					if(pData[playerid][pCash] < 250) return SCM(playerid,-1,"  Недостаточно денег");
					ShowPlayerDialog(playerid, 7931, 1, "Патроны", "Введите количество патронов\nкоторые будут в комплекте с оружием.", "Купить", "отмена");
					return true;
				}
			case 5:
				{
					if(pData[playerid][pCash] < 500) return SCM(playerid,-1,"  Недостаточно денег");
					ShowPlayerDialog(playerid, 7932, 1, "Патроны", "Введите количество патронов\nкоторые будут в комплекте с оружием.", "Купить", "отмена");
					return true;
				}
			case 6:
				{
					if(pData[playerid][pCash] < 500) return SCM(playerid,-1,"  Недостаточно денег");
					ShowPlayerDialog(playerid, 7933, 1, "Патроны", "Введите количество патронов\nкоторые будут в комплекте с оружием.", "Купить", "отмена");
					return true;
				}
			case 7:
				{
					if(pData[playerid][pCash] < 1000) return SCM(playerid,-1,"  Недостаточно денег");
					ShowPlayerDialog(playerid, 7934, 1, "Патроны", "Введите количество патронов\nкоторые будут в комплекте с оружием.", "Купить", "отмена");
					return true;
				}
			case 8:
				{
					if(pData[playerid][pCash] < 1200) return SCM(playerid,-1," Недостаточно денег");
					pData[playerid][pCash]-= 1200; // Отнимаем деньги
					SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
					switch(booston)
					{
					case 0:GivePlayerWeaponEx(playerid,2,1); // Выдаём патроны/оружие
					default:GivePlayerWeaponEx(playerid,2,1*3); // Выдаём патроны/оружие
					}
					format(string,32,"Спасибо за покупку. $%i",1*1200);
					SCM(playerid,0x29FF00AA,string);
					ShowPlayerDialog(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
					return true;
				}
			case 9:
				{
					if(pData[playerid][pCash] < 1000) return SCM(playerid,-1," Недостаточно денег");
					pData[playerid][pCash]-= 1000; // Отнимаем деньги
					SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
					switch(booston)
					{
					case 0:GivePlayerWeaponEx(playerid,5,1); // Выдаём патроны/оружие
					default:GivePlayerWeaponEx(playerid,5,1*3); // Выдаём патроны/оружие
					}
					format(string,32,"Спасибо за покупку. $%i",1*1000); // Форматируем сообщение
					SCM(playerid,0x29FF00AA,string);
					ShowPlayerDialog(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
					return true;
				}
			case 10:
				{
					if(pData[playerid][pCash] < 1200) return SCM(playerid,-1," Недостаточно денег");
					pData[playerid][pCash]-= 1200; // Отнимаем деньги
					SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
					switch(booston)
					{
					case 0:GivePlayerWeaponEx(playerid,6,1); // Выдаём патроны/оружие
					default:GivePlayerWeaponEx(playerid,6,1*3); // Выдаём патроны/оружие
					}
					format(string,32,"Спасибо за покупку. $%i",1*1200); // Форматируем сообщение
					SCM(playerid,0x29FF00AA,string);
					ShowPlayerDialog(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
					return true;
				}
			case 11:
				{
					if(pData[playerid][pCash] < 1300) return SCM(playerid,-1," Недостаточно денег");
					pData[playerid][pCash]-= 1300; // Отнимаем деньги
					SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
					switch(booston)
					{
					case 0:GivePlayerWeaponEx(playerid,7,1); // Выдаём патроны/оружие
					default:GivePlayerWeaponEx(playerid,7,1*3); // Выдаём патроны/оружие
					}
					format(string,32,"Спасибо за покупку. $%i",1*1300); // Форматируем сообщение
					SCM(playerid,0x29FF00AA,string);
					ShowPlayerDialog(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
					return true;
				}
			case 12:
				{
					if(pData[playerid][pCash] < 2500) return SCM(playerid,-1," Недостаточно денег");
					pData[playerid][pCash]-= 2500; // Отнимаем деньги
					SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
					switch(booston)
					{
					case 0:GivePlayerWeaponEx(playerid,8,1); // Выдаём патроны/оружие
					default:GivePlayerWeaponEx(playerid,8,1*3); // Выдаём патроны/оружие
					}
					format(string,32,"Спасибо за покупку. $%i",1*2500); // Форматируем сообщение
					SCM(playerid,0x29FF00AA,string);
					ShowPlayerDialog(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
					return true;
				}
			case 13:
				{
					if(pData[playerid][pCash] < 1500) return SCM(playerid,-1," Недостаточно денег");
					pData[playerid][pCash]-= 1500; // Отнимаем деньги
					SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
					switch(booston)
					{
					case 0:GivePlayerWeaponEx(playerid,10,1); // Выдаём патроны/оружие
					default:GivePlayerWeaponEx(playerid,10,1*3); // Выдаём патроны/оружие
					}
					format(string,32,"Спасибо за покупку. $%i",1*1500); // Форматируем сообщение
					SCM(playerid,0x29FF00AA,string);
					ShowPlayerDialog(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
					return true;
				}
			case 14:
				{
					if(pData[playerid][pCash] < 3000) return SCM(playerid,-1," Недостаточно денег");
					pData[playerid][pCash]-= 3000; // Отнимаем деньги
					SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
					switch(booston)
					{
					case 0:GivePlayerWeaponEx(playerid,14,1); // Выдаём патроны/оружие
					default:GivePlayerWeaponEx(playerid,14,1*3); // Выдаём патроны/оружие
					}
					format(string,32,"Спасибо за покупку. $%i",1*3000); // Форматируем сообщение
					SCM(playerid,0x29FF00AA,string);
					ShowPlayerDialog(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
					return true;
				}
			case 15:
				{
					if(pData[playerid][pCash] < 1300) return SCM(playerid,-1," Недостаточно денег");
					pData[playerid][pCash]-= 1300; // Отнимаем деньги
					SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
					switch(booston)
					{
					case 0:GivePlayerWeaponEx(playerid,15,1); // Выдаём патроны/оружие
					default:GivePlayerWeaponEx(playerid,15,1*3); // Выдаём патроны/оружие
					}
					format(string,32,"Спасибо за покупку. $%i",1*1300); // Форматируем сообщение
					SCM(playerid,0x29FF00AA,string);
					ShowPlayerDialog(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
					return true;
				}
			case 16:
				{
					if(pData[playerid][pCash] < 1000) return SCM(playerid,-1," Недостаточно денег");
					pData[playerid][pCash]-= 1000; // Отнимаем деньги
					SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
					switch(booston)
					{
					case 0:GivePlayerWeaponEx(playerid,46,1); // Выдаём патроны/оружие
					default:GivePlayerWeaponEx(playerid,46,1*3); // Выдаём патроны/оружие
					}
					format(string,32,"Спасибо за покупку. $%i",1*1000); // Форматируем сообщение
					SCM(playerid,0x29FF00AA,string);
					ShowPlayerDialog(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
					return true;
				}
			}
		}
	case 7927:
		{
			if(response) // Если игрок нажал купить
			{
				new gungins = strval(inputtext);
				if(!strval(inputtext)) return ShowPlayerDialog(playerid, 7927, 1, "Патроны", "Введите количество патронов\nкоторые будут в комплекте с оружием.", "Купить", "отмена"); // Если игрок оставил пустое окно выводим его заного
				if(pData[playerid][pCash] < strval(inputtext)*500) return SCM(playerid,-1," Недостаточно денег"); // Проверка хватает ли денег у игрока
				if(gungins > 999 || gungins < 0){ ShowPlayerDialog(playerid, 7927, 1, "Патроны", "Количество патронов не должно быть\nменьше 1 или более 999", "Купить", "отмена");return true;}
				pData[playerid][pCash]-=strval(inputtext)*500; // Отнимаем деньги
				SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
				switch(booston)
				{
				case 0:GivePlayerWeaponEx(playerid,24,gungins); // Выдаём патроны/оружие
				default:GivePlayerWeaponEx(playerid,24,gungins*3); // Выдаём патроны/оружие
				}
				format(string,32,"Спасибо за покупку. $%i",strval(inputtext)*500); // Форматируем сообщение
				SCM(playerid,0x29FF00AA,string);
				ShowPlayerDialog(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
				return true; // Завершаем действие
			}
			else // Если отмена
			{
				ShowPlayerDialog(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
			}
		}
	case 7928:
		{
			if(response) // Если игрок нажал купить
			{
				new gungins = strval(inputtext);
				if(!strval(inputtext)) return ShowPlayerDialog(playerid, 7928, 1, "Патроны", "Введите количество патронов\nкоторые будут в комплекте с оружием.", "Купить", "отмена"); // Если игрок оставил пустое окно выводим его заного
				if(pData[playerid][pCash] < strval(inputtext)*300) return SCM(playerid,-1," Недостаточно денег"); // Проверка хватает ли денег у игрока
				if(gungins > 999 || gungins < 0){ ShowPlayerDialog(playerid, 7927, 1, "Патроны", "Количество патронов не должно быть\nменьше 1 или более 999", "Купить", "отмена");return true;}
				pData[playerid][pCash]-= strval(inputtext)*300; // Отнимаем деньги
				SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
				switch(booston)
				{
				case 0:GivePlayerWeaponEx(playerid,23,gungins); // Выдаём патроны/оружие
				default:GivePlayerWeaponEx(playerid,23,gungins*3); // Выдаём патроны/оружие
				}
				format(string,32,"Спасибо за покупку. $%i",strval(inputtext)*300); // Форматируем сообщение
				SCM(playerid,0x29FF00AA,string);
				ShowPlayerDialog(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
				return true; // Завершаем действие
			}
			else // Если отмена
			{
				ShowPlayerDialog(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
			}
		}
	case 7929:
		{
			if(response) // Если игрок нажал купить
			{
				new gungins = strval(inputtext);
				if(!strval(inputtext)) return ShowPlayerDialog(playerid, 7929, 1, "Патроны", "Введите количество патронов\nкоторые будут в комплекте с оружием.", "Купить", "отмена"); // Если игрок оставил пустое окно выводим его заного
				if(pData[playerid][pCash] < strval(inputtext)*750) return SCM(playerid,-1," Недостаточно денег"); // Проверка хватает ли денег у игрока
				if(gungins > 999 || gungins < 0){ ShowPlayerDialog(playerid, 7927, 1, "Патроны", "Количество патронов не должно быть\nменьше 1 или более 999", "Купить", "отмена");return true;}
				pData[playerid][pCash]-=strval(inputtext)*750; // Отнимаем деньги
				SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
				switch(booston)
				{
				case 0:GivePlayerWeaponEx(playerid,33,gungins); // Выдаём патроны/оружие
				default:GivePlayerWeaponEx(playerid,33,gungins*3); // Выдаём патроны/оружие
				}
				format(string,32,"Спасибо за покупку. $%i",strval(inputtext)*750); // Форматируем сообщение
				SCM(playerid,0x29FF00AA,string);
				ShowPlayerDialog(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
				return true; // Завершаем действие
			}
			else // Если отмена
			{
				ShowPlayerDialog(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
			}
		}
	case 7930:
		{
			if(response) // Если игрок нажал купить
			{
				new gungins = strval(inputtext);
				if(!strval(inputtext)) return ShowPlayerDialog(playerid, 7930, 1, "Патроны", "Введите количество патронов\nкоторые будут в комплекте с оружием.", "Купить", "отмена"); // Если игрок оставил пустое окно выводим его заного
				if(pData[playerid][pCash] < strval(inputtext)*500) return SCM(playerid,-1," Недостаточно денег"); // Проверка хватает ли денег у игрока
				if(gungins > 999 || gungins < 0){ ShowPlayerDialog(playerid, 7927, 1, "Патроны", "Количество патронов не должно быть\nменьше 1 или более 999", "Купить", "отмена");return true;}
				pData[playerid][pCash]-=strval(inputtext)*500; // Отнимаем деньги
				SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
				switch(booston)
				{
				case 0:GivePlayerWeaponEx(playerid,25,gungins); // Выдаём патроны/оружие
				default:GivePlayerWeaponEx(playerid,25,gungins*3); // Выдаём патроны/оружие
				}
				format(string,32,"Спасибо за покупку. $%i",strval(inputtext)*500); // Форматируем сообщение
				SCM(playerid,0x29FF00AA,string);
				ShowPlayerDialog(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
				return true; // Завершаем действие
			}
			else // Если отмена
			{
				ShowPlayerDialog(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
			}
		}
	case 7931:
		{
			if(response) // Если игрок нажал купить
			{
				new gungins = strval(inputtext);
				if(!strval(inputtext)) return ShowPlayerDialog(playerid, 7931, 1, "Патроны", "Введите количество патронов\nкоторые будут в комплекте с оружием.", "Купить", "отмена"); // Если игрок оставил пустое окно выводим его заного
				if(pData[playerid][pCash] < strval(inputtext)*250) return SCM(playerid,-1," Недостаточно денег"); // Проверка хватает ли денег у игрока
				if(gungins > 999 || gungins < 0){ ShowPlayerDialog(playerid, 7927, 1, "Патроны", "Количество патронов не должно быть\nменьше 1 или более 999", "Купить", "отмена");return true;}
				pData[playerid][pCash]-=strval(inputtext)*250; // Отнимаем деньги
				SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
				switch(booston)
				{
				case 0:GivePlayerWeaponEx(playerid,29,gungins); // Выдаём патроны/оружие
				default:GivePlayerWeaponEx(playerid,29,gungins*3); // Выдаём патроны/оружие
				}
				format(string,32,"Спасибо за покупку. $%i",strval(inputtext)*250); // Форматируем сообщение
				SCM(playerid,0x29FF00AA,string);
				ShowPlayerDialog(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
				return true; // Завершаем действие
			}
			else // Если отмена
			{
				ShowPlayerDialog(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
			}
		}
	case 7932:
		{
			if(response) // Если игрок нажал купить
			{
				new gungins = strval(inputtext);
				if(!strval(inputtext)) return ShowPlayerDialog(playerid, 7932, 1, "Патроны", "Введите количество патронов\nкоторые будут в комплекте с оружием.", "Купить", "отмена"); // Если игрок оставил пустое окно выводим его заного
				if(pData[playerid][pCash] < strval(inputtext)*500) return SCM(playerid,-1," Недостаточно денег"); // Проверка хватает ли денег у игрока
				if(gungins > 999 || gungins < 0){ ShowPlayerDialog(playerid, 7927, 1, "Патроны", "Количество патронов не должно быть\nменьше 1 или более 999", "Купить", "отмена");return true;}
				pData[playerid][pCash]-=strval(inputtext)*500; // Отнимаем деньги
				SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
				switch(booston)
				{
				case 0:GivePlayerWeaponEx(playerid,30,gungins); // Выдаём патроны/оружие
				default:GivePlayerWeaponEx(playerid,30,gungins*3); // Выдаём патроны/оружие
				}
				format(string,32,"Спасибо за покупку. $%i",strval(inputtext)*500); // Форматируем сообщение
				SCM(playerid,0x29FF00AA,string);
				ShowPlayerDialog(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
				return true; // Завершаем действие
			}
			else // Если отмена
			{
				ShowPlayerDialog(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
			}
		}
	case 7933:
		{
			if(response) // Если игрок нажал купить
			{
				new gungins = strval(inputtext);
				if(!strval(inputtext)) return ShowPlayerDialog(playerid, 7933, 1, "Патроны", "Введите количество патронов\nкоторые будут в комплекте с оружием.", "Купить", "отмена"); // Если игрок оставил пустое окно выводим его заного
				if(pData[playerid][pCash] < strval(inputtext)*500) return SCM(playerid,-1," Недостаточно денег"); // Проверка хватает ли денег у игрока
				if(gungins > 999 || gungins < 0){ ShowPlayerDialog(playerid, 7927, 1, "Патроны", "Количество патронов не должно быть\nменьше 1 или более 999", "Купить", "отмена");return true;}
				pData[playerid][pCash]-=strval(inputtext)*500; // Отнимаем деньги
				SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
				switch(booston)
				{
				case 0:GivePlayerWeaponEx(playerid,31,gungins); // Выдаём патроны/оружие
				default:GivePlayerWeaponEx(playerid,31,gungins*3); // Выдаём патроны/оружие
				}
				format(string,32,"Спасибо за покупку. $%i",strval(inputtext)*500); // Форматируем сообщение
				SCM(playerid,0x29FF00AA,string);
				ShowPlayerDialog(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
				return true; // Завершаем действие
			}
			else // Если отмена
			{
				ShowPlayerDialog(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
			}
		}
	case 7934:
		{
			if(response) // Если игрок нажал купить
			{
				new gungins = strval(inputtext);
				if(!strval(inputtext)) return ShowPlayerDialog(playerid, 7934, 1, "Патроны", "Введите количество патронов\nкоторые будут в комплекте с оружием.", "Купить", "отмена"); // Если игрок оставил пустое окно выводим его заного
				if(pData[playerid][pCash] < strval(inputtext)*1000) return SCM(playerid,-1," Недостаточно денег"); // Проверка хватает ли денег у игрока
				if(gungins > 999 || gungins < 0){ ShowPlayerDialog(playerid, 7927, 1, "Патроны", "Количество патронов не должно быть\nменьше 1 или более 999", "Купить", "отмена");return true;}
				pData[playerid][pCash]-=strval(inputtext)*1000; // Отнимаем деньги
				SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
				switch(booston)
				{
				case 0:GivePlayerWeaponEx(playerid,17,gungins); // Выдаём патроны/оружие
				default:GivePlayerWeaponEx(playerid,17,gungins*3); // Выдаём патроны/оружие
				}
				format(string,32,"Спасибо за покупку. $%i",strval(inputtext)*1000); // Форматируем сообщение
				SCM(playerid,0x29FF00AA,string);
				ShowPlayerDialog(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
				return true; // Завершаем действие
			}
			else // Если отмена
			{
				ShowPlayerDialog(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Выйти");
			}
		}
	case 1846:
		{
			if(!response) return true;
			new i = pData[playerid][pPBizzKey];
			switch(listitem)
			{
			case 0: cmd_sellbiz(playerid);
			case 1: ShowPlayerDialog(playerid,1522,DIALOG_STYLE_LIST,"Пополнить счет","[0] Электроэнергия\n[1] Баланс банка бизнеса","Выбрать","Назад");
			case 2: ShowPlayerDialog(playerid, 1525, 1, "Снять деньги", "Введите кол-во вирт", "Принять", "Отмена");
			case 3: SendMes(playerid,COLOR_WHITE," Баланс бизнеса: %i вирт",BizzInfo[i][bTill]),SendMes(playerid,COLOR_WHITE," Баланс 'LandTax': %i вирт",BizzInfo[i][bLandTax]),ShowPlayerDialog(playerid, 1846, 2, "Бизнес", "[0] Продать бизнес\n[1] Пополнить счет\n[2] Снять деньги\n[3] Баланс\n[4] Цена за товар\n[5] Цена за вход\n[6] Информация", "Выбрать", "Отмена");
			case 4: if(BizzInfo[i][bType] == 1 || BizzInfo[i][bType] == 3 || BizzInfo[i][bType] == 4 || BizzInfo[i][bType] == 2) ShowPlayerDialog(playerid, 1526, 1, "Ввод параметра", "Введите цену за товар", "Принять", "Отмена");
			case 5: if(BizzInfo[i][bType] != 4 && BizzInfo[i][bID] != 47 && BizzInfo[i][bID] != 48) ShowPlayerDialog(playerid, 1527, 1, "Ввод параметра", "Введите цену за товар вход", "Принять", "Отмена"); else return SCM(playerid,COLOR_GREY," Вы не владеете заправкой / Казино-Баром");
			case 6: PrintBizInfo(playerid, i);
			}
		}
	case 8445:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0: {ShowPlayerDialog(playerid,8446,DIALOG_STYLE_MSGBOX, " ", "Вы уверены, что хотите продать свой автомобиль?", "Далее", "Отмена");}
			case 1: cmd_fill(playerid),ShowPlayerDialog(playerid, 8445, 2, "Транспорт", "[0] Продать\n[1] Заправить\n[2] Заправить с канисистры\n[3] Купить канистру\n[4] Отбуксировать к дому\n[6] Техпаспорт", "Выбрать", "Отмена");
			case 2: cmd_fillcar(playerid),ShowPlayerDialog(playerid, 8445, 2, "Транспорт", "[0] Продать\n[1] Заправить\n[2] Заправить с канисистры\n[3] Купить канистру\n[4] Отбуксировать к дому\n[6] Техпаспорт", "Выбрать", "Отмена");
			case 3: ShowPlayerDialog(playerid, 8445, 2, "Транспорт", "[0] Продать\n[1] Заправить\n[2] Заправить с канисистры\n[3] Купить канистру\n[4] Отбуксировать к дому\n[6] Техпаспорт", "Выбрать", "Отмена");
			case 4: cmd_fixcar(playerid, ""),ShowPlayerDialog(playerid, 8445, 2, "Транспорт", "[0] Продать\n[1] Заправить\n[2] Заправить с канисистры\n[3] Купить канистру\n[4] Отбуксировать к дому\n[6] Техпаспорт", "Выбрать", "Отмена");
			case 5: cmd_carpass(playerid,""),ShowPlayerDialog(playerid, 8445, 2, "Транспорт", "[0] Продать\n[1] Заправить\n[2] Заправить с канисистры\n[3] Купить канистру\n[4] Отбуксировать к дому\n[6] Техпаспорт", "Выбрать", "Отмена");
			}
		}
	case 8446:
		{
			if(!response) return true;
			new null = -1;
			if(GetPVarInt(playerid,"CarOffer") || CarOffer[playerid] != 9999) return true;
			if(pData[playerid][pLimitSellCar] > 3) return SCM(playerid,COLOR_GREY," Можно продать не более 3-х автомобилей в сутки");
			if(house_car[playerid] == -1) return SCM(playerid,COLOR_RED, " У вас нет автомобиля");
			if(CarInfo[playerid][carModel][GetPVarInt(playerid,"chosencar")] == 462) return SCM(playerid,COLOR_GRAD1, " Вы не можете продать мопед");
			if(GetPVarInt(playerid,"CarOffer") || CarOffer[playerid] != 9999) return SCM(playerid,COLOR_GREY," В данный момент  Вы не можете продать свой автомобиль!");
			for(new i = 0; i < sizeof(ShopCar); i++) if(CarInfo[playerid][carModel][GetPVarInt(playerid,"chosencar")] == ShopCar[i][0]) null = i;
			if(null == -1) return SCM(playerid,COLOR_GREY," Вы не можете продать данный автомобиль!");
			pData[playerid][pBank]+=ShopCar[null][1]/2;
			format(string,40,"~w~car in sold~n~~g~$%i",ShopCar[null][1]/2);
			GameTextForPlayer(playerid,string, 5000, 3);
			RemoveTuning(playerid,house_car[playerid]);
			CarInfo[playerid][carPercent][GetPVarInt(playerid,"chosencar")] = 0;
			SCM(playerid,COLOR_WHITE, " Вы продали свой автомобиль");
			
			MoneyLog(pData[playerid][pName],"None", ShopCar[null][1]/2, "(+)SellGosCar");
			
			pData[playerid][pLimitSellCar] ++;
			CarInfo[playerid][carModel][GetPVarInt(playerid,"chosencar")] = 462;
			CarInfo[playerid][carColor_one][GetPVarInt(playerid,"chosencar")] = 203;
			CarInfo[playerid][carColor_two][GetPVarInt(playerid,"chosencar")] = 203;
			SaveMySQL(10,playerid);
			if(house_car[playerid] != -1)
			{
				DestroyVehicleEX(house_car[playerid]);
				house_car[playerid] = -1;
				garage_car[playerid][GetPVarInt(playerid,"chosencar")] = -1;
			}
			if(pData[playerid][pPHouseKey] != INVALID_HOUSE_ID)
			{
				new house = pData[playerid][pPHouseKey];
				house_car[playerid] = CreateVehicle_R(CarInfo[playerid][carModel][GetPVarInt(playerid,"chosencar")], HouseInfo[house][hCarx], HouseInfo[house][hCary], HouseInfo[house][hCarz], HouseInfo[house][hCarc] , CarInfo[playerid][carColor_one][GetPVarInt(playerid,"chosencar")] ,CarInfo[playerid][carColor_two][GetPVarInt(playerid,"chosencar")], -1);
				SetVehicleParamsEx(house_car[playerid],false,false,false,true,false,false,false);
				garage_car[playerid][GetPVarInt(playerid,"chosencar")] = house_car[playerid];
			}
		}
	case 8447:
		{
			if(!response) return true;
			cmd_sellchuonebiz(playerid);
		}
	case 1522:
		{
			if(!response) return ShowPlayerDialog(playerid, 1846, 2, "Бизнес", "[0] Продать бизнес\n[1] Пополнить счет\n[2] Снять деньги\n[3] Баланс\n[4] Цена за товар\n[5] Цена за вход\n[6] Информация", "Выбрать", "Отмена");
			switch(listitem)
			{
			case 0: ShowPlayerDialog(playerid, 1523, 1, "Ввод параметра", "Введите кол-во вирт", "Принять", "Отмена");
			case 1: ShowPlayerDialog(playerid, 1524, 1, "Ввод параметра", "Введите кол-во вирт", "Принять", "Отмена");
			}
		}
	case 1523:
		{
			if(!response) return ShowPlayerDialog(playerid,1522,DIALOG_STYLE_INPUT,"Пополнить счет","[0] Электроэнергия\n[1] Баланс банка бизнеса","Выбрать","Назад");
			new price, bouse = pData[playerid][pPBizzKey];
			if(sscanf(inputtext, "i",price)) ShowPlayerDialog(playerid, 1523, 1, "Ввод параметра", "Введите кол-во вирт", "Принять", "Отмена");
			if(price < 1 || price > (BizzLandTax[bouse]*720)-BizzInfo[bouse][bLandTax])  return SendMes(playerid, COLOR_GRAD2, " Неверная сумма, максимально допустимая %i вирт", (BizzLandTax[bouse]*720)-BizzInfo[bouse][bLandTax]);
			if(pData[playerid][pBank] < price) return SCM(playerid, COLOR_GREY, " На банковском счету  Недостаточно средств");
			pData[playerid][pBank] -= price;
			SetAccountInfo(playerid, pData[playerid][pBank], "pBank");
			BizzInfo[bouse][bLandTax] += price,SendMes(playerid,0x6495EDFF," Вы пополнили счет 'LandTax' на %i вирт",price);
			SaveMySQL(4,bouse);
			return ShowPlayerDialog(playerid, 1846, 2, "Бизнес", "[0] Продать бизнес\n[1] Пополнить счет\n[2] Снять деньги\n[3] Баланс\n[4] Цена за товар\n[5] Цена за вход\n[6] Информация", "Выбрать", "Отмена");
		}
	case 1524:
		{
			if(!response) return ShowPlayerDialog(playerid,1522,DIALOG_STYLE_INPUT,"Пополнить счет","[0] Электроэнергия\n[1] Баланс банка бизнеса","Выбрать","Назад");
			new price, bouse = pData[playerid][pPBizzKey];
			if(sscanf(inputtext, "i",price)) ShowPlayerDialog(playerid, 1524, 1, "Ввод параметра", "Введите кол-во вирт", "Принять", "Отмена");
			if(price < 1 || price > 10000000)  return SendMes(playerid, COLOR_GRAD2, " Неверная сумма, максимально допустимая %i вирт", (10000000)-BizzInfo[bouse][bTill]);
			if(pData[playerid][pBank] < price) return SCM(playerid, COLOR_GREY, " На банковском счету  Недостаточно средств");
			pData[playerid][pBank] -= price;
			SetAccountInfo(playerid, pData[playerid][pBank], "pBank");
			BizzInfo[bouse][bTill] += price, SendMes(playerid,0x6495EDFF,"  Вы перевели на счёт вашего бизнеса %i вирт",price);
			SaveMySQL(4,bouse);
			return ShowPlayerDialog(playerid, 1846, 2, "Бизнес", "[0] Продать бизнес\n[1] Пополнить счет\n[2] Снять деньги\n[3] Баланс\n[4] Цена за товар\n[5] Цена за вход\n[6] Информация", "Выбрать", "Отмена");
		}
	case 1525:
		{
			if(!response) return ShowPlayerDialog(playerid, 1846, 2, "Бизнес", "[0] Продать бизнес\n[1] Пополнить счет\n[2] Снять деньги\n[3] Баланс\n[4] Цена за товар\n[5] Цена за вход\n[6] Информация", "Выбрать", "Отмена");
			new price, bouse = pData[playerid][pPBizzKey];
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, 1525, 1, "Ввод параметра", "Введите кол-во вирт", "Принять", "Отмена");
			if(price > BizzInfo[bouse][bTill] || price < 1)  return SCM(playerid, COLOR_GRAD2, " На счету бизнеса нет столько денег!");
			BizzInfo[bouse][bTill] -= price;
			pData[playerid][pBank] += price, SendMes(playerid,0x6495EDFF," Вы сняли со счета вашего бизнеса %i вирт",price);
			SetAccountInfo(playerid, pData[playerid][pBank], "pBank");
			SetAccountInfo(playerid, pData[playerid][pBank], "pBank");
			SaveMySQL(4,bouse);
			return ShowPlayerDialog(playerid, 1846, 2, "Бизнес", "[0] Продать бизнес\n[1] Пополнить счет\n[2] Снять деньги\n[3] Баланс\n[4] Цена за товар\n[5] Цена за вход\n[6] Информация", "Выбрать", "Отмена");
		}
	case 1526:
		{
			if(!response) return ShowPlayerDialog(playerid, 1846, 2, "Бизнес", "[0] Продать бизнес\n[1] Пополнить счет\n[2] Снять деньги\n[3] Баланс\n[4] Цена за товар\n[5] Цена за вход\n[6] Информация", "Выбрать", "Отмена");
			new price, bouse = pData[playerid][pPBizzKey];
			if(sscanf(inputtext, "i",price)) ShowPlayerDialog(playerid, 1526, 1, "Ввод параметра", "Введите цену за товар", "Принять", "Отмена");
			if(price < 100 || price > 500) return SCM(playerid,COLOR_GREY," Нельзя меньше 100 и больше 500 вирт"),ShowPlayerDialog(playerid, 1526, 1, "Ввод параметра", "Введите цену за товар", "Принять", "Отмена");
			BizzInfo[bouse][bPrice] = price;
			SendMes(playerid,COLOR_WHITE," Цена на товары теперь от %d вирт",price);
			SaveMySQL(4,bouse);
			return ShowPlayerDialog(playerid, 1846, 2, "Бизнес", "[0] Продать бизнес\n[1] Пополнить счет\n[2] Снять деньги\n[3] Баланс\n[4] Цена за товар\n[5] Цена за вход\n[6] Информация", "Выбрать", "Отмена");
		}
	case 1527:
		{
			if(!response) return ShowPlayerDialog(playerid, 1846, 2, "Бизнес", "[0] Продать бизнес\n[1] Пополнить счет\n[2] Снять деньги\n[3] Баланс\n[4] Цена за товар\n[5] Цена за вход\n[6] Информация", "Выбрать", "Отмена");
			new price, bouse = pData[playerid][pPBizzKey];
			if(sscanf(inputtext, "i",price)) ShowPlayerDialog(playerid, 1527, 1, "Ввод параметра", "Введите цену за вход", "Принять", "Отмена");
			if(price < 1 || price > 10000) return SCM(playerid,COLOR_GREY," Нельзя меньше 1 и больше 10 000 вирт"),ShowPlayerDialog(playerid, 1527, 1, "Ввод параметра", "Введите цену за вход", "Принять", "Отмена");
			BizzInfo[bouse][bEntranceCost] = price;
			SendMes(playerid,COLOR_WHITE," Цена за вход теперь %d вирт",price);
			SaveMySQL(4,bouse);
			return ShowPlayerDialog(playerid, 1846, 2, "Бизнес", "[0] Продать бизнес\n[1] Пополнить счет\n[2] Снять деньги\n[3] Баланс\n[4] Цена за товар\n[5] Цена за вход\n[6] Информация", "Выбрать", "Отмена");
		}
	case 1054:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					new houseid = pData[playerid][pPHouseKey];
					format(string, 512, "{758C9D}Материалы  {FFFFFF}%i/5000\n{758C9D}Наркотики  {FFFFFF}%i/1500\n{758C9D}Ключи от камеры  {FFFFFF}%i/50\n{758C9D}Готовая рыба  {FFFFFF}%i/250\n{758C9D}Silenced pistol  {FFFFFF}%i/500\n{758C9D}Desert Eagle  {FFFFFF}%i/450\n{758C9D}Shotgun  {FFFFFF}%i/450\n{758C9D}MP5  {FFFFFF}%i/1500\n{758C9D}AK47  {FFFFFF}%i/1500\n{758C9D}M4  {FFFFFF}%i/1500\n{758C9D}Rifle  {FFFFFF}%i/100",HouseInfo[houseid][hSafe][1],HouseInfo[houseid][hSafe][0],
					HouseInfo[houseid][hSafe][2],HouseInfo[houseid][hSafe][3],HouseInfo[houseid][hSafe][4],HouseInfo[houseid][hSafe][5],HouseInfo[houseid][hSafe][6],HouseInfo[houseid][hSafe][7],HouseInfo[houseid][hSafe][8],HouseInfo[houseid][hSafe][9],HouseInfo[houseid][hSafe][10]);
					ShowPlayerDialog(playerid,1053,DIALOG_STYLE_LIST,"Сейф",string, "Далее", "Отмена");
				}
			case 1:
				{
					new houseid = pData[playerid][pPHouseKey];
					format(string, 512, "{758C9D}Материалы  {FFFFFF}%i/5000\n{758C9D}Наркотики  {FFFFFF}%i/1500\n{758C9D}Ключи от камеры  {FFFFFF}%i/50\n{758C9D}Готовая рыба  {FFFFFF}%i/250\n{758C9D}Silenced pistol  {FFFFFF}%i/500\n{758C9D}Desert Eagle  {FFFFFF}%i/450\n{758C9D}Shotgun  {FFFFFF}%i/450\n{758C9D}MP5  {FFFFFF}%i/1500\n{758C9D}AK47  {FFFFFF}%i/1500\n{758C9D}M4  {FFFFFF}%i/1500\n{758C9D}Rifle  {FFFFFF}%i/100",HouseInfo[houseid][hSafe][1],HouseInfo[houseid][hSafe][0],
					HouseInfo[houseid][hSafe][2],HouseInfo[houseid][hSafe][3],HouseInfo[houseid][hSafe][4],HouseInfo[houseid][hSafe][5],HouseInfo[houseid][hSafe][6],HouseInfo[houseid][hSafe][7],HouseInfo[houseid][hSafe][8],HouseInfo[houseid][hSafe][9],HouseInfo[houseid][hSafe][10]);
					ShowPlayerDialog(playerid,1052,DIALOG_STYLE_LIST,"Сейф",string,"Далее","Отмена");
				}
			}
		}
	case 1052:
		{
			if(!response)return true;
			switch(listitem)
			{
			case 0:{ShowPlayerDialog(playerid, 1067,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 1:{ShowPlayerDialog(playerid, 1068,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 2:{ShowPlayerDialog(playerid, 1069,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 3:{ShowPlayerDialog(playerid, 1070,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 4:{ShowPlayerDialog(playerid, 1071,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 5:{ShowPlayerDialog(playerid, 1072,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 6:{ShowPlayerDialog(playerid, 1073,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 7:{ShowPlayerDialog(playerid, 1074,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 8:{ShowPlayerDialog(playerid, 1075,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 9:{ShowPlayerDialog(playerid, 1076,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 10:{ShowPlayerDialog(playerid, 1077,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}

			}
		}
	case 1053:
		{
			if(!response)return true;
			switch(listitem)
			{
			case 0:{ShowPlayerDialog(playerid, 1056,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 1:{ShowPlayerDialog(playerid, 1057,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 2:{ShowPlayerDialog(playerid, 1058,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 3:{ShowPlayerDialog(playerid, 1059,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 4:{ShowPlayerDialog(playerid, 1060,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 5:{ShowPlayerDialog(playerid, 1061,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 6:{ShowPlayerDialog(playerid, 1062,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 7:{ShowPlayerDialog(playerid, 1063,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 8:{ShowPlayerDialog(playerid, 1064,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 9:{ShowPlayerDialog(playerid, 1065,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			case 10:{ShowPlayerDialog(playerid, 1066,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");}
			}
		}
	case 1056:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialog(playerid,1056,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(HouseInfo[pData[playerid][pPHouseKey]][hSafe][1] < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно материалов");
			if(colvo1 < 1 || colvo1 > 5000)
			{
				ShowPlayerDialog(playerid,1056,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(HouseInfo[pData[playerid][pPHouseKey]][hSafe][1]-colvo1 < 0) return SCM(playerid,COLOR_GREY," Неверное количество");
			if(pData[playerid][pMats]+colvo1 > 500) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[pData[playerid][pPHouseKey]][hSafe][1] -= colvo1;
			pData[playerid][pMats] += colvo1;
			SaveMySQL(5,pData[playerid][pPHouseKey]);
			SetAccountInfo(playerid, pData[playerid][pMats], "pMats");
			SCM(playerid,COLOR_YELLOW," Вы взяли материалы из сейфа");
			return true;
		}
	case 1057:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialog(playerid,1057,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(HouseInfo[pData[playerid][pPHouseKey]][hSafe][0] < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно наркотиков");
			if(colvo1 < 1 || colvo1 > 1500)
			{
				ShowPlayerDialog(playerid,1057,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(HouseInfo[pData[playerid][pPHouseKey]][hSafe][0]-colvo1 < 0) return SCM(playerid,COLOR_GREY," Неверное количество");
			if(pData[playerid][pDrugs]+colvo1 > 150) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[pData[playerid][pPHouseKey]][hSafe][0] -= colvo1;
			pData[playerid][pDrugs] += colvo1;
			SaveMySQL(5,pData[playerid][pPHouseKey]);
			SetAccountInfo(playerid, pData[playerid][pDrugs], "pDrugs");
			SCM(playerid,COLOR_YELLOW," Вы взяли наркотики из сейфа");
			return true;
		}
	case 1058:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialog(playerid,1058,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(HouseInfo[pData[playerid][pPHouseKey]][hSafe][2] < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно ключей");
			if(colvo1 < 1 || colvo1 > 1500)
			{
				ShowPlayerDialog(playerid,1058,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(HouseInfo[pData[playerid][pPHouseKey]][hSafe][2]-colvo1 < 0) return SCM(playerid,COLOR_GREY," Неверное количество");
			if(pData[playerid][pKeys]+colvo1 > 5) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[pData[playerid][pPHouseKey]][hSafe][2] -= colvo1;
			pData[playerid][pKeys] += colvo1;
			SaveMySQL(5,pData[playerid][pPHouseKey]);
			SetAccountInfo(playerid, pData[playerid][pKeys], "pKeys");
			SCM(playerid,COLOR_YELLOW," Вы взяли ключи из сейфа");
			return true;
		}
	case 1059:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialog(playerid,1059,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(HouseInfo[pData[playerid][pPHouseKey]][hSafe][3] < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно рыбы");
			if(colvo1 < 1 || colvo1 > 50)
			{
				ShowPlayerDialog(playerid,1059,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(HouseInfo[pData[playerid][pPHouseKey]][hSafe][3]-colvo1 < 0) return SCM(playerid,COLOR_GREY," Неверное количество");
			if(pData[playerid][pFishesPach]+colvo1 > 25) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[pData[playerid][pPHouseKey]][hSafe][3] -= colvo1;
			pData[playerid][pFishesPach] += colvo1;
			SetAccountInfo(playerid, pData[playerid][pFishesPach], "pFishesPach");
			SCM(playerid,COLOR_YELLOW," Вы взяли рыбу из сейфа");
			return true;
		}
	case 1060:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialog(playerid,1060,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(HouseInfo[pData[playerid][pPHouseKey]][hSafe][4] < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно патронов");
			if(colvo1 < 1 || colvo1 > 500)
			{
				ShowPlayerDialog(playerid,1060,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(HouseInfo[pData[playerid][pPHouseKey]][hSafe][4]-colvo1 < 0) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[pData[playerid][pPHouseKey]][hSafe][4] -= colvo1;
			GivePlayerWeaponEx(playerid, 23,colvo1);
			SCM(playerid,COLOR_YELLOW," Вы взяли патроны из сейфа");
			return true;
		}
	case 1061:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialog(playerid,1061,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(HouseInfo[pData[playerid][pPHouseKey]][hSafe][5] < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно патронов");
			if(colvo1 < 1 || colvo1 > 450)
			{
				ShowPlayerDialog(playerid,1061,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(HouseInfo[pData[playerid][pPHouseKey]][hSafe][5]-colvo1 < 0) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[pData[playerid][pPHouseKey]][hSafe][5] -= colvo1;
			GivePlayerWeaponEx(playerid, 24,colvo1);
			SCM(playerid,COLOR_YELLOW," Вы взяли патроны из сейфа");
			return true;
		}
	case 1062:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialog(playerid,1062,DIALOG_STYLE_INPUT,"Сейф","","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(HouseInfo[pData[playerid][pPHouseKey]][hSafe][6] < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно патронов");
			if(colvo1 < 1 || colvo1 > 450)
			{
				ShowPlayerDialog(playerid,1062,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(HouseInfo[pData[playerid][pPHouseKey]][hSafe][6]-colvo1 < 0) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[pData[playerid][pPHouseKey]][hSafe][6] -= colvo1;
			GivePlayerWeaponEx(playerid, 25,colvo1);
			SCM(playerid,COLOR_YELLOW," Вы взяли патроны из сейфа");
			return true;
		}
	case 1063:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialog(playerid,1063,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(HouseInfo[pData[playerid][pPHouseKey]][hSafe][7] < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно патронов");
			if(colvo1 < 1 || colvo1 > 1500)
			{
				ShowPlayerDialog(playerid,1063,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(HouseInfo[pData[playerid][pPHouseKey]][hSafe][7]-colvo1 < 0) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[pData[playerid][pPHouseKey]][hSafe][7] -= colvo1;
			GivePlayerWeaponEx(playerid, 29,colvo1);
			SCM(playerid,COLOR_YELLOW," Вы взяли патроны из сейфа");
			return true;
		}
	case 1064:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialog(playerid,1064,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(HouseInfo[pData[playerid][pPHouseKey]][hSafe][8] < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно патронов");
			if(colvo1 < 1 || colvo1 > 1500)
			{
				ShowPlayerDialog(playerid,1064,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(HouseInfo[pData[playerid][pPHouseKey]][hSafe][8]-colvo1 < 0) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[pData[playerid][pPHouseKey]][hSafe][8] -= colvo1;
			GivePlayerWeaponEx(playerid, 30,colvo1);
			SCM(playerid,COLOR_YELLOW," Вы взяли патроны из сейфа ");
			return true;
		}
	case 1065:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialog(playerid,1065,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(HouseInfo[pData[playerid][pPHouseKey]][hSafe][9] < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно патронов");
			if(colvo1 < 1 || colvo1 > 1500)
			{
				ShowPlayerDialog(playerid,1065,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(HouseInfo[pData[playerid][pPHouseKey]][hSafe][9]-colvo1 < 0) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[pData[playerid][pPHouseKey]][hSafe][9] -= colvo1;
			GivePlayerWeaponEx(playerid, 31,colvo1);
			SCM(playerid,COLOR_YELLOW," Вы взяли патроны из сейфа");
			return true;
		}
	case 1066:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialog(playerid,1066,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(HouseInfo[pData[playerid][pPHouseKey]][hSafe][10] < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно патронов");
			if(colvo1 < 1 || colvo1 > 100)
			{
				ShowPlayerDialog(playerid,1066,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(HouseInfo[pData[playerid][pPHouseKey]][hSafe][10]-colvo1 < 0) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[pData[playerid][pPHouseKey]][hSafe][10] -= colvo1;
			GivePlayerWeaponEx(playerid, 33,colvo1);
		//	SaveMySQL(5,pData[playerid][pPHouseKey]);
			SCM(playerid,COLOR_YELLOW," Вы взяли патроный из сейфа");
			return true;
		}
	case 1067:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialog(playerid,1067,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(pData[playerid][pMats] < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно материалов");
			if(colvo1 < 1 || colvo1 > 5000)
			{
				ShowPlayerDialog(playerid,1067,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(colvo1+HouseInfo[pData[playerid][pPHouseKey]][hSafe][1] > 5000) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[pData[playerid][pPHouseKey]][hSafe][1] += colvo1;
			pData[playerid][pMats] -= colvo1;
			//SaveMySQL(5,pData[playerid][pPHouseKey]);
			SetAccountInfo(playerid, pData[playerid][pMats], "pMats");
			SCM(playerid,COLOR_YELLOW," Вы положили материалы в сейф");
			return true;
		}
	case 1068:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialog(playerid,1068,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(pData[playerid][pDrugs] < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно наркотиков");
			if(colvo1 < 1 || colvo1 > 1500)
			{
				ShowPlayerDialog(playerid,1067,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(colvo1+HouseInfo[pData[playerid][pPHouseKey]][hSafe][0] > 1500) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[pData[playerid][pPHouseKey]][hSafe][0] += colvo1;
			pData[playerid][pDrugs] -= colvo1;
			//SaveMySQL(5,pData[playerid][pPHouseKey]);
			SetAccountInfo(playerid, pData[playerid][pDrugs], "pDrugs");
			SCM(playerid,COLOR_YELLOW," Вы положили наркотики в сейф");
			return true;
		}
	case 1069:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialog(playerid,1069,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(pData[playerid][pKeys] < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно ключей");
			if(colvo1 < 1 || colvo1 > 50)
			{
				ShowPlayerDialog(playerid,1069,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(colvo1+HouseInfo[pData[playerid][pPHouseKey]][hSafe][2] > 50) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[pData[playerid][pPHouseKey]][hSafe][2] += colvo1;
			pData[playerid][pKeys] -= colvo1;
			//SaveMySQL(5,pData[playerid][pPHouseKey]);
			SetAccountInfo(playerid, pData[playerid][pKeys], "pKeys");
			SCM(playerid,COLOR_YELLOW," Вы положили ключи в сейф");
			return true;
		}
	case 1070:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialog(playerid,1070,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(pData[playerid][pFishesPach] < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно рыбы");
			if(colvo1 < 1 || colvo1 > 250)
			{
				ShowPlayerDialog(playerid,1070,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(colvo1+HouseInfo[pData[playerid][pPHouseKey]][hSafe][3] > 250) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[pData[playerid][pPHouseKey]][hSafe][3] += colvo1;
			pData[playerid][pFishesPach] -= colvo1;
		//	SaveMySQL(5,pData[playerid][pPHouseKey]);
			SetAccountInfo(playerid, pData[playerid][pFishesPach], "pFishesPach");
			SCM(playerid,COLOR_YELLOW," Вы положили рыбу в сейф");
			return true;
		}
	case 1071:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialog(playerid,1071,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(GetPlayerWeapon(playerid) != 23 || GetPlayerAmmo(playerid) < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно патронов");
			if(colvo1 < 1 || colvo1 > 500)
			{
				ShowPlayerDialog(playerid,1071,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(colvo1+HouseInfo[pData[playerid][pPHouseKey]][hSafe][4] > 500) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[pData[playerid][pPHouseKey]][hSafe][4] += colvo1;
			GivePlayerWeaponEx(playerid, 23,-colvo1);
		//	SaveMySQL(5,pData[playerid][pPHouseKey]);
			SCM(playerid,COLOR_YELLOW," Вы положили патроны в сейф");
			return true;
		}
	case 1072:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialog(playerid,1072,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(GetPlayerWeapon(playerid) != 24 || GetPlayerAmmo(playerid) < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно патронов");
			if(colvo1 < 1 || colvo1 > 450)
			{
				ShowPlayerDialog(playerid,1072,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(colvo1+HouseInfo[pData[playerid][pPHouseKey]][hSafe][5] > 450) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[pData[playerid][pPHouseKey]][hSafe][5] += colvo1;
			GivePlayerWeaponEx(playerid, 24,-colvo1);
			//SaveMySQL(5,pData[playerid][pPHouseKey]);
			SCM(playerid,COLOR_YELLOW," Вы положили патроны в сейф");
			return true;
		}
	case 1073:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialog(playerid,1073,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(GetPlayerWeapon(playerid) != 25 || GetPlayerAmmo(playerid) < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно патронов");
			if(colvo1 < 1 || colvo1 > 450)
			{
				ShowPlayerDialog(playerid,1073,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(colvo1+HouseInfo[pData[playerid][pPHouseKey]][hSafe][6] > 450) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[pData[playerid][pPHouseKey]][hSafe][6] += colvo1;
			GivePlayerWeaponEx(playerid, 25,-colvo1);
			//SaveMySQL(5,pData[playerid][pPHouseKey]);
			SCM(playerid,COLOR_YELLOW," Вы положили патроны в сейф");
			return true;
		}
	case 1074:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialog(playerid,1074,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(GetPlayerWeapon(playerid) != 29 || GetPlayerAmmo(playerid) < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно патронов");
			if(colvo1 < 1 || colvo1 > 1500)
			{
				ShowPlayerDialog(playerid,1074,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(colvo1+HouseInfo[pData[playerid][pPHouseKey]][hSafe][7] > 1500) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[pData[playerid][pPHouseKey]][hSafe][7] += colvo1;
			GivePlayerWeaponEx(playerid, 29,-colvo1);
			//SaveMySQL(5,pData[playerid][pPHouseKey]);
			SCM(playerid,COLOR_YELLOW," Вы положили патроны в сейф");
			return true;
		}
	case 1075:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialog(playerid,1075,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(GetPlayerWeapon(playerid) != 30 || GetPlayerAmmo(playerid) < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно патронов");
			if(colvo1 < 1 || colvo1 > 1500)
			{
				ShowPlayerDialog(playerid,1075,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(colvo1+HouseInfo[pData[playerid][pPHouseKey]][hSafe][8] > 1500) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[pData[playerid][pPHouseKey]][hSafe][8] += colvo1;
			GivePlayerWeaponEx(playerid, 30,-colvo1);
		//	SaveMySQL(5,pData[playerid][pPHouseKey]);
			SCM(playerid,COLOR_YELLOW," Вы положили патроны в сейф");
			return true;
		}
	case 1076:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialog(playerid,1076,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(GetPlayerWeapon(playerid) != 31 || GetPlayerAmmo(playerid) < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно патронов");
			if(colvo1 < 1 || colvo1 > 1500)
			{
				ShowPlayerDialog(playerid,1076,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(colvo1+HouseInfo[pData[playerid][pPHouseKey]][hSafe][9] > 1500) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[pData[playerid][pPHouseKey]][hSafe][9] += colvo1;
			GivePlayerWeaponEx(playerid, 31,-colvo1);
			//SaveMySQL(5,pData[playerid][pPHouseKey]);
			SCM(playerid,COLOR_YELLOW," Вы положили патроны в сейф");
			return true;
		}
	case 1077:
		{
			if(!response) return true;
			if(!strlen(inputtext))return ShowPlayerDialog(playerid,1077,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
			new colvo1;
			colvo1 = strval(inputtext);
			if(GetPlayerWeapon(playerid) != 33 || GetPlayerAmmo(playerid) < colvo1) return SCM(playerid, COLOR_GREY, " Недостаточно патронов");
			if(colvo1 < 1 || colvo1 > 100)
			{
				ShowPlayerDialog(playerid,1077,DIALOG_STYLE_INPUT,"Сейф","Введите количество","Готово","Назад");
				return true;
			}
			if(colvo1+HouseInfo[pData[playerid][pPHouseKey]][hSafe][10] > 100) return SCM(playerid,COLOR_GREY," Неверное количество");
			HouseInfo[pData[playerid][pPHouseKey]][hSafe][10] += colvo1;
			GivePlayerWeaponEx(playerid, 33,-colvo1);
			//SaveMySQL(5,pData[playerid][pPHouseKey]);
			SCM(playerid,COLOR_YELLOW," Вы положили патроны в сейф");
			return true;
		}
	case 1335:
		{
			if(response)
			{
				pData[playerid][pJob] = 65;
				SetAccountInfo(playerid, pData[playerid][pJob], "pJob");
				SCM(playerid, 0x6495EDFF, " Добро пожаловать в команду!");
				SCM(playerid, 0x6495EDFF, " На автомойке всегда найдется работа. Если тебе не на чем доехать, можешь взять скутер в гараже.");
				SCM(playerid, 0x6495EDFF, "(( Для взлома авто, подойди к нужной машине и если авто закрыто, зажми SPACE (Спринт) ))");
			}
			else SCM(playerid,COLOR_BLUE, " Проваливай! Не дай бог настучишь копам!");
		}
	case 1336:
		{
			if(response)
			{
				if(GetPVarInt(playerid,"job_auto_time") < 1) return SCM(playerid,COLOR_GREY," Вы не начинали миссию автоугона");
				if(caroff[GetPVarInt(playerid,"job_auto_seat")] == true) DestroyVehicleEX(GetPVarInt(playerid,"job_auto_seat"));
				else SetVehicleToRespawn(GetPVarInt(playerid,"job_auto_seat"));
				caroff[GetPVarInt(playerid,"job_auto_seat")] = false;
				DeletePVar(playerid,"job_auto_time");
				SCM(playerid, COLOR_BLUE, " [SMS]: Ты нас разочаровал! Миссия провалена");
				DeletePVar(playerid,"job_auto");
				SetPVarInt(playerid,"randa",-1);
				if(gz_autorob[playerid] != -1)
				{
					GangZoneDestroy(gz_autorob[playerid]);
					printf("GangZoneDestroy [Robbing GZ] [ID: %i] for playerid: %i",gz_autorob[playerid],playerid);
					gz_autorob[playerid] = -1;
				}
			}
		}
	case 1690:
		{
			DeletePVar(playerid, !#dAuctionStation);
			if(!response) return true;
			bizselect[playerid] = bizname[playerid][listitem];
			if(auction_info[listitem] == 1)
			{
				if(WorkshopInfo[bizselect[playerid]][wAuction][1] == 0) format(YCMDstr,9,"%i",WorkshopInfo[bizselect[playerid]][wAuction][0]);
				else format(YCMDstr,16,"Скрыта");
				format(string,256,"{FFFF00}СТО [%i]\n{ffffff}Предыдущая ставка: %i\n{ffffff}Текущая ставка: %s\n{33AA33}Сделать ставку",WorkshopInfo[bizselect[playerid]][wID]-1,WorkshopInfo[bizselect[playerid]][wAuction][1], YCMDstr);
				ShowPlayerDialog(playerid,1691,DIALOG_STYLE_LIST,"Аукцион Ферм и CTO",string, "Далее", "Отмена");
			}
			else if(auction_info[listitem] == 2)
			{
				if(FarmInfo[bizselect[playerid]][fAuction][1] == 0) format(YCMDstr,9,"%i",FarmInfo[bizselect[playerid]][fAuction][0]);
				else format(YCMDstr,16,"Скрыта");
				format(string,256,"{FFFF00}Ферма [%i]\n{ffffff}Предыдущая ставка: %i\n{ffffff}Текущая ставка: %s\n{33AA33}Сделать ставку",FarmInfo[bizselect[playerid]][fID]-1,FarmInfo[bizselect[playerid]][fAuction][1], YCMDstr);
				ShowPlayerDialog(playerid,1693,DIALOG_STYLE_LIST,"Аукцион Ферм и CTO",string, "Далее", "Отмена");
			}
			else // maybe that taxi station ??? 
			{
				new _pos = strfind(inputtext, "[")+1;
				if(_pos)
				{
					new _tStationId = strval(inputtext[_pos]);
					if(_tStationId < gTotalTaxiStation)
					{
						SetPVarInt(playerid, !#dAuctionStation, _tStationId+1);
						new szQuery[64+44];
						mysql_format(DATABASE, szQuery, sizeof szQuery, "SELECT `currentmoneyrate`, `lastmoneyrate` FROM `"TABLE_TAXI"` WHERE `id`=%d LIMIT 1", _tStationId+1);
						mysql_query(DATABASE, szQuery);
						if(cache_num_rows())
						{
							new _currentmoneyrate = 0, 
								_lastmoneyrate = 0;

							cache_get_value_name_int(0, "currentmoneyrate", _currentmoneyrate);
							cache_get_value_name_int(0, "lastmoneyrate", _lastmoneyrate);

							if(_currentmoneyrate == 0 && _lastmoneyrate == 0) format(szQuery, sizeof(szQuery), "%i", _currentmoneyrate);
							else format(szQuery, sizeof(szQuery), "Скрыта");
							format(string, 256, "{FFFF00}Таксопарк [%i]\n{ffffff}Предыдущая ставка: %i\n{ffffff}Текущая ставка: %s\n{33AA33}Сделать ставку",
								_tStationId, _lastmoneyrate, szQuery);
							ShowPlayerDialog(playerid, 1693, DIALOG_STYLE_LIST, "Аукцион Ферм и CTO", string, "Далее", "Отмена");
							return 1;
						}

					}
				}
				DeletePVar(playerid, !#dAuctionStation);

			}
			return true;
		}
	case 1694:
		{
			if(!response) return true;
			if(pData[playerid][pLevel] < 4) return SCM(playerid,COLOR_GREY," Ставить ставки можно с 4-х лет в штате");
			if(pData[playerid][pBank] < strval(inputtext) || strval(inputtext) > 100000000) return SCM(playerid,COLOR_GREY," На вашем банковском счету  Недостаточно средств");

			new _pVarVal = GetPVarInt(playerid, !#dAuctionStation);
			//SendMes(playerid, -1, "- _pVarVal = %d", _pVarVal);
			if(_pVarVal)
			{
				new szQuery[0xFF];
				mysql_format(DATABASE, szQuery, sizeof szQuery, "SELECT `currentuserrate` FROM `"TABLE_TAXI"` WHERE `currentuserrate`='%s' LIMIT 1", pData[playerid][pName]);
				mysql_query(DATABASE, szQuery);
				if(cache_num_rows())
					return SCM(playerid,COLOR_GREY," Вы уже делали ставку на один из бизнесов");
				mysql_format(DATABASE, szQuery, sizeof szQuery, "SELECT `owner` FROM `"TABLE_TAXI"` WHERE `owner`='%s' LIMIT 1", pData[playerid][pName]);
				mysql_query(DATABASE, szQuery);
				if(cache_num_rows())
					return SCM(playerid,COLOR_GREY," У вас уже есть бизнес");

				new _szLastUser[MAX_PLAYER_NAME];
				new _currentmoneyrate = 0, 
					_lastmoneyrate = 0;
				new InputMoney = strval(inputtext);

				mysql_format(DATABASE, szQuery, sizeof szQuery, "SELECT `currentuserrate`, `currentmoneyrate`, `lastmoneyrate` FROM `"TABLE_TAXI"` WHERE `id`=%d LIMIT 1", _pVarVal);
				mysql_query(DATABASE, szQuery);

				cache_get_value_name(0, "currentuserrate", _szLastUser);
				
				cache_get_value_name_int(0, "currentmoneyrate", _currentmoneyrate);
				cache_get_value_name_int(0, "lastmoneyrate", _lastmoneyrate);
 				
 				if(InputMoney < _currentmoneyrate) return SCM(playerid, COLOR_GREY, " Вам не удалось перебить ставку");
				if(InputMoney < 100000 && _currentmoneyrate == 0) return SCM(playerid, COLOR_GREY, " Вам не удалось перебить ставку");

				mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `"TABLE_TAXI"` SET `currentuserrate`='%s', `currentmoneyrate`=%d, `lastmoneyrate`=%d, `lasttimerate`=6 WHERE `id`=%d LIMIT 1", pData[playerid][pName], InputMoney, _currentmoneyrate, _pVarVal);
				mysql_query(DATABASE, szQuery);

				new __retId = GetPlayerID(_szLastUser);
				sscanf(_szLastUser, "u", __retId);

				if(strcmp(_szLastUser, "y"))
				{
					if(IsPlayerConnected(__retId) && ! (__retId == INVALID_PLAYER_ID))
					{

						format(string, 144, "Игрок %s перебил вашу ставку за Таксопарк [%i]",pData[playerid][pName], _pVarVal-1);
						SCM(__retId,COLOR_INDIGO,string);
						pData[__retId][pBank] += _currentmoneyrate;
						SetAccountInfo(__retId, pData[__retId][pBank], "pBank");
					}
					else if(!IsPlayerConnected(__retId))
					{
						mysql_format(DATABASE, szQuery, sizeof(szQuery), "UPDATE `"TABLE_ACCOUNTS"` SET `pBank` = pBank+%i WHERE Name = '%e'", _currentmoneyrate, _szLastUser);
						mysql_query(DATABASE, szQuery);
					}
				}

				pData[playerid][pBank] -= strval(inputtext);
				SetAccountInfo(playerid, pData[playerid][pBank], "pBank");

				format(string,128," Вы перебили ставку за Таксопарк [%i]", _pVarVal-1);
				MoneyLog(pData[playerid][pName], "None", InputMoney, "(-)TaxiStanBet");
				return SCM(playerid,COLOR_INDIGO,string);
			}
			// shit
			for(new i = 1; i <= TOTALFARM; i++) if(!strcmp(pData[playerid][pName], FarmInfo[i][fAuctionName], true) && FarmInfo[i][fAuction][0] > 0) return SCM(playerid,COLOR_GREY," Вы уже делали ставку на один из бизнесов");
			if(FGet(playerid)) return SCM(playerid,COLOR_GREY," У вас уже есть бизнес");
			if(GetPlayerID(FarmInfo[bizselect[playerid]][fAuctionName]) == playerid && FarmInfo[bizselect[playerid]][fAuction][0] > 0) return SCM(playerid,COLOR_GREY," Ваша ставка актуальна");
			if(strval(inputtext) < FarmInfo[bizselect[playerid]][fAuction][3]) return SCM(playerid,COLOR_GREY," Вам не удалось перебить ставку");
			if(strval(inputtext) < 100000 && FarmInfo[bizselect[playerid]][fAuction][3] == 0) return SCM(playerid,COLOR_GREY," Вам не удалось перебить ставку");
			if(strval(inputtext)-FarmInfo[bizselect[playerid]][fAuction][0] < 100000) return SCM(playerid,COLOR_GREY," Вам не удалось перебить ставку");
			if(FarmInfo[bizselect[playerid]][fAuction][3] == 0) FarmInfo[bizselect[playerid]][fAuction][3] = strval(inputtext)/2;
			FarmInfo[bizselect[playerid]][fAuction][1] = FarmInfo[bizselect[playerid]][fAuction][0];
			FarmInfo[bizselect[playerid]][fAuction][0] = strval(inputtext);
			FarmInfo[bizselect[playerid]][fAuction][2] = 6;
			if(IsPlayerConnected(GetPlayerID(FarmInfo[bizselect[playerid]][fAuctionName])) && FarmInfo[bizselect[playerid]][fAuction][1] > 0)
			{
				format(string,144,"Игрок %s перебил вашу ставку за Ферму [%i]",pData[playerid][pName],FarmInfo[bizselect[playerid]][fID]-1);
				SCM(GetPlayerID(FarmInfo[bizselect[playerid]][fAuctionName]),COLOR_INDIGO,string);
				pData[GetPlayerID(FarmInfo[bizselect[playerid]][fAuctionName])][pBank] += FarmInfo[bizselect[playerid]][fAuction][1];
				SetAccountInfo(GetPlayerID(FarmInfo[bizselect[playerid]][fAuctionName]), pData[GetPlayerID(FarmInfo[bizselect[playerid]][fAuctionName])][pBank], "pBank");
			}
			else if(!IsPlayerConnected(GetPlayerID(FarmInfo[bizselect[playerid]][fAuctionName])) && FarmInfo[bizselect[playerid]][fAuction][1] > 0)
			{
				new szQuery[66+MAX_PLAYER_NAME+11];
				mysql_format(DATABASE, szQuery, sizeof(szQuery), "UPDATE `"TABLE_ACCOUNTS"` SET `pBank` = pBank+%i WHERE Name = '%e'",FarmInfo[bizselect[playerid]][fAuction][1],FarmInfo[bizselect[playerid]][fAuctionName]);
				mysql_query(DATABASE, szQuery);
			}

			strmid(FarmInfo[bizselect[playerid]][fAuctionName],pData[playerid][pName], 0, strlen(pData[playerid][pName]), 24);
			pData[playerid][pBank] -= strval(inputtext);
			SetAccountInfo(playerid, pData[playerid][pBank], "pBank");

			format(string,128," Вы перебили ставку за Ферму [%i]",FarmInfo[bizselect[playerid]][fID]-1);
			MoneyLog(pData[playerid][pName],"None", strval(inputtext), "(-)FarmBet");
			SaveMySQL(9, bizselect[playerid]);
			return SCM(playerid,COLOR_INDIGO,string);
		}
	case 1693: if(response && listitem == 3) return ShowPlayerDialog(playerid,1694,DIALOG_STYLE_INPUT,"Аукцион бизнесов","Введите сумму ставки", "Поставить", "Отмена");
	case 1691: if(response && listitem == 3) return ShowPlayerDialog(playerid,1692,DIALOG_STYLE_INPUT,"Аукцион бизнесов","Введите сумму ставки", "Поставить", "Отмена");
	case 1692:
		{
			if(!response) return true;
			if(pData[playerid][pLevel] < 4) return SCM(playerid,COLOR_GREY," Ставить ставки можно с 4-х лет в штате");
			for(new i = 1; i <= TOTALSHOPS; i++) if(!strcmp(pData[playerid][pName], WorkshopInfo[i][wAuctionName], true) && WorkshopInfo[i][wAuction][0] > 0) return SCM(playerid,COLOR_GREY," Вы уже делали ставку на один из бизнесов");
			if(WGet(playerid)) return SCM(playerid,COLOR_GREY," У вас уже есть бизнес");
			if(GetPlayerID(WorkshopInfo[bizselect[playerid]][wAuctionName]) == playerid && WorkshopInfo[bizselect[playerid]][wAuction][0] > 0) return SCM(playerid,COLOR_GREY," Ваша ставка актуальна");
			if(strval(inputtext) < WorkshopInfo[bizselect[playerid]][wAuction][3]) return SCM(playerid,COLOR_GREY," Вам не удалось перебить ставку");
			if(strval(inputtext) < 100000 && WorkshopInfo[bizselect[playerid]][wAuction][3] == 0) return SCM(playerid,COLOR_GREY," Минимальная ставка на CTO: 100.000 вирт.");
			if(pData[playerid][pBank] < strval(inputtext) || strval(inputtext) > 100000000) return SCM(playerid,COLOR_GREY," На вашем банковском счету  Недостаточно средств");
			if(strval(inputtext)-WorkshopInfo[bizselect[playerid]][wAuction][0] < 100000) return SCM(playerid,COLOR_GREY," Вам не удалось перебить ставку");
			if(WorkshopInfo[bizselect[playerid]][wAuction][3] == 0) WorkshopInfo[bizselect[playerid]][wAuction][3] = strval(inputtext)/2;
			WorkshopInfo[bizselect[playerid]][wAuction][1] = WorkshopInfo[bizselect[playerid]][wAuction][0];
			WorkshopInfo[bizselect[playerid]][wAuction][0] = strval(inputtext);
			WorkshopInfo[bizselect[playerid]][wAuction][2] = 6;
			if(IsPlayerConnected(GetPlayerID(WorkshopInfo[bizselect[playerid]][wAuctionName])) && WorkshopInfo[bizselect[playerid]][wAuction][1] > 0)
			{
				format(string,144,"Игрок %s перебил вашу ставку за СТО [%i]",pData[playerid][pName],WorkshopInfo[bizselect[playerid]][wID]-1);
				SCM(GetPlayerID(WorkshopInfo[bizselect[playerid]][wAuctionName]),COLOR_INDIGO,string);
				pData[GetPlayerID(WorkshopInfo[bizselect[playerid]][wAuctionName])][pBank] += WorkshopInfo[bizselect[playerid]][wAuction][1];
				SetAccountInfo(GetPlayerID(WorkshopInfo[bizselect[playerid]][wAuctionName]), pData[GetPlayerID(WorkshopInfo[bizselect[playerid]][wAuctionName])][pBank], "pBank");
			}
			else if(!IsPlayerConnected(GetPlayerID(WorkshopInfo[bizselect[playerid]][wAuctionName])) && WorkshopInfo[bizselect[playerid]][wAuction][1] > 0)
			{
				new szQuery[66+11+MAX_PLAYER_NAME];
				mysql_format(DATABASE, szQuery, sizeof(szQuery), "UPDATE `"TABLE_ACCOUNTS"` SET `pBank` = pBank+%i WHERE Name = '%e'",WorkshopInfo[bizselect[playerid]][wAuction][1],WorkshopInfo[bizselect[playerid]][wAuctionName]);
				mysql_query(DATABASE, szQuery);
			}

			strmid(WorkshopInfo[bizselect[playerid]][wAuctionName],pData[playerid][pName], 0, strlen(pData[playerid][pName]), 24);
			pData[playerid][pBank] -= strval(inputtext);
			SetAccountInfo(playerid, pData[playerid][pBank], "pBank");
			format(string,128," Вы перебили ставку за СТО [%i]",WorkshopInfo[bizselect[playerid]][wID]-1);
			MoneyLog(pData[playerid][pName],"None", strval(inputtext), "(-)CTOBet");
			SaveMySQL(3, bizselect[playerid]);
			return SCM(playerid,COLOR_INDIGO,string);
		}
	case 1667:
		{
			new sstring[10];
			if(!response) return true;
			bizselect[playerid] = bizname[playerid][listitem+1];
			if(BizzInfo[bizselect[playerid]][bLastStavka] == 0) format(sstring,9,"%i",BizzInfo[bizselect[playerid]][bStavka]);
			else format(sstring,32,"Скрыта");
			format(string,300,"{FFFF00}Бизнес: %s.\n{ffffff}Предыдущая ставка: %i\n{ffffff}Текущая ставка: %s\n{33AA33}Сделать ставку",BizzInfo[bizselect[playerid]][bMessage],BizzInfo[bizselect[playerid]][bLastStavka], sstring);
			ShowPlayerDialog(playerid,1668,DIALOG_STYLE_LIST,"Аукцион бизнесов",string, "Далее", "Отмена");
		}
	case 1668: if(response && listitem == 3) ShowPlayerDialog(playerid,1669,DIALOG_STYLE_INPUT,"Аукцион бизнесов","Введите сумму ставки", "Поставить", "Отмена");
	case 1669:
		{
			if(!response) return true;
			if(pData[playerid][pLevel] < 4) return SCM(playerid,COLOR_GREY," Ставить ставки можно с 4-х лет в штате");
			for(new i = 1; i <= TotalBizz; i++) if(!strcmp(pData[playerid][pName], BizzInfo[i][bNameStavka], true) && BizzInfo[i][bStavka] > 0) return SCM(playerid,COLOR_GREY," Вы уже делали ставку на один из бизнесов");
			if(BGet(playerid)) return SCM(playerid,COLOR_GREY," У вас уже есть бизнес");
			if(GetPlayerID(BizzInfo[bizselect[playerid]][bNameStavka]) == playerid && BizzInfo[bizselect[playerid]][bStavka] > 0) return SCM(playerid,COLOR_GREY," Ваша ставка актуальна");
			if(strval(inputtext) < BizzInfo[bizselect[playerid]][bMinStavka]) return SendMes(playerid,COLOR_GREY," Минимальная ставка на бизнес: %i вирт.",BizzInfo[bizselect[playerid]][bPrice]);
			if(strval(inputtext) < 50000 && BizzInfo[bizselect[playerid]][bMinStavka] == 0) return SCM(playerid,-1," Недостаточно денег");
			if(pData[playerid][pBank] <= strval(inputtext) || strval(inputtext) > 100000000) return SCM(playerid,COLOR_GREY," На вашем банковском счету  Недостаточно средств");
			if(strval(inputtext)-BizzInfo[bizselect[playerid]][bStavka] < 15000) return SCM(playerid,COLOR_GREY," Вам не удалось перебить ставку");
			if(BizzInfo[bizselect[playerid]][bMinStavka] == 0) BizzInfo[bizselect[playerid]][bMinStavka] = strval(inputtext)/2;
			BizzInfo[bizselect[playerid]][bLastStavka] = BizzInfo[bizselect[playerid]][bStavka];
			BizzInfo[bizselect[playerid]][bStavka] = strval(inputtext);
			BizzInfo[bizselect[playerid]][bTimeStavka] = 6;
			if(IsPlayerConnected(GetPlayerID(BizzInfo[bizselect[playerid]][bNameStavka])) && BizzInfo[bizselect[playerid]][bLastStavka] > 0)
			{
				format(string,144,"Игрок %s перебил вашу ставку за бизнес %s",pData[playerid][pName],BizzInfo[bizselect[playerid]][bMessage]);
				SCM(GetPlayerID(BizzInfo[bizselect[playerid]][bNameStavka]),COLOR_INDIGO,string);
				pData[GetPlayerID(BizzInfo[bizselect[playerid]][bNameStavka])][pBank] += BizzInfo[bizselect[playerid]][bLastStavka];
				SetAccountInfo(GetPlayerID(BizzInfo[bizselect[playerid]][bNameStavka]), pData[GetPlayerID(BizzInfo[bizselect[playerid]][bNameStavka])][pBank], "pBank");
			}
			else if(!IsPlayerConnected(GetPlayerID(BizzInfo[bizselect[playerid]][bNameStavka])) && BizzInfo[bizselect[playerid]][bLastStavka] > 0)
			{
				new szQuery[66+11+MAX_PLAYER_NAME];
				mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `"TABLE_ACCOUNTS"` SET `pBank` = pBank+%i WHERE Name = '%e'",BizzInfo[bizselect[playerid]][bLastStavka],BizzInfo[bizselect[playerid]][bNameStavka]);
				mysql_query(DATABASE, szQuery);
			}

			strmid(BizzInfo[bizselect[playerid]][bNameStavka],pData[playerid][pName], 0, strlen(pData[playerid][pName]), 24);
			pData[playerid][pBank] -= strval(inputtext);
			SetAccountInfo(playerid, pData[playerid][pBank], "pBank");
			format(string,128," Вы перебили ставку за бизнес %s",BizzInfo[bizselect[playerid]][bMessage]);
			MoneyLog(pData[playerid][pName],BizzInfo[bizselect[playerid]][bMessage], strval(inputtext), "(-)BizzBet");
			SCM(playerid,COLOR_INDIGO,string);
			SaveMySQL(4,bizselect[playerid]);
		}
	case 1334:
		{
			if(!response) return true;
			new null = 0, null_[MAX_VEHICLES], min_, max_;
			switch(listitem)
			{
			case 0: min_ = 0, max_ = 19;
			case 1: if(job_lvl(pData[playerid][job_skill][job_ugon]) < 5) return SCM(playerid,COLOR_GREY," У вас недостаточно опыта (минимум 5 lvl)"); else min_ = 39, max_ = 56;
			case 2: if(job_lvl(pData[playerid][job_skill][job_ugon]) < 10) return SCM(playerid,COLOR_GREY," У вас недостаточно опыта (минимум 10 lvl)"); else min_ = 20, max_ = 38;
			case 3: if(job_lvl(pData[playerid][job_skill][job_ugon]) < 30) return SCM(playerid,COLOR_GREY," У вас недостаточно опыта (минимум 30 lvl)"); else min_ = 57, max_ = 71;
			case 4: if(job_lvl(pData[playerid][job_skill][job_ugon]) < 50) return SCM(playerid,COLOR_GREY," У вас недостаточно опыта (минимум 50 lvl)"); else min_ = 72, max_ = 85;
			}
			foreach(new i: Vehicle)
			{
				for(new idx = min_; idx <= max_; idx++)
				{
					if(GetVehicleModel(i) == ShopCar[idx][0] && SpeedVehicle(i) == 0 && IsVehicleOccupied(i) == -1 && vehicleforeach(i) != -1 && GetVehicleVirtualWorld(i) < 100 && i != house_car[playerid]) null_[null] = i, null++;
				}
			}
			if(pData[playerid][pLimitAutoUgon] > 0) return SendMes(playerid,COLOR_GREY," Брать контракт можно раз в 10 минут. Приходите через %i секунд.",pData[playerid][pLimitAutoUgon]);
			if(null) return SCM(playerid,COLOR_GREY," Cейчас для тебя нет работы, приходи позже");
			new Float:c[3], car = null_[random(null)];
			SetPVarInt(playerid,"job_auto",GetVehicleModel(car));
			AntiCheatGetVehiclePos(car,c[0],c[1],c[2]);
			/*'~k~~VEHICLE_ENTER_EXIT~'*/
			SendMes(playerid,0x6495EDFF," Пригони нам тачку марки %s, и мы тебе хорошо заплатим.",VehicleNames[GetVehicleModel(car)-400]);
			SCM(playerid,0x6495EDFF," (( Чтобы взломать замок зажми ~k~~PED_SPRINT~ (по умолчанию пробел) ))");
			SCM(playerid,0x6495EDFF," Подобную тачку наши парни недавно видели. Я скинул тебе координаты");
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			gz_autorob[playerid]  = GangZoneCreate(c[0]-95,c[1]-80,c[0]+70,c[1]+85);
			printf("GangZoneCrete [Robbing GZ] [ID: %i]",gz_autorob[playerid]);
			GangZoneShowForPlayer(playerid,gz_autorob[playerid],COLOR_BLACK);
			SetPVarInt(playerid,"job_auto_time",1200);
		}
	case 1745:
		{
			if(!response) return true;
			if(pPressed[playerid] != -1) return SCM(playerid,COLOR_GREY," Вы уже начали рабочий день. Используйте /route чтобы завершить рабочий день");
			if(GetPlayerVehicleID(playerid) >= buscar[0] && GetPlayerVehicleID(playerid) <= buscar[1]) SetPVarInt(playerid, "TypeBus", 1);
			else if(GetPlayerVehicleID(playerid) >= buscar[2] && GetPlayerVehicleID(playerid) <= buscar[3]) SetPVarInt(playerid, "TypeBus", 2);
			else if(GetPlayerVehicleID(playerid) >= buscar[4] && GetPlayerVehicleID(playerid) <= buscar[5]) SetPVarInt(playerid, "TypeBus", 3);
			else return true;
			new name[35];
			switch(GetPVarInt(playerid,"TypeBus"))
			{
			case 1: name = "ВнутриГородской ЛС";
			case 2: name = "ВнутриГородской СФ";
			case 3: name = "ВнутриГородской ЛВ";
			}
			format(string, 144, " Водитель автобуса %s начал маршрут %s. Проезд: бесплатный", pData[playerid][pName], name);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			
			new LabelString[78];
			format(LabelString, 78, "%s\n« Проезд бесплатный »", name);
			
			JobText3D[playerid] = CreateDynamic3DTextLabel(LabelString, COLOR_GREEN, 0.0, 0.0, 2.25, 50.0, INVALID_PLAYER_ID, GetPlayerVehicleID(playerid));
			pPressed[playerid] = 0;
			new i = pPressed[playerid], type = GetPVarInt(playerid, "TypeBus");
			if(type == 1) SetPlayerRaceCheckpoint(playerid,0,BusCityLS[i][0],BusCityLS[i][1],BusCityLS[i][2],BusCityLS[i][3],BusCityLS[i][4],BusCityLS[i][5],7.0);
			if(type == 2) SetPlayerRaceCheckpoint(playerid,0,BusCitySF[i][0],BusCitySF[i][1],BusCitySF[i][2],BusCitySF[i][3],BusCitySF[i][4],BusCitySF[i][5],7.0);
			if(type == 3){SetPlayerRaceCheckpoint(playerid,0,BusCityLV[76][0],BusCityLV[76][1],BusCityLV[76][2],BusCityLV[76][3],BusCityLV[76][4],BusCityLV[76][5],5.0); pPressed[playerid] = 76; }
			return true;
		}
	case 163:
		{
			if(!response) return true;
			new name[35];
			switch(listitem)
			{
			case 0: name = "АвтоВокзал LS << >> Автошкола SF";
			case 1: name = "АвтоВокзал LS << >> АвтоВокзал LV";
			case 2: name = "АвтоВокзал LS << >> Заводы";
			}
			SetPVarInt(playerid, "TypeBus", listitem+4);
			format(string, 180, "Водитель автобуса %s начал маршрут %s. Проезд: бесплатный", pData[playerid][pName], name);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			
			new LabelString[78];
			format(LabelString, 101, "%s\n« Проезд бесплатный »", name);
			JobText3D[playerid] = CreateDynamic3DTextLabel(LabelString, COLOR_GREEN, 0.0, 0.0, 2.25, 50.0, INVALID_PLAYER_ID, GetPlayerVehicleID(playerid));
			pPressed[playerid] = 0;
			new i = pPressed[playerid], type = GetPVarInt(playerid, "TypeBus");
			if(type == 4) SetPlayerRaceCheckpoint(playerid,0,BusSchool[i][0],BusSchool[i][1],BusSchool[i][2],BusSchool[i][3],BusSchool[i][4],BusSchool[i][5],7.0);
			if(type == 5) SetPlayerRaceCheckpoint(playerid,0,BusLSLV[i][0],BusLSLV[i][1],BusLSLV[i][2],BusLSLV[i][3],BusLSLV[i][4],BusLSLV[i][5],5.0);
			if(type == 6) SetPlayerRaceCheckpoint(playerid,0,BusLSZavodi[i][0],BusLSZavodi[i][1],BusLSZavodi[i][2],BusLSZavodi[i][3],BusLSZavodi[i][4],BusLSZavodi[i][5],5.0);
			return true;
		}
	case 5225:
		{
			if(!response) return DeletePVar(playerid,"lsaammo");
			if(GetPVarInt(playerid,"lsaammo") && lsamatbi < 100) return SCM(playerid,COLOR_GREY," На складе недостаточно материалов");
			else if(pData[playerid][pMember] == 1 && lspdmatbi < 100) return SCM(playerid,COLOR_GREY," На складе недостаточно материалов");
			else if(pData[playerid][pMember] == 2 && fbimats < 100) return SCM(playerid,COLOR_GREY," На складе недостаточно материалов");
			else if(pData[playerid][pMember] == 10 && sfpdmats < 100) return SCM(playerid,COLOR_GREY," На складе недостаточно материалов");
			else if(pData[playerid][pMember] == 21 && lvpdmats < 100) return SCM(playerid,COLOR_GREY," На складе недостаточно материалов");
			else if(pData[playerid][pMember] == 3 && armmatsf < 100) return SCM(playerid,COLOR_GREY," На складе недостаточно материалов");
			else if(pData[playerid][pMember] == 19 && armmatbi < 100) return SCM(playerid,COLOR_GREY," На складе недостаточно материалов");
			new guns[2];
			switch(listitem)
			{
			case 0:
				{
					GetPlayerWeaponData(playerid, 2, guns[0], guns[1]);
					if(guns[0] == 24 && guns[1] < 21 || guns[0] != 24) DeletePVar(playerid,"_Deagle");
					SetPVarInt(playerid,"_Deagle",GetPVarInt(playerid,"_Deagle")+1);
					if(guns[0] == 24 && guns[1] > 21 || GetPVarInt(playerid,"_Deagle") > 2) return SCM(playerid,COLOR_GREY," Вы не можете взять больше"), ShowPlayerDialog(playerid, 5225, DIALOG_STYLE_TABLIST_HEADERS, "Взять оружие",
					"Оружие\tПатроны\n\
					Desert Eagle\t[21п]\n\
					Shotgun\t[30п]\n\
					MP5\t[90п]\n\
					M4A1\t[150п]\n\
					Rifle\t[30п]\n\
					Броня\n\
					Спец оружие\n",
					"Взять", "Отмена");
					GivePlayerWeaponEx(playerid,24,21);
					SCM(playerid, COLOR_GREEN,"Вам выдано: Deagle (3 обоймы)");
				}
			case 1:
				{
					GetPlayerWeaponData(playerid, 3, guns[0], guns[1]);
					if(guns[0] == 25 && guns[1] < 30 || guns[0] != 25) DeletePVar(playerid,"_Shotgun");
					SetPVarInt(playerid,"_Shotgun",GetPVarInt(playerid,"_Shotgun")+1);
					if(guns[0] == 25 && guns[1] > 30 && GetPVarInt(playerid,"_Shotgun") > 2) return SCM(playerid,COLOR_GREY," Вы не можете взять больше"), ShowPlayerDialog(playerid, 5225, DIALOG_STYLE_TABLIST_HEADERS, "Взять оружие",
					"Оружие\tПатроны\n\
					Desert Eagle\t[21п]\n\
					Shotgun\t[30п]\n\
					MP5\t[90п]\n\
					M4A1\t[150п]\n\
					Rifle\t[30п]\n\
					Броня\n\
					Спец оружие\n",
					"Взять", "Отмена");
					GivePlayerWeaponEx(playerid,25,30);
					SCM(playerid, COLOR_GREEN,"Вам выдано: Shotgun (30 пт.)");
				}
			case 2:
				{
					GetPlayerWeaponData(playerid, 4, guns[0], guns[1]);
					if(guns[0] == 29 && guns[1] < 90 || guns[0] != 29) DeletePVar(playerid,"_MP5");
					SetPVarInt(playerid,"_MP5",GetPVarInt(playerid,"_MP5")+1);
					if(guns[0] == 29 && guns[1] > 90 || GetPVarInt(playerid,"_MP5") > 2) return SCM(playerid,COLOR_GREY," Вы не можете взять больше"), ShowPlayerDialog(playerid, 5225, DIALOG_STYLE_TABLIST_HEADERS, "Взять оружие",
					"Оружие\tПатроны\n\
					Desert Eagle\t[21п]\n\
					Shotgun\t[30п]\n\
					MP5\t[90п]\n\
					M4A1\t[150п]\n\
					Rifle\t[30п]\n\
					Броня\n\
					Спец оружие\n",
					"Взять", "Отмена");
					GivePlayerWeaponEx(playerid,29,90);
					SCM(playerid, COLOR_GREEN,"Вам выдано: MP5 (3 обоймы)");
				}
			case 3:
				{
					GetPlayerWeaponData(playerid, 5, guns[0], guns[1]);
					if(guns[0] == 31 && guns[1] < 150 || guns[0] != 31) DeletePVar(playerid,"_M4A1");
					SetPVarInt(playerid,"_M4A1",GetPVarInt(playerid,"_M4A1")+1);
					if(guns[0] == 31 && guns[1] > 150 || GetPVarInt(playerid,"_M4A1") > 2) return SCM(playerid,COLOR_GREY," Вы не можете взять больше"), ShowPlayerDialog(playerid, 5225, DIALOG_STYLE_TABLIST_HEADERS, "Взять оружие",
					"Оружие\tПатроны\n\
					Desert Eagle\t[21п]\n\
					Shotgun\t[30п]\n\
					MP5\t[90п]\n\
					M4A1\t[150п]\n\
					Rifle\t[30п]\n\
					Броня\n\
					Спец оружие\n",
					"Взять", "Отмена");
					GivePlayerWeaponEx(playerid,31,150);
					SCM(playerid, COLOR_GREEN,"Вам выдано: M4A1 (3 обоймы)");
				}
			case 4:
				{
					GetPlayerWeaponData(playerid, 6, guns[0], guns[1]);
					if(guns[0] == 33 && guns[1] < 30 || guns[0] != 33) DeletePVar(playerid,"_Rifle");
					SetPVarInt(playerid,"_Rifle",GetPVarInt(playerid,"_Rifle")+1);
					if(guns[0] == 33 && guns[1] > 30 || GetPVarInt(playerid,"_Rifle") > 2) return SCM(playerid,COLOR_GREY," Вы не можете взять больше"), ShowPlayerDialog(playerid, 5225, DIALOG_STYLE_TABLIST_HEADERS, "Взять оружие",
					"Оружие\tПатроны\n\
					Desert Eagle\t[21п]\n\
					Shotgun\t[30п]\n\
					MP5\t[90п]\n\
					M4A1\t[150п]\n\
					Rifle\t[30п]\n\
					Броня\n\
					Спец оружие\n",
					"Взять", "Отмена");
					GivePlayerWeaponEx(playerid,33,30);
					SCM(playerid, COLOR_GREEN,"Вам выдано: Rifle (30 пт.)");
				}
			case 5:
				{
					new Float:armour;
					GetPlayerArmour(playerid,armour);
					new Float:health;
					GetPlayerHealth(playerid, health);
					if(armour > 90 && health > 99) return SCM(playerid,COLOR_GREY," Вы не можете взять больше"), ShowPlayerDialog(playerid, 5225, DIALOG_STYLE_TABLIST_HEADERS, "Взять оружие",
					"Оружие\tПатроны\n\
					Desert Eagle\t[21п]\n\
					Shotgun\t[30п]\n\
					MP5\t[90п]\n\
					M4A1\t[150п]\n\
					Rifle\t[30п]\n\
					Броня\n\
					Спец оружие\n",
					"Взять", "Отмена");
					SetPlayerHealth(playerid, 100);
					SetPlayerArmour(playerid, 100);
					UpdatePlayerHunger(playerid, 100);// При выходе
					SCM(playerid, COLOR_GREEN,"Вам выдано: Броня");
				}
			case 6:
				{
					if(pData[playerid][pMember] == 1 || pData[playerid][pMember] == 10 || pData[playerid][pMember] == 21) {
						GetPlayerWeaponData(playerid, 1, guns[0], guns[1]);
						if(guns[0] == 3 && guns[1] > 0) return SCM(playerid,COLOR_GREY," Вы не можете взять больше"), ShowPlayerDialog(playerid, 5225, DIALOG_STYLE_TABLIST_HEADERS, "Взять оружие",
						"Оружие\tПатроны\n\
						Desert Eagle\t[21п]\n\
						Shotgun\t[30п]\n\
						MP5\t[90п]\n\
						M4A1\t[150п]\n\
						Rifle\t[30п]\n\
						Броня\n\
						Спец оружие\n",
						"Взять", "Отмена");
						GivePlayerWeaponEx(playerid,3,1);
						SCM(playerid, COLOR_GREEN,"Вам выдано: Дубинка"); }
					if(pData[playerid][pMember] == 2)
					{
						return ShowPlayerDialog(playerid, 5226, DIALOG_STYLE_TABLIST_HEADERS, "Спец оружие",
						"Оружие\tПатроны\n\
						Гранаты\t[21п]\n\
						Shotgun\t[30п]\n\
						MP5\t[90п]\n\
						M4A1\t[150п]\n\
						Rifle\t[30п]\n\
						Броня\n\
						Спец оружие\n",
						"Взять", "Отмена");
					}
					if(pData[playerid][pMember] == 3 || pData[playerid][pMember] == 19) {
						GetPlayerWeaponData(playerid, 11, guns[0], guns[1]);
						if(guns[0] == 46 && guns[1] > 0) return SCM(playerid,COLOR_GREY," Вы не можете взять больше"), ShowPlayerDialog(playerid, 5225, DIALOG_STYLE_TABLIST_HEADERS, "Взять оружие",
						"Оружие\tПатроны\n\
						Desert Eagle\t[21п]\n\
						Shotgun\t[30п]\n\
						MP5\t[90п]\n\
						M4A1\t[150п]\n\
						Rifle\t[30п]\n\
						Броня\n\
						Спец оружие\n",
						"Взять", "Отмена");
						GivePlayerWeaponEx(playerid,46,1);
						SCM(playerid, COLOR_GREEN,"Вам выдано: Парашют"); }
				}
			}
			if(GetPVarInt(playerid,"lsaammo")) lsamatbi-=100;
			else if(pData[playerid][pMember] == 1) lspdmatbi-=100;
			else if(pData[playerid][pMember] == 2) fbimats-=100;
			else if(pData[playerid][pMember] == 10) sfpdmats-=100;
			else if(pData[playerid][pMember] == 21) lvpdmats-=100;
			else if(pData[playerid][pMember] == 3) armmatsf-=100;
			else if(pData[playerid][pMember] == 19) armmatbi-=100;
			return ShowPlayerDialog(playerid, 5225, DIALOG_STYLE_TABLIST_HEADERS, "Взять оружие",
			"Оружие\tПатроны\n\
			Desert Eagle\t[21п]\n\
			Shotgun\t[30п]\n\
			MP5\t[90п]\n\
			M4A1\t[150п]\n\
			Rifle\t[30п]\n\
			Броня\n\
			Спец оружие\n",
			"Взять", "Отмена");
		}
	case 5226:
		{
			if(!response) return true;
			if(GetPVarInt(playerid,"lsaammo") && lsamatbi < 100) return SCM(playerid,COLOR_GREY," На складе недостаточно материалов");
			else if(pData[playerid][pMember] == 1 && lspdmatbi < 100) return SCM(playerid,COLOR_GREY," На складе недостаточно материалов");
			else if(pData[playerid][pMember] == 2 && fbimats < 100) return SCM(playerid,COLOR_GREY," На складе недостаточно материалов");
			else if(pData[playerid][pMember] == 10 && sfpdmats < 100) return SCM(playerid,COLOR_GREY," На складе недостаточно материалов");
			else if(pData[playerid][pMember] == 21 && lvpdmats < 100) return SCM(playerid,COLOR_GREY," На складе недостаточно материалов");
			else if(pData[playerid][pMember] == 3 && armmatsf < 100) return SCM(playerid,COLOR_GREY," На складе недостаточно материалов");
			else if(pData[playerid][pMember] == 19 && armmatbi < 100) return SCM(playerid,COLOR_GREY," На складе недостаточно материалов");
			new guns[2];
			switch(listitem)
			{
			case 0:
				{
					GetPlayerWeaponData(playerid, 8, guns[0], guns[1]);
					if(guns[0] == 17 && guns[1] > 0) return SCM(playerid,COLOR_GREY," Вы не можете взять больше"), ShowPlayerDialog(playerid, 5225, DIALOG_STYLE_TABLIST_HEADERS, "Взять оружие",
					"Оружие\tПатроны\n\
					Desert Eagle\t[21п]\n\
					Shotgun\t[30п]\n\
					MP5\t[90п]\n\
					M4A1\t[150п]\n\
					Rifle\t[30п]\n\
					Броня\n\
					Спец оружие\n",
					"Взять", "Отмена");
					GivePlayerWeaponEx(playerid,17,10);
					SCM(playerid, COLOR_GREEN,"Вам выдано: Дымовая шашка (10 шт.)");
				}
			case 1:
				{
					GetPlayerWeaponData(playerid, 6, guns[0], guns[1]);
					if(guns[0] == 34 && guns[1] == 0 || guns[0] != 34) DeletePVar(playerid,"_Rifle");
					SetPVarInt(playerid,"_Rifle",GetPVarInt(playerid,"_Rifle")+1);
					if(guns[0] == 34 && guns[1] > 0 && GetPVarInt(playerid,"_Rifle") > 2) return SCM(playerid,COLOR_GREY," Вы не можете взять больше"), ShowPlayerDialog(playerid, 5225, DIALOG_STYLE_TABLIST_HEADERS, "Взять оружие",
					"Оружие\tПатроны\n\
					Desert Eagle\t[21п]\n\
					Shotgun\t[30п]\n\
					MP5\t[90п]\n\
					M4A1\t[150п]\n\
					Rifle\t[30п]\n\
					Броня\n\
					Спец оружие\n",
					"Взять", "Отмена");
					GivePlayerWeaponEx(playerid,34,10);
					SCM(playerid, COLOR_GREEN,"Вам выдано: Sniper Rifle (10 пт.)");
				}
			}
			if(GetPVarInt(playerid,"lsaammo")) lsamatbi-=100;
			else if(pData[playerid][pMember] == 1) lspdmatbi-=100;
			else if(pData[playerid][pMember] == 2) fbimats-=100;
			else if(pData[playerid][pMember] == 10) sfpdmats-=100;
			else if(pData[playerid][pMember] == 21) lvpdmats-=100;
			else if(pData[playerid][pMember] == 3) armmatsf-=100;
			else if(pData[playerid][pMember] == 19) armmatbi-=100;
		}
	case 6710:
	{
		if(!response) return true;

		new i = GetPVarInt(playerid, "id_kvart_enter")-1;
		if(listitem == 0)	
		{
			if(!strcmp(kvart_info[i][k_owner],"None",true) ) 
			{
				if(pData[playerid][pPHouseKey] != INVALID_HOUSE_ID)
					return SendClientMessage(playerid, 0xe53935FF, "У вас уже есть дом");

				if(pData[playerid][pKvartiraKey] != INVALID_KVARTIRA_KEY)
					return SendClientMessage(playerid, 0xe53935FF, "У вас уже есть квартира");

				new str_buy_house[213];
				pData[playerid][pKvartiraKey] = i;
			
				
				strmid(kvart_info[i][k_owner],pData[playerid][pName], 0, strlen(pData[playerid][pName]), 24);
				
				pData[playerid][pBank] -= kvart_info[i][k_price];
				
				pData[playerid][pSpawnChange] = 1;

				SCM(playerid, COLOR_WHITE, " Поздравляем с покупкой!");
				//format(cString, sizeof(cString), " Внимание! Теперь каждый час со счёта вашего дома будут снимать комунальные платежи в размере %i вирт",GetHouseOplata(h));
				///SCM(playerid, COLOR_YELLOW,cString);
				//SCM(playerid, COLOR_YELLOW, " Если на счету недостаточно денег, вас выселят");
				//SCM(playerid, COLOR_YELLOW, " Пополнить домашний счёт или узнать баланс можно через банк/банкомат (помощь: /mm -> Помощь по игре -> Команды сервера)");
				GameTextForPlayer(playerid,"~w~welcome home", 5000, 3);

				//BuyHouse(h);
				
				format(str_buy_house, sizeof(str_buy_house),"{FFBF00}Квартира #%i\nВладелец: %s\nЧтобы войти, нажмите клавишу 'ENTER'",i, kvart_info[i][k_owner]);
				UpdateDynamic3DTextLabelText(kvart_info[i][dtext],0x0076FCFF,str_buy_house);
				
				mysql_format(DATABASE, str_buy_house, sizeof str_buy_house, "UPDATE `"TABLE_ACCOUNTS"` SET `pKvartiraKey`='%d',`pBank`='%d',`pSpawnChange`='%d' WHERE Name = %s",kvart_info[i][mysql_id],pData[playerid][pBank],pData[playerid][pSpawnChange],Name(playerid));
				mysql_query(DATABASE, str_buy_house, false);

				mysql_format(DATABASE, str_buy_house, sizeof str_buy_house, "UPDATE `kvartiri` SET `k_owner`='%e' WHERE mysql_id = %d",Name(playerid), kvart_info[i][mysql_id]);
				mysql_query(DATABASE, str_buy_house, false);
				return 1;
			}
			else 
			{
				if(pData[playerid][pKvartiraKey] != i)
					return SendClientMessage(playerid, 0xe53935FF, "Это не ваша квартира!");

				//cmd_sellhouse(playerid);
				return 1;
			}
		}
		if(listitem == 1)
		{
			if(pData[playerid][pKvartiraKey] != i)
					return SendClientMessage(playerid, 0xe53935FF, "Это не ваша квартира!");

			if(kvart_info[i][k_lock])
			{
				kvart_info[i][k_lock] = false;
				GameTextForPlayer(playerid,"~w~House ~g~UNLOCK", 5000, 3);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
				return true;
			}
			else
			{
				kvart_info[i][k_lock] = true;
				GameTextForPlayer(playerid, "~w~House ~r~LOCK", 5000, 3);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
				return true;
			}
		}
		if(listitem == 2)
		{
			cmd_healme(playerid);
			return 1;
		}
		if(listitem == 3)
		{
			// смена инта
			return 1;
		}
		if(listitem == 4)
		{
			new str_h_menu[512];
			format(str_h_menu,sizeof str_h_menu,"{ffffff}Квартира номер %d (%d)\nЭтаж: %d\nВладелец: %s\n\nАптечек: %i штук\nДверной замок: %s",
			i, kvart_info[i][mysql_id],kvart_info[i][k_floor], kvart_info[i][k_owner], kvart_info[i][k_heal], 
			(kvart_info[i][k_lock] ? ("{f44336}Закрыт"):("{4caf50}Открыт")) );
			ShowPlayerDialog(playerid,6711,DIALOG_STYLE_MSGBOX,"Меню квартиры > Информация",str_h_menu,"Готово","Назад");
			return 1;
		}
	}
	case 6711:
	{
		if(!response )
		{
			cmd_kmenu(playerid);
		}
		return 1;
	}
	case 6700:
		{// /hmenu
			if(!response) return true;
			new i = GetPVarInt(playerid, !#pPickHouseId)-1;

			switch(listitem)
			{
				case 0:{
					if(!strcmp(HouseInfo[i][hOwner],"None",true) ) {
						cmd_buyhouse(playerid);
						return 1;
					}
					else {
						cmd_sellhouse(playerid);
						return 1;
					}
				}
				case 1: cmd_open(playerid);
				case 2: cmd_healme(playerid); 
				case 3: 
				{
					if(pData[playerid][pPHouseKey] != i) 
						return SCM(playerid,COLOR_GREY," Это не ваш дом");

					if(HouseInfo[i][hKlass] == 5)
						SetPVarInt(playerid, "SelectedInt_add", 5); // у домов А и S одинаковые интерьеры
					else SetPVarInt(playerid, "SelectedInt_add", HouseInfo[i][hKlass]+1);
					SetPVarInt(playerid, "smena_inta", 1);
					for(new gg; gg < house_int_count; gg++)
					{
						if(interior_info[gg][int_klass] == GetPVarInt(playerid, "SelectedInt_add")-1)
						{
							SetPlayerInterior(playerid,interior_info[gg][int_int]);
							SetPlayerVirtualWorld(playerid,999+playerid);
							SetPlayerPos(playerid,interior_info[gg][int_x],interior_info[gg][int_y],interior_info[gg][int_z]);
							ShowMenuForPlayer(buy_interior_menu,playerid);
							SetPVarInt(playerid, "SelectedInt", gg);
							SCM(playerid, COLOR_DRED, "(( Используйте клавишу 'Быстрый бег' (пробел по умолчанию) ))");
							SCM(playerid, COLOR_DRED, "(( Используйте клавишу 'Вверх,вниз' (W,S по умолчанию) ))");
							return 1;
						}
					}
					return 1;
				}
				case 4:
				{
					new str_h_menu[512];
					format(str_h_menu, sizeof str_h_menu, "%s\n%s\n%s",\
						((HouseInfo[i][h_improve] & h_improve_freez) ? 	("{FFFFFF}Холодильник"):("{AFAFAF}Холодильник\t50000 вирт")),
						((HouseInfo[i][h_improve] & h_improve_safe) ? 	("{FFFFFF}Сейф"):("{AFAFAF}Сейф\t70000  вирт")),
						((HouseInfo[i][h_improve] & h_improve_store) ? 	("{FFFFFF}Шкаф"):("{AFAFAF}Шкаф\t100000  вирт")) );
					ShowPlayerDialog(playerid,80,2,"Меню дома > Улучшения",str_h_menu,"Купить","Назад");
					return 1;
				}
				case 5:
				{
					//if(pData[playerid][pPHouseKey] != i) return SCM(playerid,COLOR_GREY," Это не ваш дом");
					new str_h_menu[512];
					format(str_h_menu,sizeof str_h_menu,"{ffffff}Дом номер %d\nВладелец: %s\n\nАптечек: %i штук\nПродуктов: %d ед.\n{ffffff}Дверной замок: %s{ffffff}\n\nУлучшения:\n\
					Холодильник: %s{FFFFFF}\nСейф: %s{FFFFFF}\nШкаф: %s{FFFFFF}\nСигнализация: {f44336}Нет",
					i, HouseInfo[i][hOwner], HouseInfo[i][hHel], HouseInfo[i][h_prod],
					(HouseInfo[i][hLock] ? ("{f44336}Закрыт"):("{4caf50}Открыт")),
					((HouseInfo[i][h_improve] & h_improve_freez) ? 	("{4caf50}Есть"):("{f44336}Нет")),
					((HouseInfo[i][h_improve] & h_improve_safe) ? 	("{4caf50}Есть"):("{f44336}Нет")),
					((HouseInfo[i][h_improve] & h_improve_store) ? 	("{4caf50}Есть"):("{f44336}Нет")) );
					ShowPlayerDialog(playerid,6701,DIALOG_STYLE_MSGBOX,"Меню дома > Информация",str_h_menu,"Готово","Назад");
					return 1;
				}
			}
			return 1;
		}
		case 6701:
		{
			if(!response)
			{
				cmd_hmenu(playerid);
				return 1;
			}
			return 1;
		}
		case 6702:
		{
			if(!response)
			{
				ShowMenuForPlayer(buy_interior_menu,playerid);
				return 1;
			}
			new h = pData[playerid][pPHouseKey];
			if(pData[playerid][pBank] < (100000*(HouseInfo[h][hKlass]+1)))
			{	
				ShowMenuForPlayer(buy_interior_menu,playerid);
				SendClientMessage(playerid, 0xf44336FF, "У вас недостаточно денег на банковском счету!");
				return 1;
			}

			
			HouseInfo[h][hInt] = GetPVarInt(playerid, "SelectedInt");
			SendMes(playerid, 0x2196f3FF, "Вы успешно сменили интерьер за {ffffff}%d {2196f3}вирт", 100000*(HouseInfo[h][hKlass]+1));
			pData[playerid][pBank] -= 100000*(HouseInfo[h][hKlass]+1);
			SetAccountInfo(playerid,pData[playerid][pBank],"pBank");
			SetHouseInfo(h, HouseInfo[h][hInt], "hInt");

			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerPos(playerid,HouseInfo[h][hEntrancex],HouseInfo[h][hEntrancey],HouseInfo[h][hEntrancez]);
			DeletePVar(playerid, "SelectedInt");
			DeletePVar(playerid, "SelectedInt_add");
			DeletePVar(playerid, "smena_inta");
			return 1;
		}
		case 80:
	    {
			if(!response)
			{
				cmd_hmenu(playerid);
				return 1;
			}
			if(!GetPVarInt(playerid, !#pPickHouseId)) return 1;

			new i = (GetPVarInt(playerid, !#pPickHouseId)-1);
			new hintid = HouseInfo[i][hInt];
			if(listitem == 0)
			{
			    if(HouseInfo[i][h_improve] & h_improve_freez)
			    	return SendClientMessage(playerid, COLOR_RED,"У вас уже есть холодильник!");

			    GiveMoney(playerid, -50000);
			    SendClientMessage(playerid, 0x81c784FF,"Вы купили холодильник!");
			    HouseInfo[i][h_improve] |= h_improve_freez;
			    CreateDynamicObject(2141,gHintFreez[hintid][0],gHintFreez[hintid][1],gHintFreez[hintid][2],0,0,gHintFreez[hintid][3],i+50);
			}
			else if(listitem == 1)
			{
			    if(HouseInfo[i][h_improve] & h_improve_safe)
			    	return SendClientMessage(playerid, COLOR_RED,"У вас уже есть сейф!");

			    GiveMoney(playerid, -70000);
			    SendClientMessage(playerid, 0x81c784FF,"Вы купили сейф!");
			    HouseInfo[i][h_improve] |= h_improve_safe;
			    CreateDynamicObject(2332,gHintSafe[hintid][0],gHintSafe[hintid][1],gHintSafe[hintid][2],0,0,gHintSafe[hintid][3],i+50);
			}
			else if(listitem == 2)
			{
			    if(HouseInfo[i][h_improve] & h_improve_store)
			    	return SendClientMessage(playerid, COLOR_RED,"У вас уже есть шкаф!");

			    GiveMoney(playerid, -100000);
			    SendClientMessage(playerid, 0x81c784FF,"Вы купили шкаф!");
			    HouseInfo[i][h_improve] |= h_improve_store;
			    CreateDynamicObject(2708,gHintStore[hintid][0],gHintStore[hintid][1],gHintStore[hintid][2],0,0,gHintStore[hintid][3],i+50);
			}
			SetHouseInfo(i, HouseInfo[i][h_improve] , "h_improve");
			return 1;
	    }

	
	case 10399:
		{
			if(response)
			{
				new skin = pData[playerid][pChar][0];
				pData[playerid][pChar][0] = pData[playerid][pChar][listitem+1]; // При выходе
				SetPlayerSkin(playerid,pData[playerid][pChar][0]);
				pData[playerid][pChar][listitem+1] = skin; // При выходе
				ShowPlayerDialog(playerid,10399,DIALOG_STYLE_LIST, "Гардероб","Вешалка №1\nВешалка №2\nВешалка №3\nВешалка №4\nВешалка №5", "Повешать", "Выход");
			}
			else SpawnPlayer(playerid);
		}
	case 229:
		{
			if(response)
			{
				if(!strlen(inputtext))return ShowPlayerDialog(playerid,229,DIALOG_STYLE_INPUT, "Задать вопрос по игре", "Напишите свой вопрос", "Отправить", "Назад");
				if(GetPVarInt(playerid,"FloodAques") > 0) return SCM(playerid, 0xFFD5BBAA, " АнтиФлуд саппортам 15 секунд");
				format(string, 144, " ->Вопрос %s[%i]: %s", Name(playerid), playerid, (inputtext));
				SCM(playerid, COLOR_YELLOW, string);
				format(string, 144, " ->Вопрос %s[%i]: %s", Name(playerid), playerid, (inputtext));
				HelperMessage(0xE9A52800, string);
				SetPVarInt(playerid,"FloodAques",15);
				return true;
			}
			else return cmd_mm(playerid);
		}
	case 10352:
		{
			if(response)
			{
				if(pData[playerid][pBank] <= 2999999) return SCM(playerid, COLOR_GRAD1, " Для смены ника требуется 3000000 вирт на банковском счету");
				if(sscanf(inputtext, "s[24]",input_name)) return ShowPlayerDialog(playerid,10352,DIALOG_STYLE_INPUT, "Смена имени", "Введите новое имя\n\tИмя должно иметь формат: Имя_Фамилия\n\tИмя может содержать буквы от A-z и символ '_'\n\tДлина имени не может быть более 20 символов\n\tСтоимость смены имени 3000000 вирт", "Готово", "Назад");
				for(new i = strlen(inputtext); i != 0; --i)
				switch(inputtext[i])
				{
				case 'А'..'Я', 'а'..'я', ' ':
					return ShowPlayerDialog(playerid,10352,DIALOG_STYLE_INPUT, "Смена имени", "Введите новое имя\n\tИмя должно иметь формат: Имя_Фамилия\n\tИмя может содержать буквы от A-z и символ '_'\n\tДлина имени не может быть более 20 символов\n\tСтоимость смены имени 3000000 вирт", "Готово", "Назад");
				case '0'..'9':
					return ShowPlayerDialog(playerid,10352,DIALOG_STYLE_INPUT, "Смена имени", "Введите новое имя\n\tИмя должно иметь формат: Имя_Фамилия\n\tИмя может содержать буквы от A-z и символ '_'\n\tДлина имени не может быть более 20 символов\n\tСтоимость смены имени 3000000 вирт", "Готово", "Назад");
				}
				new szQuery[58+MAX_PLAYER_NAME];
				mysql_format(DATABASE, szQuery, sizeof(szQuery), "SELECT `Name` FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%e'",input_name);
				mysql_tquery(DATABASE, szQuery,"OnMySQL_QUERY","iis",38,playerid,"");
			}
		}
	case 1://авторизация
		{
			new szQuery[109+MAX_PLAYER_NAME];
			if(!response) 
			{
				SendClientMessage(playerid, 0xe53935FF, "Для выхода используйте /q");
				return L_Kick(playerid,5);
			}
			if(pData[playerid][pLogin]) return L_Kick(playerid,5);
			if(!strlen(inputtext))
			{
				format(string,256, "{B4B5B7}______________________________________\n\n Добро пожаловать на сервер "NameServer"{B4B5B7}\n       Этот аккаунт зарегистрирован\n\nЛогин: {BFC0C2}%s{B4B5B7}\nВведите пароль:\n______________________________________", Name(playerid));
				ShowPlayerDialog(playerid,1,DIALOG_STYLE_PASSWORD, "Авторизация",string, "Войти", "Отмена");
				return true;
			}
			for(new i = strlen(inputtext); i != 0; --i)
			switch(inputtext[i])
			{
			case 'А'..'Я', 'а'..'я', ' ':
				return ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX, "Ошибка!", "{00FF21}Введенный вами пароль содержит русские буквы.\n Смените раскладку клавиатуры!", "Повтор", "");
			}
			if(!strcmp(inputtext, pData[playerid][pKey], false)) // пароль верный
			{
				mysql_format(DATABASE, szQuery,sizeof(szQuery),"SELECT * FROM `"TABLE_BAN"` WHERE `Name` = '%e'",pData[playerid][pName]);
				mysql_tquery(DATABASE,szQuery,"mysql_check_ban","i",playerid);
			}
			else // не верный
			{
				if(GetPVarInt(playerid, "wrongPass") == 2) return SCM(playerid,COLOR_LIGHTRED,"Неверный пароль. Используйте /q для выхода."), L_Kick(playerid,35);
				SetPVarInt(playerid, "wrongPass", GetPVarInt(playerid, "wrongPass")+1);
				
				format(szQuery, sizeof(szQuery), "{FF6347}Внимание! Вы ввели неверный пароль!\n\tУ вас осталось (%i) попытки\nПосле вы будете на время забанены",3-GetPVarInt(playerid, "wrongPass"));
				ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX, "Ошибка!", szQuery, "Повтор", "");
				PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
			}
			//strmid(pData[playerid][pKey],inputtext, 0, strlen(inputtext), 17);
			
		}
	case 3389:
		{
			if(!response) return true;
			for(new h = 1; h <= TotalBizz; h++)
			{
				if(!PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) || GetPlayerVirtualWorld(playerid) != BizzInfo[h][bVirtualWorld]) continue;
				if(strcmp(BizzInfo[h][bOwner],"None",true) == 0 || BizzInfo[h][bLocked]) return SCM(playerid, COLOR_GREY, " Бизнес закрыт");
				switch(listitem)
				{
				case 0,1:
					{
						if(BizzInfo[h][bProducts] < 30) return SCM(playerid, COLOR_GREY, " Нет продуктов");
						if(pData[playerid][pCash] < BizzInfo[h][bPrice]) return SCM(playerid,COLOR_GREY," У вас нет столько денег");
						UpdatePlayerHunger(playerid, 30);
						pData[playerid][pCash] -= BizzInfo[h][bPrice];
						SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
						SendMes(playerid,COLOR_WHITE," «Сытость» пополнена до %i",pData[playerid][pSatiety]);
						BizzInfo[h][bProducts] -= 30;
						BizzInfo[h][bTill] += BizzInfo[h][bPrice];
						BizzPay[h] += BizzInfo[h][bPrice];
					}
				case 2,3:
					{
						if(BizzInfo[h][bProducts] < 60) return SCM(playerid, COLOR_GREY, " Нет продуктов");
						if(pData[playerid][pCash] < BizzInfo[h][bPrice]*2) return SCM(playerid,COLOR_GREY," У вас нет столько денег");
						UpdatePlayerHunger(playerid, 60);
						pData[playerid][pCash] -= BizzInfo[h][bPrice]*2;
						SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
						SendMes(playerid,COLOR_WHITE," «Сытость» пополнена до %i",pData[playerid][pSatiety]);
						BizzInfo[h][bProducts] -= 60;
						BizzInfo[h][bTill] += BizzInfo[h][bPrice]*2;
						BizzPay[h] += BizzInfo[h][bPrice]*2;
					}
				case 4,5:
					{
						if(BizzInfo[h][bProducts] < 90) return SCM(playerid, COLOR_GREY, " Нет продуктов");
						if(pData[playerid][pCash] < BizzInfo[h][bPrice]*3) return SCM(playerid,COLOR_GREY," У вас нет столько денег");
      					UpdatePlayerHunger(playerid, 90);
						pData[playerid][pCash] -= BizzInfo[h][bPrice]*3;
						SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
						SendMes(playerid,COLOR_WHITE," «Сытость» пополнена до %i",pData[playerid][pSatiety]);
						BizzInfo[h][bProducts] -= 90;
						BizzInfo[h][bTill] += BizzInfo[h][bPrice]*3;
						BizzPay[h] += BizzInfo[h][bPrice]*3;
					}
				}
				SaveMySQL(4,h);
				ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
				if(GetPlayerInterior(playerid) == 10 || GetPlayerInterior(playerid) == 4) format(YCMDstr,sizeof(YCMDstr), "Бургер\t\t\t\t[%i вирт]\nРыбный суп\t\t\t[%i вирт]\nБольшой бургер\t\t[%i вирт]\nКотлеты\t\t\t[%i вирт]\
				\nПельмени\t\t\t[%i вирт]\nГамбургер\t\t\t[%i вирт]",BizzInfo[h][bPrice],BizzInfo[h][bPrice],BizzInfo[h][bPrice]*2,BizzInfo[h][bPrice]*2,BizzInfo[h][bPrice]*3,BizzInfo[h][bPrice]*3);
				else format(YCMDstr,sizeof(YCMDstr), "Пицца маленькая\t\t[%i вирт]\nПицца с грибами\t\t[%i вирт]\nПицца с сыром\t\t[%i вирт]\nПицца большая\t\t[%i вирт]\
				\nПицца с ветчиной\t\t[%i вирт]\nПицца с куринным мясом\t[%i вирт]",BizzInfo[h][bPrice],BizzInfo[h][bPrice],BizzInfo[h][bPrice]*2,BizzInfo[h][bPrice]*2,BizzInfo[h][bPrice]*3,BizzInfo[h][bPrice]*3);
				ShowPlayerDialog(playerid, 3389, DIALOG_STYLE_LIST, "Меню", YCMDstr, "Выбрать", "Отмена");
			}
			return true;
		}
	case 5589:
		{
			if(!response) return true;
			for(new h = 1; h <= TotalBizz; h++)
			{
				if(!PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) || GetPlayerVirtualWorld(playerid) != BizzInfo[h][bVirtualWorld]) continue;
				if(strcmp(BizzInfo[h][bOwner],"None",true) == 0 || BizzInfo[h][bLocked]) return SCM(playerid, COLOR_GREY, " Бизнес закрыт");
				switch(listitem)
				{
				case 0:
					{
						if(BizzInfo[h][bProducts] < 10) return SCM(playerid, COLOR_GREY, " Нет продуктов");
						if(pData[playerid][pCash] < BizzInfo[h][bPrice]) return SCM(playerid, COLOR_GREY, " У вас нет столько денег");
						BizzInfo[h][bTill] += BizzInfo[h][bPrice];
						BizzPay[h] += BizzInfo[h][bPrice];
						BizzInfo[h][bProducts] -= 5;
						pData[playerid][pCash] -= BizzInfo[h][bPrice];
						SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
						new randphone = 100000 + random(899999);
						pData[playerid][pPnumber] = randphone;
						SetAccountInfo(playerid, pData[playerid][pPnumber], "pPnumber");
						SendMes(playerid,COLOR_BLUE,"Ваш новый номер мобильного %i", randphone);
					}
				case 1:
					{
						if(BizzInfo[h][bProducts] < 20) return SCM(playerid, COLOR_GREY, " Нет продуктов");
						if(pData[playerid][pCash] < BizzInfo[h][bPrice]*2) return SCM(playerid, COLOR_GREY, " У вас нет столько денег");
						BizzInfo[h][bTill] += BizzInfo[h][bPrice]*2;
						BizzPay[h] += BizzInfo[h][bPrice]*2;
						BizzInfo[h][bProducts] -= 20;
						pData[playerid][pCash] -= BizzInfo[h][bPrice]*2;
						SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
						pData[playerid][pDirectory] = 1;
						SetAccountInfo(playerid, pData[playerid][pDirectory], "pDirectory");
						SCM(playerid, COLOR_BLUE, " Телефонная книга приобретена!");
						SCM(playerid, COLOR_BLUE, "(( Введите /directory - справочник, /number - узнать номер телефона игрока ))");
					}
				case 2:
					{
						if(BizzInfo[h][bProducts] < 30) return SCM(playerid, COLOR_GREY, " Нет продуктов");
						if(pData[playerid][pCash] < BizzInfo[h][bPrice]*3) return SCM(playerid, COLOR_GREY, " У вас нет столько денег");
						if(pData[playerid][pPHouseKey] != INVALID_HOUSE_ID)
						{
							if(HouseInfo[pData[playerid][pPHouseKey]][hHel] >= 500) 
								return SCM(playerid,COLOR_GREY," Вы не можете хранить более 500 аптечек!");

							HouseInfo[pData[playerid][pPHouseKey]][hHel] += 25;
							SCM(playerid, COLOR_BLUE,"Вы купили в дом 25 аптечек");
							//SaveMySQL(5,pData[playerid][pPHouseKey]);
						}
						else return SCM(playerid,COLOR_GREY," У вас нет дома/квартиры");
						BizzInfo[h][bTill] += BizzInfo[h][bPrice]*3;
						BizzPay[h] += BizzInfo[h][bPrice]*3;
						BizzInfo[h][bProducts] -= 15;
						pData[playerid][pCash] -= BizzInfo[h][bPrice]*3;
						SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
					}
				case 3:
					{
						if(BizzInfo[h][bProducts] < 30) return SCM(playerid, COLOR_GREY, " Нет продуктов");
						if(pData[playerid][pCash] < BizzInfo[h][bPrice]*3) return SCM(playerid, COLOR_GREY, " У вас нет столько денег");
						BizzInfo[h][bTill] += BizzInfo[h][bPrice]*3;
						BizzPay[h] += BizzInfo[h][bPrice]*3;
						BizzInfo[h][bProducts] -= 30;
						pData[playerid][pCash] -= BizzInfo[h][bPrice]*3;
						SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
						GivePlayerWeaponEx(playerid, 43, 10);
						SCM(playerid, COLOR_BLUE, " Вы купили фотоаппарат");
					}
				case 4:
					{
						if(BizzInfo[h][bProducts] < 30) return SCM(playerid, COLOR_GREY, " Нет продуктов");
						if(pData[playerid][pCash] < BizzInfo[h][bPrice]*3) return SCM(playerid, COLOR_GREY, " У вас нет столько денег");
						BizzInfo[h][bTill] += BizzInfo[h][bPrice]*3;
						BizzPay[h] += BizzInfo[h][bPrice]*3;
						BizzPay[h] += BizzInfo[h][bPrice]*3;
						BizzInfo[h][bProducts] -= 30;
						pData[playerid][pCash] -= BizzInfo[h][bPrice]*3;
						SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
						GivePlayerWeaponEx(playerid, 14, 1);
						SCM(playerid, COLOR_BLUE, " Вы купили цветы");
					}
				case 5:
					{
						if(BizzInfo[h][bProducts] < 40) return SCM(playerid, COLOR_GREY, " Нет продуктов");
						if(pData[playerid][pCash] < BizzInfo[h][bPrice]*4) return SCM(playerid, COLOR_GREY, " У вас нет столько денег");
						BizzInfo[h][bTill] += BizzInfo[h][bPrice]*4;
						BizzPay[h] += BizzInfo[h][bPrice]*4;
						BizzInfo[h][bProducts] -= 20;
						pData[playerid][pCash] -= BizzInfo[h][bPrice]*4;
						SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
						SetPVarInt(playerid,"fish_rod",1);
						SCM(playerid, COLOR_BLUE, " Вы купили удочку");
					}
				case 6:
					{
						if(BizzInfo[h][bProducts] < 40) return SCM(playerid, COLOR_GREY, " Нет продуктов");
						if(pData[playerid][pCash] < BizzInfo[h][bPrice]*4) return SCM(playerid, COLOR_GREY, " У вас нет столько денег");
						BizzInfo[h][bTill] += BizzInfo[h][bPrice]*4;
						BizzPay[h] += BizzInfo[h][bPrice]*4;
						BizzInfo[h][bProducts] -= 20;
						pData[playerid][pCash] -= BizzInfo[h][bPrice]*4;
						SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
						SetPVarInt(playerid,"fish_gear",GetPVarInt(playerid,"fish_gear")+10);
						SCM(playerid, COLOR_BLUE, " Вы купили снасти. [10 шт.]");
					}
				case 7:
					{
						if(BizzInfo[h][bProducts] < 50) return SCM(playerid, COLOR_GREY, " Нет продуктов");
						if(pData[playerid][pCash] < BizzInfo[h][bPrice]*5) return SCM(playerid, COLOR_GREY, " У вас нет столько денег");
						BizzInfo[h][bTill] += BizzInfo[h][bPrice]*5;
						BizzPay[h] += BizzInfo[h][bPrice]*5;
						BizzInfo[h][bProducts] -= 20;
						pData[playerid][pCash] -= BizzInfo[h][bPrice]*5;
						SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
						SetPVarInt(playerid,"fish_sonar",1);
						SCM(playerid, COLOR_BLUE, " Вы купили сонар");
					}
				}
				SaveMySQL(4,h);
				format(string,256, "Номер телефона:\t[%i вирт]\nСправочник:\t\t[%i вирт]\nАптечки(25шт.):\t\t[%i вирт]\nФотоаппарат:\t\t[%i вирт]\nЦветы:\t\t\t[%i вирт]\nУдочка:\t\t[%i вирт]\nСнасти(10шт.):\t\t[%i вирт]\nСонар:\t\t\t[%i вирт]",BizzInfo[h][bPrice],
				BizzInfo[h][bPrice]*3,BizzInfo[h][bPrice]*3,BizzInfo[h][bPrice]*3,BizzInfo[h][bPrice]*3,BizzInfo[h][bPrice]*3,BizzInfo[h][bPrice]*4,BizzInfo[h][bPrice]*4,BizzInfo[h][bPrice]*5);
				ShowPlayerDialog(playerid, 5589, DIALOG_STYLE_LIST, "24/7", string, "Купить", "Отмена");
			}
			return true;
		}
	case 2289:
		{
			if(!response) return true;
			for(new h = 1; h <= TotalBizz; h++)
			{
				if(!PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) || GetPlayerVirtualWorld(playerid) != BizzInfo[h][bVirtualWorld]) continue;
				if(strcmp(BizzInfo[h][bOwner],"None",true) == 0 || BizzInfo[h][bLocked]) return SCM(playerid, COLOR_GREY, " Бизнес закрыт");
				switch(listitem)
				{
				case 0..2:
					{
						if(BizzInfo[h][bProducts] < 10) return SCM(playerid, COLOR_GREY, " В баре нет напитков");
						if(pData[playerid][pCash] < BizzInfo[h][bPrice]) return SCM(playerid, COLOR_GREY, " У вас нет столько денег");
						UpdatePlayerHunger(playerid, 30);
						BizzInfo[h][bTill] += BizzInfo[h][bPrice];
						BizzPay[h] += BizzInfo[h][bPrice];
						BizzInfo[h][bProducts] -= 10;
						pData[playerid][pCash] -= BizzInfo[h][bPrice];
						SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
						SendMes(playerid,COLOR_WHITE," «Сытость» пополнена до %i",pData[playerid][pSatiety]);
						ApplyAnimation(playerid, "BAR", "dnk_stndF_loop",4.1,0,0,0,0,0,1);
					}
				case 3..4:
					{
						if(BizzInfo[h][bProducts] < 20) return SCM(playerid, COLOR_GREY, " В баре нет напитков");
						if(pData[playerid][pCash] < BizzInfo[h][bPrice]*2) return SCM(playerid, COLOR_GREY, " У вас нет столько денег");
						UpdatePlayerHunger(playerid, 30);
						BizzInfo[h][bTill] += BizzInfo[h][bPrice]*2;
						BizzPay[h] += BizzInfo[h][bPrice]*2;
						BizzInfo[h][bProducts] -= 20;
						pData[playerid][pCash] -= BizzInfo[h][bPrice]*2;
						SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
						SendMes(playerid,COLOR_WHITE," «Сытость» пополнена до %i",pData[playerid][pSatiety]);
						ApplyAnimation(playerid, "BAR", "dnk_stndF_loop",4.1,0,0,0,0,0,1);
					}
				case 5..6:
					{
						if(BizzInfo[h][bProducts] < 30) return SCM(playerid, COLOR_GREY, " В баре нет напитков");
						if(pData[playerid][pCash] < BizzInfo[h][bPrice]*3) return SCM(playerid, COLOR_GREY, " У вас нет столько денег");
						UpdatePlayerHunger(playerid, 60);
						BizzInfo[h][bTill] += BizzInfo[h][bPrice]*3;
						BizzPay[h] += BizzInfo[h][bPrice]*3;
						BizzInfo[h][bProducts] -= 30;
						pData[playerid][pCash] -= BizzInfo[h][bPrice]*3;
						SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
						SendMes(playerid,COLOR_WHITE," «Сытость» пополнена до %i",pData[playerid][pSatiety]);
						ApplyAnimation(playerid, "BAR", "dnk_stndF_loop",4.1,0,0,0,0,0,1);
					}
				case 7:
					{
						if(BizzInfo[h][bProducts] < 40) return SCM(playerid, COLOR_GREY, " В баре нет напитков");
						if(pData[playerid][pCash] < BizzInfo[h][bPrice]*4) return SCM(playerid, COLOR_GREY, " У вас нет столько денег");
						UpdatePlayerHunger(playerid, 60);
						BizzInfo[h][bTill] += BizzInfo[h][bPrice]*4;
						BizzPay[h] += BizzInfo[h][bPrice]*4;
						BizzInfo[h][bProducts] -= 40;
						pData[playerid][pCash] -= BizzInfo[h][bPrice]*4;
						SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
						SendMes(playerid,COLOR_WHITE," «Сытость» пополнена до %i",pData[playerid][pSatiety]);
						ApplyAnimation(playerid, "BAR", "dnk_stndF_loop",4.1,0,0,0,0,0,1);
					}
				case 8..9:
					{
						if(BizzInfo[h][bProducts] < 50) return SCM(playerid, COLOR_GREY, " В баре нет напитков");
						if(pData[playerid][pCash] < BizzInfo[h][bPrice]*5) return SCM(playerid, COLOR_GREY, " У вас нет столько денег");
						UpdatePlayerHunger(playerid, 90);
						BizzInfo[h][bTill] += BizzInfo[h][bPrice]*5;
						BizzPay[h] += BizzInfo[h][bPrice]*5;
						BizzInfo[h][bProducts] -= 50;
						pData[playerid][pCash] -= BizzInfo[h][bPrice]*5;
						SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
						SendMes(playerid,COLOR_WHITE," «Сытость» пополнена до %i",pData[playerid][pSatiety]);
						ApplyAnimation(playerid, "BAR", "dnk_stndF_loop",4.1,0,0,0,0,0,1);
					}
				case 10:
					{
						if(BizzInfo[h][bProducts] < 60) return SCM(playerid, COLOR_GREY, " В баре нет напитков");
						if(pData[playerid][pCash] < BizzInfo[h][bPrice]*6) return SCM(playerid, COLOR_GREY, " У вас нет столько денег");
						UpdatePlayerHunger(playerid, 90);
						BizzInfo[h][bTill] += BizzInfo[h][bPrice]*6;
						BizzPay[h] += BizzInfo[h][bPrice]*6;
						BizzInfo[h][bProducts] -= 60;
						pData[playerid][pCash] -= BizzInfo[h][bPrice]*6;
						SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
						SendMes(playerid,COLOR_WHITE," «Сытость» пополнена до %i",pData[playerid][pSatiety]);
						ApplyAnimation(playerid, "BAR", "dnk_stndF_loop",4.1,0,0,0,0,0,1);
					}
				}
				SaveMySQL(4,h);
				format(YCMDstr,sizeof(YCMDstr), "Вода\t\t[%i вирт]\nСода\t\t[%i вирт]\nТоник\t\t[%i вирт]\nКока-кола\t[%i вирт]\nПиво\t\t[%i вирт]\nСаке\t\t[%i вирт]\nВодка\t\t[%i вирт]\nВино\t\t[%i вирт]\nВиски\t\t[%i вирт]\nКоньяк\t\t[%i вирт]\nАбсент\t\t[%i вирт]",
				BizzInfo[h][bPrice],BizzInfo[h][bPrice],BizzInfo[h][bPrice],BizzInfo[h][bPrice]*2,BizzInfo[h][bPrice]*2,BizzInfo[h][bPrice]*3,BizzInfo[h][bPrice]*3,BizzInfo[h][bPrice]*4,BizzInfo[h][bPrice]*5,BizzInfo[h][bPrice]*5,BizzInfo[h][bPrice]*6);
				ShowPlayerDialog(playerid, 2289, DIALOG_STYLE_LIST, "Меню Бара", YCMDstr, "Выбрать", "Отмена");
			}
			return true;
		}
	case 2290:
		{
			if(!response) return true;
			if(!PlayerToPoint(5.0, playerid,775.8078,-465.3459,1428.1820)) return true;
			switch(listitem)
			{
			case 0..2:
				{
					if(pData[playerid][pMember] == 24)
					{
						if(hamcprods < 10) return SCM(playerid, COLOR_GREY, " В баре нет напитков");
						UpdatePlayerHunger(playerid, 30);
						hamcprods -= 10;
					}
					else if(pData[playerid][pMember] == 24)
					{
						if(wmcprods < 10) return SCM(playerid, COLOR_GREY, " В баре нет напитков");
						UpdatePlayerHunger(playerid, 30);
						wmcprods -= 10;
					}
					else if(pData[playerid][pMember])
					{
						if(pmcprods < 10) return SCM(playerid, COLOR_GREY, " В баре нет напитков");
						UpdatePlayerHunger(playerid, 30);
						pmcprods -= 10;
					}
				}
			case 3..4:
				{
					if(pData[playerid][pMember] == 24)
					{
						if(hamcprods < 20) return SCM(playerid, COLOR_GREY, " В баре нет такого напитка");
						UpdatePlayerHunger(playerid, 30);
						hamcprods -= 20;
					}
					else if(pData[playerid][pMember] == 24)
					{
						if(wmcprods < 20) return SCM(playerid, COLOR_GREY, " В баре нет такого напитка");
						UpdatePlayerHunger(playerid, 30);
						wmcprods -= 20;
					}
					else if(pData[playerid][pMember])
					{
						if(pmcprods < 20) return SCM(playerid, COLOR_GREY, " В баре нет такого напитка");
						UpdatePlayerHunger(playerid, 30);
						pmcprods -= 20;
					}
				}
			case 5..6:
				{
					if(pData[playerid][pMember] == 24)
					{
						if(hamcprods < 30) return SCM(playerid, COLOR_GREY, " В баре нет такого напитка");
						UpdatePlayerHunger(playerid, 60);
						hamcprods -= 30;
					}
					else if(pData[playerid][pMember] == 24)
					{
						if(wmcprods < 30) return SCM(playerid, COLOR_GREY, " В баре нет такого напитка");
						UpdatePlayerHunger(playerid, 60);
						wmcprods -= 30;
					}
					else if(pData[playerid][pMember])
					{
						if(pmcprods < 30) return SCM(playerid, COLOR_GREY, " В баре нет такого напитка");
						UpdatePlayerHunger(playerid, 60);
						pmcprods -= 30;
					}
				}
			case 7:
				{
					if(pData[playerid][pMember] == 24)
					{
						if(hamcprods < 40) return SCM(playerid, COLOR_GREY, " В баре нет такого напитка");
						UpdatePlayerHunger(playerid, 70);
						hamcprods -= 40;
					}
					else if(pData[playerid][pMember] == 24)
					{
						if(wmcprods < 40) return SCM(playerid, COLOR_GREY, " В баре нет такого напитка");
						UpdatePlayerHunger(playerid, 70);
						wmcprods -= 40;
					}
					else if(pData[playerid][pMember])
					{
						if(pmcprods < 40) return SCM(playerid, COLOR_GREY, " В баре нет такого напитка");
						UpdatePlayerHunger(playerid, 70);
						pmcprods -= 40;
					}
				}
			case 8..10:
				{
					if(pData[playerid][pMember] == 24)
					{
						if(hamcprods < 50) return SCM(playerid, COLOR_GREY, " В баре нет такого напитка");
						UpdatePlayerHunger(playerid, 90);
						hamcprods -= 50;
					}
					else if(pData[playerid][pMember] == 24)
					{
						if(wmcprods < 50) return SCM(playerid, COLOR_GREY, " В баре нет такого напитка");
						UpdatePlayerHunger(playerid, 90);
						wmcprods -= 50;
					}
					else if(pData[playerid][pMember])
					{
						if(pmcprods < 50) return SCM(playerid, COLOR_GREY, " В баре нет такого напитка");
						UpdatePlayerHunger(playerid, 90);
						pmcprods -= 50;
					}
				}
			}
			format(YCMDstr,sizeof(YCMDstr), "Вода\nСода\nТоник\nКока-кола\nПиво\nСаке\nВодка\nВино\nВиски\nКоньяк\nАбсент");
			ShowPlayerDialog(playerid, 2290, DIALOG_STYLE_LIST, "Меню Бара", YCMDstr, "Выбрать", "Отмена");
			SendMes(playerid,COLOR_WHITE," «Сытость» пополнена до %i",pData[playerid][pSatiety]);
			ApplyAnimation(playerid, "BAR", "dnk_stndF_loop",4.1,0,0,0,0,0,1);
		}

	case 2625:
		{
			if(response)
			{
				strmid(pData[playerid][pDrug], inputtext, 0, strlen(inputtext));
			}
			else strmid(pData[playerid][pDrug], "None", 0, strlen("None")); // При выходе
			ShowPlayerDialog(playerid,4,DIALOG_STYLE_MSGBOX, " ", "Какого пола будет ваш персонаж:\n", "Мужчина", "Женщина");
			return 1;
		}
	case 9125:
		{
			if(response)
			{
				if(pData[playerid][pCash] <= 9000)
				{
					SCM(playerid, COLOR_GRAD2, "  У вас нет столько денег!");
					RemovePlayerFromVehicle(playerid);
					TogglePlayerControllable(playerid, 1);
					return true;
				}
				pData[playerid][pCash] -= 10000;
				SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
				job_car[playerid] = GetPlayerVehicleID(playerid);
				TogglePlayerControllable(playerid, 1);
				GameTextForPlayer(playerid,"~w~YOU HAVE HIRED THE CAR~n~GOOD LUCK ON ROAD", 5000, 3);
				SCM(playerid, COLOR_YELLOW, " Вы можете закрыть машину командой /rlock");
				return true;
			}
			else
			{
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
				return true;
			}
		}
	case 9126:
		{
			if(response)
			{
				if(pData[playerid][pCash] <= 1500)
				{
					SCM(playerid, COLOR_GRAD2, "  У вас нет столько денег!");
					RemovePlayerFromVehicle(playerid);
					TogglePlayerControllable(playerid, 1);
					return true;
				}
				pData[playerid][pCash] -= 1500;
				SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
				job_car[playerid] = GetPlayerVehicleID(playerid);
				TogglePlayerControllable(playerid, 1);
				GameTextForPlayer(playerid,"~w~YOU HAVE HIRED THE CAR~n~GOOD LUCK ON ROAD", 5000, 3);
				SCM(playerid, COLOR_YELLOW, " Вы можете закрыть машину командой /rlock");
				return true;
			}
			else
			{
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
				return true;
			}
		}
	case 9127:
		{
			if(response)
			{
				if(pData[playerid][pCash] <= 10000)
				{
					SCM(playerid, COLOR_GRAD2, "  У вас нет столько денег!");
					RemovePlayerFromVehicle(playerid);
					TogglePlayerControllable(playerid, 1);
					return true;
				}
				pData[playerid][pCash] -= 10000;
				SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
				job_car[playerid] = GetPlayerVehicleID(playerid);
				TogglePlayerControllable(playerid, 1);
				GameTextForPlayer(playerid,"~w~YOU HAVE HIRED THE HELLICOPTER~n~GOOD LUCK IN FLIGHT", 5000, 3);
				SCM(playerid, COLOR_YELLOW, " Вы можете закрыть машину командой /rlock");
				return true;
			}
			else
			{
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
				return true;
			}
		}
	case 8128:
		{
			if(!response) return true;
			if(GetPVarInt(playerid,"BusRepairMoney") > GetPVarInt(playerid, "BusMoney")) SetPVarInt(playerid,"BusRepairMoney",pData[playerid][pPayCheck]);
			format(cString, 88, "Рабочий день завершен. Вами заработано: %i вирт. За ремонт: -%i вирт", GetPVarInt(playerid, "BusMoney"), GetPVarInt(playerid,"BusRepairMoney"));
			SCM(playerid, 0x00B978FF, cString);
			SCM(playerid, COLOR_WHITE, " Деньги будут перечислены на счет во время зарплаты");
			pData[playerid][pPayCheck] -= GetPVarInt(playerid,"BusRepairMoney");
			SetAccountInfo(playerid, pData[playerid][pPayCheck], "pPayCheck");
			DeletePVar(playerid, "BusTime");
			DeletePVar(playerid, "TypeBus");
			DeletePVar(playerid, "BusStop");
			DeletePVar(playerid, "BusMoney");
			DeletePVar(playerid, "BusRepairMoney");
			DeletePVar(playerid, "BusMoney");
			DestroyDynamic3DTextLabel(JobText3D[playerid]);
			SetVehicleToRespawn(job_car[playerid]);
			DeletePVar(playerid, "rentcar_job");
			job_car[playerid] = 0;
			pPressed[playerid] = -1;
			DisablePlayerRaceCheckpoint(playerid);
			return true;
		}
	case 9128:
		{
			if(!response) return RemovePlayerFromVehicle(playerid), TogglePlayerControllable(playerid, 1);
			if(pData[playerid][pCash] < 500) return SCM(playerid, COLOR_GRAD2, "  У вас нет столько денег!"), RemovePlayerFromVehicle(playerid), TogglePlayerControllable(playerid, 1);
			pData[playerid][pCash]-=500;
			SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
			SetPVarInt(playerid,"rentcar_job",GetPlayerVehicleID(playerid));
			job_car[playerid] = GetPlayerVehicleID(playerid);
			TogglePlayerControllable(playerid, 1);
			GameTextForPlayer(playerid, "~r~-$500", 5000, 1);
			GameTextForPlayer(playerid,"~w~YOU HAVE HIRED THE CAR~n~GOOD LUCK ON ROAD", 5000, 3);
			if(GetPlayerVehicleID(playerid) >= comptruck[0] && GetPlayerVehicleID(playerid) <= comptruck[1])
			{
				SendMes(playerid,TEAM_GROVE_COLOR," Зерна в машине: %i / 1000",car_grain[GetPlayerVehicleID(playerid)][0]);
				SendMes(playerid,TEAM_GROVE_COLOR," Урожая в машине: %i / 1000",car_prods[GetPlayerVehicleID(playerid)][0]);
				SendMes(playerid,TEAM_GROVE_COLOR," Наркотиков в машине: %i / 1000",car_prods[GetPlayerVehicleID(playerid)][1]);
				SCM(playerid,COLOR_WHITE,"  (( Команды: /prodmenu ))");
				SCM(playerid,COLOR_WHITE," (( Чтобы закрыть машину, введите /plock ))");
			}
			else if(GetPlayerVehicleID(playerid) >= comptruck[2] && GetPlayerVehicleID(playerid) <= comptruck[3])
			{
				SendMes(playerid,TEAM_GROVE_COLOR,"Топливо: %i / %i",car_prods[GetPlayerVehicleID(playerid)][1],1000+pData[playerid][pPMGruz]);
				SCM(playerid,COLOR_WHITE," (( Команды: /prodmenu ))");
			}
			else if(GetPlayerVehicleID(playerid) >= comptruck[4] && GetPlayerVehicleID(playerid) <= comptruck[5])
			{
				SendMes(playerid,TEAM_GROVE_COLOR,"Товары: %i / %i",car_prods[GetPlayerVehicleID(playerid)][2],pData[playerid][pPMGruz]);
				SendMes(playerid,TEAM_GROVE_COLOR,"Еда: %i / %i",car_prods[GetPlayerVehicleID(playerid)][3],pData[playerid][pPMGruz]);
			}
			else if(GetPlayerVehicleID(playerid) >= comptruck[6] && GetPlayerVehicleID(playerid) <= comptruck[7])
			{
				SendMes(playerid,TEAM_GROVE_COLOR,"Товары: %i / %i",car_prods[GetPlayerVehicleID(playerid)][2],pData[playerid][pPMGruz]);
				SendMes(playerid,TEAM_GROVE_COLOR,"Еда: %i / %i",car_prods[GetPlayerVehicleID(playerid)][3],pData[playerid][pPMGruz]);
			}
			else if(GetPlayerVehicleID(playerid) >= comptruck[8] && GetPlayerVehicleID(playerid) <= comptruck[9])
			{
				SendMes(playerid,TEAM_GROVE_COLOR,"Товары: %i / %i",car_prods[GetPlayerVehicleID(playerid)][2],pData[playerid][pPMGruz]);
				SendMes(playerid,TEAM_GROVE_COLOR,"Еда: %i / %i",car_prods[GetPlayerVehicleID(playerid)][3],pData[playerid][pPMGruz]);
			}
			else if(GetPlayerVehicleID(playerid) >= mehanik[0] && GetPlayerVehicleID(playerid) <= mehanik[12]) SCM(playerid,COLOR_GREEN,"Вы можете чинить и заправлять машины. (( Заправка: /refill / Ремонт: /repair ))"), SCM(playerid,COLOR_GREEN,"Вы должны заключить контракт с заправкой. (( Команда: /mcontract ))");
			else if(GetPlayerVehicleID(playerid) >= buscar[0] && GetPlayerVehicleID(playerid) <= buscar[5]) ShowPlayerDialog(playerid,1745,DIALOG_STYLE_MSGBOX," ","Начать работу водителя автобуса?", "Да", "Нет");
			else if(GetPlayerVehicleID(playerid) >= hotdogcar[0] && GetPlayerVehicleID(playerid) <= hotdogcar[1]) SCM(playerid,COLOR_GREEN,"Заключите контракт с закусочной, для торговли едой. (( Подъедьте к закусочной и  Введите: /hcontract ))");
			else if(GetPlayerVehicleID(playerid) >= buscar[2] && GetPlayerVehicleID(playerid) <= buscar[3]) ShowPlayerDialog(playerid,1745,DIALOG_STYLE_MSGBOX," ","Начать работу водителя автобуса?", "Да", "Нет");
			else if(GetPlayerVehicleID(playerid) >= buscar[4] && GetPlayerVehicleID(playerid) <= buscar[5]) ShowPlayerDialog(playerid,1745,DIALOG_STYLE_MSGBOX," ","Начать работу водителя автобуса?", "Да", "Нет");
			else ShowPlayerDialog(playerid, 163, 2, "Маршрут", "АвтоВокзал LS << >> Автошкола SF\nАвтоВокзал LS << >> АвтоВокзал LV", "Принять", "Отмена");
			return true;
		}
	case 10092:
		{
			if(!response) return true;
			ShowPlayerDialog(playerid, 10098, DIALOG_STYLE_TABLIST_HEADERS, "Выберите работу", "{FFFFFF}Вакансия\t{FFFFFF}Уровень\n Водитель Автобуса\t2+\n Таксист\t2+\n Продавец хотдогов\t2+\n Развозчик продуктов\t3+\n Механик\t3+\n Прораб\t5+\n Тренер\t6+\n Дальнобойщик\t6+\n Доставщик еды\t3+", "Устроиться", "Выход");
			return true;
		}
	case 70:
		{
			if(!response) return true;
			for(new i = 1; i <= TotalHouse; i++)
			{
				/*if (PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
				{
					if (GetPlayerVirtualWorld(playerid) == i+50) sppos(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez],90.0,0,0);
				}*/
			}
		}
	case 228:
		{
			if(response)
			{
				if(!strlen(inputtext)) return true;
				format(format_string,128,"SELECT * FROM `ucp_drop_roulette` WHERE `p_hash` = '%s' AND `p_status` = '0'",inputtext);
				
				strcat(pData[playerid][pRoolete],inputtext);
				mysql_tquery(DATABASE,format_string,"OnMySQL_QUERY","iis",46,playerid,"");
			}
		}
	case 10022:
		{
			if(!response) return true;
			format(string,300, "Ваш урок начат. Пройдите на парковку автошколы и сядьте в свободную машину.\nДалее вам будет показан маршрут, по котрому вы должны будете проехать\nЕсли во время экзамена автомобиль попадет в аварию, экзамен будет завершен");
			ShowPlayerDialog(playerid,10023,DIALOG_STYLE_MSGBOX, "Экзамен по вождению",string, "Готово", "Отмена");
		}
	case 10023:
		{
			if(!response) return true;
			if(pData[playerid][pQuestL] == 1 && pData[playerid][pQuest] == 2) CheckQuest(playerid);
			else
			{
				if(pData[playerid][pCash] < 500) return SCM(playerid, COLOR_GREY, " Не достаточно денег!");
				GameTextForPlayer(playerid, "~r~-$500", 5000, 1);
				pData[playerid][pCash]-= 500;
				SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
				LessonStat[playerid] = 0;
				LessonCar[playerid] = 1;
				TakingLesson[playerid] = 1;
				SetPlayerRaceCheckpoint(playerid, 1, -2077.2729,-92.4760,34.1641,-2077.2729,-92.4760,35.1641, 6.0);
				return true;
			}
		}
	case 8004:
		{
			if(!response) return true;
			new vehicleid = GetPlayerVehicleID(playerid);
			switch(listitem)
			{
			case 0: ShowPlayerDialog(playerid, 8011, 2, "Список дисков", "Shadow\nMega\nWires\nClassic\nRimshine\nCutter\nTwist\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomic", "OK", "Назад");
			case 1: AddVehicleComponent(vehicleid,1087), PlayerPlaySound(playerid,1133,0.0,0.0,0.0), ShowPlayerDialog(playerid, 8004, 2, "Тюнинг меню", "Диски\nГидравлика\nАрхангел Тюнинг\nЦвет\nВинилы ", "Выбрать", "Назад");
			case 2:
				{
					new Car = GetPlayerVehicleID(playerid), Model = GetVehicleModel(Car);
					switch(Model)
					{
					case 559,560,561,562,565: ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "Выбрать", "Назад");
					default: SCM(playerid,COLOR_WHITE, " Вы должны быть в: Elegy, Stratum, Flash, Sultan, Uranus");
					}
				}
			case 3: ShowPlayerDialog(playerid, 8013, 2, "Выбор цвета", "Красный\nГолубой\nЖелтый\nЗеленый\nСерый\nОранжевый\nЧерный\nБелый", "Выбрать", "Назад");
			case 4: ShowPlayerDialog(playerid, 8014, 2, "Выбор винила", "Винил №1\nВинил №2\nВинил №3", "Выбрать", "Назад");
			case 5: ShowPlayerDialog(playerid, 8015, 2, "Выбор азота", "Азот 2X\nАзот 5X\nАзот 10X", "Выбрать", "Назад");
			}
		}
	case 313:
		{
			new playa = GetPVarInt(playerid,"ID");
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 2)) RemovePlayerAttachedObject(playa, 2);
						SetPlayerAttachedObject(playa,2,19137,2,0.100000,0.000000,0.000000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000);
						return true;
					}
				case 1:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 7)) RemovePlayerAttachedObject(playa, 7);
						SetPlayerAttachedObject(playa,7, 19270, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
						return true;
					}
				case 2:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 4)) RemovePlayerAttachedObject(playa, 4);
						SetPlayerAttachedObject(playa,4, 18646, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
						return true;
					}
				case 3:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 7)) RemovePlayerAttachedObject(playa, 7);
						SetPlayerAttachedObject(playa,7, 19163, 2, 0.111052, 0.021643, -0.000846, 100.280899, 100.752510, 445.071044, 1.100000, 1.300000, 1.300000);
						return true;
					}
				case 4:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 0)) RemovePlayerAttachedObject(playa, 0);
						SetPlayerAttachedObject(playa,0, 18915, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
						return true;
					}
				case 5:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 0)) RemovePlayerAttachedObject(playa, 0);
						SetPlayerAttachedObject(playa,0, 18912, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
						return true;
					}
				case 6:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 0)) RemovePlayerAttachedObject(playa, 0);
						SetPlayerAttachedObject(playa,0, 18916, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
						return true;
					}
				case 7:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 0)) RemovePlayerAttachedObject(playa, 0);
						SetPlayerAttachedObject(playa,0, 18917, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
						return true;
					}
				case 8:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 0)) RemovePlayerAttachedObject(playa, 0);
						SetPlayerAttachedObject(playa,0, 18918, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
						return true;
					}
				case 9:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 4)) RemovePlayerAttachedObject(playa, 4);
						SetPlayerAttachedObject(playa,4, 3528, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 0.100000, 0.100000, 0.100000);
						return true;
					}
				case 10:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 4)) RemovePlayerAttachedObject(playa, 4);
						SetPlayerAttachedObject(playa,4, 18643, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
						return true;
					}
				case 11:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 0) || IsPlayerAttachedObjectSlotUsed(playa, 1) || IsPlayerAttachedObjectSlotUsed(playa, 4))
						{
							RemovePlayerAttachedObject(playa, 0);
							RemovePlayerAttachedObject(playa, 1);
							RemovePlayerAttachedObject(playa, 4);
						}
						SetPlayerAttachedObject(playa,0, 18693, 5, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000);
						SetPlayerAttachedObject(playa,1, 18693, 6, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000);
						SetPlayerAttachedObject(playa,4, 18965, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
						return true;
					}
				case 12:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 7)) RemovePlayerAttachedObject(playa, 7);
						SetPlayerAttachedObject(playa,7, 19078, 1, 0.329150, -0.072101, 0.156082, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
						return true;
					}
				case 13:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 7)) RemovePlayerAttachedObject(playa, 7);
						SetPlayerAttachedObject(playa,7, 354, 1, 0.329150, -0.072101, 0.156082, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
						return true;
					}
				case 14:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 1)) RemovePlayerAttachedObject(playa, 1);
						SetPlayerAttachedObject(playa,1, 356, 6, 0.013610, -0.021393, -0.144862, 2.354303, 354.413848, 0.219168, 3.034477, 3.000000, 3.000000);
						return true;
					}
				case 15:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 1)) RemovePlayerAttachedObject(playa, 1);
						SetPlayerAttachedObject(playa,1, 19086, 8, -0.049768, -0.014062, -0.108385, 87.458297, 263.478149, 184.123764, 0.622413, 1.041609, 1.012785);
						return true;
					}
				case 16:
					{
						if(IsPlayerAttachedObjectSlotUsed(playa, 0)) RemovePlayerAttachedObject(playa, 0);
						SetPlayerAttachedObject(playa,0, 19078, 1, -1.097527, -0.348305, -0.008029, 0.000000, 0.000000, 0.000000, 8.073966, 8.073966, 8.073966);
						return true;
					}
				case 17:
					{
						RemovePlayerAttachedObject(playa, 0);
						RemovePlayerAttachedObject(playa, 1);
						RemovePlayerAttachedObject(playa, 2);
						RemovePlayerAttachedObject(playa, 3);
						RemovePlayerAttachedObject(playa, 4);
						RemovePlayerAttachedObject(playa, 5);
						RemovePlayerAttachedObject(playa, 6);
						RemovePlayerAttachedObject(playa, 7);
						RemovePlayerAttachedObject(playa, 8);
						RemovePlayerAttachedObject(playa, 9);
						return true;
					}
				}
			}
		}
	case 8011:
		{
			if(response)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				switch(listitem)
				{
				case 0: AddVehicleComponent(vehicleid,1073);
				case 1: AddVehicleComponent(vehicleid,1074);
				case 2: AddVehicleComponent(vehicleid,1076);
				case 3: AddVehicleComponent(vehicleid,1077);
				case 4: AddVehicleComponent(vehicleid,1075);
				case 5: AddVehicleComponent(vehicleid,1079);
				case 6: AddVehicleComponent(vehicleid,1078);
				case 7: AddVehicleComponent(vehicleid,1080);
				case 8: AddVehicleComponent(vehicleid,1081);
				case 9: AddVehicleComponent(vehicleid,1082);
				case 10: AddVehicleComponent(vehicleid,1083);
				case 11: AddVehicleComponent(vehicleid,1084);
				case 12: AddVehicleComponent(vehicleid,1085);
				}
				PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
				ShowPlayerDialog(playerid, 8011, 2, "Список дисков", "Shadow\nMega\nWires\nClassic\nRimshine\nCutter\nTwist\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomic", "OK", "Назад");
			}
			else ShowPlayerDialog(playerid, 8004, 2, "Тюнинг меню", "Диски \nГидравлика \nАрхангел Тюнинг \nЦвет \nВинилы ", "Выбрать", "Назад");
		}
	case 8013:
		{
			if(response)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				switch(listitem)
				{
				case 0: ChangeVehicleColor(vehicleid, 3, 3);
				case 1: ChangeVehicleColor(vehicleid, 79, 79);
				case 2: ChangeVehicleColor(vehicleid, 65, 65);
				case 3: ChangeVehicleColor(vehicleid, 86, 86);
				case 4: ChangeVehicleColor(vehicleid, 9, 9);
				case 5: ChangeVehicleColor(vehicleid, 6, 6);
				case 6: ChangeVehicleColor(vehicleid, 0, 0);
				case 7: ChangeVehicleColor(vehicleid, 1, 1);
				}
				PlayerPlaySound(playerid,1134,0.0,0.0,0.0);
				ShowPlayerDialog(playerid, 8013, 2, "Выбор цвета", "Красный \nГолубой \nЖелтый \nЗеленый \nСерый \nОранжевый \nЧерный \nБелый", "Готово", "Назад");
			}
			else ShowPlayerDialog(playerid, 8004, 2, "Тюнинг меню", "Диски \nГидравлика \nАрхангел Тюнинг \nЦвет \nВинилы ", "Выбрать", "Назад");
		}
	case 8015:
		{
			if(!response) return ShowPlayerDialog(playerid, 8004, 2, "Тюнинг меню", "Диски \nГидравлика \nАрхангел Тюнинг \nЦвет \nВинилы \nАзот", "Выбрать", "Назад");
			new vehicleid = GetPlayerVehicleID(playerid);
			switch(listitem)
			{
			case 0:
				{
					AddVehicleComponent(vehicleid,1008);
					ShowPlayerDialog(playerid, 8015, 2, "Выбор винила", "Азот 2X \nАзот 5X \nАзот 10X ", "Готово", "Назад");
				}
			case 1:
				{
					AddVehicleComponent(vehicleid,1009);
					ShowPlayerDialog(playerid, 8015, 2, "Выбор винила", "Азот 2X \nАзот 5X \nАзот 10X ", "Готово", "Назад");
				}
			case 2:
				{
					AddVehicleComponent(vehicleid,1010);
					ShowPlayerDialog(playerid, 8015, 2, "Выбор винила", "Азот 2X \nАзот 5X \nАзот 10X ", "Готово", "Назад");
				}
			}
		}
	case 8014:
		{
			if(response)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				ChangeVehiclePaintjob(vehicleid,listitem+1);
				PlayerPlaySound(playerid,1134,0.0,0.0,0.0);
				ShowPlayerDialog(playerid, 8014, 2, "Выбор винила", "Винил №1 \nВинил №2 \nВинил №3 ", "Готово", "Назад");
			}
			else ShowPlayerDialog(playerid, 8004, 2, "Тюнинг меню", "Диски \nГидравлика \nАрхангел Тюнинг \nЦвет \nВинилы ", "Выбрать", "Назад");
		}
	case 8012:
		{
			if(response)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				new cartype = GetVehicleModel(vehicleid);
				switch(listitem)
				{
				case 0:
					{
						switch(cartype)
						{
						case 562: AddVehicleComponent(vehicleid,1172);
						case 560: AddVehicleComponent(vehicleid,1170);
						case 565: AddVehicleComponent(vehicleid,1152);
						case 559: AddVehicleComponent(vehicleid,1173);
						case 561: AddVehicleComponent(vehicleid,1157);
						case 558: AddVehicleComponent(vehicleid,1165);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
				case 1:
					{
						switch(cartype)
						{
						case 562: AddVehicleComponent(vehicleid,1171);
						case 560: AddVehicleComponent(vehicleid,1169);
						case 565: AddVehicleComponent(vehicleid,1153);
						case 559: AddVehicleComponent(vehicleid,1160);
						case 561: AddVehicleComponent(vehicleid,1155);
						case 558: AddVehicleComponent(vehicleid,1166);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
				case 2:
					{
						switch(cartype)
						{
						case 562: AddVehicleComponent(vehicleid,1148);
						case 560: AddVehicleComponent(vehicleid,1140);
						case 565: AddVehicleComponent(vehicleid,1151);
						case 559: AddVehicleComponent(vehicleid,1161);
						case 561: AddVehicleComponent(vehicleid,1156);
						case 558: AddVehicleComponent(vehicleid,1167);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
				case 3:
					{
						switch(cartype)
						{
						case 562: AddVehicleComponent(vehicleid,1149);
						case 560: AddVehicleComponent(vehicleid,1141);
						case 565: AddVehicleComponent(vehicleid,1150);
						case 559: AddVehicleComponent(vehicleid,1159);
						case 561: AddVehicleComponent(vehicleid,1154);
						case 558: AddVehicleComponent(vehicleid,1168);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
				case 4:
					{
						switch(cartype)
						{
						case 562: AddVehicleComponent(vehicleid,1146);
						case 560: AddVehicleComponent(vehicleid,1139);
						case 565: AddVehicleComponent(vehicleid,1050);
						case 559: AddVehicleComponent(vehicleid,1158);
						case 561: AddVehicleComponent(vehicleid,1160);
						case 558: AddVehicleComponent(vehicleid,1163);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
				case 5:
					{
						switch(cartype)
						{
						case 562: AddVehicleComponent(vehicleid,1147);
						case 560: AddVehicleComponent(vehicleid,1138);
						case 565: AddVehicleComponent(vehicleid,1049);
						case 559: AddVehicleComponent(vehicleid,1162);
						case 561: AddVehicleComponent(vehicleid,1058);
						case 558: AddVehicleComponent(vehicleid,1164);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
				case 6:
					{
						switch(cartype)
						{
						case 562: AddVehicleComponent(vehicleid,1041), AddVehicleComponent(vehicleid,1039);
						case 560: AddVehicleComponent(vehicleid,1031), AddVehicleComponent(vehicleid,1030);
						case 565: AddVehicleComponent(vehicleid,1052), AddVehicleComponent(vehicleid,1048);
						case 559: AddVehicleComponent(vehicleid,1070), AddVehicleComponent(vehicleid,1072);
						case 561: AddVehicleComponent(vehicleid,1057), AddVehicleComponent(vehicleid,1063);
						case 558: AddVehicleComponent(vehicleid,1093), AddVehicleComponent(vehicleid,1095);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
				case 7:
					{
						switch(cartype)
						{
						case 562: AddVehicleComponent(vehicleid,1036), AddVehicleComponent(vehicleid,1040);
						case 560: AddVehicleComponent(vehicleid,1026), AddVehicleComponent(vehicleid,1027);
						case 565: AddVehicleComponent(vehicleid,1051), AddVehicleComponent(vehicleid,1047);
						case 559: AddVehicleComponent(vehicleid,1069), AddVehicleComponent(vehicleid,1071);
						case 561: AddVehicleComponent(vehicleid,1056), AddVehicleComponent(vehicleid,1062);
						case 558: AddVehicleComponent(vehicleid,1090), AddVehicleComponent(vehicleid,1094);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
				case 8:
					{
						switch(cartype)
						{
						case 562: AddVehicleComponent(vehicleid,1035);
						case 560: AddVehicleComponent(vehicleid,1033);
						case 565: AddVehicleComponent(vehicleid,1052);
						case 559: AddVehicleComponent(vehicleid,1068);
						case 561: AddVehicleComponent(vehicleid,1061);
						case 558: AddVehicleComponent(vehicleid,1091);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
				case 9:
					{
						switch(cartype)
						{
						case 562: AddVehicleComponent(vehicleid,1038);
						case 560: AddVehicleComponent(vehicleid,1032);
						case 565: AddVehicleComponent(vehicleid,1054);
						case 559: AddVehicleComponent(vehicleid,1067);
						case 561: AddVehicleComponent(vehicleid,1055);
						case 558: AddVehicleComponent(vehicleid,1088);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
				case 10:
					{
						switch(cartype)
						{
						case 562: AddVehicleComponent(vehicleid,1037);
						case 560: AddVehicleComponent(vehicleid,1029);
						case 565: AddVehicleComponent(vehicleid,1045);
						case 559: AddVehicleComponent(vehicleid,1066);
						case 561: AddVehicleComponent(vehicleid,1059);
						case 558: AddVehicleComponent(vehicleid,1089);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
				case 11:
					{
						switch(cartype)
						{
						case 562: AddVehicleComponent(vehicleid,1034);
						case 560: AddVehicleComponent(vehicleid,1028);
						case 565: AddVehicleComponent(vehicleid,1046);
						case 559: AddVehicleComponent(vehicleid,1065);
						case 561: AddVehicleComponent(vehicleid,1064);
						case 558: AddVehicleComponent(vehicleid,1092);
						}
						PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
						ShowPlayerDialog(playerid, 8012, 2, "Тюнинг Wheel Arch Angels", "Передний бампер X-flow\nПередний бампер Alien\nЗадний бампер X-Flow\nЗадний бампер Alien\nСпойлер X-Flow \nСпойлер Alien \nБоковая юбка X-Flow \nБоковая юбка Alien\nВоздухозаборник X-Flow\nВоздухозаборник Alien\nВыхлоп X-flow\nВыхлоп Alien", "OK", "Назад");
					}
				}
			}
			else ShowPlayerDialog(playerid, 8004, 2, "Тюнинг меню", "Диски\nГидравлика\nАрхангел Тюнинг\nЦвет\nВинилы", "Выбрать", "Назад");
			return true;
		}
	case 555:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					ShowPlayerDialog(playerid, 556, DIALOG_STYLE_INPUT, "Выдать водительские права", "Введите ID того, кому вы хотите выдать лицензию", "Выдать", "Отмена");
					return false;
				}
			case 1:
				{
					ShowPlayerDialog(playerid, 557, DIALOG_STYLE_INPUT, "Выдать лицензию на полёты", "Введите ID того, кому вы хотите выдать лицензию", "Выдать", "Отмена");
					return false;
				}
			case 2:
				{
					ShowPlayerDialog(playerid, 558, DIALOG_STYLE_INPUT, "Выдать лицензию на рыболовлю", "Введите ID того, кому вы хотите выдать лицензию", "Выдать", "Отмена");
					return false;
				}
			case 3:
				{
					ShowPlayerDialog(playerid, 559, DIALOG_STYLE_INPUT, "Выдать лицензию на вождение водного транспорта", "Введите ID того, кому вы хотите выдать лицензию", "Выдать", "Отмена");
					return false;
				}
			case 4:
				{
					ShowPlayerDialog(playerid, 561, DIALOG_STYLE_INPUT, "Выдать комплект всех лицензий", "Введите ID того, кому вы хотите выдать лицензию", "Выдать", "Отмена");
					return false;
				}
			case 5:
				{
					ShowPlayerDialog(playerid, 560, DIALOG_STYLE_INPUT, "Выдать лицензию на оружие", "Введите ID того, кому вы хотите выдать лицензию", "Выдать", "Отмена");
					return false;
				}
			case 6:
				{
					ShowPlayerDialog(playerid, 562, DIALOG_STYLE_INPUT, "Выдать лицензию на бизнес", "Введите ID того, кому вы хотите выдать лицензию", "Выдать", "Отмена");
					return false;
				}
			}
		}
	case 556:
		{
			if(!response) return true;
			new idd = strval(inputtext);
			if(idd == INVALID_PLAYER_ID)
			{
				SCM(playerid, COLOR_GREY, " Такого игрока нет на сервере!");
				return true;
			}
			if(PlayerLicenses(idd, LICENSES_GET, LIC_DRIVER))
			{
				SCM(playerid, COLOR_GREY, " У этого игрока есть права!");
				return true;
			}
			format(string, 128, " Вы выдали права %s[%i].",Name(idd), idd);
			SCM(playerid, COLOR_BLUE, string);
			PlayerLicenses(idd, LICENSES_SET, LIC_DRIVER);
			SetAccountInfo(idd, pData[idd][pLicenses], "pLicenses");
			SendMes(idd, COLOR_BLUE, " %s Выдал вам водительские права",Name(playerid));
		}
	case 557:
		{
			if(!response) return true;
			new idd = strval(inputtext);
			if(idd == INVALID_PLAYER_ID)
			{
				SCM(playerid, COLOR_GREY, " Такого игрока нет на сервере!");
				return true;
			}
			if(PlayerLicenses(idd, LICENSES_GET, LIC_HELICOPTER))
			{
				SCM(playerid, COLOR_GREY, " У этого игрока есть лицензия на полёты!");
				return true;
			}
			format(string, 128, " Вы выдали лицензию на полёты %s[%i].",Name(idd), idd);
			SCM(playerid, COLOR_BLUE, string);
			PlayerLicenses(idd, LICENSES_SET, LIC_HELICOPTER);
			SetAccountInfo(idd, pData[idd][pLicenses], "pLicenses");
			SendMes(idd, COLOR_BLUE, " %s Выдал вам лицензию на полёты",Name(playerid));
		}
	case 558:
		{
			if(!response) return true;
			new idd = strval(inputtext);
			if(idd == INVALID_PLAYER_ID)
			{
				SCM(playerid, COLOR_GREY, " Такого игрока нет на сервере!");
				return true;
			}
			if(PlayerLicenses(idd, LICENSES_GET, LIC_FISHING))
			{
				SCM(playerid, COLOR_GREY, " У этого игрока есть разрешение на рыболовство!");
				return true;
			}
			format(string, 128, " Вы выдали лицензию на рыболовлю %s[%i].",Name(idd), idd);
			SCM(playerid, COLOR_BLUE, string);
			PlayerLicenses(idd, LICENSES_SET, LIC_FISHING);
			SetAccountInfo(idd, pData[idd][pLicenses], "pLicenses");
			SendMes(idd, COLOR_BLUE, " %s Выдал вам разрешение на рыболовство.",Name(playerid));
		}
	case 559:
		{
			if(!response) return true;
			new idd = strval(inputtext);
			if(idd == INVALID_PLAYER_ID)
			{
				SCM(playerid, COLOR_GREY, " Такого игрока нет на сервере!");
				return true;
			}
			if(PlayerLicenses(idd, LICENSES_GET, LIC_BOAT))
			{
				SCM(playerid, COLOR_GREY, " У этого игрока есть лицензия на лодку!");
				return true;
			}
			format(string, 128, " Вы выдали лицензию на лодку %s[%i].",Name(idd), idd);
			SCM(playerid, COLOR_BLUE, string);
			PlayerLicenses(idd, LICENSES_SET, LIC_BOAT);
			SetAccountInfo(idd, pData[idd][pLicenses], "pLicenses");
			SendMes(idd, COLOR_BLUE, " %s Выдал вам лицензию на морской транспорт",Name(playerid));
		}
	case 560:
		{
			if(!response) return true;
			new idd = strval(inputtext);
			if(idd == INVALID_PLAYER_ID)
			{
				SCM(playerid, COLOR_GREY, " Такого игрока нет на сервере!");
				return true;
			}
			if(PlayerLicenses(idd, LICENSES_GET, LIC_WEAPONS))
			{
				SCM(playerid, COLOR_GREY, " У этого игрока есть лицензия на оружие!");
				return true;
			}
			format(string, 128, " Вы выдали лицензию на оружие %s[%i].",Name(idd), idd);
			SCM(playerid, COLOR_BLUE, string);
			PlayerLicenses(idd, LICENSES_SET, LIC_WEAPONS);
			SetAccountInfo(idd, pData[idd][pLicenses], "pLicenses");
			SendMes(idd, COLOR_BLUE, " %s Выдал вам лицензию на оружие",Name(playerid));
		}
	case 561:
		{
			if(!response) return true;
			new idd = strval(inputtext);
			if(idd == INVALID_PLAYER_ID)
			{
				SCM(playerid, COLOR_GREY, " Такого игрока нет на сервере!");
				return true;
			}
			format(string, 128, " Вы выдали все лицензии игроку %s[%i].",Name(idd), idd);
			SCM(playerid, COLOR_BLUE, string);
			PlayerLicenses(idd, LICENSES_SET, LIC_DRIVER);
			PlayerLicenses(idd, LICENSES_SET, LIC_FISHING);
			PlayerLicenses(idd, LICENSES_SET, LIC_BOAT);
			PlayerLicenses(idd, LICENSES_SET, LIC_HELICOPTER);
			PlayerLicenses(idd, LICENSES_SET, LIC_WEAPONS);
			PlayerLicenses(idd, LICENSES_SET, LIC_BISINESS);
			SetAccountInfo(idd, pData[idd][pLicenses], "pLicenses");
			SendMes(idd, COLOR_BLUE, " %s Выдал вам комплект всех лицензий",Name(playerid));
		}
	case 562:
		{
			if(!response) return true;
			new idd = strval(inputtext);
			if(idd == INVALID_PLAYER_ID)
			{
				SCM(playerid, COLOR_GREY, " Такого игрока нет на сервере!");
				return true;
			}
			if(PlayerLicenses(idd, LICENSES_GET, LIC_BISINESS))
			{
				SCM(playerid, COLOR_GREY, " У этого игрока есть лицензия на бизнес!");
				return true;
			}
			format(string, 128, " Вы выдали лицензию на бизнес %s[%i].",Name(idd), idd);
			SCM(playerid, COLOR_BLUE, string);
			PlayerLicenses(idd, LICENSES_SET, LIC_BISINESS);
			SetAccountInfo(idd, pData[idd][pLicenses], "pLicenses");
			SendMes(idd, COLOR_LIGHTBLUE, " %s Выдал вам лицензию на бизнес",Name(playerid));
		}
	case 10098:
		{
			if(!response) return 1;

			if(GetPVarInt(playerid,"Fraction_Duty")) return SCM(playerid, COLOR_GRAD1, " Вы состоите в организации");
			switch(listitem)
			{
			case 0:
				{
					if(pData[playerid][pLevel] < 2) return	SCM(playerid, COLOR_GRAD1, " Вам требуется 2 лвл");
					pData[playerid][pJob] = 1;
					SetAccountInfo(playerid, pData[playerid][pJob], "pJob");
					SCM(playerid, 0x6495EDFF, " Вас успешно приняли на работу Водителя автобуса");
					SCM(playerid, 0x6495EDFF, " (( Команды: /route - начать/закончить работу водителя автобуса ))");
				}
			case 1:
				{
					if(pData[playerid][pLevel] < 2) return SCM(playerid, COLOR_GRAD1, " Вам требуется 2 лвл");
					pData[playerid][pJob] = 4;
					SetAccountInfo(playerid, pData[playerid][pJob], "pJob");
					SCM(playerid, 0x6495EDFF, " Вас успешно приняли на работу Водителя такси");
					return true;
				}
			case 2:
				{
					if(pData[playerid][pLevel] < 2) return	SCM(playerid, COLOR_GRAD1, " Вам требуется 2 лвл");
					pData[playerid][pJob] = 3;
					SetAccountInfo(playerid, pData[playerid][pJob], "pJob");
					SCM(playerid, 0x6495EDFF, " Вас успешно приняли на работу Продавца хотдогов");
					SCM(playerid, 0x6495EDFF, " (( Команды: /hcontract - подписать контракт с закусочной для продажи Хот Догов ))");
					SCM(playerid, 0x6495EDFF, " (( Команды: /selleat - продать хот дог, /hcounter - занять прилавок для продажи Хот Догов ))");
				}
			case 3:
				{
					if(pData[playerid][pLevel] < 3) return	SCM(playerid, COLOR_GRAD1, " Вам требуется 3 лвл");
					if(BGet(playerid)) return SCM(playerid, COLOR_GRAD1, " Бизнесмен не может устроиться на данную работу");
					pData[playerid][pJob] = 5;
					SetAccountInfo(playerid, pData[playerid][pJob], "pJob");
					if(pData[playerid][pPSkill] == 0) pData[playerid][pPSkill] = 1;
					if(pData[playerid][pPSkill] == 1) pData[playerid][pPMGruz] = 200;
					SetAccountInfo(playerid, pData[playerid][pPSkill], "pPSkill");
					SetAccountInfo(playerid, pData[playerid][pPMGruz], "pPMGruz");
					SCM(playerid, 0x6495EDFF, " Вас успешно приняли на работу Развозчика продуктов");
					SCM(playerid, 0x6495EDFF, " (( Команды: /prodmenu - закупка продуктов ))");
					return true;
				}
			case 4:
				{
					if(pData[playerid][pLevel] < 3) return SCM(playerid, COLOR_GRAD1, " Вам требуется 3 лвл");
					pData[playerid][pJob] = 2;
					SetAccountInfo(playerid, pData[playerid][pJob], "pJob");
					SCM(playerid, 0x6495EDFF, " Вас успешно приняли на работу Механика");
					SCM(playerid, 0x6495EDFF, " (( Команды: /mcontract - заключить контракт с заправкой, /repair - починить, /refill - заправить ))");
					return true;
				}
			case 5:
				{
					if(pData[playerid][pLevel] < 5) return	SCM(playerid, COLOR_GRAD1, " Вам требуется 5 лвл");
					pData[playerid][pJob] = 9;
					SetAccountInfo(playerid, pData[playerid][pJob], "pJob");
					SCM(playerid, 0x6495EDFF, " Вас успешно приняли на работу Прораба");
					SCM(playerid, 0x6495EDFF, " (( Команды: /gcontract - выдать контракт, /gpayday - выдать зарплату ))");
					return true;
				}
			case 6:
				{
					if(pData[playerid][pLevel] < 6) return	SCM(playerid, COLOR_GRAD1, " Вам требуется 6 лвл");
					pData[playerid][pJob] = 6;
					SetAccountInfo(playerid, pData[playerid][pJob], "pJob");
					SCM(playerid, 0x6495EDFF, " Вас успешно приняли на работу Тренера");
					SCM(playerid, 0x6495EDFF, " (( Команды: /fgstyle - обучение стилям боя ))");
					return true;
				}
			case 7:
				{
					if(pData[playerid][pLevel] < 6) return SCM(playerid, COLOR_GRAD1, " Вам требуется 6 лвл");
					pData[playerid][pJob] = 99;
					SetAccountInfo(playerid, pData[playerid][pJob], "pJob");
					//if(pData[playerid][pDLevel] == 1) pData[playerid][pDMgruz] = 7;
					//SetAccountInfo(playerid, pData[playerid][pDMgruz], "pDMgruz");
					SCM(playerid, 0x6495EDFF, " Вас успешно приняли на работу Дальнобойщика");
					SCM(playerid, 0x6495EDFF, " (( Команды: /tskill - информация, /tload - покупка продуктов, /tunload - продажа продуктов, /tmonitor - мониторинг цен ))");
					SCM(playerid, 0x6495EDFF, " (( Команды: /f - чат ))");
					return true;
				}
				case 8:
				{
					if(pData[playerid][pLevel] < 3) return	SCM(playerid, COLOR_GRAD1, " Вам требуется 3 лвл");
					pData[playerid][pJob] = J_DELIVERY;
					SetAccountInfo(playerid, pData[playerid][pJob], "pJob");
					SCM(playerid, 0x6495EDFF, " Вас успешно приняли на работу доставщика еды");
					SCM(playerid, 0x6495EDFF, " (( Используйте /delivery для просмотра заказов))");
				}
			}
		}
	case 1010:
		{
			if(!response) return true;
			SetPlayerSkin(playerid, pData[playerid][pModel]);
			new szQuery[84+34];
			mysql_format(DATABASE, szQuery, sizeof szQuery, "SELECT * FROM `"TABLE_DETACHMENT"` WHERE `fractionid` = '%d' and `id`='%d' LIMIT 1", pData[playerid][pMember], pData[playerid][pDetachID]);
			mysql_query(DATABASE, szQuery);

			if(cache_num_rows())
			{
				cache_get_value_name(0, "name", pData[playerid][pszDetachName]);
				new szname1[24];
				cache_get_value_name(0, "member", szname1);
				new color;
				cache_get_value_name_int(0, "color", color);
				SetPVarInt(playerid, !#_pDetachColor, color+1);
				if( !strcmp( szname1, pData[playerid][pName], false ) )
				{
					cache_get_value_name_int(0, "colormember", color);
					SetPVarInt(playerid, !#_pDetachRank, 0xFF);
					SetPVarInt(playerid, !#_pDetachColor,color+1);
				}
				else
				{
					szname1 = "";
					cache_get_value_name(0, "firstdeputy", szname1);
					if( !strcmp( szname1, pData[playerid][pName], false ) )
					{
						cache_get_value_name_int(0, "colordeputy", color);
						SetPVarInt(playerid, !#_pDetachColor, color+1);
						SetPVarInt(playerid, !#_pDetachRank, 0xF);
					}
					else 
					{
						szname1 = "";
						cache_get_value_name(0, "firstdeputy", szname1);
						if( !strcmp( szname1, pData[playerid][pName], false ) )
						{
							cache_get_value_name_int(0, "colordeputy", color);
							SetPVarInt(playerid, !#_pDetachColor, color+1);
							SetPVarInt(playerid, !#_pDetachRank, 0xF);
						}
					}
				}
				
			}
			SetPlayerToTeamColor(playerid);
			pData[playerid][pSpawnChange] = 0;
			SetPVarInt(playerid,"Fraction_Duty",1);
			pData[playerid][pJob] = 0;
			SetPlayerSkin(playerid, pData[playerid][pModel]);
			//SpawnPlayer(playerid);

			return true;
		}
	case 1011:
		{
			if(!response) return true;
			SCM(playerid, COLOR_BLUE, " Рабочий день окончен");
			SetPlayerSkin(playerid, pData[playerid][pChar][0]);
			SetPlayerColor(playerid, TEAM_HIT_COLOR);
			DeletePVar(playerid,"Fraction_Duty");
			SetPlayerArmour(playerid,0);
			ResetPlayerWeaponEx(playerid);
			DeletePVar(playerid, !#_pDetachRank);
			DeletePVar(playerid, !#_pDetachColor);

			return true;
		}
	case 5522:
		{
			if(!response) return true;
			new Float:health;
			GetPlayerHealth(playerid, health);
			if(health >= 100.0) return SCM(HealOffer[playerid], COLOR_GRAD1, " Этот человек здоров!");
			if(pData[playerid][pCash] < HealPrice[playerid]) return SCM(HealOffer[playerid], COLOR_GREY, " У этого человека нет столько денег на руках!"),SCM(playerid,COLOR_GREY," У вас недостаточно денег");
			pData[playerid][pCash] -= HealPrice[playerid];
			SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
			pData[HealOffer[playerid]][pPayCheck] += HealPrice[playerid];
			SetAccountInfo(HealOffer[playerid], pData[playerid][pPayCheck], "pPayCheck");
			PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
			format(string, 64, "~g~+100hp~n~~r~-$%i", HealPrice[playerid]);
			GameTextForPlayer(playerid, string, 5000, 1);
			format(string, 64, "~g~+100hp~n~~g~+$%i", HealPrice[playerid]);
			GameTextForPlayer(HealOffer[playerid], string, 5000, 1);
			SendMes(HealOffer[playerid],COLOR_BLUE," Вы вылечили %s за %i вирт. Деньги поступят на банковский счет во время зарплаты",Name(playerid),HealPrice[playerid]);
			SetPlayerHealth(playerid, 100);
			if(pData[playerid][pNarcoLomka] == 2)
			{
				SetPlayerWeather(playerid,ServWeather);
				format(cString,sizeof(cString)," Вы спасли %s от ломки",Name(playerid));
				SCM(HealOffer[playerid],COLOR_GREEN,cString);
				format(cString,sizeof(cString)," Медик %s спас вас от ломки",Name(HealOffer[playerid]));
				SCM(playerid,COLOR_GREEN,cString);
				startaddiction[playerid] = 0;
				ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,0,0,0,0,1);
				pData[playerid][pNarcoLomka] = 1; // Ломка
				SetAccountInfo(playerid, pData[playerid][pNarcoLomka], "pNarcoLomka");
			}
		}

	case 9500:
		{
			if(!response) DeletePVar(playerid,"Licenses");
			if(GetPVarInt(playerid,"Licenses") == 1)
			{
				if(pData[playerid][pCash] < 500) return SCM(playerid, COLOR_GREY, " У вас недостаточно денег");
				pData[playerid][pCash]-=GetPVarInt(playerid,"MoneyLicenses");
				SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
				pData[GetPVarInt(playerid,"PlayerSell")][pPayCheck]+=GetPVarInt(playerid,"MoneyLicenses")/70;
				SetAccountInfo(GetPVarInt(playerid,"PlayerSell"), pData[GetPVarInt(playerid,"PlayerSell")][pPayCheck], "pPayCheck");
				format(string, 144, " Игрок %s приобрел водительские права. Сумма добавлена к зарплате.",pData[playerid][pName]);
				if(pData[GetPVarInt(playerid,"PlayerSell")][pMember] == 11) SCM(GetPVarInt(playerid,"PlayerSell"), 0x6495EDFF, string);
				PlayerLicenses(playerid, LICENSES_SET, LIC_DRIVER);
				SetAccountInfo(playerid, pData[playerid][pLicenses], "pLicenses");
				SCM(playerid, 0x6495EDFF, " Вы успешно приобрели водительские права.");
				foreach(new i: Player)
				{
					if(pData[i][pMember] == 11)
					{
						if(pData[i][pRank] == 8) pData[i][pPayCheck]+=GetPVarInt(playerid,"MoneyLicenses")/95, SetAccountInfo(i, pData[i][pPayCheck], "pPayCheck");
						else if(pData[i][pRank] == 9) pData[i][pPayCheck]+=GetPVarInt(playerid,"MoneyLicenses")/92, SetAccountInfo(i, pData[i][pPayCheck], "pPayCheck");
						else if(pData[i][pRank] == 10) pData[i][pPayCheck]+=GetPVarInt(playerid,"MoneyLicenses")/90, SetAccountInfo(i, pData[i][pPayCheck], "pPayCheck");
					}
				}
			}
			else if(GetPVarInt(playerid,"Licenses") == 2)
			{
				if(pData[playerid][pCash] < 10000) return SCM(playerid, COLOR_GREY, " У вас недостаточно денег");
				pData[playerid][pCash]-=10000;
				SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
				pData[GetPVarInt(playerid,"PlayerSell")][pPayCheck]+=10000/70;
				SetAccountInfo(GetPVarInt(playerid,"PlayerSell"), pData[GetPVarInt(playerid,"PlayerSell")][pPayCheck], "pPayCheck");
				format(string, 144, " Игрок %s приобрел лицензию на воздушный траспорт. Сумма добавлена к зарплате.",pData[playerid][pName]);
				if(pData[GetPVarInt(playerid,"PlayerSell")][pMember] == 11) SCM(GetPVarInt(playerid,"PlayerSell"), 0x6495EDFF, string);
				PlayerLicenses(playerid, LICENSES_SET, LIC_HELICOPTER);
				SetAccountInfo(playerid, pData[playerid][pLicenses], "pLicenses");
				SCM(playerid, 0x6495EDFF, " Вы успешно приобрели лицензию.");
				foreach(new i: Player)
				{
					if(pData[i][pMember] == 11)
					{
						if(pData[i][pRank] == 8) pData[i][pPayCheck]+=10000/95, SetAccountInfo(i, pData[i][pPayCheck], "pPayCheck");
						else if(pData[i][pRank] == 9) pData[i][pPayCheck]+=10000/92, SetAccountInfo(i, pData[i][pPayCheck], "pPayCheck");
						else if(pData[i][pRank] == 10) pData[i][pPayCheck]+=10000/90, SetAccountInfo(i, pData[i][pPayCheck], "pPayCheck");
					}
				}
			}
			else if(GetPVarInt(playerid,"Licenses") == 3)
			{
				if(pData[playerid][pCash] < 2000) return SCM(playerid, COLOR_GREY, " У вас недостаточно денег");
				pData[playerid][pCash]-=2000;
				SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
				pData[GetPVarInt(playerid,"PlayerSell")][pPayCheck]+=2000/70;
				SetAccountInfo(GetPVarInt(playerid,"PlayerSell"), pData[GetPVarInt(playerid,"PlayerSell")][pPayCheck], "pPayCheck");
				format(string, 144, " Игрок %s приобрел лицензию на рыболовство. Сумма добавлена к зарплате.",pData[playerid][pName]);
				if(pData[GetPVarInt(playerid,"PlayerSell")][pMember] == 11) SCM(GetPVarInt(playerid,"PlayerSell"), 0x6495EDFF, string);
				PlayerLicenses(playerid, LICENSES_SET, LIC_FISHING);
				SetAccountInfo(playerid, pData[playerid][pLicenses], "pLicenses");
				SCM(playerid, 0x6495EDFF, " Вы успешно приобрели лицензию.");
				foreach(new i: Player)
				{
					if(pData[i][pMember] == 11)
					{
						if(pData[i][pRank] == 8) pData[i][pPayCheck]+=2000/95, SetAccountInfo(i, pData[i][pPayCheck], "pPayCheck");
						else if(pData[i][pRank] == 9) pData[i][pPayCheck]+=2000/92, SetAccountInfo(i, pData[i][pPayCheck], "pPayCheck");
						else if(pData[i][pRank] == 10) pData[i][pPayCheck]+=2000/90, SetAccountInfo(i, pData[i][pPayCheck], "pPayCheck");
					}
				}
			}
			else if(GetPVarInt(playerid,"Licenses") == 4)
			{
				if(pData[playerid][pCash] < 5000) return SCM(playerid, COLOR_GREY, " У вас недостаточно денег");
				pData[playerid][pCash]-=5000;
				SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
				pData[GetPVarInt(playerid,"PlayerSell")][pPayCheck]+=5000/70;
				SetAccountInfo(GetPVarInt(playerid,"PlayerSell"), pData[GetPVarInt(playerid,"PlayerSell")][pPayCheck], "pPayCheck");
				format(string, 144, " Игрок %s приобрел лицензию на морской траспорт. Сумма добавлена к зарплате.",pData[playerid][pName]);
				if(pData[GetPVarInt(playerid,"PlayerSell")][pMember] == 11) SCM(GetPVarInt(playerid,"PlayerSell"), 0x6495EDFF, string);
				PlayerLicenses(playerid, LICENSES_SET, LIC_BOAT);
				SetAccountInfo(playerid, pData[playerid][pLicenses], "pLicenses");
				SCM(playerid, 0x6495EDFF, " Вы успешно приобрели лицензию.");
				foreach(new i: Player)
				{
					if(pData[i][pMember] == 11)
					{
						if(pData[i][pRank] == 8) pData[i][pPayCheck]+=5000/95, SetAccountInfo(i, pData[i][pPayCheck], "pPayCheck");
						else if(pData[i][pRank] == 9) pData[i][pPayCheck]+=5000/92, SetAccountInfo(i, pData[i][pPayCheck], "pPayCheck");
						else if(pData[i][pRank] == 10) pData[i][pPayCheck]+=5000/90, SetAccountInfo(i, pData[i][pPayCheck], "pPayCheck");
					}
				}
			}
			else if(GetPVarInt(playerid,"Licenses") == 5)
			{
				if(pData[playerid][pCash] < 50000) return SCM(playerid, COLOR_GREY, " У вас недостаточно денег");
				pData[playerid][pCash]-=50000;
				SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
				pData[GetPVarInt(playerid,"PlayerSell")][pPayCheck]+=50000/70;
				SetAccountInfo(GetPVarInt(playerid,"PlayerSell"), pData[GetPVarInt(playerid,"PlayerSell")][pPayCheck], "pPayCheck");
				format(string, 144, " Игрок %s приобрел лицензию на оружие. Сумма добавлена к зарплате.",pData[playerid][pName]);
				if(pData[GetPVarInt(playerid,"PlayerSell")][pMember] == 11) SCM(GetPVarInt(playerid,"PlayerSell"), 0x6495EDFF, string);
				PlayerLicenses(playerid, LICENSES_SET, LIC_WEAPONS);
				SetAccountInfo(playerid, pData[playerid][pLicenses], "pLicenses");
				SCM(playerid, 0x6495EDFF, " Вы успешно приобрели лицензию.");
				foreach(new i: Player)
				{
					if(pData[i][pMember] == 11)
					{
						if(pData[i][pRank] == 8) pData[i][pPayCheck]+=50000/95, SetAccountInfo(i, pData[i][pPayCheck], "pPayCheck");
						else if(pData[i][pRank] == 9) pData[i][pPayCheck]+=50000/92, SetAccountInfo(i, pData[i][pPayCheck], "pPayCheck");
						else if(pData[i][pRank] == 10) pData[i][pPayCheck]+=50000/90, SetAccountInfo(i, pData[i][pPayCheck], "pPayCheck");
					}
				}
			}
			else if(GetPVarInt(playerid,"Licenses") == 6)
			{
				if(pData[playerid][pCash] < 100000) return SCM(playerid, COLOR_GREY, " У вас недостаточно денег");
				pData[playerid][pCash]-=100000;
				SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
				pData[GetPVarInt(playerid,"PlayerSell")][pPayCheck]+=100000/70;
				SetAccountInfo(GetPVarInt(playerid,"PlayerSell"), pData[GetPVarInt(playerid,"PlayerSell")][pPayCheck], "pPayCheck");
				format(string, 144, " Игрок %s приобрел лицензию на открытие бизнеса. Сумма добавлена к зарплате.",pData[playerid][pName]);
				if(pData[GetPVarInt(playerid,"PlayerSell")][pMember] == 11) SCM(GetPVarInt(playerid,"PlayerSell"), 0x6495EDFF, string);
				BizzInfo[pData[playerid][pPBizzKey]][bLicense] = 1;
				SaveMySQL(4,pData[playerid][pPBizzKey]);
				SCM(playerid, 0x6495EDFF, " Вы успешно приобрели лицензию.");
				foreach(new i: Player)
				{
					if(pData[i][pMember] == 11)
					{
						if(pData[i][pRank] == 8) pData[i][pPayCheck]+=100000/95, SetAccountInfo(i, pData[i][pPayCheck], "pPayCheck");
						else if(pData[i][pRank] == 9) pData[i][pPayCheck]+=100000/92, SetAccountInfo(i, pData[i][pPayCheck], "pPayCheck");
						else if(pData[i][pRank] == 10) pData[i][pPayCheck]+=100000/90, SetAccountInfo(i, pData[i][pPayCheck], "pPayCheck");
					}
				}
			}
			DeletePVar(playerid,"PlayerSell");
			DeletePVar(playerid,"Licenses");
		}
	case 7777:
		{
			if(!response) return DeletePVar(ChosenPlayer[playerid],"PlayerSell");
			else if(pData[playerid][pRank] < listitem+1) return SendMes(playerid,COLOR_GRAD1," Доступно для %i ранга",listitem+1),DeletePVar(ChosenPlayer[playerid],"PlayerSell");
			new string556[100];
			switch(listitem)
			{
			case 0:
				{
					//if(pData[playerid][pCash] < 500) return SCM(playerid, COLOR_GREY, " У вас Недостаточно денег");

					if(PlayerLicenses(ChosenPlayer[playerid], LICENSES_GET, LIC_DRIVER)) return SCM(playerid, COLOR_GRAD1, " У данного игрока уже есть вод. права!");
					if(pData[ChosenPlayer[playerid]][pLevel] <= 2) SetPVarInt(ChosenPlayer[playerid], "MoneyLicenses",500);
					else if(pData[ChosenPlayer[playerid]][pLevel] <= 5) SetPVarInt(ChosenPlayer[playerid], "MoneyLicenses",5000);
					else if(pData[ChosenPlayer[playerid]][pLevel] <= 15) SetPVarInt(ChosenPlayer[playerid], "MoneyLicenses",10000);
					else SetPVarInt(ChosenPlayer[playerid], "MoneyLicenses",30000);
					SetPVarInt(ChosenPlayer[playerid], "Licenses",1);
					SendMes(playerid,COLOR_BLUE," Вы предложили %s купить водительские права за %i вирт",pData[ChosenPlayer[playerid]][pName],GetPVarInt(ChosenPlayer[playerid], "MoneyLicenses"));
					format(string,256,"Инструктор %s предлагает вам купить водительские права за %i вирт\nВы согласны?",pData[playerid][pName],GetPVarInt(ChosenPlayer[playerid], "MoneyLicenses"));
					ShowPlayerDialog(ChosenPlayer[playerid], 9500, DIALOG_STYLE_MSGBOX, "Продажа лицензий:",string, "Купить", "Отмена");
					return true;
				}
			case 1:
				{
					//if(pData[playerid][pCash] < 10000) return SCM(playerid, COLOR_GREY, " У вас недостаточно денег");
					if(PlayerLicenses(ChosenPlayer[playerid], LICENSES_GET, LIC_HELICOPTER)) return SCM(playerid, COLOR_GRAD1, " У данного игрока уже есть эта лицензия!");
					SetPVarInt(ChosenPlayer[playerid], "Licenses",2);
					SendMes(playerid,COLOR_BLUE," Вы предложили %s купить лицензию на воздушный транспорт за 10000 вирт",pData[ChosenPlayer[playerid]][pName]);
					format(string,256,"Инструктор %s предлагает вам купить лицензию на воздушный транспорт за 10000 вирт\nВы согласны?",pData[playerid][pName]);
					ShowPlayerDialog(ChosenPlayer[playerid], 9500, DIALOG_STYLE_MSGBOX, "Продажа лицензий:",string, "Купить", "Отмена");
					return true;
				}
			case 2:
				{
					//if(pData[playerid][pCash] < 2000) return SCM(playerid, COLOR_GREY, " У вас недостаточно денег");
					if(PlayerLicenses(ChosenPlayer[playerid], LICENSES_GET, LIC_FISHING)) return SCM(playerid, COLOR_GRAD1, " У данного игрока уже есть эта лицензия!");
					SetPVarInt(ChosenPlayer[playerid], "Licenses",3);
					SendMes(playerid,COLOR_BLUE," Вы предложили %s купить лицензию на рыболовство за 2000 вирт",pData[ChosenPlayer[playerid]][pName]);
					format(string,256,"Инструктор %s предлагает вам купить лицензию на рыболовство за 2000 вирт\nВы согласны?",pData[playerid][pName]);
					ShowPlayerDialog(ChosenPlayer[playerid], 9500, DIALOG_STYLE_MSGBOX, "Продажа лицензий:",string, "Купить", "Отмена");
				}
			case 3:
				{
					//if(pData[playerid][pCash] < 5000) return SCM(playerid, COLOR_GREY, " У вас недостаточно денег");
					if(PlayerLicenses(ChosenPlayer[playerid], LICENSES_GET, LIC_BOAT)) return SCM(playerid, COLOR_GRAD1, " У данного игрока уже есть эта лицензия!");
					SetPVarInt(ChosenPlayer[playerid], "Licenses",4);
					SendMes(playerid,COLOR_BLUE," Вы предложили %s купить лицензию на морской транспорт за 5000 вирт",pData[ChosenPlayer[playerid]][pName]);
					format(string,256,"Инструктор %s предлагает вам купить лицензию на морской транспорт за 5000 вирт\nВы согласны?",pData[playerid][pName]);
					ShowPlayerDialog(ChosenPlayer[playerid], 9500, DIALOG_STYLE_MSGBOX, "Продажа лицензий:",string, "Купить", "Отмена");
					return true;
				}
			case 4:
				{
					//if(pData[playerid][pCash] < 50000) return SCM(playerid, COLOR_GREY, " У вас недостаточно денег");
					if(PlayerLicenses(ChosenPlayer[playerid], LICENSES_GET, LIC_WEAPONS)) return	SCM(playerid, COLOR_GRAD1, " У данного игрока уже есть эта лицензия!");
					if(pData[ChosenPlayer[playerid]][pLevel] < 2) return SCM(playerid,COLOR_GREY," Доступно игрокам со 2-го уровня");
					SetPVarInt(ChosenPlayer[playerid], "Licenses",5);
					SendMes(playerid,COLOR_BLUE," Вы предложили %s купить лицензию на оружие за 50000 вирт",pData[ChosenPlayer[playerid]][pName]);
					format(string,256,"Инструктор %s предлагает вам купить лицензию на оружие за 50000 вирт\nВы согласны?",pData[playerid][pName]);
					ShowPlayerDialog(ChosenPlayer[playerid], 9500, DIALOG_STYLE_MSGBOX, "Продажа лицензий:",string, "Купить", "Отмена");
					return true;
				}
			case 5:
				{
					//if(pData[playerid][pCash] < 100000) return SCM(playerid, COLOR_GREY, " У вас недостаточно денег");
					if(!BGet(ChosenPlayer[playerid])) return	SCM(playerid, COLOR_GRAD1, " Игрок не имеет бизнеса!");
					SetPVarInt(ChosenPlayer[playerid], "Licenses",6);
					SendMes(playerid,COLOR_BLUE," Вы предложили %s купить лицензию на открытие бизнеса за 100000 вирт",pData[ChosenPlayer[playerid]][pName]);
					format(string,256,"Инструктор %s предлагает вам купить лицензию на открытие бизнеса за 100000 вирт\nВы согласны?",pData[playerid][pName]);
					ShowPlayerDialog(ChosenPlayer[playerid], 9500, DIALOG_STYLE_MSGBOX, "Продажа лицензий:",string, "Купить", "Отмена");
					return true;
				}
			case 6:
				{
					if(TakingLesson[ChosenPlayer[playerid]] == 1) return SCM(playerid, COLOR_GRAD1, " Вы уже начинали с этим игроком урок!");
					format(string556, sizeof(string556), " Вы начали урок у %s.",Name(ChosenPlayer[playerid]));
					SCM(playerid, 0x6495EDFF, string556);
					TakingLesson[ChosenPlayer[playerid]] = 1;
					SCM(ChosenPlayer[playerid], 0x6495EDFF, "Инструктор начал с Вами урок по вождению");
					return true;
				}
			case 7:
				{
					if(TakingLesson[ChosenPlayer[playerid]] == 0) return SCM(playerid, COLOR_GRAD1, " Вы не начинали урок с этим игроком!");
					format(string556, sizeof(string556), "Вы завершили урок у %s.",Name(ChosenPlayer[playerid]));
					SCM(playerid, 0x6495EDFF, string556);
					TakingLesson[ChosenPlayer[playerid]] = 0;
					SCM(ChosenPlayer[playerid], 0x6495EDFF, "Инструктор завершил с Вами урок по вождению");
					return true;
				}
			}
		}
	case 7779:
		{
			if(response)
			{
				new mess[40];
				new idd = chooses[playerid];
				switch(listitem)
				{
				case 0..12:
					{
						while(strfind(inputtext, "A",true)!=-1)
						{
							if(idd == INVALID_PLAYER_ID) return	SCM(playerid, COLOR_GREY, " Игрок не найден");
							if(!ProxDetectorS(8.0, playerid, idd)) return	SCM(playerid, COLOR_GREY, " Необходимо находиться рядом друг с другом");
							format(string, 144, " %s забрал(а) у %s наркотики", Name(playerid),Name(idd),idd);
							ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							pData[idd][pDrugs] = 0;
							SetAccountInfo(idd, pData[idd][pDrugs], "pDrugs");
							format(mess, sizeof(mess), "%i",idd);
							return cmd_take(playerid, mess);
						}
						while(strfind(inputtext, "B",true)!=-1)
						{
							if(idd == INVALID_PLAYER_ID) return	SCM(playerid, COLOR_GREY, " Игрок не найден");
							if(!ProxDetectorS(8.0, playerid, idd)) return	SCM(playerid, COLOR_GREY, " Необходимо находиться рядом друг с другом");
							format(string, 144, " %s забрал(а) у %s материалы", Name(playerid),Name(idd),idd);
							ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							pData[idd][pMats] = 0;
							SetAccountInfo(idd, pData[idd][pMats], "pMats");
							format(mess, sizeof(mess), "%i",idd);
							return cmd_take(playerid, mess);
						}
						while(strfind(inputtext, "Y",true)!=-1)
						{
							SCM(playerid,COLOR_WHITE," Вы не можете забрать это");
							format(mess, sizeof(mess), "%i",idd);
							return cmd_take(playerid, mess);
						}
						while(strfind(inputtext, "E",true)!=-1)
						{
							SCM(playerid,COLOR_WHITE," Вы не можете забрать это");
							format(mess, sizeof(mess), "%i",idd);
							return cmd_take(playerid, mess);
						}
						while(strfind(inputtext, "H",true)!=-1)
						{
							SCM(playerid,COLOR_WHITE," Вы не можете забрать это");
							format(mess, sizeof(mess), "%i",idd);
							return cmd_take(playerid, mess);
						}
						while(strfind(inputtext, "J",true)!=-1)
						{
							SCM(playerid,COLOR_WHITE," Вы не можете забрать это");
							format(mess, sizeof(mess), "%i",idd);
							return cmd_take(playerid, mess);
						}
						while(strfind(inputtext, "K",true)!=-1)
						{
							if(idd == INVALID_PLAYER_ID) return	SCM(playerid, COLOR_GREY, " Игрок не найден");
							if(!ProxDetectorS(8.0, playerid, idd)) return	SCM(playerid, COLOR_GREY, " Необходимо находиться рядом друг с другом");
							format(string, 144, "%s забрал(а) у %s водительские права", Name(playerid),Name(idd),idd);
							ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							PlayerLicenses(idd, LICENSES_TAKE, LIC_DRIVER);
							SetAccountInfo(idd, pData[idd][pLicenses], "pLicenses");
							format(mess, sizeof(mess), "%i",idd);
							return cmd_take(playerid, mess);
						}
						while(strfind(inputtext, "L",true)!=-1)
						{
							if(idd == INVALID_PLAYER_ID) return	SCM(playerid, COLOR_GREY, " Игрок не найден");
							if(!ProxDetectorS(8.0, playerid, idd)) return	SCM(playerid, COLOR_GREY, " Необходимо находиться рядом друг с другом");
							format(string, 144, "%s забрал(а) у %s лицензию пилота", Name(playerid),Name(idd),idd);
							ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							PlayerLicenses(idd, LICENSES_TAKE, LIC_HELICOPTER);
							SetAccountInfo(idd, pData[idd][pLicenses], "pLicenses");
							format(mess, sizeof(mess), "%i",idd);
							return cmd_take(playerid, mess);
						}
						while(strfind(inputtext, "M",true)!=-1)
						{
							if(idd == INVALID_PLAYER_ID) return	SCM(playerid, COLOR_GREY, " Игрок не найден");
							if(!ProxDetectorS(8.0, playerid, idd)) return	SCM(playerid, COLOR_GREY, " Необходимо находиться рядом друг с другом");
							format(string, 144, "%s забрал(а) у %s лицензию на лодки", Name(playerid),Name(idd),idd);
							ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							PlayerLicenses(idd, LICENSES_TAKE, LIC_BOAT);
							SetAccountInfo(idd, pData[idd][pLicenses], "pLicenses");
							format(mess, sizeof(mess), "%i",idd);
							return cmd_take(playerid, mess);
						}
						while(strfind(inputtext, "N",true)!=-1)
						{
							if(idd == INVALID_PLAYER_ID) return	SCM(playerid, COLOR_GREY, " Игрок не найден");
							if(!ProxDetectorS(8.0, playerid, idd)) return	SCM(playerid, COLOR_GREY, " Необходимо находиться рядом друг с другом");
							format(string, 144, "%s забрал(а) у %s лицензию на рыболовство", Name(playerid),Name(idd),idd);
							ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							PlayerLicenses(idd, LICENSES_TAKE, LIC_FISHING);
							SetAccountInfo(idd, pData[idd][pLicenses], "pLicenses");
							format(mess, sizeof(mess), "%i",idd);
							return cmd_take(playerid, mess);
						}
						while(strfind(inputtext, "O",true)!=-1)
						{
							if(idd == INVALID_PLAYER_ID) return	SCM(playerid, COLOR_GREY, " Игрок не найден");
							if(!ProxDetectorS(8.0, playerid, idd)) return	SCM(playerid, COLOR_GREY, " Необходимо находиться рядом друг с другом");
							format(string, 144, "%s забрал(а) у %s лицензию на оружие", Name(playerid),Name(idd),idd);
							ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							PlayerLicenses(idd, LICENSES_TAKE, LIC_WEAPONS);
							SetAccountInfo(idd, pData[idd][pLicenses], "pLicenses");
							format(mess, sizeof(mess), "%i",idd);
							return cmd_take(playerid, mess);
						}
						while(strfind(inputtext, "R",true)!=-1)
						{
							SCM(playerid,COLOR_WHITE," Вы не можете забрать это");
							format(mess, sizeof(mess), "%i",idd);
							return cmd_take(playerid, mess);
						}
						while(strfind(inputtext, "P",true)!=-1)
						{
							if(idd == INVALID_PLAYER_ID) return	SCM(playerid, COLOR_GREY, " Игрок не найден");
							if(!ProxDetectorS(8.0, playerid, idd)) return	SCM(playerid, COLOR_GREY, " Необходимо находиться рядом друг с другом");
							format(string, 144, "%s забрал(а) у %s оружие", Name(playerid),Name(idd),idd);
							ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							ResetPlayerWeaponEx(idd);
							format(mess, sizeof(mess), "%i",idd);
							return cmd_take(playerid, mess);
						}
						while(strfind(inputtext, "F",true)!=-1)
						{
							if(idd == INVALID_PLAYER_ID) return	SCM(playerid, COLOR_GREY, " Игрок не найден");
							if(!ProxDetectorS(8.0, playerid, idd)) return	SCM(playerid, COLOR_GREY, " Необходимо находиться рядом друг с другом");
							format(string, 144, "%s забрал(а) у %s ключи", Name(playerid),Name(idd),idd);
							ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							pData[idd][pKeys] = 0;
							SetAccountInfo(idd, pData[idd][pKeys], "pKeys");
							format(mess, sizeof(mess), "%i",idd);
							return cmd_take(playerid, mess);
						}
					}
				}
			}
			else return chooses[playerid] = 1000;
		}
	case 9957:
		{
			if(!response) return true;
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
			new online;
			new Float:xxx,Float:xxy,Float:xxz;
			AntiCheatGetPos(playerid,xxx,xxy,xxz);
			foreach(new i: Player)
			{
				if(inTaxi[i] == -1 && IsPlayerInRangeOfPoint(i,750.0,xxx,xxy,xxz))
				{
					online++;
					break;
				}
			}
			if(!online)return SCM(playerid, COLOR_GREY, " В вашем районе нет таксистов");
	
			if(inTaxi[playerid] == -1) return SCM(playerid, COLOR_GREY, " Ошибка.  Вы работаете таксистом");
		
			SCM(playerid, COLOR_RED, "- Диспетчер: ваше сообщение доставлено, подождите пока примут вызов");
			TaxiCall = playerid;

			foreach(new i: Player)
			{
				if(inTaxi[i] == -1)
				{
					format(string, 190, " - Диспетчер: вам вызов от %s. Местонахождение: %s",pData[playerid][pName],inputtext);
					SCM(i, COLOR_RED, string);
					format(string, 190, "Примерное расстояние %.2f метр(ов). Введите ''(/ac)cept taxi'' чтобы принять вызов",GetDistanceBetweenPlayerss(i,TaxiCall));
					SCM(i, COLOR_RED, string);
				}
			}
		}
	case 9958:
		{
			if(!response) return true;
			new online = 0;
			foreach(new i: Player)
			{
				if(pData[i][pMember] == 22 && GetPVarInt(i,"Fraction_Duty")) online++;
			}
			if(online == 0)
			{
				SCM(playerid, COLOR_GREY, " В данный момент нет медиков на дежурстве!");
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				return true;
			}
			online = 0;
			new Float:xxx,Float:xxy,Float:xxz;
			AntiCheatGetPos(playerid,xxx,xxy,xxz);
			foreach(new i: Player)
			{
				if(pData[i][pMember] == 22 && GetPVarInt(i,"Fraction_Duty") && IsPlayerInRangeOfPoint(i,750.0,xxx,xxy,xxz)) online++;
			}
			if(online == 0)
			{
				SCM(playerid, COLOR_GREY, " В вашем районе нет медиков на дежурстве");
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				return true;
			}
			if(pData[playerid][pMember] == 22 && GetPVarInt(playerid,"Fraction_Duty")) 
			{	
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				return SCM(playerid, COLOR_GREY, " Ошибка.  Вы уже работаете медиком");
			}
			SCM(playerid, COLOR_RED, "- Диспетчер: ваше сообщение доставлено, подождите пока примут вызов");
			MedicCall = playerid;
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
			foreach(new i: Player)
			{
				if(pData[i][pMember] == 22 && GetPVarInt(i,"Fraction_Duty"))
				{
					format(string, 190, " - Диспетчер: вам вызов от %s. Местонахождение: %s",pData[playerid][pName],inputtext);
					SCM(i, COLOR_RED, string);
					format(string, 190, "Примерное расстояние %.2f метр(ов). Введите ''(/ac)cept medic'' чтобы принять вызов",GetDistanceBetweenPlayerss(i,MedicCall));
					SCM(i, COLOR_RED, string);
				}
			}
		}
	case 9959:
		{
			if(!response) return true;
			new online = 0;
			foreach(new i: Player)
			{
				if(pData[i][pJob] == 2) online++;
			}
			if(online == 0)
			{
				SCM(playerid, COLOR_GREY, " В данный момент нет механников на дежурстве!");
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				return true;
			}
			online = 0;
			new Float:xxx,Float:xxy,Float:xxz;
			AntiCheatGetPos(playerid,xxx,xxy,xxz);
			foreach(new i: Player)
			{
				if(pData[i][pJob] == 2 && IsPlayerInRangeOfPoint(i,500.0,xxx,xxy,xxz)) online++;
			}
			if(online == 0)
			{
				SCM(playerid, COLOR_GREY, " В вашем районе нет механиков на дежурстве");
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				return true;
			}
			if(pData[playerid][pJob] == 2) 
			{
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				return SCM(playerid, COLOR_GREY, " Ошибка.  Вы уже работаете механником");
			}
			SCM(playerid, COLOR_RED, "- Диспетчер: ваше сообщение доставлено, подождите пока примут вызов");
			MechanicCall = playerid;
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
			foreach(new i: Player)
			{
				if(pData[i][pJob] == 2)
				{
					if(IsPlayerInAnyVehicle(playerid) && pData[playerid][pState] == PLAYER_STATE_DRIVER)
					{
						if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 525)
						{
							format(string, 190, " - Диспетчер: вам вызов от %s. Местонахождение: %s",pData[playerid][pName],inputtext);
							SCM(i, COLOR_RED, string);
							format(string, 190, "Примерное расстояние %.2f метр(ов). Введите ''(/ac)cept mechanic'' чтобы принять вызов",GetDistanceBetweenPlayerss(i,MechanicCall));
							SCM(i, COLOR_RED, string);
						}
					}
				}
			}
		}
	case 9960:
		{
			if(!response) return true;
			new online = 0;
			foreach(new i: Player)
			{
				if((pData[i][pMember] == 21 || pData[i][pMember] == 10 || pData[i][pMember] == 1) && GetPVarInt(i,"Fraction_Duty")) online++;
			}
			if(online == 0)
			{
				SCM(playerid, COLOR_GREY, " В данный момент нет полицейских на дежурстве!");
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				return true;
			}
			online = 0;
			new Float:xxx,Float:xxy,Float:xxz;
			AntiCheatGetPos(playerid,xxx,xxy,xxz);
			foreach(new i: Player)
			{
				if(IsACop(i) && IsPlayerInRangeOfPoint(i,500.0,xxx,xxy,xxz)) online++;
			}
			if(online == 0)
			{
				SCM(playerid, COLOR_GREY, " В вашем районе нет полицейских на дежурстве");
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				return true;
			}
			if((pData[playerid][pMember] == 21 || pData[playerid][pMember] == 10 || pData[playerid][pMember] == 1) && GetPVarInt(playerid,"Fraction_Duty")) 
			{
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				return SCM(playerid, COLOR_GREY, " Ошибка.  Вы уже работаете полицейским");
			}
			SCM(playerid, COLOR_RED, "- Диспетчер: ваше сообщение доставлено, подождите пока примут вызов");
			PoliceCall = playerid;
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
			foreach(new i: Player)
			{
				if((pData[i][pMember] == 21 || pData[i][pMember] == 10 || pData[i][pMember] == 1) && GetPVarInt(i,"Fraction_Duty"))
				{
					format(string, 190, " - Диспетчер: вам вызов от %s. Ситуация: %s",pData[playerid][pName],inputtext);
					SCM(i, COLOR_RED, string);
					format(string, 190, "Примерное расстояние %.2f метр(ов). Введите ''(/ac)cept police'' чтобы принять вызов",GetDistanceBetweenPlayerss(i,PoliceCall));
					SCM(i, COLOR_RED, string);
				}
			}
		}
	case 9956:
		{
			if(!response) return SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
			switch(listitem)
			{
			case 2:
				{
					ShowPlayerDialog(playerid,9957,DIALOG_STYLE_INPUT,"Диспетчер",".\t\t\tОпишите где вы находитесь\t\t\t.","Готово","Отмена");
					return true;
				}
			case 1:
				{
					ShowPlayerDialog(playerid,9958,DIALOG_STYLE_INPUT,"Диспетчер",".\t\t\tОпишите где вы находитесь\t\t\t.","Готово","Отмена");
					return true;
				}
			case 3:
				{
					ShowPlayerDialog(playerid,9959,DIALOG_STYLE_INPUT,"Диспетчер",".\t\t\tОпишите где вы находитесь\t\t\t.","Готово","Отмена");
					return true;
				}
			case 0:
				{
					ShowPlayerDialog(playerid,9960,DIALOG_STYLE_INPUT,"Диспетчер",".\t\t\tОпишите вашу ситуацию\t\t\t.","Готово","Отмена");
					return true;
				}
				case 4:
				{
					if(pData[playerid][pPHouseKey] == INVALID_HOUSE_ID)
						return SCM(playerid, 0xe57373FF, " Доставка осуществляется только на дом!");

					ShowPlayerDialog(playerid,5455,DIALOG_STYLE_MSGBOX,"Диспетчер","{ffffff}Мы готовы принять ваш заказ!\n\n{ffffff}Стоимость: 5 000 вирт\n\nКол-о: 1000 ед. продуктов\n","Оплатить","Отмена");
					return 1;
				}
			}
		}
	case 5455:
	{
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
		if(!response)return 1;
		
		for(new zz = 0; zz < sizeof delivery_info-1; zz ++)
		{
			if(!delivery_info[zz][accept])
			{
				SCM(playerid, 0x26a69aFF, " Ваш заказ принят! Доставка в течении десяти минут!");
				delivery_info[zz][food] = random(14);
				delivery_info[zz][accept] = 1;
				delivery_info[zz][adress] = pData[playerid][pPHouseKey];
				delivery_info[zz][really] = 1;			
				return 1;
			}
		}		
		return SCM(playerid, 0xe57373FF, " Извините, все курьеры заняты. Перезвоните позже..");
	}
	case 5454:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					SCM(playerid, 0xF10DEB10AA, " Таксисты:");
					foreach(new i: Player)
					{
						if(pData[i][pJob] != 4 || (!pData[i][pLogin])) continue;
						format(string, 256, " Таксист: %s [тел: %i]", Name(i), pData[i][pPnumber]);
						SCM(playerid, 0xF999DEB9AA, string);
					}
				}
			case 1:
				{
					SCM(playerid, 0xF10DEB10AA, " Механики:");
					foreach(new i: Player)
					{
						if(pData[i][pJob] != 2) continue;
						format(string, 256, " %s [тел: %i]", Name(i), pData[i][pPnumber]);
						SCM(playerid, 0xF999DEB9AA, string);
					}
				}
			case 2:
				{
					SCM(playerid, 0xF10DEB10AA, " Прорабы:");
					foreach(new i: Player)
					{
						if(pData[i][pJob] != 9) continue;
						format(string, 256, " %s [тел: %i]", Name(i), pData[i][pPnumber]);
						SCM(playerid, 0xF999DEB9AA, string);
					}
				}
			case 3:
				{
					SCM(playerid, 0xF10DEB10AA, " Медики:");
					foreach(new i: Player)
					{
						if(pData[i][pMember] == 22 && pData[i][pLogin] == true)
						{
							format(string, 256, " %s [тел: %i]", Name(i), pData[i][pPnumber]);
							SCM(playerid, 0xF999DEB9AA, string);
						}
					}
				}
			case 4:
				{
					if(IsPlayerConnected(playerid))
					{
						SCM(playerid, 0xF10DEB10AA, " Лидеры Online:");
						foreach(new i: Player)
						{
							if(pData[i][pLeader]>0 && pData[i][pLogin] == true && GetPVarInt(i,"Fraction_Duty") && !dostup[i])
							{
								new ttext[60];
								if(pData[i][pLeader] == 1) { ttext = " LSPD"; }
								else if(pData[i][pLeader] == 2) { ttext = " ФБР"; }
								else if(pData[i][pLeader] == 3) { ttext = " Армия СФ"; }
								else if(pData[i][pLeader] == 4) { ttext = " Медики СФ"; }
								else if(pData[i][pLeader] == 5) { ttext = " LCN"; }
								else if(pData[i][pLeader] == 6) { ttext = " Yakuza"; }
								else if(pData[i][pLeader] == 7) { ttext = " Мэр"; }
								else if(pData[i][pLeader] == 8) { ttext = " Casino Bilagio"; }
								else if(pData[i][pLeader] == 9) { ttext = " SF News"; }
								else if(pData[i][pLeader] == 10) { ttext = " SFPD"; }
								else if(pData[i][pLeader] == 11) { ttext = " Инструкторы"; }
								else if(pData[i][pLeader] == 12) { ttext = " Ballas"; }
								else if(pData[i][pLeader] == 13) { ttext = " Vagos"; }
								else if(pData[i][pLeader] == 14) { ttext = " Russian mafia"; }
								else if(pData[i][pLeader] == 15) { ttext = " Grove"; }
								else if(pData[i][pLeader] == 16) { ttext = " LS News"; }
								else if(pData[i][pLeader] == 17) { ttext = " Aztec"; }
								else if(pData[i][pLeader] == 18) { ttext = " Rifa"; }
								else if(pData[i][pLeader] == 19) { ttext = " Армия ЛВ"; }
								else if(pData[i][pLeader] == 20) { ttext = " LV News"; }
								else if(pData[i][pLeader] == 22) { ttext = " Медики ЛС"; }
								else if(pData[i][pLeader] == 33) { ttext = " Медики ЛВ"; }
								else if(pData[i][pLeader] == 21) { ttext = " LVPD"; }
								else if(pData[i][pLeader] == 24) { ttext = " Mongols MC"; }
								else if(pData[i][pLeader] == 26) { ttext = " Warlocks MC"; }
								else if(pData[i][pLeader] == 29) { ttext = " Pagans MC"; }
								format(string, 144, "%s: %s [тел: %i]",ttext,Name(i),pData[i][pPnumber]);
								SCM(playerid, 0xB3F2AB00, string);
							}
						}
					}
				}
			case 5:
				{
					SCM(playerid, 0xF10DEB10AA, " Адвокаты Online:");
					foreach(new i: Player)
					{
						if(pData[i][pMember] == 7 && pData[i][pRank] == 2 && pData[i][pLogin] == true)
						{
							format(string, 256, " Адвокат: %s [тел: %i]", Name(i), pData[i][pPnumber]);
							SCM(playerid, 0xF999DEB9AA, string);
						}
					}
				}
			case 6:
				{
					SCM(playerid, 0xF10DEB10AA, " Развозчики продуктов:");
					foreach(new i: Player)
					{
						if(pData[i][pJob] != 5) continue;
						format(string, 256, " %s [тел: %i]", Name(i), pData[i][pPnumber]);
						SCM(playerid, 0xF999DEB9AA, string);
					}
				}
			case 7:
				{
					SCM(playerid, 0xF10DEB10AA, " Тренеры:");
					foreach(new i: Player)
					{
						if(pData[i][pJob] != 6 || (!pData[i][pLogin])) continue;
						format(string, 256, " %s [тел: %i]", Name(i), pData[i][pPnumber]);
						SCM(playerid, 0xF999DEB9AA, string);
					}
				}
			case 8:
				{
					SCM(playerid, 0xF10DEB10AA, " Инструкторы:");
					foreach(new i: Player)
					{
						if(!IsPlayerConnected(i)) continue;
						if(pData[i][pMember] != 11) continue;
						format(cString, 78, " Инструктор: %s тел: %i", Name(i), pData[i][pPnumber]);
						SCM(playerid, COLOR_WHITE, cString);
					}
				}
			}
		}
	case 8240:
		{
			if(response) sppos(playerid,302.3128,-140.9305,1004.0625,318.5262,15,7);
			else sppos(playerid, 2278.3853,2460.9187,38.6837, 357.9236, 0, 0);
		}
	case 8241:
		{
			if(response) sppos(playerid, 302.3128,-140.9305,1004.0625, 318.5262, 15, 7);
			else
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid,2294.0447,2468.8052,10.8203);
				SetPlayerFacingAngle(playerid, 90.8629);
				return true;
			}
		}
	case 2013:
		{
			if(!response) return true;
			new listitems[] = " [1] Deagle\t[70 материалов/50 патронов]\n [2] Shotgun\t[50 материалов/15 патронов]\n [3] Rifle\t[100 материалов/10 патронов]\n [4] M4\t\t[500 материалов/100 патронов]\n [5] AK-47\t[500 материалов/100 патронов]\n [6] MP5\t[400 материалов/200 патронов]\n [7] SDPistol\t[100 материалов/100 патронов])";
			ShowPlayerDialog(playerid, 2013, DIALOG_STYLE_LIST, "Взять оружие со склада", listitems, "Взять", "Отмена");
			switch(listitem)
			{
			case 0:
				{
					if(yakuzamats <= 50)return SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 24; ammo = 50;
					yakuzamats -= 70;
				}
			case 1:
				{
					if(yakuzamats <= 50)return SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 25; ammo = 15;
					yakuzamats -= 50;
				}
			case 2:
				{
					if(yakuzamats <= 50)return SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 33; ammo = 10;
					yakuzamats -= 100;
				}
			case 3:
				{
					if(yakuzamats <= 50)return SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 31; ammo = 100;
					yakuzamats -= 500;
				}
			case 4:
				{
					if(yakuzamats <= 50)return SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 30; ammo = 100;
					yakuzamats -= 500;
				}
			case 5:
				{
					if(yakuzamats <= 50)return SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 29; ammo = 200;
					yakuzamats -= 400;
				}
			case 6:
				{
					if(yakuzamats <= 50)return SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 23; ammo = 100; yakuzamats -= 100;
				}
			}
			if(booston == 0) GivePlayerWeaponEx(getgunsid[playerid], gun, ammo);
			else GivePlayerWeaponEx(getgunsid[playerid], gun, ammo*3);
			SendMes(playerid, COLOR_BLUE," На складе осталось %i материалов",yakuzamats);
			if(getgunsid[playerid] == playerid) format(string, 144, " %s взял(а) оружие со склада",pData[playerid][pName]);
			else format(string, 144, " %s взял(а) оружие со склада и передал %s",pData[playerid][pName],Name(getgunsid[playerid]));
			ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return true;
		}
	case 2014:
		{
			if(!response) return true;
			new listitems[] = " [1] Deagle\t[70 материалов/50 патронов]\n [2] Shotgun\t[50 материалов/15 патронов]\n [3] Rifle\t[100 материалов/10 патронов]\n [4] M4\t\t[500 материалов/100 патронов]\n [5] AK-47\t[500 материалов/100 патронов]\n [6] MP5\t[400 материалов/200 патронов]\n [7] SDPistol\t[100 материалов/100 патронов])";
			ShowPlayerDialog(playerid, 2014, DIALOG_STYLE_LIST, "Взять оружие со склада", listitems, "Взять", "Отмена");
			switch(listitem)
			{
			case 0:
				{
					if(lcnmats < 70) return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 24; ammo = 50; lcnmats -= 70;
				}
			case 1:
				{
					if(lcnmats < 50)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 25; ammo = 15; lcnmats -= 50;
				}
			case 2:
				{
					if(lcnmats < 100)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 33; ammo = 10; lcnmats -= 100;
				}
			case 3:
				{
					if(lcnmats < 500)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 31; ammo = 100; lcnmats -= 500;
				}
			case 4:
				{
					if(lcnmats < 500)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 30; ammo = 100; lcnmats -= 500;
				}
			case 5:
				{
					if(lcnmats < 400)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 29; ammo = 200; lcnmats -= 400;
				}
			case 6:
				{
					if(lcnmats < 100)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 23; ammo = 100; lcnmats -= 100;
				}
			}
			if(booston == 0) GivePlayerWeaponEx(getgunsid[playerid], gun, ammo);
			else GivePlayerWeaponEx(getgunsid[playerid], gun, ammo*3);
			SendMes(playerid, COLOR_BLUE," На складе осталось %i материалов",lcnmats);
			if(getgunsid[playerid] == playerid) format(string, 144, " %s взял(а) оружие со склада",pData[playerid][pName]);
			else format(string, 144, " %s взял(а) оружие со склада и передал %s",pData[playerid][pName],Name(getgunsid[playerid]));
			ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return true;
		}
	case 2015:
		{
			if(!response) return true;
			new listitems[] = " [1] Deagle\t[70 материалов/50 патронов]\n [2] Shotgun\t[50 материалов/15 патронов]\n [3] Rifle\t[100 материалов/10 патронов]\n [4] M4\t\t[500 материалов/100 патронов]\n [5] AK-47\t[500 материалов/100 патронов]\n [6] MP5\t[400 материалов/200 патронов]\n [7] SDPistol\t[100 материалов/100 патронов])";
			ShowPlayerDialog(playerid, 2015, DIALOG_STYLE_LIST, "Взять оружие со склада", listitems, "Взять", "Отмена");
			switch(listitem)
			{
			case 0:
				{
					if(rmmats < 70)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 24; ammo = 50; rmmats -= 70;
				}
			case 1:
				{
					if(rmmats < 50)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 25; ammo = 15; rmmats -= 50;
				}
			case 2:
				{
					if(rmmats < 100)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 33; ammo = 10; rmmats -= 100;
				}
			case 3:
				{
					if(rmmats < 500)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 31; ammo = 100; rmmats -= 500;
				}
			case 4:
				{
					if(rmmats < 500)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 30; ammo = 100; rmmats -= 500;
				}
			case 5:
				{
					if(rmmats < 400)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 29; ammo = 200; rmmats -= 400;
				}
			case 6:
				{
					if(rmmats < 100)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 23; ammo = 100; rmmats -= 100;
				}
			}
			if(booston == 0) GivePlayerWeaponEx(getgunsid[playerid], gun, ammo);
			else GivePlayerWeaponEx(getgunsid[playerid], gun, ammo*3);
			SendMes(playerid, COLOR_BLUE," На складе осталось %i материалов",rmmats);
			if(getgunsid[playerid] == playerid) format(string, 144, " %s взял(а) оружие со склада",pData[playerid][pName]);
			else format(string, 144, " %s взял(а) оружие со склада и передал %s",pData[playerid][pName],Name(getgunsid[playerid]));
			ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return true;
		}
	case 2017:
		{
			if(!response) return true;
			new listitems[] = " [1] Deagle\t[70 материалов/50 патронов]\n [2] Shotgun\t[50 материалов/15 патронов]\n [3] Rifle\t[100 материалов/10 патронов]\n [4] M4\t\t[500 материалов/100 патронов]\n [5] AK-47\t[500 материалов/100 патронов]\n [6] MP5\t[400 материалов/200 патронов]\n [7] SDPistol\t[100 материалов/100 патронов])";
			ShowPlayerDialog(playerid, 2017, DIALOG_STYLE_LIST, "Взять оружие со склада", listitems, "Взять", "Отмена");
			switch(listitem)
			{
			case 0:
				{
					if(hamcmatbi < 70)  return SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 24; ammo = 50; hamcmatbi -= 70;
				}
			case 1:
				{
					if(hamcmatbi < 50)  return SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 25; ammo = 15; hamcmatbi -= 50;
				}
			case 2:
				{
					if(hamcmatbi < 100)  return SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 33; ammo = 10; hamcmatbi -= 100;
				}
			case 3:
				{
					if(hamcmatbi < 300)  return SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 31; ammo = 100; hamcmatbi -= 300;
				}
			case 4:
				{
					if(hamcmatbi < 300)  return SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 30; ammo = 100; hamcmatbi -= 300;
				}
			case 5:
				{
					if(hamcmatbi < 400)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 29; ammo = 200; hamcmatbi -= 400;
				}
			case 6:
				{
					if(hamcmatbi < 100)  return  SCM(playerid,COLOR_GRAD1, " На складе нет материалов!");
					gun = 23; ammo = 100; hamcmatbi -= 100;
				}
			}
			if(booston == 0) GivePlayerWeaponEx(getgunsid[playerid], gun, ammo);
			else GivePlayerWeaponEx(getgunsid[playerid], gun, ammo*3);
			SendMes(playerid, COLOR_BLUE," На складе осталось %i материалов",hamcmatbi);
			if(getgunsid[playerid] == playerid) format(string, 144, " %s взял(а) оружие со склада",pData[playerid][pName]);
			else format(string, 144, " %s взял(а) оружие со склада и передал %s",pData[playerid][pName],Name(getgunsid[playerid]));
			ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return true;
		}
	case 8001:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:{ShowPlayerDialog(playerid, 8002, DIALOG_STYLE_LIST, "Важные", "[0] Мэрия\n[1] Банк\n[2] Автошкола\n[3] Автовокзал [LS]\n[4] ЖД вокзал [LS]\n[5] Fort Carson\n[6] Приём металла\n[7] Наркопритон\n[8] Аэропорт [LS]\n[9] Аэропорт [SF]\n[10] Аэропорт [LV]\n[11] Пляж Santa Maria\n[12] Спортзал [LV]\n[13] Пеинтбол\n[14] Церковь", "Выбрать", "Назад");}
			case 1:{ShowPlayerDialog(playerid, 8005, DIALOG_STYLE_LIST, "По работе", "[0] Склад с алкоголем\n[1] Нефтезавод\n[2] Склад продуктов\n[3] Склад для урожая с ферм\n[4] Автобусный парк\n[5] Стоянка машин Хот догов\n[6] Работа грузчика\n[7] Склад с наркотиками\n[8] Автоугонщики", "Выбрать", "Назад");}
			case 2:
				{
					new strrr[924];
					new count = 0;
					for(new h = 1; h <= TotalBizz; h++)
					{
						format(YCMDstr, sizeof(YCMDstr),"[%i] %s\n",count, BizzInfo[h][bMessage]), strcat(strrr, YCMDstr); count ++;
					}
					if (strlen(strrr) > 1) ShowPlayerDialog(playerid, 8006, DIALOG_STYLE_LIST, "Бизнесы", strrr, "Выбрать", "Назад");
				}
			case 3:{ShowPlayerDialog(playerid, 8007, DIALOG_STYLE_LIST, "Магазины", "[0] Автосалон: Nope\n[1] Автосалон: D and C\n[2] Автосалон: B and A\n[3] Магазин одежды [LS]\n[4] Магазин одежды [SF]\n[5] Оружейный магазин [LS]\n[6] Оружейный магазин [SF]\n[7] Оружейный магазин [LV]", "Выбрать", "Назад");}
			case 4:
				{
					new dialog[600];
					strcat(dialog,"[0] Мэрия\n");
					strcat(dialog,"[1] Автошкола\n");
					strcat(dialog,"[2] Медики [LS]\n");
					strcat(dialog,"[3] Медики [SF]\n");
					strcat(dialog,"[4] Медики [LV]\n");
					strcat(dialog,"[5] Полиция [LS]\n");
					strcat(dialog,"[6] Полиция [SF]\n");
					strcat(dialog,"[7] Полиция [LV]\n");
					strcat(dialog,"[8] ФБР\n");
					strcat(dialog,"[9] Военная база [Авианосец]\n");
					strcat(dialog,"[10] Военная база [Зона 51]\n");
					strcat(dialog,"[11] Новости [LS]\n");
					strcat(dialog,"[12] Новости [SF]\n");
					strcat(dialog,"[13] Новости [LV]\n");
					strcat(dialog,"[14] Особняк Yakuza\n");
					strcat(dialog,"[15] Особняк Русской мафии\n");
					strcat(dialog,"[16] Особняк La Coca Nostra\n");
					strcat(dialog,"[17] Район Grove Street\n");
					strcat(dialog,"[18] Район Vagos\n");
					strcat(dialog,"[19] Район Ballas\n");
					strcat(dialog,"[20] Район Rifa\n");
					strcat(dialog,"[21] Район Aztecas\n");
					return ShowPlayerDialog(playerid, 8028, DIALOG_STYLE_LIST, "Базы организаций", dialog, "Выбрать", "Назад");
				}
			case 5:{ShowPlayerDialog(playerid, 8029, DIALOG_STYLE_LIST, "Фермы", "[0] Ферма номер: 0\n[1] Ферма номер: 1\n[2] Ферма номер: 2\n[3] Ферма номер: 3\n[4] Ферма номер: 4", "Выбрать", "Назад");}
			case 6:{ShowPlayerDialog(playerid, 8032, DIALOG_STYLE_LIST, "Дальнобойщики", "[0] Порт ЛС\n[1] Порт СФ\n[2] Нефтезавод №1\n[3] Нефтезавод №2\n[4] Склад угля №1\n[5] Склад угля №2\n[6] Лесопилка №1\n[7] Лесопилка №2\n[8] Аренда машин", "Выбрать", "Назад");}
			case 7:{ShowPlayerDialog(playerid, 8031, DIALOG_STYLE_LIST, "СТО", "[0] СТО [LS]\n[1] СТО [SF]\n[2] СТО [LV]", "Выбрать", "Назад");}
			}
		}
	case 8002:
		{
			if(!response) return ShowPlayerDialog(playerid, 8001, DIALOG_STYLE_LIST, "GPS", "[0] Важные\n[1] По работе\n[2] Бизнесы\n[3] Магазины\n[4] Базы организаций\n[5] Фермы\n[6] Дальнобойщики\n[7] СТО", "Выбрать", "Отмена");
			switch(listitem)
			{
			case 0: GPS_ON(playerid, 1479.6614,-1741.5881,13.5469);
			case 1: GPS_ON(playerid, 1418.4148,-1704.4663,13.5469);
			case 2: GPS_ON(playerid, -2029.6696,-96.3916,35.1641);
			case 3: GPS_ON(playerid, 1148.0006,-1747.2552,13.5703);
			case 4: GPS_ON(playerid, 1800.6935,-1896.7571,13.4045);
			case 5: GPS_ON(playerid, -72.8030,1159.6533,19.7422);
			case 6: GPS_ON(playerid, 2755.9060,-2515.5491,13.6397);
			case 7: GPS_ON(playerid, 2182.8240,-1666.7662,14.7032);
			case 8: GPS_ON(playerid, 1961.2422,-2181.9412,13.5469);
			case 9: GPS_ON(playerid, -1549.4977,-438.6559,6.0000);
			case 10: GPS_ON(playerid, 1718.0468,1610.3558,10.0079);
			case 11: GPS_ON(playerid, 315.2710,-1784.7847,4.6507);
			case 12: GPS_ON(playerid, 2094.8950,2475.4832,10.8203);
			case 13: GPS_ON(playerid, 2586.3958,2790.0894,10.8203);
			case 14: GPS_ON(playerid, -1982.9703,1115.3318,53.1268);
			}
		}
	case 8005:
		{
			if(!response) return ShowPlayerDialog(playerid, 8001, DIALOG_STYLE_LIST, "GPS", "[0] Важные\n[1] По работе\n[2] Бизнесы\n[3] Магазины\n[4] Базы организаций\n[5] Фермы\n[6] Дальнобойщики\n[7] СТО", "Выбрать", "Отмена");
			switch(listitem)
			{
			case 0: GPS_ON(playerid, -20.6436,-300.6627,5.4229);
			case 1: GPS_ON(playerid, -1028.2332,-596.7050,32.0078);
			case 2: GPS_ON(playerid, -500.6603,-557.4494,25.5234);
			case 3: GPS_ON(playerid, 1628.4138,2321.3416,10.8130);
			case 4: GPS_ON(playerid, 1634.0817,-1152.8029,23.9063);
			case 5: GPS_ON(playerid, -2432.1353,728.1223,35.0156);
			case 6: GPS_ON(playerid, 2228.9771,-2214.3423,13.5469);
			case 7: GPS_ON(playerid, 1280.6012,-1328.3436,13.3721);
			case 8: GPS_ON(playerid, 2519.6055,-1463.4926,23.9785);
			}
		}
	case 8006:
		{
			if(!response) return ShowPlayerDialog(playerid, 8001, DIALOG_STYLE_LIST, "GPS", "[0] Важные\n[1] По работе\n[2] Бизнесы\n[3] Магазины\n[4] Базы организаций\n[5] Фермы\n[6] Дальнобойщики\n[7] СТО", "Выбрать", "Отмена");
			GPS_ON(playerid,BizzInfo[listitem+1][bEntranceX], BizzInfo[listitem+1][bEntranceY], BizzInfo[listitem+1][bEntranceZ]);
		}
	case 8007:
		{
			if(!response) return ShowPlayerDialog(playerid, 8001, DIALOG_STYLE_LIST, "GPS", "[0] Важные\n[1] По работе\n[2] Бизнесы\n[3] Магазины\n[4] Базы организаций\n[5] Фермы\n[6] Дальнобойщики\n[7] СТО", "Выбрать", "Отмена");
			switch(listitem)
			{
			case 0: GPS_ON(playerid, 562.2973,-1291.6454,17.2482);
			case 1: GPS_ON(playerid, -1952.2416,297.8349,35.4688);
			case 2: GPS_ON(playerid, 2200.7192,1394.1440,11.0625);
			case 3: GPS_ON(playerid, 455.8528,-1501.2737,31.0440);
			case 4: GPS_ON(playerid, -1703.1656,941.8860,24.8906);
			case 5: GPS_ON(playerid, 1361.7899,-1280.1626,13.3828);
			case 6: GPS_ON(playerid, -2626.7271,212.4711,4.5982);
			case 7: GPS_ON(playerid, 2154.7754,943.8470,10.8203);
			}
		}
	case 8028:
		{
			if(!response) return ShowPlayerDialog(playerid, 8001, DIALOG_STYLE_LIST, "GPS", "[0] Важные\n[1] По работе\n[2] Бизнесы\n[3] Магазины\n[4] Базы организаций\n[5] Фермы\n[6] Дальнобойщики\n[7] СТО", "Выбрать", "Отмена");
			switch(listitem)
			{
			case 0: GPS_ON(playerid, 1479.6614,-1741.5881,13.5469);
			case 1: GPS_ON(playerid, -2029.6696,-96.3916,35.1641);
			case 2: GPS_ON(playerid, 1186.6284,-1324.4036,13.5592);
			case 3: GPS_ON(playerid, -2662.4089,624.6633,14.4531);
			case 4: GPS_ON(playerid, 1609.2395,1829.0909,10.8203);
			case 5: GPS_ON(playerid, 1539.9977,-1676.8136,13.5497);
			case 6: GPS_ON(playerid, -1605.5968,719.9384,11.9772);
			case 7: GPS_ON(playerid, 2288.0718,2423.9084,10.8203);
			case 8: GPS_ON(playerid, -2426.4136,496.5313,30.0703);
			case 9: GPS_ON(playerid, -1341.7393,475.5054,7.1875);
			case 10: GPS_ON(playerid, 86.9121,1913.2690,17.7896);
			case 11: GPS_ON(playerid, 1630.2021,-1717.4863,13.4957);
			case 12: GPS_ON(playerid, -2044.7574,462.1444,35.1719);
			case 13: GPS_ON(playerid, 2646.0962,1178.4163,10.8203);
			case 14: GPS_ON(playerid, 1463.7456,2773.4534,10.6719);
			case 15: GPS_ON(playerid, 947.1475,1732.4764,8.8516);
			case 16: GPS_ON(playerid, 1444.5669,749.3381,10.8203);
			case 17: GPS_ON(playerid, 2466.5449,-1665.6993,13.4696);
			case 18: GPS_ON(playerid, 2795.1541,-1594.1162,10.9269);
			case 19: GPS_ON(playerid, 2706.2224,-1997.3385,13.5547);
			case 20: GPS_ON(playerid, 2179.1306,-1760.8370,13.5469);
			case 21: GPS_ON(playerid, 1702.7330,-2106.9773,13.5469);
			}
		}
	case 8029:
		{
			if(!response) return ShowPlayerDialog(playerid, 8001, DIALOG_STYLE_LIST, "GPS", "[0] Важные\n[1] По работе\n[2] Бизнесы\n[3] Магазины\n[4] Базы организаций\n[5] Фермы\n[6] Дальнобойщики\n[7] СТО", "Выбрать", "Отмена");
			switch(listitem)
			{
			case 0: GPS_ON(playerid, -376.1135,-1410.9020,25.7266);
			case 1: GPS_ON(playerid, -113.4650,-3.5923,3.1094);
			case 2: GPS_ON(playerid, -1055.0795,-1195.0725,129.0927);
			case 3: GPS_ON(playerid, 2.0902,74.6309,3.1172);
			case 4: GPS_ON(playerid, 1926.3021,173.4447,37.2813);
			}
		}
	case 8031: // CTO
		{
			if(!response) return ShowPlayerDialog(playerid, 8001, DIALOG_STYLE_LIST, "GPS", "[0] Важные\n[1] По работе\n[2] Бизнесы\n[3] Магазины\n[4] Базы организаций\n[5] Фермы\n[6] Дальнобойщики\n[7] СТО", "Выбрать", "Отмена");
			switch(listitem)
			{
			case 0: GPS_ON(playerid, 855.9429,-584.1959,18.1219);
			case 1: GPS_ON(playerid, -1788.0974,1191.3125,24.9766);
			case 2: GPS_ON(playerid, 1645.1490,2186.0742,10.8203);
			}
		}
	case 8032:
		{
			if(!response) return ShowPlayerDialog(playerid, 8001, DIALOG_STYLE_LIST, "GPS", "[0] Важные\n[1] По работе\n[2] Бизнесы\n[3] Магазины\n[4] Базы организаций\n[5] Фермы\n[6] Дальнобойщики\n[7] СТО", "Выбрать", "Отмена");
			switch(listitem)
			{
			case 0: GPS_ON(playerid, 2607.5000,-2238.3401,13.5392);
			case 1: GPS_ON(playerid, -1734.2925,109.8423,3.5547);
			case 2: GPS_ON(playerid, 268.3676,1422.5192,10.5859); // N1
			case 3: GPS_ON(playerid, -1035.3151,-660.4465,32.0126); // N2
			case 4: GPS_ON(playerid, 598.5504,853.4172,-43.0790); // Y1
			case 5: GPS_ON(playerid, -1876.6670,-1731.8580,21.7500); // Y2
			case 6: GPS_ON(playerid, -457.8227,-61.6747,59.8745); // L1
			case 7: GPS_ON(playerid, -1978.7633,-2434.7710,30.6250); // L2
			case 8: GPS_ON(playerid, 2309.3279,2791.2664,10.8203); // ARENDA
			}
		}
	case 2019:
		{
			if(!response) return true;
			new listitems[] = " [1] Deagle\t[70 материалов/50 патронов]\n [2] Shotgun\t[50 материалов/15 патронов]\n [3] Rifle\t[100 материалов/10 патронов]\n [4] M4\t\t[500 материалов/100 патронов]\n [5] AK-47\t[500 материалов/100 патронов]\n [6] MP5\t[400 материалов/200 патронов]\n [7] SDPistol\t[100 материалов/100 патронов])";
			ShowPlayerDialog(playerid, 2019, DIALOG_STYLE_LIST, "Взять оружие со склада", listitems, "Взять", "Отмена");
			switch(listitem)
			{
			case 0:
				{
					if(wmcmatbi < 70)  return  SCM(playerid,COLOR_GRAD1, " На складе недостаточно материалов");
					gun = 24; ammo = 50; wmcmatbi -= 70;
				}
			case 1:
				{
					if(wmcmatbi < 50)  return  SCM(playerid,COLOR_GRAD1, " На складе недостаточно материалов");
					gun = 25; ammo = 15; wmcmatbi -= 50;
				}
			case 2:
				{
					if(wmcmatbi < 100)  return  SCM(playerid,COLOR_GRAD1, " На складе недостаточно материалов");
					gun = 33; ammo = 10; wmcmatbi -= 100;
				}
			case 3:
				{
					if(wmcmatbi < 500)  return  SCM(playerid,COLOR_GRAD1, " На складе недостаточно материалов");
					gun = 31; ammo = 100; wmcmatbi -= 500;
				}
			case 4:
				{
					if(wmcmatbi < 500)  return  SCM(playerid,COLOR_GRAD1, " На складе недостаточно материалов");
					gun = 30; ammo = 100; wmcmatbi -= 500;
				}
			case 5:
				{
					if(wmcmatbi < 400)  return  SCM(playerid,COLOR_GRAD1, " На складе недостаточно материалов");
					gun = 29; ammo = 200; wmcmatbi -= 400;
				}
			case 6:
				{
					if(wmcmatbi < 100)  return  SCM(playerid,COLOR_GRAD1, " На складе недостаточно материалов");
					gun = 23; ammo = 100; wmcmatbi -= 100;
				}
			}
			if(booston == 0) GivePlayerWeaponEx(getgunsid[playerid], gun, ammo);
			else GivePlayerWeaponEx(getgunsid[playerid], gun, ammo*3);
			SendMes(playerid, COLOR_BLUE," На складе осталось %i материалов",wmcmatbi);
			if(getgunsid[playerid] == playerid) format(string, 144, " %s взял(а) оружие со склада",pData[playerid][pName]);
			else format(string, 144, " %s взял(а) оружие со склада и передал %s",pData[playerid][pName],Name(getgunsid[playerid]));
			ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return true;
		}
	case 2022:
		{
			if(!response) return true;
			new listitems[] = " [1] Deagle\t[70 материалов/50 патронов]\n [2] Shotgun\t[50 материалов/15 патронов]\n [3] Rifle\t[100 материалов/10 патронов]\n [4] M4\t\t[500 материалов/100 патронов]\n [5] AK-47\t[500 материалов/100 патронов]\n [6] MP5\t[400 материалов/200 патронов]\n [7] SDPistol\t[100 материалов/100 патронов])";
			ShowPlayerDialog(playerid, 2022, DIALOG_STYLE_LIST, "Взять оружие со склада", listitems, "Взять", "Отмена");
			switch(listitem)
			{
			case 0:
				{
					if(pmcmatbi < 70)  return  SCM(playerid,COLOR_GRAD1, " На складе недостаточно материалов");
					gun = 24; ammo = 50; pmcmatbi -= 70;
				}
			case 1:
				{
					if(pmcmatbi < 50)  return  SCM(playerid,COLOR_GRAD1, " На складе недостаточно материалов");
					gun = 25; ammo = 15; pmcmatbi -= 50;
				}
			case 2:
				{
					if(pmcmatbi < 100)  return  SCM(playerid,COLOR_GRAD1, " На складе недостаточно материалов");
					gun = 33; ammo = 10; pmcmatbi -= 100;
				}
			case 3:
				{
					if(pmcmatbi < 500)  return  SCM(playerid,COLOR_GRAD1, " На складе недостаточно материалов");
					gun = 31; ammo = 100; pmcmatbi -= 500;
				}
			case 4:
				{
					if(pmcmatbi < 500)  return  SCM(playerid,COLOR_GRAD1, " На складе недостаточно материалов");
					gun = 30; ammo = 100; pmcmatbi -= 500;
				}
			case 5:
				{
					if(pmcmatbi < 400)  return  SCM(playerid,COLOR_GRAD1, " На складе недостаточно материалов");
					gun = 29; ammo = 200; pmcmatbi -= 400;
				}
			case 6:
				{
					if(pmcmatbi < 100)  return  SCM(playerid,COLOR_GRAD1, " На складе недостаточно материалов");
					gun = 23; ammo = 100; pmcmatbi -= 100;
				}
			}
			if(booston == 0) GivePlayerWeaponEx(getgunsid[playerid], gun, ammo);
			else GivePlayerWeaponEx(getgunsid[playerid], gun, ammo*3);
			SendMes(playerid, COLOR_BLUE," На складе осталось %i материалов",pmcmatbi);
			if(getgunsid[playerid] == playerid) format(string, 144, " %s взял(а) оружие со склада",pData[playerid][pName]);
			else format(string, 144, " %s взял(а) оружие со склада и передал %s",pData[playerid][pName],Name(getgunsid[playerid]));
			ProxDetector(20.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return true;
		}
		case 32001:
		{
			if(!response)
			{
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
				return true;
			}
			new park_id, park_price, car = GetPlayerVehicleID(playerid);
			if(car >= taxi_park_car[0] && car <= taxi_park_car[1]) park_id = 2;
			else if(car >= taxi_park_car[2] && car <= taxi_park_car[3]) park_id = 1;
			else if(car >= taxi_park_car[4] && car <= taxi_park_car[5]) park_id = 0;

			if(GetVehicleModel(car) == 420) park_price = 1;
			if(GetVehicleModel(car) == 507) park_price = 2;
			if(GetVehicleModel(car) == 405) park_price = 3;
			if(GetVehicleModel(car) == 560) park_price = 4;
			
			if(job_lvl(pData[playerid][job_skill][job_taxi]) < (park_price-1)*15)
			{
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
		    	return SendClientMessage(playerid, 0xf44336FF, "Мы не можем дать вам эту машину :c");
			}

			pData[playerid][pCash] -= g_tInfo[park_id][e_iPrice]*park_price;
			SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
			TogglePlayerControllable(playerid, 1);
			new szPrice[12];
		   	format(szPrice, 12, "~r~-%d",g_tInfo[park_id][e_iPrice]*park_price);
		    GameTextForPlayer(playerid, szPrice, 3000, 1);
		    return 1;
		}
	case 32000:
		{
			if(response)
			{
				new car = GetPlayerVehicleID(playerid);
				if(car >= tanker_train[4] && car <= tanker_train[5])
				{
					if(pData[playerid][pDLevel] > 14)
					{
						if(pData[playerid][pCash] < 15000)
						{
							SCM(playerid, COLOR_WHITE, " Не достаточно денег");
							RemovePlayerFromVehicle(playerid);
							TogglePlayerControllable(playerid, 1);
							return true;
						}
						else
						{
							job_car[playerid] = car;
							pData[playerid][pCash] -= 15000;
							SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
							TogglePlayerControllable(playerid, 1);
							return true;
						}
					}
					else
					{
						SCM(playerid, COLOR_WHITE, " Этот грузовик 15 уровня Дальнобойщика!");
						RemovePlayerFromVehicle(playerid);
						TogglePlayerControllable(playerid, 1);
					}
				}
				else if(car >= tanker_train[0] && car <= tanker_train[1])
				{
					if(pData[playerid][pCash] < 5000)
					{
						SCM(playerid, COLOR_WHITE, " Не достаточно денег");
						RemovePlayerFromVehicle(playerid);
						TogglePlayerControllable(playerid, 1);
						return true;
					}
					else
					{
						job_car[playerid] = car;
						pData[playerid][pCash] -= 5000;
						SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
						TogglePlayerControllable(playerid, 1);
						return true;
					}
				}
				else if(car >= tanker_train[2] && car <= tanker_train[3])
				{
					if(pData[playerid][pDLevel] > 4)
					{
						if(pData[playerid][pCash] < 10000)
						{
							SCM(playerid, COLOR_WHITE, " Не достаточно денег");
							RemovePlayerFromVehicle(playerid);
							TogglePlayerControllable(playerid, 1);
							return true;
						}
						else
						{
							job_car[playerid] = car;
							pData[playerid][pCash] -= 10000;
							SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
							TogglePlayerControllable(playerid, 1);
							return true;
						}
					}
					else
					{
						SCM(playerid, COLOR_WHITE, " Этот грузовик 5 уровня Дальнобойщика!");
						RemovePlayerFromVehicle(playerid);
						TogglePlayerControllable(playerid, 1);
					}
				}
				else if(car >= tanker_train[6] && car <= tanker_train[7])
				{
					if(pData[playerid][pDLevel] > 24)
					{
						if(pData[playerid][pCash] < 20000)
						{
							SCM(playerid, COLOR_WHITE, " Не достаточно денег");
							RemovePlayerFromVehicle(playerid);
							TogglePlayerControllable(playerid, 1);
							return true;
						}
						else
						{
							job_car[playerid] = car;
							pData[playerid][pCash] -= 20000;
							SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
							TogglePlayerControllable(playerid, 1);
							return true;
						}
					}
					else
					{
						SCM(playerid, COLOR_WHITE, " Этот грузовик 25 уровня Дальнобойщика!");
						RemovePlayerFromVehicle(playerid);
						TogglePlayerControllable(playerid, 1);
					}
				}
				return true;
			}
			else
			{
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
				return true;
			}
		}
	case 2929:
		{
			if(response)
			{
				new bouse = pData[playerid][pPBizzKey];
				if(!strlen(inputtext))return ShowPlayerDialog(playerid,2929,DIALOG_STYLE_INPUT, "Перевод денег на счёт бизнеса","Введите сумму, которую вы хотите положить на счёт бизнеса", "Готово", "Отмена");
				new moneys;
				moneys = strval(inputtext);
				if(moneys < 1000 || moneys > 1000000)
				{
					SCM(playerid, COLOR_GREY, " Минимальная сумма 1000 вирт, максимальная 1000000 вирт");
					ShowPlayerDialog(playerid,2929,DIALOG_STYLE_INPUT, "Перевод денег на счёт бизнеса","Введите сумму, которую вы хотите положить на счёт бизнеса", "Готово", "Отмена");
					return true;
				}
				if(moneys+BizzInfo[bouse][bTill] > 55000) return SCM(playerid,COLOR_GREY," Неверная сумма");
				if(pData[playerid][pBank] < moneys) return	SCM(playerid, COLOR_GRAD1, "  У вас нет столько денег!");
				pData[playerid][pBank] -= moneys;
				SetAccountInfo(playerid, pData[playerid][pBank], "pBank");
				BizzInfo[bouse][bTill] += moneys;
				SaveMySQL(4,bouse);
				format(string, 144, " Вы положили на счёт Вашего бизнеса %i вирт", moneys);
				SCM(playerid, 0x6495EDFF, string);
				SetPlayerChatBubble(playerid, "кладёт на счёт бизнеса",COLOR_PURPLE,30.0,10000);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 8900:
		{
			if(!response) return GameTextForPlayer(playerid,"~g~good luck",1000,1);
			switch(listitem)
			{
			case 0: return ShowPlayerDialog(playerid, 8904, DIALOG_STYLE_LIST, "Пополнить счет","[0] 500 вирт\n[1] 1 000 вирт\n[2] 5 000 вирт\n[3] 10 000 вирт\n[4] 20 000 вирт\n[5] 50 000 вирт\n[6] 100 000 вирт\n[7] 500 000 вирт", "Далее", "Назад");
			case 1: return ShowPlayerDialog(playerid, 8905, DIALOG_STYLE_LIST, "Снять со счета","[0] 500 вирт\n[1] 1 000 вирт\n[2] 5 000 вирт\n[3] 10 000 вирт\n[4] 20 000 вирт\n[5] 50 000 вирт\n[6] 100 000 вирт\n[7] 500 000 вирт", "Далее", "Назад");
			case 2:
				{
					format(string,168,"Баланс: %i вирт",pData[playerid][pBank]);
					SCM(playerid,COLOR_BLUE, string);
					return ShowPlayerDialog(playerid, 8900, DIALOG_STYLE_LIST, "ATM",ATMBank, "Далее", "Выход");
				}
			case 3:
				{
					if(pData[playerid][pPHouseKey] == INVALID_HOUSE_ID) 
					{
						SCM(playerid,COLOR_GREY," У вас нет дома");
						ShowPlayerDialog(playerid, 8900, DIALOG_STYLE_LIST, "ATM",ATMBank, "Далее", "Выход");
						return 1;
					}
					format(string,512,"[0] 1 час\t\t\t\t\t%i вирт\n[1] 3 часа\t\t\t\t\t%i вирт\n[2] 5 часов\t\t\t\t\t%i вирт\n[3] 12 часов\t\t\t\t\t%i вирт\n[4] 24 часа\t\t\t\t\t%i вирт\n[5] 3 дня\t\t\t\t\t%i вирт\n[6] 7 дней\t\t\t\t\t%i вирт\n[7] 14 дней\t\t\t\t\t%i вирт\n[8] 28 дней\t\t\t\t\t%i вирт",
					GetHouseOplata(pData[playerid][pPHouseKey]),GetHouseOplata(pData[playerid][pPHouseKey])*3,GetHouseOplata(pData[playerid][pPHouseKey])*5,GetHouseOplata(pData[playerid][pPHouseKey])*12,GetHouseOplata(pData[playerid][pPHouseKey])*24,GetHouseOplata(pData[playerid][pPHouseKey])*72,GetHouseOplata(pData[playerid][pPHouseKey])*168,GetHouseOplata(pData[playerid][pPHouseKey])*336,GetHouseOplata(pData[playerid][pPHouseKey])*672);
					ShowPlayerDialog(playerid,9521,DIALOG_STYLE_LIST, "Оплатить квартплату",string, "Выбрать", "Назад");
				}
			}
		}
	case 8904:
		{
			if(!response) return ShowPlayerDialog(playerid, 8900, DIALOG_STYLE_LIST, "ATM",ATMBank, "Далее", "Выход");
			//new money;
			switch(listitem)
			{
				case 0: SetPVarInt(playerid,"Bankmoney",500);
				case 1: SetPVarInt(playerid,"Bankmoney",1000);
				case 2: SetPVarInt(playerid,"Bankmoney",5000);
				case 3: SetPVarInt(playerid,"Bankmoney",10000);
				case 4: SetPVarInt(playerid,"Bankmoney",20000);
				case 5: SetPVarInt(playerid,"Bankmoney",50000);
				case 6: SetPVarInt(playerid,"Bankmoney",100000);
				case 7: SetPVarInt(playerid,"Bankmoney",500000);
			}
			if(pData[playerid][pCash] < GetPVarInt(playerid,"Bankmoney")) return SCM(playerid,COLOR_GREY," У вас  Недостаточно средств"), ShowPlayerDialog(playerid, 8900, DIALOG_STYLE_LIST, "ATM",ATMBank, "Далее", "Выход");
			pData[playerid][pCash]-=GetPVarInt(playerid,"Bankmoney");
			pData[playerid][pBank]+=GetPVarInt(playerid,"Bankmoney");
			SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
			SetAccountInfo(playerid, pData[playerid][pBank], "pBank");
			MoneyLog(pData[playerid][pName],"None", GetPVarInt(playerid,"Bankmoney"), "(+)PutMoneyOnBank");
			format(string,15,"~r~-$%i",GetPVarInt(playerid,"Bankmoney")), GameTextForPlayer(playerid,string,1000,1);
			SendMes(playerid,0x6495EDFF," Вы пополнили счет на %i вирт. Баланс: %i вирт",GetPVarInt(playerid,"Bankmoney"),pData[playerid][pBank]);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			return ShowPlayerDialog(playerid, 8904, DIALOG_STYLE_LIST, "Пополнить счет","[0] 500 вирт\n[1] 1 000 вирт\n[2] 5 000 вирт\n[3] 10 000 вирт\n[4] 20 000 вирт\n[5] 50 000 вирт\n[6] 100 000 вирт\n[7] 500 000 вирт", "Далее", "Назад");
		}
	case 8905:
		{
			if(!response) return ShowPlayerDialog(playerid, 8900, DIALOG_STYLE_LIST, "ATM",ATMBank, "Далее", "Выход");
			switch(listitem)
			{
			case 0: SetPVarInt(playerid,"Bankmoney",500);
			case 1: SetPVarInt(playerid,"Bankmoney",1000);
			case 2: SetPVarInt(playerid,"Bankmoney",5000);
			case 3: SetPVarInt(playerid,"Bankmoney",10000);
			case 4: SetPVarInt(playerid,"Bankmoney",20000);
			case 5: SetPVarInt(playerid,"Bankmoney",50000);
			case 6: SetPVarInt(playerid,"Bankmoney",100000);
			case 7: SetPVarInt(playerid,"Bankmoney",500000);
			}
			if(pData[playerid][pBank] < GetPVarInt(playerid,"Bankmoney")) return SCM(playerid,COLOR_GREY," У вас  Недостаточно средств"), ShowPlayerDialog(playerid, 8900, DIALOG_STYLE_LIST, "ATM",ATMBank, "Далее", "Выход");
			pData[playerid][pBank]-=GetPVarInt(playerid,"Bankmoney");
			pData[playerid][pCash]+=GetPVarInt(playerid,"Bankmoney");
			SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
			SetAccountInfo(playerid, pData[playerid][pBank], "pBank");
			MoneyLog(pData[playerid][pName],"None", GetPVarInt(playerid,"Bankmoney"), "(+)GetMoneyOfBank");
			format(string,15,"~b~+$%i",GetPVarInt(playerid,"Bankmoney")), GameTextForPlayer(playerid,string,1000,1);
			SendMes(playerid,0x6495EDFF," Вы сняли со счета %i вирт. Баланс: %i вирт",GetPVarInt(playerid,"Bankmoney"),pData[playerid][pBank]);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			return ShowPlayerDialog(playerid, 8905, DIALOG_STYLE_LIST, "Снять со счета","[0] 500 вирт\n[1] 1 000 вирт\n[2] 5 000 вирт\n[3] 10 000 вирт\n[4] 20 000 вирт\n[5] 50 000 вирт\n[6] 100 000 вирт\n[7] 500 000 вирт", "Далее", "Назад");
		}
	case 9521:
		{
			if(!response) 
				return ShowPlayerDialog(playerid, 8900, DIALOG_STYLE_LIST, "ATM",ATMBank, "Далее", "Выход");

			if(pData[playerid][pPHouseKey] == INVALID_HOUSE_ID)
				return ShowPlayerDialog(playerid, 8900, DIALOG_STYLE_LIST, "ATM",ATMBank, "Далее", "Выход");

			new money, house = pData[playerid][pPHouseKey];

			switch(listitem)
			{
				case 0: money = 1;
				case 1: money = 3;
				case 2: money = 5;
				case 3: money = 12;
				case 4: money = 24;
				case 5: money = 72;
				case 6: money = 168;
				case 7: money = 336;
				case 8: money = 672;
			}
			money = money*GetHouseOplata(house);// выбранное кол-о часов на сумму за час

			if(pData[playerid][pBank] < money)
			{ 
				SendClientMessage(playerid,COLOR_GREY," Недостаточно средств на банковском счету"); 
				ShowPlayerDialog(playerid, 8900, DIALOG_STYLE_LIST, "ATM",ATMBank, "Далее", "Выход");
				return 1;
			}
			if(HouseInfo[house][hTakings]+money > GetHouseOplata(house)*672) 
			{
				SendClientMessage(playerid,COLOR_GREY," Вы не можете заплатить больше чем за месяц!");
				new str_house[512];
				format(str_house,sizeof str_house,"[0] 1 час\t\t\t\t\t%i вирт\n[1] 3 часа\t\t\t\t\t%i вирт\n[2] 5 часов\t\t\t\t\t%i вирт\n[3] 12 часов\t\t\t\t\t%i вирт\n[4] 24 часа\t\t\t\t\t%i вирт\n[5] 3 дня\t\t\t\t\t%i вирт\n[1] 7 дней\t\t\t\t\t%i вирт\n[1] 14 дней\t\t\t\t\t%i вирт\n[1] 28 дней\t\t\t\t\t%i вирт",
				GetHouseOplata(house),GetHouseOplata(house)*3,GetHouseOplata(house)*5,GetHouseOplata(house)*12,GetHouseOplata(house)*24,GetHouseOplata(house)*72,GetHouseOplata(house)*168,GetHouseOplata(house)*336,GetHouseOplata(house)*672);
				ShowPlayerDialog(playerid,9521,DIALOG_STYLE_LIST, "Оплатить квартплату",str_house, "Выбрать", "Назад"); 
				return true;
			}
			FracBank[0][fKazna]+=money;
			HouseInfo[house][hTakings]+=money;
			pData[playerid][pBank]-= money;
			SetAccountInfo(playerid, pData[playerid][pBank], "pBank");
			SendMes(playerid,COLOR_BLUE," Вы перевели %i вирт. Остаток: %i вирт. Домашний счёт %i вирт",money,pData[playerid][pBank],HouseInfo[house][hTakings]);
			
			format(string,512,"[0] 1 час\t\t\t\t\t%i вирт\n[1] 3 часа\t\t\t\t\t%i вирт\n[2] 5 часов\t\t\t\t\t%i вирт\n[3] 12 часов\t\t\t\t\t%i вирт\n[4] 24 часа\t\t\t\t\t%i вирт\n[5] 3 дня\t\t\t\t\t%i вирт\n[6] 7 дней\t\t\t\t\t%i вирт\n[7] 14 дней\t\t\t\t\t%i вирт\n[8] 28 дней\t\t\t\t\t%i вирт",
			GetHouseOplata(house),GetHouseOplata(house)*3,GetHouseOplata(house)*5,GetHouseOplata(house)*12,GetHouseOplata(house)*24,GetHouseOplata(house)*72,GetHouseOplata(house)*168,GetHouseOplata(house)*336,GetHouseOplata(house)*672);
			ShowPlayerDialog(playerid,9521,DIALOG_STYLE_LIST, "Оплатить квартплату",string, "Выбрать", "Назад");

			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			SetHouseInfo(house, HouseInfo[house][hTakings] , "hTakings");
			return 1;
		}
	case 5032:
		{
			new house = pData[playerid][pPHouseKey];
			if(!response) return true;
			if(pData[playerid][pPHouseKey] == INVALID_HOUSE_ID)
				return SCM(playerid,COLOR_GREY," У вас нет дома");

			HouseInfo[house][hHel] = 0;
			HouseInfo[house][hLock] = false;
			DestroyHouseCars(playerid);
			for(new h = 0; h < 10; h++) HouseInfo[house][hSafe][h] = 0;
			strmid(HouseInfo[house][hOwner], "None", 0, strlen("None"), 15);
			
			pData[playerid][pBank] += HouseInfo[house][hValue];
			pData[playerid][pPHouseKey] = INVALID_HOUSE_ID;
			SetAccountInfo(playerid, pData[playerid][pBank], "pBank");
			SetAccountInfo(playerid, pData[playerid][pPHouseKey], "pPHouseKey");

			new house_str[40];
			format(house_str,sizeof house_str,"~w~house in sold~n~~g~$%i",HouseInfo[house][hValue]);
			GameTextForPlayer(playerid,house_str, 5000, 3);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			
			MoneyLog(pData[playerid][pName],"None", HouseInfo[house][hValue], "(+)SellGosHouse");
			BuyHouse(house);
			SaveMySQL(5,house);
			
			return true;
		}
	case 4423:
		{
			if(!response)return 1;
			if(!GetPVarInt(playerid, "LoaderWork"))
			{
				SetPlayerSkin(playerid,260);

				new load_str[100];
				format(load_str, sizeof(load_str), " %s переоделся(ась) в рабочую форму", Name(playerid));
				ProxDetector(30.0, playerid, load_str, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SCM(playerid,COLOR_GREEN, " Рабочий день начат.");
				SCM(playerid, -1, "(( На радаре помечены места загрузки и разгрузки ))");
				SetPVarInt(playerid, "LoaderWork", 1);
				SetPlayerCheckpoint(playerid,2224.7681,-2276.9041,14.7647,1.5);
			}
			else
			{
				new load_str[100];
				format(load_str, sizeof(load_str), " %s переоделся(ась) в гражданскую форму", Name(playerid));
				ProxDetector(30.0, playerid, load_str, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

				format(load_str, sizeof load_str, "~g~+%d$", GetPVarInt(playerid, "zp_loader"));
				GameTextForPlayer(playerid, load_str, 3000, 1);

				SetPlayerSkin(playerid,pData[playerid][pChar][0]);
				DisablePlayerCheckpoint(playerid);
				if(loader_actor_text[0] != Text3D:INVALID_3DTEXT_ID)DestroyDynamic3DTextLabel(loader_actor_text[0]);

				loader_actor_text[0] = CreateDynamic3DTextLabel("Спасибо за работу, приходите еще!", 0x6495EDFF, 2121.6665,-2274.1511,21.0061+0.8, 30.0);
				loader_actor_time[0] = 5;
				pData[playerid][pCash] +=GetPVarInt(playerid, "zp_loader");
				SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
				PlayerPlaySound(playerid, 18015, 0.0, 0.0, 0);
				DeletePVar(playerid, "meshkov");
				DeletePVar(playerid, "zp_loader");
				DeletePVar(playerid, "LoaderWork");
				return 1;
			}
		}
	case 19:
		{
			if(response)
			{
				if(pData[playerid][pMember] != 0) return SCM(playerid,COLOR_GRAD1, " Вы состоите во фракции");
				SetPlayerSkin(playerid,27);
				SCM(playerid,COLOR_GREEN, " Рабочий день начат. (( На радаре помечены места загрузки и разгрузки ))");
			}
			else
			{
				if(pData[playerid][pJob] == 0) return SCM(playerid,COLOR_GRAD1, " Вы не брали работу");
				SCM(playerid,COLOR_YELLOW, " Рабочий день завершён");
				SetPlayerSkin(playerid,pData[playerid][pChar][0]);
				SCM(playerid,COLOR_GREEN,"Спасибо за работу, приходите еще!");
				return true;
			}
		}
	case 9298:
		{
			if(!response) return true;
			new null;
			switch(pData[playerid][pMember])
			{
			case 5: null = 100000-lcnmats;
			case 6: null = 100000-yakuzamats;
			case 14: null = 100000-rmmats;
			}
			if(!strlen(inputtext) || strval(inputtext) < 1 || strval(inputtext) > null)
			{
				SCM(playerid,COLOR_GREY," Неверное колличество материалов!");
				format(string, 128, " Введите колличество материалов, которое вы хотите купить на склад.\nМаксимально колличество материалов для приобретения %i шт.\
				\n\nСтоимость одного материала равна 5 виртам!",null);
				return ShowPlayerDialog(playerid,9298,DIALOG_STYLE_INPUT, "Покупка материалов",string, "Купить", "Отмена");
			}
			switch(pData[playerid][pMember])
			{
			case 5:
				{
					if(MafiaBank[0][nLcn] < strval(inputtext)*5) return SCM(playerid,COLOR_GREY," В банке мафии нет столько денег");
					lcnmats+=strval(inputtext);
					MafiaBank[0][nLcn]-=strval(inputtext)*5;
				}
			case 6:
				{
					if(MafiaBank[0][nYakuza] < strval(inputtext)*5) return SCM(playerid,COLOR_GREY," В банке мафии нет столько денег");
					yakuzamats+=strval(inputtext);
					MafiaBank[0][nYakuza]-=strval(inputtext)*5;
				}
			case 14:
				{
					if(MafiaBank[0][nRm] < strval(inputtext)*5) return SCM(playerid,COLOR_GREY," В банке мафии нет столько денег");
					rmmats+=strval(inputtext);
					MafiaBank[0][nRm]-=strval(inputtext)*5;
				}
			}
			return SendMes(playerid,COLOR_YELLOW, " Вы купили %i материалов за %i вирт", strval(inputtext), strval(inputtext)*5);
		}
	case 7724:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					SetPlayerFacingAngle(playerid, 181.6046);
					SetPlayerCameraPos(playerid,338.6618,1573.9758,29.3534);
					SetPlayerCameraLookAt(playerid,338.6618,1573.9758,29.3534);
					TogglePlayerControllable(playerid, 0);
					return true;
				}
			case 1:
				{
					SetPlayerFacingAngle(playerid, 170.0947);
					SetPlayerCameraPos(playerid,-61.5420,1612.7935,24.2544);
					SetPlayerCameraLookAt(playerid,-61.5420,1612.7935,24.2544);
					TogglePlayerControllable(playerid, 0);
					return true;
				}
			case 2:
				{
					SetPlayerFacingAngle(playerid, 115.7203);
					SetPlayerCameraPos(playerid,121.2786,1942.5219,29.0367);
					SetPlayerCameraLookAt(playerid,121.2786,1942.5219,29.0367);
					TogglePlayerControllable(playerid, 0);
					return true;
				}
			case 3:
				{
					SetPlayerFacingAngle(playerid, 319.3263);
					SetPlayerCameraPos(playerid,277.4582,2024.3215,26.3999);
					SetPlayerCameraLookAt(playerid,277.4582,2024.3215,26.3999);
					TogglePlayerControllable(playerid, 0);
					return true;
				}
			}
			SCM(playerid, COLOR_LIGHTRED, " /cameraoff - отключить камеру.");
			SetPlayerVirtualWorld(playerid, 0);
		}
	case 2://регистрация диалог
		{
			if(response)
			{
				//if(pData[playerid][pLogin]) return L_Kick(playerid,8);
				if(!strlen(inputtext))
				{
					format(string,256, "{B4B5B7}______________________________________\n\n Добро пожаловать на сервер "NameServer"{B4B5B7}\n       Регистрация нового персонажа\n\nЛогин: {BFC0C2}%s{B4B5B7}\nВведите пароль:\n______________________________________", Name(playerid));
					ShowPlayerDialog(playerid,2,DIALOG_STYLE_INPUT, "Регистрация",string, "Готово", "Отмена");
					return true;
				}
				if(strlen(inputtext) < 6 || strlen(inputtext) > 16)
				{
					ShowPlayerDialog(playerid,2,DIALOG_STYLE_MSGBOX, "Ошибка!", "{FF6347}Длина пароля должна быть от 6 до 15 символов", "Повтор", "");
					return 1;
				}
				for(new i = strlen(inputtext); i != 0; --i)
				{
					switch(inputtext[i])
					{
						case 'А'..'Я', 'а'..'я', ' ':
						return ShowPlayerDialog(playerid,2,DIALOG_STYLE_MSGBOX, "Ошибка!", "{00FF21}Введенный вами пароль содержит русские буквы.\n Смените раскладку клавиатуры!", "Повтор", "");
					}
				}
				strmid(pData[playerid][pKey],inputtext, 0, strlen(inputtext), 17);
				PlayerPlaySound(playerid, 1097, 0.0, 0.0, 0.0);
				ShowPlayerDialog(playerid,2625,DIALOG_STYLE_INPUT, "По приглашению от:", "{ffffff}Введите ник игрока, пригласившего вас на сервер", "Далее", "Пропуск");
				return true;
			}
			else
			{
				SCM(playerid, COLOR_LIGHTRED, " Для выхода из игры используйте /q(uit)");
				L_Kick(playerid,9);
			}
		}
	case 9898:
		{
			if(!response) return true;
			for(new i = 1; i <= TotalBizz; i++)
			{
				if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]) && BizzInfo[i][bType] != 4)
				{
					if(pData[playerid][pCash] < BizzInfo[i][bEntranceCost])
					{
						SCM(playerid, COLOR_GRAD1, "  У вас нет столько денег");
						return true;
					}
					
					pData[playerid][pCash] -=BizzInfo[i][bEntranceCost];
					SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
					BizzInfo[i][bTill] += BizzInfo[i][bEntranceCost];
					BizzPay[i] += BizzInfo[i][bEntranceCost];
					SaveMySQL(4,i);
					sppos(playerid,BizzInfo[i][bExitX],BizzInfo[i][bExitY],BizzInfo[i][bExitZ],90.0,BizzInfo[i][bVirtualWorld],BizzInfo[i][bInterior]);
					enterbiz[playerid] = i;
					return true;
				}
			}
		}
	case 10075: // Вход в дом с улице
		{
			if(!response) return DeletePVar(playerid, !#pPickHouseId);
			new i = (GetPVarInt(playerid, !#pPickHouseId)-1);

			if ( IsPlayerInDynamicArea(playerid, HouseInfo[i][h_area]) )
			{
				switch(HouseInfo[i][hKlass])
				{
				case 0..1: // Дом N Klass and d
					{
						cmd_enter(playerid);
					}
				case 2..5: // Дома от C класса до домов S класса
					{
						ShowPlayerDialog(playerid, 1006, 2, "Вход","Войти в дом\nВойти в гараж", "Готово", "Отмена");
					}
				}
				return 1;
			}
			else
				return DeletePVar(playerid, !#pPickHouseId);
		}
	case 1006: // Вход в дом / гараж от домов C-S классов
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0: cmd_enter(playerid);
			case 1: EnterExitGarage(playerid);
			}
		}
	case 1008: // Выйти на улицу / войти в гараж
		{
			if(!response) return true;
			if(!GetPVarInt(playerid, !#pPickHouseId)) return 1;
			new i = (GetPVarInt(playerid, !#pPickHouseId)-1);

			if(GetPlayerVirtualWorld(playerid) == i+50)
			{
				switch(listitem)
				{
					case 0:
					{
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						SetPlayerPos(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez]);
						SetPVarInt(playerid, "no_need_area", 1);
						return 1;
					}
					case 1:
					{
						switch(HouseInfo[i][hKlass])
						{
							case 2: // Дом C Klass
							{
								SetPlayerInterior(playerid,5);
								SetPlayerPos(playerid,1384.6168, -21.3153, 1000.6000);
								SetPlayerFacingAngle(playerid, 90.00);
							}
							case 3: // Дом B Klass
							{
								SetPlayerInterior(playerid,6);
								SetPlayerPos(playerid,1402.5889,-25.5931,1000.9203);
								SetPlayerFacingAngle(playerid, 0.00);
							}
							case 4: // Дом A Klass
							{
								SetPlayerInterior(playerid,7);
								SetPlayerPos(playerid,1393.2773,-28.4577,1000.9128);
								SetPlayerFacingAngle(playerid, 90.00);
							}
							case 5: // Дом S Klass
							{
								SetPlayerInterior(playerid,8);
								SetPlayerPos(playerid,1381.1859,-23.1935,1000.9243);
								SetPlayerFacingAngle(playerid, 270.00);
							}
						}
						SetPlayerWeather(playerid, 4);
						SetPlayerTime(playerid, 12,00);
	                    SetPVarInt(playerid,"PlayerInGarage",1);
						SetPlayerVirtualWorld(playerid,i+100);
						return 1;
					}
				}
				return 1;
			}
		}
	case 4:
		{
			if(response)
			{
				pData[playerid][pSex] = 0; // при выходе
			}
			else
			{
				pData[playerid][pSex] = 1;
			}
			SetPVarInt(playerid, "player_reg", 1);
			SpawnPlayer(playerid);
			return 1;
		}
	case 10025:
		{
			if(!response) return ShowPlayerDialog(playerid, 10412, DIALOG_STYLE_LIST, "Помощь по игре","[0] Задать вопрос по игре\n[1] Список помощников\n[3] Команды сервера", "Выбрать", "Назад");
			switch(listitem)
			{
			case 0: ShowPlayerDialog(playerid,1012,DIALOG_STYLE_INPUT, "Поиск команд", "Введите интересующую Вас команду, и получите её описание", "Готово", "Отмена");
			case 1:
				{
					SCM(playerid,COLOR_CMD," <> /time /id /ids /setsex /gps");
					SCM(playerid,COLOR_CMD," <> /instructors /divorce /propose /witness /deliver");
					SCM(playerid,COLOR_CMD," <> /drink /music /colorlist /myskill /pdd");
					SCM(playerid,COLOR_CMD," <> /sell /busdrivers /eat /licenses /ratingnews");
					SCM(playerid,COLOR_CMD," <> /showlicenses /get /cancel /accept /animlist");
					SCM(playerid,COLOR_CMD," <> /eject /quitjob /buy /pay");
					SCM(playerid,COLOR_CMD," <> /usedrugs /radio /quest");
					return ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "Команды сервера","[0] Описание команд\n[1] Обычные\n[2] Чат\n[3] Телефон\n[4] Банк\n[5] Дом\n[6] Бизнес\n[7] Рыбалка\n[8] Работа\n[9] Лидеры\n[10] Репортеры\n[11] Мэрия\n[12] Инструкторы\n[13] Законники\n[14] Мафии/Банды\n[15] Автомобиль\n[16] Медики", "Выбрать", "Назад");
				}
			case 2:
				{
					SCM(playerid,COLOR_CMD," <> /(o)oc - Глобальный чат");
					SCM(playerid,COLOR_CMD," <> /(ad)vertise - Объявления");
					SCM(playerid,COLOR_CMD," <> /(gov)ernment - Государственные новости");
					SCM(playerid,COLOR_CMD," <> /(f)amily - Чат организации");
					SCM(playerid,COLOR_CMD," <> /(s)hout - Крик");
					SCM(playerid,COLOR_CMD," <> /(m)egaphone - Мегафон на полицейских машинах");
					SCM(playerid,COLOR_CMD," <> /(r)adio - Чат государственных организаций (Полиция/ФБР и т.д.)");
					SCM(playerid,COLOR_CMD," <> /(d)epartments - Общий чат государственных организаций");
					SCM(playerid,COLOR_CMD," <> /me - Действие (Имя_Фамилия пожал руку)");
					return ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "Команды сервера","[0] Описание команд\n[1] Обычные\n[2] Чат\n[3] Телефон\n[4] Банк\n[5] Дом\n[6] Бизнес\n[7] Рыбалка\n[8] Работа\n[9] Лидеры\n[10] Репортеры\n[11] Мэрия\n[12] Инструкторы\n[13] Законники\n[14] Мафии/Банды\n[15] Автомобиль\n[16] Медики", "Выбрать", "Назад");
				}
			case 3:
				{
					SCM(playerid,COLOR_CMD," <> /(c)all - Позвонить (Номер телефона можно узнать через /number)");
					SCM(playerid,COLOR_CMD," <> /sms - Отправить СМС сообщение");
					SCM(playerid,COLOR_CMD," <> /(p)ickup - Ответить на звонок");
					SCM(playerid,COLOR_CMD," <> /(h)angup - Завершить телефонный разговор");
					SCM(playerid,COLOR_CMD," <> /directory /number /togphone");
					return ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "Команды сервера","[0] Описание команд\n[1] Обычные\n[2] Чат\n[3] Телефон\n[4] Банк\n[5] Дом\n[6] Бизнес\n[7] Рыбалка\n[8] Работа\n[9] Лидеры\n[10] Репортеры\n[11] Мэрия\n[12] Инструкторы\n[13] Законники\n[14] Мафии/Банды\n[15] Автомобиль\n[16] Медики", "Выбрать", "Назад");
				}
			case 4:
				{
					SCM(playerid,COLOR_CMD," <> /withdraw - Снять деньги со счёта");
					SCM(playerid,COLOR_CMD," <> /bank - Положить деньги на счёт");
					SCM(playerid,COLOR_CMD," <> /balance - Узнать баланс счёта");
					SCM(playerid,COLOR_CMD," <> /transfer - Перевести деньги со счёта на счёт");
					SCM(playerid,COLOR_CMD," <> /atm - Меню банкомата");
					return ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "Команды сервера","[0] Описание команд\n[1] Обычные\n[2] Чат\n[3] Телефон\n[4] Банк\n[5] Дом\n[6] Бизнес\n[7] Рыбалка\n[8] Работа\n[9] Лидеры\n[10] Репортеры\n[11] Мэрия\n[12] Инструкторы\n[13] Законники\n[14] Мафии/Банды\n[15] Автомобиль\n[16] Медики", "Выбрать", "Назад");
				}
			case 5:
				{
					SCM(playerid,COLOR_CMD," <> /fixcar - Обновить / Телепортировать автомобиль к дому");
					SCM(playerid,COLOR_CMD," <> /home - Поставить метку у дома (GPS)");
					SCM(playerid,COLOR_CMD," <> /spawnchange - Сменить респавн(возрождение) ДОМ <==> База организации");
					SCM(playerid,COLOR_CMD," <> /healme - Использовать аптечку");
					SCM(playerid,COLOR_CMD," <> /open /enter /exit");
					SCM(playerid,COLOR_CMD," <> /sellhouse /buyhouse");
					SCM(playerid,COLOR_CMD," <> Клавиша: Y - вход/выход гараж");
					return ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "Команды сервера","[0] Описание команд\n[1] Обычные\n[2] Чат\n[3] Телефон\n[4] Банк\n[5] Дом\n[6] Бизнес\n[7] Рыбалка\n[8] Работа\n[9] Лидеры\n[10] Репортеры\n[11] Мэрия\n[12] Инструкторы\n[13] Законники\n[14] Мафии/Банды\n[15] Автомобиль\n[16] Медики", "Выбрать", "Назад");
				}
			case 6:
				{
					SCM(playerid,COLOR_CMD," <> /sellbiz - Продать бизнес");
					SCM(playerid,COLOR_CMD," <> /bizlock - Закрыть / Открыть бизнес");
					SCM(playerid,COLOR_CMD," <> /bizstats /getbizstats - Статистика бизнеса");
					SCM(playerid,COLOR_CMD," <> /bizfee - Установить цену за товар");
					SCM(playerid,COLOR_CMD," <> /bizwithdraw - Снять деньги с бизнеса");
					SCM(playerid,COLOR_CMD," <> /bizbank - Перевести на счёт или оплатить электроэнергию");
					SCM(playerid,COLOR_CMD," <> /bizenterc - Установить цену входа (Только клубам / барам / ресторанам)");
					SCM(playerid,COLOR_CMD," <> /bizmafia - Установить крышу");
					SCM(playerid,COLOR_CMD," <> /bmenu - Панель управления бизнесом");
					return ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "Команды сервера","[0] Описание команд\n[1] Обычные\n[2] Чат\n[3] Телефон\n[4] Банк\n[5] Дом\n[6] Бизнес\n[7] Рыбалка\n[8] Работа\n[9] Лидеры\n[10] Репортеры\n[11] Мэрия\n[12] Инструкторы\n[13] Законники\n[14] Мафии/Банды\n[15] Автомобиль\n[16] Медики", "Выбрать", "Назад");
				}
			case 7: SCM(playerid,COLOR_CMD," <> /fish - Меню рыбалки"),ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "Команды сервера","[0] Описание команд\n[1] Обычные\n[2] Чат\n[3] Телефон\n[4] Банк\n[5] Дом\n[6] Бизнес\n[7] Рыбалка\n[8] Работа\n[9] Лидеры\n[10] Репортеры\n[11] Мэрия\n[12] Инструкторы\n[13] Законники\n[14] Мафии/Банды\n[15] Автомобиль\n[16] Медики", "Выбрать", "Назад");
			case 8:
				{
					SCM(playerid,COLOR_CMD," <> [Развозчик] /prodmenu");
					SCM(playerid,COLOR_CMD," <> [Хот дог] /hcontract /selleat /hcounter");
					SCM(playerid,COLOR_CMD," <> [Механик] /refill /repair /mcontract");
					SCM(playerid,COLOR_CMD," <> [Автобус] /route");
					return ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "Команды сервера","[0] Описание команд\n[1] Обычные\n[2] Чат\n[3] Телефон\n[4] Банк\n[5] Дом\n[6] Бизнес\n[7] Рыбалка\n[8] Работа\n[9] Лидеры\n[10] Репортеры\n[11] Мэрия\n[12] Инструкторы\n[13] Законники\n[14] Мафии/Банды\n[15] Автомобиль\n[16] Медики", "Выбрать", "Назад");
				}
			case 9:
				{
					SCM(playerid,COLOR_CMD," <> /warelock - Открыть / Закрыть склад");
					SCM(playerid,COLOR_CMD," <> /invite - Принять в огранизацию");
					SCM(playerid,COLOR_CMD," <> /uninvite - Выгнать / Уволить из организации");
					SCM(playerid,COLOR_CMD," <> /offuninvite - Выгнать / Уволить игрока offline");
					SCM(playerid,COLOR_CMD," <> /giverank - Повысить / Понизить ранг в организации");
					return ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "Команды сервера","[0] Описание команд\n[1] Обычные\n[2] Чат\n[3] Телефон\n[4] Банк\n[5] Дом\n[6] Бизнес\n[7] Рыбалка\n[8] Работа\n[9] Лидеры\n[10] Репортеры\n[11] Мэрия\n[12] Инструкторы\n[13] Законники\n[14] Мафии/Банды\n[15] Автомобиль\n[16] Медики", "Выбрать", "Назад");
				}
			case 10:
				{
					SCM(playerid,COLOR_CMD," <> /newsbank");
					SCM(playerid,COLOR_CMD," <> /newsput");
					SCM(playerid,COLOR_CMD," <> /newswithdraw");
					SCM(playerid,COLOR_CMD," <> /ratingnews");
					SCM(playerid,COLOR_CMD," <> /(n)panel");
					return ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "Команды сервера","[0] Описание команд\n[1] Обычные\n[2] Чат\n[3] Телефон\n[4] Банк\n[5] Дом\n[6] Бизнес\n[7] Рыбалка\n[8] Работа\n[9] Лидеры\n[10] Репортеры\n[11] Мэрия\n[12] Инструкторы\n[13] Законники\n[14] Мафии/Банды\n[15] Автомобиль\n[16] Медики", "Выбрать", "Назад");
				}
			case 11:
				{
					SCM(playerid,COLOR_CMD," <> /tazer");
					SCM(playerid,COLOR_CMD," <> /gettax");
					SCM(playerid,COLOR_CMD," <> /free");
					SCM(playerid,COLOR_CMD," <> /government");
					SCM(playerid,COLOR_CMD," <> /radio");
					SCM(playerid,COLOR_CMD," <> /departments");
					return ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "Команды сервера","[0] Описание команд\n[1] Обычные\n[2] Чат\n[3] Телефон\n[4] Банк\n[5] Дом\n[6] Бизнес\n[7] Рыбалка\n[8] Работа\n[9] Лидеры\n[10] Репортеры\n[11] Мэрия\n[12] Инструкторы\n[13] Законники\n[14] Мафии/Банды\n[15] Автомобиль\n[16] Медики", "Выбрать", "Назад");
				}
			case 12:
				{
					SCM(playerid,COLOR_CMD," <> /instopen /itazer (Click on TAB [GiveLicence])");
					SCM(playerid,COLOR_CMD," <> Инструкторам доступно клик меню ([?]двойной клик по нику игрока в ТАБ)");
					return ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "Команды сервера","[0] Описание команд\n[1] Обычные\n[2] Чат\n[3] Телефон\n[4] Банк\n[5] Дом\n[6] Бизнес\n[7] Рыбалка\n[8] Работа\n[9] Лидеры\n[10] Репортеры\n[11] Мэрия\n[12] Инструкторы\n[13] Законники\n[14] Мафии/Банды\n[15] Автомобиль\n[16] Медики", "Выбрать", "Назад");
				}
			case 13:
				{
					SCM(playerid,COLOR_CMD," <> /ram /take /frisk /tazer");
					SCM(playerid,COLOR_CMD," <> /cuff /follow /uncuff /find /wanted");
					SCM(playerid,COLOR_CMD," <> /ceject /deject");
					SCM(playerid,COLOR_CMD," <> /clear /ticket /arrest /(gov)ernment");
					SCM(playerid,COLOR_CMD," <> /givecopkeys /(m)egaphone /(r)adio /(d)epartments");
					SCM(playerid,COLOR_CMD," <> /mdc /(su)spect /demote");
					return ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "Команды сервера","[0] Описание команд\n[1] Обычные\n[2] Чат\n[3] Телефон\n[4] Банк\n[5] Дом\n[6] Бизнес\n[7] Рыбалка\n[8] Работа\n[9] Лидеры\n[10] Репортеры\n[11] Мэрия\n[12] Инструкторы\n[13] Законники\n[14] Мафии/Банды\n[15] Автомобиль\n[16] Медики", "Выбрать", "Назад");
				}
			case 14:
				{
					SCM(playerid,COLOR_CMD," <> [Банды] /gbankput /gbankwithdraw /gbank");
					SCM(playerid,COLOR_CMD," <> [Банды] /selldrugs /sellgun /sellzone /capture /get guns");
					SCM(playerid,COLOR_CMD," <> [Банды] /warehouse /materials /unloading");
					SCM(playerid,COLOR_CMD," <> [Мафии] /tie /untie /mafiawar /бизлист(/bizlist)");
					SCM(playerid,COLOR_CMD," <> [Мафии] /debtors /setdebt /getdebt");
					SCM(playerid,COLOR_CMD," <> [Мафии] /mafiabank /mafiawithdraw /mafiabalance");
					return ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "Команды сервера","[0] Описание команд\n[1] Обычные\n[2] Чат\n[3] Телефон\n[4] Банк\n[5] Дом\n[6] Бизнес\n[7] Рыбалка\n[8] Работа\n[9] Лидеры\n[10] Репортеры\n[11] Мэрия\n[12] Инструкторы\n[13] Законники\n[14] Мафии/Банды\n[15] Автомобиль", "Выбрать", "Назад");
				}
			case 15:
				{
					SCM(playerid,COLOR_CMD," <> /rentcar /unrentcar - Взять на прокат / Вернуть автомобиль");
					SCM(playerid,COLOR_CMD," <> /buycar /sellcar /changecar - Купить / Продать / Передать автомобиль");
					SCM(playerid,COLOR_CMD," <> /fill /fillcar - Заправить автомобиль на заправке или с канистры");
					SCM(playerid,COLOR_CMD," <> /slimit - Вкл / Выкл ограничитель скорости");
					SCM(playerid,COLOR_CMD," <> /carpass - Показать / Посмотреть документы на автомобиль");
					SCM(playerid,COLOR_CMD," <> /lock - Открыть / Закрыть автомобиль");
					return ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "Команды сервера","[0] Описание команд\n[1] Обычные\n[2] Чат\n[3] Телефон\n[4] Банк\n[5] Дом\n[6] Бизнес\n[7] Рыбалка\n[8] Работа\n[9] Лидеры\n[10] Репортеры\n[11] Мэрия\n[12] Инструкторы\n[13] Законники\n[14] Мафии/Банды\n[15] Автомобиль\n[16] Медики", "Выбрать", "Назад");
				}
			case 16:
				{
					SCM(playerid,COLOR_CMD," <> (/ac)cept medic - Принять вызов медика");
					SCM(playerid,COLOR_CMD," <> /heal [id] - Команда чтобы лечить, отрезвлять, снимать ломку");
					SCM(playerid,COLOR_CMD," <> /healaddict [id] - Лечить Наркозависимость");
					SCM(playerid,COLOR_CMD," <> /sethealcost [цена] - Цена за лечение (( 1 ХП ))");
					SCM(playerid,COLOR_CMD," <> /setmemgroup [ID] [Подразделение] - 1 LS | 2 SF | 3 LV | 4 FC - перевести на участок");
					SCM(playerid,COLOR_CMD," <> /setmemleader [ID] [Подразделение] - 1 LS | 2 SF | 3 LV | 4 FC - назначить лидером участка");
					return ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "Команды сервера","[0] Описание команд\n[1] Обычные\n[2] Чат\n[3] Телефон\n[4] Банк\n[5] Дом\n[6] Бизнес\n[7] Рыбалка\n[8] Работа\n[9] Лидеры\n[10] Репортеры\n[11] Мэрия\n[12] Инструкторы\n[13] Законники\n[14] Мафии/Банды\n[15] Автомобиль\n[16] Медики", "Выбрать", "Назад");
				}
			}
		}
	case 2001:
		{
			if(!response) return true;
			if(GetPVarInt(playerid,"capture_on") || GetPVarInt(playerid,"mWar_on")) return SCM(playerid,COLOR_GREY," Нельзя использовать во время войны");
			SetPlayerColor(playerid, g_szColorsTable[listitem]);
		}
	case 2002:
		{
			if(!response) return ShowPlayerDialog(playerid, 10414, DIALOG_STYLE_LIST, "Настройки","[0] Новый пароль\n[1] Безопасность\n[2] E-Mail\n[3] Пол\n[4] Цвет ника\n[5] Выбор спавна\n[6] Чат\n[7] Отображение оружия", "Выбрать", "Назад");
			SetPlayerColor(playerid, g_szColorsTable[listitem]);
		}
	case 1012:
		{
			if(!response) return true;
			if(!strcmp(inputtext, "/time",true))
			{
				SCM(playerid, 0x83BFBFAA, "<> /time  - узнать время");
			}
			else if(!strcmp(inputtext, "/gps",true))
			{
				SCM(playerid, 0x83BFBFAA, "<> /gps  - навигатор");
			}
			else if(!strcmp(inputtext, "/viphelp",true))
			{
				SCM(playerid, 0x83BFBFAA, "<> /viphelp  - помощь по VIP функциям");
			}
			else if(!strcmp(inputtext, "/drink",true))
			{
				SCM(playerid, 0x83BFBFAA, "<> /drink  - выпить");
			}
			else if(!strcmp(inputtext, "/directory",true))
			{
				SCM(playerid, 0x83BFBFAA, "<> /directory  - справочник");
			}
			else if(!strcmp(inputtext, "/eject",true))
			{
				SCM(playerid, 0x83BFBFAA, "<> /eject  - выбросить из машины");
			}
			else if(!strcmp(inputtext, "/dice",true))
			{
				SCM(playerid, 0x83BFBFAA, "<> /dice  - бросить кости");
			}
			else if(!strcmp(inputtext, "/clist",true))
			{
				SCM(playerid, 0x83BFBFAA, "<> /clist - цвета");
			}
			else if(!strcmp(inputtext, "/usedrugs",true))
			{
				SCM(playerid, 0x83BFBFAA, "<> /usedrugs - употребить наркотики");
			}
			else if(!strcmp(inputtext, "/showpass",true))
			{
				SCM(playerid, 0x83BFBFAA, "<> /showpass - показать паспорт");
			}
			else if(!strcmp(inputtext, "/myskill",true))
			{
				SCM(playerid, 0x83BFBFAA, "<> /myskill - навыки оружия");
			}
			else if(!strcmp(inputtext, "/hi",true))
			{
				SCM(playerid, 0x83BFBFAA, "<> /hi - пожать руку");
			}
			else if(!strcmp(inputtext, "/id",true))
			{
				SCM(playerid, 0x83BFBFAA, "<> /id - узнать id игрока");
			}
			else if(!strcmp(inputtext, "/ids",true))
			{
				SCM(playerid, 0x83BFBFAA, "<> /ids - узнать id игроков с указанным ником");
			}
			else if(!strcmp(inputtext, "/o",true))
			{
				SCM(playerid, 0x83BFBFAA, "<> (/o)oc - Глобальный чат");
			}
			else if(!strcmp(inputtext, "/ad",true))
			{
				SCM(playerid, 0x83BFBFAA, "<> (/ad)vertise - Объявление");
			}
			else if(!strcmp(inputtext, "/gov",true))
			{
				SCM(playerid, 0x83BFBFAA, "<> (/gov)erment - Государственные новости");
			}
			else if(!strcmp(inputtext, "/f",true))
			{
				SCM(playerid, 0x83BFBFAA, "<> (/f)amily - Чат организации");
			}
			else if(!strcmp(inputtext, "/s",true))
			{
				SCM(playerid,0x83BFBFAA, "<> (/s)hout - Крик");
			}
			else if(!strcmp(inputtext, "/m",true))
			{
				SCM(playerid,0x83BFBFAA, "<> (/m)egaphone - Мегафон на служебном транспорте");
			}
			else if(!strcmp(inputtext, "/r",true))
			{
				SCM(playerid,0x83BFBFAA, "<> (/r)adio - Чат государственных организаций (Полиция/ФБР и т.д)");
			}
			else if(!strcmp(inputtext, "/d",true))
			{
				SCM(playerid,0x83BFBFAA, "<> (/d)epartaments - Общий чат государственных организаций");
			}
			else if(!strcmp(inputtext, "/me",true))
			{
				SCM(playerid,0x83BFBFAA, "<> (/me) - Действие (Пример: Имя_Фамилия пожал руку)");
			}
			else if(!strcmp(inputtext, "/call",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /call - Позвонить (Номер телефона можно узнать через /number)");
			}
			else if(!strcmp(inputtext, "/sms",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /sms - Отправить СМС сообщение");
			}
			else if(!strcmp(inputtext, "/number",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /number - узнать номер игрока");
			}
			else if(!strcmp(inputtext, "/h",true))
			{
				SCM(playerid,0x83BFBFAA, "<> (/h)angup - Завершить телефонный разговор");
			}
			else if(!strcmp(inputtext, "/p",true))
			{
				SCM(playerid,0x83BFBFAA, "<> (/p)ickup - Ответить на звонок");
			}
			else if(!strcmp(inputtext, "/togphone",true))
			{
				SCM(playerid,0x83BFBFAA, "<> togphone - выкл. телефон");
			}
			else if(!strcmp(inputtext, "/hpanel",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /hpanel - Главное меню(Настройки дома)");
			}
			else if(!strcmp(inputtext, "/home",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /home - Поставить метку у дома (GPS)");
			}
			else if(!strcmp(inputtext, "/spawnchange",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /spawnchange - Сменить респавн(Возрождение) ДОМ <==> База организации");
			}
			else if(!strcmp(inputtext, "/healme",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /healme - Использовать аптечку");
			}
			else if(!strcmp(inputtext, "/buybiz",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /buybiz - Купить бизнес");
			}
			else if(!strcmp(inputtext, "/bizstats",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /bizstats - Статистика бизнеса");
			}
			else if(!strcmp(inputtext, "/bizwithdraw ",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /bizwithdraw - Снять деньги с бизнеса");
			}
			else if(!strcmp(inputtext, "/bizfee",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /bizfee - Установить цену за товар");
			}
			else if(!strcmp(inputtext, "/sellbiz",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /sellbiz - Продать бизнес");
			}
			else if(!strcmp(inputtext, "/changehouse",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /changehouse - Продать дом другому человеку или же совершить обмен.");
			}
			else if(!strcmp(inputtext, "/invite",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /invite - Пригласить человека во фракцию");
			}
			else if(!strcmp(inputtext, "/uninvite",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /uninvite - Выгнать человека из фракции");
			}
			else if(!strcmp(inputtext, "/giverank",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /giverank - Повысить/Понизить игрока в ранге");
			}
			else if(!strcmp(inputtext, "/tie",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /tie - Связать заложника. Доступно только мафиям");
			}
			else if(!strcmp(inputtext, "/untie",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /untie - Развязать заложника. Доступно только мафиям");
			}
			else if(!strcmp(inputtext, "/heal",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /heal - Вылечить человека в карете скорой помощи. Доступно только медикам");
			}
			else if(!strcmp(inputtext, "/getgun",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /getgun - Взять оружие со склада мафии");
			}
			else if(!strcmp(inputtext, "/mafiabalance",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /mafiabalance - Проверить счёт мафии в банке");
			}
			else if(!strcmp(inputtext, "/mafiawithdraw",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /mafiawithdraw - Снять деньги со счёта мафии");
			}
			else if(!strcmp(inputtext, "/mafiabank",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /mafiabank - Положить деньги на счёт мафии");
			}
			else if(!strcmp(inputtext, "/ram",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /ram - Выбить дверь. Только законники");
			}
			else if(!strcmp(inputtext, "/cuff",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /cuff - Надеть наручники. Только законники");
			}
			else if(!strcmp(inputtext, "/follow",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /follow - Вести за собой престуника");
			}
			else if(!strcmp(inputtext, "/uncuff",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /uncuff - Снять наручники. Только законники");
			}
			else if(!strcmp(inputtext, "/givecopkeys",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /givecopkeys - Выдать ключи от полицейского участка");
			}
			else if(!strcmp(inputtext, "/arrest",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /arrest - Посадить преступника в камеру. Необходимо находиться в здании тюрьмы");
			}
			else if(!strcmp(inputtext, "/warehouse",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /warehouse - Проверить склад организации");
			}
			else if(!strcmp(inputtext, "/take",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /take - Отобрать у человека запрещённые предметы. Только законники");
			}
			else if(!strcmp(inputtext, "/frisk",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /frisk - Обыскать человека на запрещённые предметы. Только законники");
			}
			else if(!strcmp(inputtext, "/su",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /(su)spect - Добавить человека в список разыскиваемых. Только законники");
			}
			else if(!strcmp(inputtext, "/suspect",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /(su)spect - Добавить человека в список разыскиваемых. Только законники");
			}
			else if(!strcmp(inputtext, "/tazer",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /tazer - Сменить пули");
			}
			else if(!strcmp(inputtext, "/wanted",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /wanted - Посмотреть список разыскиваемых. Только законники");
			}
			else if(!strcmp(inputtext, "/demote",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /demote - Повысить/Понизить законника. Только для ФБР");
			}
			else if(!strcmp(inputtext, "/gbank",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /gbank - Проверить счёт мафии в банке");
			}
			else if(!strcmp(inputtext, "/gbankput",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /gbankput - Положить деньги на счёт банды");
			}
			else if(!strcmp(inputtext, "/gbankwhisdraw",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /gbankwhisdraw - Снять деньги со счёта банды");
			}
			else if(!strcmp(inputtext, "/getbizstats",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /getbizstats - Проверить бизнес");
			}
			else if(!strcmp(inputtext, "/mafiawar",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /mafiawar - Назначить стрелу");
			}
			else if(!strcmp(inputtext, "/mcontract",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /mcontract - Заключить контракт с заправкой. Механики");
			}
			else if(!strcmp(inputtext, "/sellgrib",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /sellgrib - Продать грибы");
			}
			else if(!strcmp(inputtext, "/clear",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /clear - Снять розыск. Только для законников");
			}
			else if(!strcmp(inputtext, "/refill",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /refill - Заправить автомобиль топливом. Для механников");
			}
			else if(!strcmp(inputtext, "/prodmenu",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /prodmenu - Загрузить продукты. Для развозчиков");
			}
			else if(!strcmp(inputtext, "/repair",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /repair - Подчинить повреждённый автомобиль. Для механников");
			}
			else if(!strcmp(inputtext, "/route",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /route - Начать работу водителя автобуса");
			}
			else if(!strcmp(inputtext, "/fixcar",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /fixcar - Отбуксировать домашний автомобиль к дому");
			}
			else if(!strcmp(inputtext, "/newsbank",true))
			{
				SCM(playerid,0x83BFBFAA, "<> /newsbank -  Баланс денежных средств в News");
			}
			return true;
		}
	case 14:
		{
			if(!response) return cmd_mm(playerid);
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid,14,DIALOG_STYLE_INPUT, "Введите ключ", "Введите новый ключ безопасности", "Готово", "Назад");
			new szQuery[69+MAX_PLAYER_NAME+32];
			mysql_format(DATABASE, szQuery, sizeof(szQuery), "UPDATE `"TABLE_ACCOUNTS"` SET pKeyip = '%e' WHERE name = '%e'",inputtext,pData[playerid][pName]);
			mysql_query(DATABASE,szQuery);
			pData[playerid][pCheckip] = 1;
			SetAccountInfo(playerid, pData[playerid][pCheckip], "pCheckip");
			format(string, 144, " Проверка по IP адресу включена. Ваш новый ключ безопасности: %s", inputtext);
			SCM(playerid, COLOR_GREEN, string);
			SCM(playerid, COLOR_GREEN, " Мы рекомендуем вам сделать скриншот. Клавиша F8");
			return true;
		}
	case 11:
		{
			if(!response) return ShowPlayerDialog(playerid, 10414, DIALOG_STYLE_LIST, "Настройки","[0] Новый пароль\n[1] Безопасность\n[2] E-Mail\n[3] Пол\n[4] Цвет ника\n[5] Выбор спавна\n[6] Чат\n[7] Отображение оружия", "Выбрать", "Назад");
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid,11,DIALOG_STYLE_INPUT, "Смена пароля", "Чтобы не подвергнуть аккаунт взлому, рекомедуем придумать трудный пароль.\nСодержащий набор букв и цифр", "Сменить", "Назад");
			if(strlen(inputtext) < 6 || strlen(inputtext) > 16) return ShowPlayerDialog(playerid,11,DIALOG_STYLE_MSGBOX,"Ошибка!","{FF6347}Длина пароля должна быть от 6 до 16","Повтор","");
			new szQuery[128];
			mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_ACCOUNTS"` SET pKey = '%e' WHERE name = '%e'",inputtext,pData[playerid][pName]);
			mysql_query(DATABASE,szQuery);
			format(string, 128, " Ваш новый пароль: %s", inputtext);
			SCM(playerid, COLOR_GREEN, string);
			SCM(playerid, COLOR_GREEN, " Мы рекомендуем вам сделать скриншот. Клавиша F8");
			return true;
		}
	case 9653:
		{
			if(!response) return true;
			if(GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 19 || proverkaforma[playerid] == 1) {}
			else return true;
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 433) return SCM(playerid,COLOR_GREY, " Вы не в матовозе!");
			switch(listitem)
			{
			case 0:
				{
					SCM(playerid,COLOR_GREEN, " Встаньте на красный маркер чтобы заполнить грузовик материалами");
					SetPlayerCheckpoint(playerid,333.1407,1964.3679,17.6406,8.0);
					return SetPVarInt(playerid,"MatsArmyCar",1);
				}
			case 1: SetPlayerCheckpoint(playerid,333.1407,1964.3679,17.6406,6.0);
			case 2: SetPlayerCheckpoint(playerid,1529.6000,-1691.2000,13.3828,6.0);
			case 3: SetPlayerCheckpoint(playerid,-1607.2913,683.5955,-5.2422,6.0);
			case 4: SetPlayerCheckpoint(playerid,2292.0837,2458.9941,10.8203,6.0);
			case 5: SetPlayerCheckpoint(playerid,-2429.1721,490.0948,29.9279,6.0);
			case 6: SetPlayerCheckpoint(playerid,-1601.8774,309.4032,7.1875,6.0);
			}
			SCM(playerid, COLOR_GREEN, " На карте помечено место разгрузки");
			return SetPVarInt(playerid,"MatsArmyCar",listitem+1);
		}
	case 2323: // Безопасность
		{
			if(!response) return ShowPlayerDialog(playerid, 10414, DIALOG_STYLE_LIST, "Настройки","[0] Новый пароль\n[1] Безопасность\n[2] E-Mail\n[3] Пол\n[4] Цвет ника\n[5] Выбор спавна\n[6] Чат\n[7] Отображение оружия", "Выбрать", "Назад");
			switch(listitem)
			{
			case 0: ShowPlayerDialog(playerid, 2370, DIALOG_STYLE_LIST, "Защита по IP","[0] Включить / Выключить защиту\n[1] Сменить ключ\n[2] Информация", "Выбрать", "Назад");
			case 1: ShowPlayerDialog(playerid, 2371, DIALOG_STYLE_LIST, "Google Autentification","[0] Включить / Выключить защиту\n[1] Информация", "Выбрать", "Назад");
			}
		}
	case 2370: // IP Key
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0: // Включить / выключить защиту.
				{
					if(!pData[playerid][pCheckip]) return ShowPlayerDialog(playerid,14,DIALOG_STYLE_INPUT, "Введите ключ", "У вас не установлен ключ безопасности!\nОт 5 до 16 символов", "Готово", "Назад");
					pData[playerid][pCheckip] = 0;
					SetAccountInfo(playerid, pData[playerid][pCheckip], "pCheckip");
					SCM(playerid, COLOR_WHITE, " Проверка по IP адресу отключена");
					return true;
				}
			case 1: ShowPlayerDialog(playerid,14,DIALOG_STYLE_INPUT, "Сменить ключ", "Введите ваш новый ключ безопасности", "Готово", "Назад");
			case 2:
				{
					new rulesdialog[400];
					format(rulesdialog,sizeof(rulesdialog), "%s%s%s%s%s",IPMSG[0],IPMSG[1],IPMSG[2],IPMSG[3],IPMSG[4]);
					ShowPlayerDialog(playerid,165,DIALOG_STYLE_MSGBOX, "INFO",rulesdialog, "Готово", "");
				}
			}
		}
	
	case 10004:
		{
			if(!response) return ShowPlayerDialog(playerid, 10415, DIALOG_STYLE_LIST, "Информация","[0] Статистика персонажа\n[1] Карманы\n[2] Скиллы\n[3] Сытость\n[4] Лицензии\n[5] Тел.справочник\n[6] Автобусы\n[7] Время\n[8] Бонусы\n[9] Рейтинг радиостанций", "Выбрать", "Назад");
			return true;
		}
	case 2328:
		{
			if(!response) return true;
			new tmpcar = GetPlayerVehicleID(playerid);
			switch(listitem)
			{
			case 0: // разгрузить материалы
				{
					if(pData[playerid][pMember] == 24)
					{
						if(bFuri[tmpcar-hamccar[10]][bHells][0] <= 0) return SCM(playerid,COLOR_GREY, " Не достаточно материалов для разгрузки");
						if(!IsAClub (playerid)) return SCM(playerid, COLOR_GRAD1, " Вы не на своей базе");
						if(hamcmatbi > 100000) return  SCM(playerid,COLOR_GREY, " Склад заполнен");
						hamcmatbi += bFuri[tmpcar-hamccar[10]][bHells][0];
						bFuri[tmpcar-hamccar[10]][bHells][0] = 0;
						if(hamcmatbi > 100000) hamcmatbi = 100000;
						SendMes(playerid,COLOR_GREEN, " Материалы разгружены. {FFFFFF}Материалов  На складе: %i",hamcmatbi);
					}
					else if(pData[playerid][pMember] == 26)
					{
						if(bFuri[tmpcar-wmccar[10]][bWarlocks][0] <= 0) return SCM(playerid,COLOR_GREY, " Не достаточно материалов для разгрузки");
						if(!IsAClub(playerid)) return SCM(playerid, COLOR_GRAD1, " Вы не на своей базе");
						if(wmcmatbi >= 100000) return  SCM(playerid,COLOR_GREY, " Склад заполнен");
						wmcmatbi += bFuri[tmpcar-wmccar[10]][bWarlocks][0];
						bFuri[tmpcar-wmccar[10]][bWarlocks][0] = 0;
						if(wmcmatbi > 100000) wmcmatbi = 100000;
						SendMes(playerid,COLOR_GREEN, " Материалы разгружены. {FFFFFF}Материалов  На складе: %i",wmcmatbi);
					}
					else if(pData[playerid][pMember] == 29)
					{
						if(bFuri[tmpcar-pmccar[10]][bPagans][0] <= 0) return SCM(playerid,COLOR_GREY, " Не достаточно материалов для разгрузки");
						if(!IsAClub(playerid)) return SCM(playerid, COLOR_GRAD1, " Вы не на своей базе");
						if(pmcmatbi >= 100000) return  SCM(playerid,COLOR_GREY, " Склад заполнен");
						pmcmatbi += bFuri[tmpcar-pmccar[10]][bPagans][0];
						bFuri[tmpcar-pmccar[10]][bPagans][0] = 0;
						if(pmcmatbi > 100000) pmcmatbi = 1000000;
						SendMes(playerid,COLOR_GREEN, " Материалы разгружены. {FFFFFF}Материалов  На складе: %i",pmcmatbi);
					}
				}
			case 1: // разгрузить бензин
				{
					if(pData[playerid][pMember] == 24)
					{
						if(bFuri[tmpcar-hamccar[10]][bHells][2] <= 0) return SCM(playerid,COLOR_GREY, " Не достаточно бензина для разгрузки");
						if(!IsAClub(playerid)) return SCM(playerid, COLOR_GRAD1, " Вы не на своей базе");
						if(hamcfuels >= 10000) return  SCM(playerid,COLOR_GREY, " Склад заполнен");
						hamcfuels += bFuri[tmpcar-hamccar[10]][bHells][2];
						bFuri[tmpcar-hamccar[10]][bHells][2] = 0;
						if(hamcfuels > 10000) hamcfuels = 10000;
						SendMes(playerid,COLOR_GREEN, " Бензин разгружен. {FFFFFF}Бензина  На складе: %i",hamcfuels);
					}
					else if(pData[playerid][pMember] == 26)
					{
						if(bFuri[tmpcar-wmccar[10]][bWarlocks][2] <= 0) return SCM(playerid,COLOR_GREY, " Не достаточно бензина для разгрузки");
						if(!IsAClub(playerid)) return SCM(playerid, COLOR_GRAD1, " Вы не на своей базе");
						if(wmcfuels >= 10000) return  SCM(playerid,COLOR_GREY, " Склад заполнен");
						wmcfuels += bFuri[tmpcar-wmccar[10]][bWarlocks][2];
						bFuri[tmpcar-wmccar[10]][bWarlocks][2] = 0;
						if(wmcfuels > 10000) wmcfuels = 10000;
						SendMes(playerid,COLOR_GREEN, " Бензин разгружен. {FFFFFF}Бензина  На складе: %i",wmcfuels);
					}
					else if(pData[playerid][pMember] == 29)
					{
						if(bFuri[tmpcar-pmccar[10]][bPagans][2] <= 0) return SCM(playerid,COLOR_GREY, " Не достаточно бензина для разгрузки");
						if(!IsAClub(playerid)) return SCM(playerid, COLOR_GRAD1, " Вы не на своей базе");
						if(pmcfuels >= 10000) return  SCM(playerid,COLOR_GREY, " Склад заполнен");
						pmcfuels += bFuri[tmpcar-pmccar[10]][bPagans][0];
						bFuri[tmpcar-pmccar[10]][bPagans][2] = 0;
						if(pmcfuels > 10000) pmcfuels = 10000;
						SendMes(playerid,COLOR_GREEN, " Бензин разгружен. {FFFFFF}Бензина  На складе: %i",pmcfuels);
					}
				}
			case 2: // разгрузить продукты
				{
					if(pData[playerid][pMember] == 24)
					{
						if(bFuri[tmpcar-hamccar[10]][bHells][1] <= 0) return SCM(playerid,COLOR_GREY, " Не достаточно продуктов для разгрузки");
						if(!IsAClub(playerid)) return SCM(playerid, COLOR_GRAD1, " Вы не на своей базе");
						if(hamcprods >= 2000) return  SCM(playerid,COLOR_GREY, " Склад заполнен");
						hamcprods += bFuri[tmpcar-hamccar[10]][bHells][1];
						bFuri[tmpcar-hamccar[10]][bHells][1] = 0;
						if(hamcprods > 2000) hamcprods = 2000;
						SendMes(playerid,COLOR_GREEN, " Продукты разгружены. {FFFFFF}Продуктов  На складе: %i",hamcprods);
					}
					else if(pData[playerid][pMember] == 26)
					{
						if(bFuri[tmpcar-wmccar[10]][bWarlocks][1] <= 0) return SCM(playerid,COLOR_GREY, " Не достаточно продуктов для разгрузки");
						if(!IsAClub(playerid)) return SCM(playerid, COLOR_GRAD1, " Вы не на своей базе");
						if(wmcprods >= 2000) return  SCM(playerid,COLOR_GREY, " Склад заполнен");
						wmcprods += bFuri[tmpcar-wmccar[10]][bWarlocks][1];
						bFuri[tmpcar-wmccar[10]][bWarlocks][1] = 0;
						if(wmcfuels > 2000) wmcmatbi = 2000;
						SendMes(playerid,COLOR_GREEN, " Продукты разгружены. {FFFFFF}Продуктов  На складе: %i",wmcprods);
					}
					else if(pData[playerid][pMember] == 29)
					{
						if(bFuri[tmpcar-pmccar[10]][bPagans][1] <= 0) return SCM(playerid,COLOR_GREY, " Не достаточно продуктов для разгрузки");
						if(!IsAClub(playerid)) return SCM(playerid, COLOR_GRAD1, " Вы не на своей базе");
						if(pmcprods >= 2000) return  SCM(playerid,COLOR_GREY, " Склад заполнен");
						pmcprods += bFuri[tmpcar-pmccar[10]][bPagans][1];
						bFuri[tmpcar-pmccar[10]][bPagans][1] = 0;
						if(pmcprods > 2000) pmcprods = 2000;
						SendMes(playerid,COLOR_GREEN, " Продукты разгружены. {FFFFFF}Продуктов  На складе: %i",pmcprods);
					}
				}
			}
		}
	

	case 2329: // Ввести код Google Authenticator
		{
			if(!response) return ShowPlayerDialog(playerid, 10414, DIALOG_STYLE_LIST, "Настройки","[0] Новый пароль\n[1] Безопасность\n[2] E-Mail\n[3] Пол\n[4] Цвет ника\n[5] Выбор спавна\n[6] Чат\n[7] Отображение оружия", "Выбрать", "Назад");
			if(pData[playerid][pActiveGAuth] == 0)
			{
				new passleet[20];
				GetPVarString(playerid,"QRCode",passleet,20);
				if(!strcmp(inputtext, passleet,true))
				{
					pData[playerid][pActiveGAuth] = 1;
					SetAccountInfo(playerid, pData[playerid][pActiveGAuth], "pActiveGAuth");
					strmid(pData[playerid][pQRCode],inputtext, 0, strlen(inputtext), 128);
					new szQuery[66+MAX_PLAYER_NAME+24];
					mysql_format(DATABASE, szQuery, sizeof(szQuery), "UPDATE `"TABLE_ACCOUNTS"` SET pQRCode = '%s' WHERE Name = '%e'",inputtext,Name(playerid));
					mysql_query(DATABASE,szQuery);
					//DeletePVar(playerid,"QRCode");
					SCM(playerid,-1,"Google Authenticator успешно привязан к аккаунту.");
					return SCM(playerid,COLOR_YELLOW," Введите данный код в приложение Google Authenticator, чтобы в дальнейшем получать одноразовые коды");
				}
				else SCM(playerid,COLOR_GREY," [Ошибка] Вы ввели неправильный код отвязки");
			}
			else SCM(playerid,COLOR_GREY," Вы уже привязали аккаунт к Google Authenticator");
		}
	case 9944:
		{
			if(!response) return ShowPlayerDialog(playerid, 10413, DIALOG_STYLE_LIST, "Администрация","[0] Сообщить о нарушителе\n[1] Обратная связь\n[2] Список админов\n[3] Запрос на смену ника\n[4] Уничтожить деньги", "Выбрать", "Назад");
			if(sscanf(inputtext, "s[24]",input_name)) return ShowPlayerDialog(playerid,10352,DIALOG_STYLE_INPUT, "Смена имени", "Введите новое имя\n\tИмя должно иметь формат: Имя_Фамилия\n\tИмя может содержать буквы от A-z и символ '_'\n\tДлина имени не может быть более 20 символов\n\tСтоимость смены имени 3000000 вирт", "Готово", "Назад");
			for(new i = strlen(inputtext); i != 0; --i)
			switch(inputtext[i])
			{
			case 'А'..'Я', 'а'..'я', ' ':
				return ShowPlayerDialog(playerid,9944,DIALOG_STYLE_INPUT, "Ввод параметра", "Напишите новый ник (по форме Имя_Фамилия)", "Отправить", "Назад");
			case '0'..'9':
				return ShowPlayerDialog(playerid,9944,DIALOG_STYLE_INPUT, "Ввод параметра", "Напишите новый ник (по форме Имя_Фамилия)", "Отправить", "Назад");
			}
			new szQuery[61+MAX_PLAYER_NAME];
			mysql_format(DATABASE, szQuery, 61+MAX_PLAYER_NAME, "SELECT `Name` FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%e'",input_name);
			mysql_tquery(DATABASE,szQuery,"OnMySQL_QUERY","iis",39,playerid,"");
			return true;
		}
	case 9973:
		{
			if(!response) return ShowPlayerDialog(playerid, 10414, DIALOG_STYLE_LIST, "Настройки","[0] Новый пароль\n[1] Безопасность\n[2] E-Mail\n[3] Пол\n[4] Цвет ника\n[5] Выбор спавна\n[6] Чат\n[7] Отображение оружия", "Выбрать", "Назад");
			switch(listitem)
			{
			case 0:
				{
					if(!GetPVarInt(playerid,"ooc_chat")) SetPVarInt(playerid,"ooc_chat",1), SCM(playerid, 0x6495EDFF, " Просмотр общего чата отключён!");
					else DeletePVar(playerid,"ooc_chat"), SCM(playerid, 0x6495EDFF, " Просмотр общего чата включён!");
				}
			case 1:
				{
					if(!GetPVarInt(playerid,"family_chat")) SetPVarInt(playerid,"family_chat",1), SCM(playerid, 0x6495EDFF, " Просмотр семейного чата отключён!");
					else DeletePVar(playerid,"family_chat"), SCM(playerid, 0x6495EDFF, " Просмотр семейного чата включён!");
				}
			case 2:
				{
					if(!GetPVarInt(playerid,"name_tag"))
					{
						SetPVarInt(playerid,"name_tag",1);
						foreach(new i: Player) ShowPlayerNameTagForPlayer(playerid, i, false);
						SCM(playerid, 0x6495EDFF, " Показ ников отключён!");
					}
					else
					{
						DeletePVar(playerid,"name_tag");
						foreach(new i: Player) ShowPlayerNameTagForPlayer(playerid, i, true);
						SCM(playerid, 0x6495EDFF, " Показ ников включён!");
					}
				}
			}
			return cmd_mm(playerid);
		}
	case 8842:
		{
			if(!response) return cmd_mm(playerid);
			new moneys;
			moneys = strval(inputtext);
			if(strval(inputtext) < 1) return SCM(playerid, COLOR_RED, " Неверная сумма");
			if(pData[playerid][pCash] < strval(inputtext)) return SCM(playerid,COLOR_GREY, "  У вас нет столько денег!"),ShowPlayerDialog(playerid,8842,DIALOG_STYLE_INPUT,"Слив ворованных денег","Если к вам попали ворованные/сбагозенные деньги,\nих следует передать администрации.\nИначе вы можете быть забаненым как вор/соучастник!","Готово","Отмена");
			pData[playerid][pCash] -= strval(inputtext);
			SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
			format(string, 90, " Вы пожертвовали $ %i", moneys);
			SCM(playerid, COLOR_WHITE, string);
			SCM(playerid, COLOR_LIGHTRED, " Большое спасибо за сотрудничество");
			return true;
		}
	case 1227:
		{
			if(!response) return true;
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid, 1227, DIALOG_STYLE_PASSWORD, "Админ авторизация", "Введите пароль\n\nПароль должен состоять из латинских букв и цифр\n	размером от 6 до 15 символов", "Вход", "Отмена");
			new pass2[16];
			if(GetPVarInt(playerid, "Alogin") == 1)
			{
				if(sscanf(inputtext, "s[16]", pass2)) ShowPlayerDialog(playerid, 1227, DIALOG_STYLE_PASSWORD, "Админ авторизация", "Введите пароль\n\nПароль должен состоять из латинских букв и цифр\n	размером от 6 до 15 символов", "Вход", "Отмена");
				if(!strcmp(inputtext, "qwerty", true)) return ShowPlayerDialog(playerid, 1227, DIALOG_STYLE_PASSWORD, "Админ авторизация", "Введите пароль\n\nПароль должен состоять из латинских букв и цифр\n	размером от 6 до 15 символов", "Вход", "Отмена");
				if(strlen(inputtext) < 6 || strlen(inputtext) > 16) return ShowPlayerDialog(playerid, 1227, DIALOG_STYLE_PASSWORD, "Админ авторизация", "Введите пароль\n\nПароль должен состоять из латинских букв и цифр\n	размером от 6 до 15 символов", "Вход", "Отмена");
				if(!IsValidInput(inputtext)) return ShowPlayerDialog(playerid, 1227, DIALOG_STYLE_PASSWORD, "Админ авторизация", "Ошибка! Пароль должен содержать и цифры и буквы.\nЗапрещены любые другие сивмолы, а так же кириллица", "Вход", "Отмена");
				new szQuery[256];
				mysql_format(DATABASE, szQuery, sizeof(szQuery), "UPDATE "TABLE_ADMIN" SET  password = '%e', IpReg = '%e',LIP = '%e' WHERE Name = '%e' LIMIT 1", pass2,pData[playerid][pIpReg],pData[playerid][pIp],pData[playerid][pName]);
				mysql_query(DATABASE, szQuery, true);
				pData[playerid][pAdmin] = GetPVarInt(playerid,"level");
				dostup[playerid] = 1;
				SCM(playerid, COLOR_GREEN, " Поздравляем! Вы получили доступ модератора");
				
				if(pData[playerid][pAdmin] > 6) return true;
				format(string, 90, " <ALogin> вошел %s[%i]", pData[playerid][pName], playerid);
				SendAdminMessage(0xF4B800AA, string);
				return true;
			}
			else if(GetPVarInt(playerid, "Alogin") == 2)
			{
				format(string, 60, " <ALogin> %s[%i]: ввел неверный пароль",pData[playerid][pName],playerid);
				new str[64];
				GetPVarString(playerid,"password",str,64);
				if(strcmp(inputtext, str, true)) return SendAdminMessage(0xF4B800AA, string),SCM(playerid, COLOR_GREY, " Вы ввели неверный пароль");
				SendMes(playerid, 0xF4B800AA, " Вы авторизировались как модератор %i уровня", GetPVarInt(playerid,"level"));
				pData[playerid][pAdmin] = GetPVarInt(playerid,"level");
				dostup[playerid] = 1;
				
				if(pData[playerid][pAdmin] > 6) return true;
				format(string, 90, " <ALogin> вошел %s[%i]", pData[playerid][pName], playerid);
				SendAdminMessage(0xF4B800AA, string);
				return true;
			}
			if(GetPVarInt(playerid, "Alogin") == 3)
			{
				if(strlen(inputtext) < 6 || strlen(inputtext) > 16) return ShowPlayerDialog(playerid, 1227, DIALOG_STYLE_PASSWORD, "Админ авторизация", "Введите пароль\n\nПароль должен состоять из латинских букв и цифр\n	размером от 6 до 15 символов", "Вход", "Отмена");
				if(!IsValidInput(inputtext)) return ShowPlayerDialog(playerid, 1227, DIALOG_STYLE_PASSWORD, "Админ авторизация", "Ошибка! Пароль должен содержать и цифры и буквы.\nЗапрещены любые другие сивмолы, а так же кириллица", "Вход", "Отмена");
				dostup[playerid] = 0;
				SCM(playerid, COLOR_GREY, " Вы не модератор");
				return true;
			}
		}
	case 16:
		{
			new heh = GoogleAuthenticatorCode(pData[playerid][pQRCode], gettime());
			//if(params[0] != heh) SCM(playerid,-1,"Не совпадает");
			//else SCM(playerid,-1,"Совпадает");
			if(!response) return true;
			if(!strlen(inputtext))
			{
				ShowPlayerDialog(playerid,16,DIALOG_STYLE_PASSWORD, "Введите ключ Google Authenticator", "      ==== Ваш IP адрес сменился ====\n=== Введите ваш ключ Google Authenticator ===", "Готово", "Отмена");
				SetPlayerInterior(playerid,0);
				SetPlayerCameraLookAt(playerid,1133.0504,-2038.4034,69.0980);
				SetPlayerFacingAngle(playerid, 179.5547);
				SetPlayerCameraPos(playerid, -1817.0808, 1112.9937, 235.4244);
				SetPlayerCameraLookAt(playerid, -1816.5471, 949.6590, 235.4244);
				TogglePlayerControllable(playerid, 0);
				return true;
			}
			//if(strcmp(inputtext, pData[playerid][pQRCode], true) == 0)
			if(strval(inputtext) == heh)
			{
				new playersip[32];
				GetPlayerIp(playerid,playersip,sizeof(playersip));
				new szQuery[61+32+24];
				mysql_format(DATABASE,szQuery,61+32+24, "UPDATE `"TABLE_ACCOUNTS"` SET pIp = '%e' WHERE name = '%e'",playersip,pData[playerid][pName]);
				mysql_query(DATABASE,szQuery);
				
				Convoi[playerid] = 9999;
				
				pData[playerid][pLogin] = true;
				SetAccountInfo(playerid,pData[playerid][pLogin],"pLogin");
				
				SpawnPlayer(playerid);
				TogglePlayerControllable(playerid, 1);
				return true;
			}
			else
			{
				ShowPlayerDialog(playerid,69,DIALOG_STYLE_MSGBOX, "{B20000}Внимание", "{FF6347}Вы были кикнуты с сервера\nПричина: 'Не верный ключ Google Authenticator'\nВведите '/q', чтобы выйти", "Закрыть", "");
				L_Kick(playerid,11);
				return true;
			}
		}
	case 17:
		{
			if(!response) return ShowPlayerDialog(playerid,69,DIALOG_STYLE_MSGBOX, "{B20000}Внимание", "{FF6347}Вы были кикнуты с сервера\nПричина: 'Не верный ключ безопасности'\nВведите '/q', чтобы выйти", "Закрыть", ""),L_Kick(playerid,12);
			if(!strlen(inputtext))
			{
				ShowPlayerDialog(playerid,17,DIALOG_STYLE_PASSWORD, "Введите ключ безопасности", "      ==== Ваш IP адрес сменился ====\n=== Введите ваш ключ безопасности ===", "Готово", "Отмена");
				SetPlayerInterior(playerid,0);
				SetPlayerCameraLookAt(playerid,1133.0504,-2038.4034,69.0980);
				SetPlayerFacingAngle(playerid, 179.5547);
				SetPlayerCameraPos(playerid, -1817.0808, 1112.9937, 235.4244);
				SetPlayerCameraLookAt(playerid, -1816.5471, 949.6590, 235.4244);
				TogglePlayerControllable(playerid, 0);
				return true;
			}
			if(strcmp(inputtext, pData[playerid][pKeyip], true) == 0)
			{
				new playersip[32];
				GetPlayerIp(playerid,playersip,sizeof(playersip));
				new szQuery[58+32+MAX_PLAYER_NAME];
				mysql_format(DATABASE, szQuery, sizeof(szQuery), "UPDATE `"TABLE_ACCOUNTS"` SET pIp = '%e' WHERE name = '%e'",playersip,pData[playerid][pName]);
				mysql_query(DATABASE, szQuery);
				
				Convoi[playerid] = 9999;
				
				pData[playerid][pLogin] = true;
				SetAccountInfo(playerid,pData[playerid][pLogin],"pLogin");
				
				SpawnPlayer(playerid);
				TogglePlayerControllable(playerid, 1);
				return true;
			}
			else
			{
				ShowPlayerDialog(playerid,69,DIALOG_STYLE_MSGBOX, "{B20000}Внимание", "{FF6347}Вы были кикнуты с сервера\nПричина: 'Не верный ключ безопасности'\nВведите '/q', чтобы выйти", "Закрыть", "");
				L_Kick(playerid,13);
				return true;
			}
		}
	
	case 10418:
		{
			if(!response) return ShowPlayerDialog(playerid, 10411, DIALOG_STYLE_LIST, "MainMenu", MainMenuMode, "Выбрать", "Назад");

			format(format_string, sizeof format_string, "SELECT * FROM `"TABLE_ACS"` WHERE `Owned` = '%s' ORDER BY `ObjectID`",pData[playerid][pName]);
			mysql_tquery(DATABASE,format_string,"ChangeStatus","ii",playerid,listitem);
		}
	
	case 10422: // case Задать вопрос по игре
		{
			if(response)
			{
				if(!strlen(inputtext))return ShowPlayerDialog(playerid, 10422, DIALOG_STYLE_INPUT, "Ввод параметра", "[               Напишите свой вопрос               ]", "Выбрать", "Назад");
				format(string, 256, " ->Вопрос %s[%i]: %s", Name(playerid), playerid, (inputtext));
				SCM(playerid, COLOR_YELLOW, string);
				format(string, 256, " ->Вопрос %s[%i]: %s", Name(playerid), playerid, (inputtext));
				HelperMessage(0xE9A52800, string);
				return true;
			}
			else return ShowPlayerDialog(playerid, 10412, DIALOG_STYLE_LIST, "Помощь по игре","[0] Задать вопрос по игре\n[1] Список помощников\n[3] Команды сервера", "Выбрать", "Назад");
		}
	case 10413: //case Администрация
		{
			if(response)
			{
				switch(listitem)
				{
				case 0: ShowPlayerDialog(playerid, 10423, DIALOG_STYLE_INPUT, "Ввод параметра", "Введите ID нарушителя", "Выбрать", "Назад");
				case 1: ShowPlayerDialog(playerid, 10425, DIALOG_STYLE_INPUT, "Ввод параметра", "[               Напишите свой вопрос               ]", "Выбрать", "Назад");
				case 2: cmd_admins(playerid),ShowPlayerDialog(playerid, 10413, DIALOG_STYLE_LIST, "Администрация","[0] Сообщить о нарушителе\n[1] Обратная связь\n[2] Список админов\n[3] Запрос на смену ника\n[4] Уничтожить деньги", "Выбрать", "Назад");
				case 3: ShowPlayerDialog(playerid,9944,DIALOG_STYLE_INPUT, "Ввод параметра", "Напишите новый ник (по форме Имя_Фамилия)", "Отправить", "Назад");
				case 4: ShowPlayerDialog(playerid,8842,DIALOG_STYLE_INPUT, "Слив денег", "Если к Вам попали ворованные/читерские деньги\nотправьте их администрации сервера.\nИначе Вы будете забанены как соучастник", "Далее", "Назад");
				}
			}
			else return ShowPlayerDialog(playerid, 10411, DIALOG_STYLE_LIST, "MainMenu", MainMenuMode, "Выбрать", "Назад");
		}
	case 10423: //case Репорт на нарушителя
		{
			if(response)
			{
				for(new i = strlen(inputtext); i != 0; --i)
				switch(inputtext[i])
				{
				case 'A'..'Z', 'a'..'z', ' ':
					return ShowPlayerDialog(playerid, 10423, DIALOG_STYLE_INPUT, "Ввод параметра", "Введите ID нарушителя", "Выбрать", "Назад");
				}
				if(!IsPlayerConnected(strval(inputtext))) return SCM(playerid,COLOR_GREY," Игрок оффлайн"),ShowPlayerDialog(playerid, 10413, DIALOG_STYLE_LIST, "Администрация","[0] Сообщить о нарушителе\n[1] Обратная связь\n[2] Список админов\n[3] Запрос на смену ника\n[4] Уничтожить деньги", "Выбрать", "Назад");
				if(!strlen(inputtext) || strlen(inputtext) > 3) return ShowPlayerDialog(playerid, 10423, DIALOG_STYLE_INPUT, "Ввод параметра", "Введите ID нарушителя", "Выбрать", "Назад");
				SetPVarInt(playerid,"ReportID",strval(inputtext));
				ShowPlayerDialog(playerid, 10424, DIALOG_STYLE_INPUT, "Ввод параметра", "[               Напишите причину жалобы               ]", "Выбрать", "Назад");
				return true;
			}
			else return ShowPlayerDialog(playerid, 10413, DIALOG_STYLE_LIST, "Администрация","[0] Сообщить о нарушителе\n[1] Обратная связь\n[2] Список админов\n[3] Запрос на смену ника\n[4] Уничтожить деньги", "Выбрать", "Назад");
		}

	
	case 9974:
	{
	    if(!response)return 1;
	    if(listitem == 0)
	    {
	        if(pData[playerid][pSetUI] & SHOW_HP) // если включено
	        {
	            pData[playerid][pSetUI] &= SHOW_HP;
	            PlayerTextDrawHide(playerid, gHealthText[playerid]);
	        }
			else
			{
			    pData[playerid][pSetUI] |= SHOW_HP;
			    PlayerTextDrawShow(playerid, gHealthText[playerid]);
			}
	    }
	    if(listitem == 1)
	    {
	        if(pData[playerid][pSetUI] & SHOW_HUNGER) // если включено
	        {
	            pData[playerid][pSetUI] &= SHOW_HUNGER;
	            PlayerTextDrawHide(playerid, gHungerText4[playerid]);
	        }
			else
			{
			    pData[playerid][pSetUI] |= SHOW_HUNGER;
			    PlayerTextDrawShow(playerid, gHungerText4[playerid]);
			}
	    }
	    if(listitem == 2)
	    {
	        if(pData[playerid][pSetUI] & SHOW_ARMOR) // если включено
	        {
	            pData[playerid][pSetUI] &= SHOW_ARMOR;
	            PlayerTextDrawHide(playerid, gArmorText[playerid]);
	        }
			else
			{
			    pData[playerid][pSetUI] |= SHOW_ARMOR;
			    PlayerTextDrawShow(playerid, gArmorText[playerid]);
			}
	    }
	    SetAccountInfo(playerid,pData[playerid][pSetUI],"pSetUI");
	    format(string,256,"- Отображение HP\t\t%s\n- Отображение сытости\t%s\n- Отоброжение брони\t\t%s",(pData[playerid][pSetUI] & SHOW_HP)?("выключить") : ("включить"),
		(pData[playerid][pSetUI] & SHOW_HUNGER)?("выключить") : ("включить"), (pData[playerid][pSetUI] & SHOW_ARMOR)?("выключить") : ("включить"));
		ShowPlayerDialog(playerid, 9974, DIALOG_STYLE_LIST, "Настройки интерфейса",string, "Выбрать", "Назад");
	    return 1;
	}
	/// MAIN MENU

	case 1120: //главное меню
	{
		if(!response)return 1;
		show_main_menu(playerid, listitem+1);
		return 1;
	}
	case 1121: //case Информация
	{
		if(!response)show_main_menu(playerid, 0);
		switch(listitem)
		{
			case 0: ShowStats(playerid,playerid);
			case 1: cmd_jskill(playerid);
			case 2: cmd_myskill(playerid);
			case 3: cmd_licenses(playerid);
		}
		return 1;
	}
	case 1122: //case Обратная связь
	{
		if(!response)show_main_menu(playerid, 0);
		if(!strlen(inputtext))return ShowPlayerDialog(playerid, 1122, DIALOG_STYLE_INPUT, "Ввод параметра", "[               Напишите свой вопрос               ]", "Выбрать", "Назад");
				
		if(pData[playerid][pRMuteTime] > gettime()) return SendClientMessage(playerid, COLOR_GRAD1, " Вам запрещено писать в репорт на определенное время");

		format(string, 256, " Репорт от %s[%i]: %s", Name(playerid), playerid, (inputtext));
		SCM(playerid, COLOR_YELLOW, string);
		SCM(playerid, COLOR_LIGHTRED, " Ваша жалоба была отправлена администрации");
		format(string, 256, " Репорт от %s[%i]: %s", Name(playerid), playerid, (inputtext));
		SendAdminMessage(0xD97700AA,string);
		return true;
		
	}
	case 1123: //case Помощь по игре
	{
		if(!response)show_main_menu(playerid, 0);
		switch(listitem)
		{
			case 0: ShowPlayerDialog(playerid, 10422, DIALOG_STYLE_INPUT, "Ввод параметра", "[               Напишите свой вопрос               ]", "Выбрать", "Назад");
			case 1: cmd_supports(playerid),ShowPlayerDialog(playerid, 10412, DIALOG_STYLE_LIST, "Помощь по игре","[0] Задать вопрос по игре\n[1] Список помощников\n[3] Команды сервера", "Выбрать", "Назад");
				
			case 2:ShowPlayerDialog(playerid, 10025, DIALOG_STYLE_LIST, "Команды сервера","[0] Описание команд\n[1] Обычные\n[2] Чат\n[3] Телефон\n[4] Банк\n[5] Дом\n[6] Бизнес\n[7] Рыбалка\n[8] Работа\n[9] Лидеры\n[10] Репортеры\n[11] Мэрия\n[12] Инструкторы\n[13] Законники\n[14] Мафии/Банды\n[15] Автомобиль\n[16] Медики", "Выбрать", "Назад");
		}
		return 1;
	}
	case 1124: //case Настройки
	{
		if(!response)show_main_menu(playerid, 0);
		switch(listitem)
		{
			case 0: ShowPlayerDialog(playerid,11,DIALOG_STYLE_INPUT, "Ввод параметра", "[               Введите новый пароль               ]", "Выбрать", "Назад");
			case 1: ShowPlayerDialog(playerid, 2323, DIALOG_STYLE_LIST, "Безопасность", "[0] Защита по IP адресу\n[1] Google Authentication", "Выбрать", "Назад");
			case 2:
			{
				if(GetPVarInt(playerid,"capture_on") || GetPVarInt(playerid,"mWar_on")) 
					return SCM(playerid,COLOR_GREY," Нельзя использовать во время войны");
				cmd_clist(playerid,"");
			}
			case 5:	cmd_spawnchange(playerid);
			case 6:
			{
				format(string,256,"[1] Чат оос\t\t%s\n[2] Чат семьи\t\t%s\n[3] Ники игроков\t%s",(!GetPVarInt(playerid,"ooc_chat"))?("выключить") : ("включить"),
				(!GetPVarInt(playerid,"family_chat"))?("выключить") : ("включить"), (!GetPVarInt(playerid,"name_tag"))?("выключить") : ("включить"));
				ShowPlayerDialog(playerid, 9973, DIALOG_STYLE_LIST, "Настройки чата",string, "Выбрать", "Назад");
			}
			case 8:
			{
				format(string,256,"- Отображение HP\t\t%s\n- Отображение сытости\t%s\n- Отоброжение брони\t\t%s",(pData[playerid][pSetUI] & SHOW_HP)?("выключить") : ("включить"),
				(pData[playerid][pSetUI] & SHOW_HUNGER)?("выключить") : ("включить"), (pData[playerid][pSetUI] & SHOW_ARMOR)?("выключить") : ("включить"));
				ShowPlayerDialog(playerid, 9974, DIALOG_STYLE_LIST, "Настройки интерфейса",string, "Выбрать", "Назад");
			}
		}
		return 1;
	}

		case 2003:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					if(pData[playerid][pPHouseKey] == INVALID_HOUSE_ID ) 
						return SCM(playerid,COLOR_GREY," Вы не имеете дома/квартиры!");

					SCM(playerid, COLOR_WHITE, " Теперь вы будете возраждаться дома!");
					pData[playerid][pSpawnChange] = 1;
					SetAccountInfo(playerid, pData[playerid][pSpawnChange], "pSpawnChange");
				}
				case 1:
				{
					pData[playerid][pSpawnChange] = 0; 
					SCM(playerid, COLOR_WHITE, " Теперь вы будете возраждаться на базе организации / вокзале!");
					SetAccountInfo(playerid, pData[playerid][pSpawnChange], "pSpawnChange");
				}
			}
		}
		case 9000:
		{
			if(!response) return true;
			new category_tp[32], temp[32];
			sscanf(inputtext,"s[32]s[32]", temp, category_tp);
			SetPVarString(playerid, "chosen_category_tp", category_tp);
			playerShowDialog(playerid, 9001);
		}
		case 9001:
		{
			if(!response) return playerShowDialog(playerid, 9000), DeletePVar(playerid, "tp_page"), DeletePVar(playerid, "chosen_category_tp");
            if(!strcmp(inputtext, "<< Пред. Страница", true))
			{
				SetPVarInt(playerid, "tp_page", GetPVarInt(playerid, "tp_page")-1);
				playerShowDialog(playerid, 9001);
				return true;
			}
			else if(!strcmp(inputtext, ">> След. Страница", true))
			{
				SetPVarInt(playerid, "tp_page", GetPVarInt(playerid, "tp_page")+1);
				playerShowDialog(playerid, 9001);
				return true;
			}

			new temp[32], data[32];
			sscanf(inputtext, "s[32]s[32]", temp, data);
			new sid = strfind(data, "[key:");
			if(sid != -1)
			{
				strmid(data, data, sid+5, strlen(data)-2, 32);
			}
			format(string, sizeof(string), "/tp %s", data);
			CallLocalFunction("OnPlayerCommandText", "is", playerid, string);				
		}
		case DIALOG_DETACHMENT_BASE: // null
		{
			if(!response)
			{
				DeletePVar(playerid, !#_pDetFracVal);
				DeletePVar(playerid, !#_pDetFrac);
				DeletePVar(playerid, !#_pDetFracName);
				return 1;
			}

			if( !strcmp(inputtext, "Создать взвод", true) )
				return ShowPlayerDialog(playerid, DIALOG_DETACHMENT_BASE+1, DIALOG_STYLE_INPUT, "{FFFFFF}Создать >{00BF2B} Взвод", "Введите название взвода", "Выбрать", "Отмена");
			if( !strcmp(inputtext, "> Следующая страница", true) )
				SetPVarInt(playerid, !#_pDetFrac, GetPVarInt(playerid, !#_pDetFrac)+1);
			if( !strcmp(inputtext, "< Предыдущая страница", true) )
				SetPVarInt(playerid, !#_pDetFrac, GetPVarInt(playerid, !#_pDetFrac)-1);
			if( !strcmp(inputtext, "<< Первая страница", true) )
				SetPVarInt(playerid, !#_pDetFrac, 0);
			if( !strcmp(inputtext, ">> Последняя страница", true) )
				SetPVarInt(playerid, !#_pDetFrac, (GetPVarInt(playerid, !#_pDetFracVal)/MAX_DETACHMENT_LIST) );
			else // usual item (for edit)
			{
				SetPVarString(playerid, !#_pDetFracName, inputtext);
				return playerShowDialog(playerid, DIALOG_DETACHMENT_BASE+2);
			}
			return playerShowDialog(playerid, DIALOG_DETACHMENT_BASE);

		}
		case DIALOG_DETACHMENT_BASE+1: // create det
		{
			if(!response || !strlen(inputtext) || strlen(inputtext) > 23 || pData[playerid][pLeader] <= 0)
				return playerShowDialog(playerid, DIALOG_DETACHMENT_BASE);

			new szQuery[94+24];
			mysql_format(DATABASE, szQuery, sizeof szQuery, "INSERT INTO `"TABLE_DETACHMENT"` (`fractionid`, `name`) VALUES ('%i', '%e')", pData[playerid][pLeader], inputtext);
			mysql_query(DATABASE, szQuery);
			format(cString, 128, " %s %s создал взвод %s", GetRank(playerid), Name(playerid), inputtext);
			SendFamilyMessage(pData[playerid][pMember], TEAM_BLUE_COLOR, cString);
			return playerShowDialog(playerid, DIALOG_DETACHMENT_BASE);

		}
		case DIALOG_DETACHMENT_BASE+2: // edit det
		{
			if(!response)
				return playerShowDialog(playerid, DIALOG_DETACHMENT_BASE);

			SetPVarInt(playerid, !#_pDetFracTemp, listitem);
			switch(listitem)
			{		
				case 0: ShowPlayerDialog(playerid, DIALOG_DETACHMENT_BASE+3, DIALOG_STYLE_INPUT, "{FFFFFF}Редактирование >{00BF2B} Взвод", "Введите новое название взвода", "Выбрать", "Отмена");
				case 1: ShowPlayerDialog(playerid, DIALOG_DETACHMENT_BASE+3, DIALOG_STYLE_INPUT, "{FFFFFF}Редактирование >{00BF2B} Взвод", "Введите никнейм или id нового Главы", "Выбрать", "Отмена");
				case 2: ShowPlayerDialog(playerid, DIALOG_DETACHMENT_BASE+3, DIALOG_STYLE_INPUT, "{FFFFFF}Редактирование >{00BF2B} Взвод", "Введите никнейм или id нового Заместителя[0]", "Выбрать", "Отмена");
				case 3: ShowPlayerDialog(playerid, DIALOG_DETACHMENT_BASE+3, DIALOG_STYLE_INPUT, "{FFFFFF}Редактирование >{00BF2B} Взвод", "Введите никнейм или id нового Заместителя[1]", "Выбрать", "Отмена");
				case 4: 
				{
					string[0] = EOS;
					strcat(string, "[0]	Выключить цвет\n[1]	Зелёный\n[2]	Светло зелёный\n[3]	Ярко зелёный\n[4]	Бирюзовый\n[5]	Жёлто-зелёный\n[6]	Тёмно-зелёный\n[7]	Серо-зелёный\n[8]	Красный\n[9]	Ярко-красный\n[10]	Оранжевый\n[11]	Коричневый\n[12]	Тёмно-красный\n[13]	Cеро-красный\n[14]	Жёлто-оранжевый\n[15]	Малиновый\n[16]	Розовый\n[17]	Синий\n[18]	Голубой\n[19]	Синяя сталь\n[20]	Сине-зелёный\n[21]	Тёмно-синий\n[22]	Фиолетовый\n");
					strcat(string, "[23]	Индиго\n[24]	Серо-синий\n[25]	Жёлтый\n[26]	Кукурузный\n[27]	Золотой\n[28]	Старое золото\n[29]	Оливковый\n[30]	Серый\n[31]	Серебро\n[32]	Чёрный\n[33]	Белый");
					ShowPlayerDialog(playerid, DIALOG_DETACHMENT_BASE+3, DIALOG_STYLE_LIST, "{FFFFFF}Редактирование >{00BF2B} Взвод", string, "Выбрать", "Отмена");
				}
				case 5: 
				{
					string[0] = EOS;
					strcat(string, "[0]	Выключить цвет\n[1]	Зелёный\n[2]	Светло зелёный\n[3]	Ярко зелёный\n[4]	Бирюзовый\n[5]	Жёлто-зелёный\n[6]	Тёмно-зелёный\n[7]	Серо-зелёный\n[8]	Красный\n[9]	Ярко-красный\n[10]	Оранжевый\n[11]	Коричневый\n[12]	Тёмно-красный\n[13]	Cеро-красный\n[14]	Жёлто-оранжевый\n[15]	Малиновый\n[16]	Розовый\n[17]	Синий\n[18]	Голубой\n[19]	Синяя сталь\n[20]	Сине-зелёный\n[21]	Тёмно-синий\n[22]	Фиолетовый\n");
					strcat(string, "[23]	Индиго\n[24]	Серо-синий\n[25]	Жёлтый\n[26]	Кукурузный\n[27]	Золотой\n[28]	Старое золото\n[29]	Оливковый\n[30]	Серый\n[31]	Серебро\n[32]	Чёрный\n[33]	Белый");
					ShowPlayerDialog(playerid, DIALOG_DETACHMENT_BASE+3, DIALOG_STYLE_LIST, "{FFFFFF}Редактирование >{00BF2B} Взвод", string, "Выбрать", "Отмена");
				}
				case 6: 
				{
					string[0] = EOS;
					strcat(string, "[0]	Выключить цвет\n[1]	Зелёный\n[2]	Светло зелёный\n[3]	Ярко зелёный\n[4]	Бирюзовый\n[5]	Жёлто-зелёный\n[6]	Тёмно-зелёный\n[7]	Серо-зелёный\n[8]	Красный\n[9]	Ярко-красный\n[10]	Оранжевый\n[11]	Коричневый\n[12]	Тёмно-красный\n[13]	Cеро-красный\n[14]	Жёлто-оранжевый\n[15]	Малиновый\n[16]	Розовый\n[17]	Синий\n[18]	Голубой\n[19]	Синяя сталь\n[20]	Сине-зелёный\n[21]	Тёмно-синий\n[22]	Фиолетовый\n");
					strcat(string, "[23]	Индиго\n[24]	Серо-синий\n[25]	Жёлтый\n[26]	Кукурузный\n[27]	Золотой\n[28]	Старое золото\n[29]	Оливковый\n[30]	Серый\n[31]	Серебро\n[32]	Чёрный\n[33]	Белый");
					ShowPlayerDialog(playerid, DIALOG_DETACHMENT_BASE+3, DIALOG_STYLE_LIST, "{FFFFFF}Редактирование >{00BF2B} Взвод", string, "Выбрать", "Отмена");
				}
				case 7:
				{
					string = "";
					new name[24+1];
					GetPVarString(playerid, !#_pDetFracName, name, 24);
					new szQuery[90+24];
					format(szQuery, sizeof szQuery, "SELECT `id` FROM `"TABLE_DETACHMENT"` WHERE `fractionid`=%d and `name`='%s'", pData[playerid][pMember], name);
					mysql_query(DATABASE, szQuery);

					new id;
					cache_get_value_name_int(0, "id", id);
					foreach(new player:Player)
					{
						if(id == pData[player][pDetachID] && (IsAArm(player) || IsACop(player)) ) 
						{
							new _tmpstr[34+24+24+1];
							if(GetPVarInt(player, !#_pDetachRank) == 0xFF)
								format(_tmpstr, sizeof _tmpstr, "%s\t%s\tГлава взвода\n", pData[player][pName], GetRank(player));
							else if(GetPVarInt(player, !#_pDetachRank) == 0xF)
								format(_tmpstr, sizeof _tmpstr, "%s\t%s\tЗаместитель Командира взвода\n", pData[player][pName], GetRank(player));
							else
								format(_tmpstr, sizeof _tmpstr, "%s\t%s\tБоец\n", pData[player][pName], GetRank(player));
							strcat(string, _tmpstr);
						}
						else
							continue;
					}
					ShowPlayerDialog(playerid, DIALOG_DETACHMENT_BASE-1, DIALOG_STYLE_TABLIST, "Члены взвода онлайн", string, "><", "");
				} 
				case 8:
				{
					new name[24+1];
					GetPVarString(playerid, !#_pDetFracName, name, 24);
					format(cString, 128, "{FFFFFF}Вы действительно хотите удалить взвод %s?", name);
					ShowPlayerDialog(playerid, DIALOG_DETACHMENT_BASE+3, DIALOG_STYLE_MSGBOX, "{FFFFFF}Удаление >{00BF2B} Взвод", cString, "><", "");
				}
			}
		}
		case DIALOG_DETACHMENT_BASE+3:
		{
			new tempint = GetPVarInt(playerid, !#_pDetFracTemp);

			if(!response || !strlen(inputtext) && tempint != 8 || strlen(inputtext) > 23 && tempint != 8)
				return playerShowDialog(playerid, DIALOG_DETACHMENT_BASE+2);

			for(new i = 0; i < strlen(inputtext); i++)
				if(inputtext[i] == '+' || inputtext[i] == '@' || inputtext[i] == '\'' || inputtext[i] == '\"' || inputtext[i] == '=')
					return playerShowDialog(playerid, DIALOG_DETACHMENT_BASE+2), SCM(playerid, COLOR_GREY, " Вы использовали запрещенные символы");

			
			new name[24+1];
			GetPVarString(playerid, !#_pDetFracName, name, 24);
			switch(tempint)
			{
				case 0: 
				{
					new szQuery[64+34+24];
					format(szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `name`='%s' WHERE `fractionid`='%d' and `name`='%s'", inputtext, pData[playerid][pMember], name);
					mysql_query(DATABASE, szQuery);
					format(cString, 128, " %s %s сменил название взвода %s на %s", GetRank(playerid), Name(playerid), name, inputtext);
					SetPVarString(playerid, !#_pDetFracName, inputtext);
					SendFamilyMessage(pData[playerid][pMember], TEAM_BLUE_COLOR, cString);
					format(szQuery, sizeof szQuery, "SELECT `id` FROM `"TABLE_DETACHMENT"` WHERE `fractionid`='%d' and `name`='%s'", pData[playerid][pMember], inputtext);
					mysql_query(DATABASE, szQuery); 
					new id;
					cache_get_value_name_int(0, "id", id);
					foreach(new __player:Player)
					{
						if(pData[__player][pMember] == pData[playerid][pMember] && pData[__player][pDetachID] == id && GetPVarInt(__player,"Fraction_Duty"))
							strmid(pData[__player][pszDetachName], inputtext, 0, strlen(inputtext));
					}
					return playerShowDialog(playerid, DIALOG_DETACHMENT_BASE+2);
				}
				case 1: 
				{
					new player;
					sscanf(inputtext, "u", player);
					if(pData[player][pMember] != pData[playerid][pMember]) return 1;
					if(!ProxDetectorS(8.0, playerid, player)) 
					{
						playerShowDialog(playerid, DIALOG_DETACHMENT_BASE+2);
						return SCM(playerid,COLOR_GREY," Игрок должен быть рядом с вами");
					}
					new szQuery[100+24];
					mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `firstdeputy`='Нет' WHERE `firstdeputy`='%e'", pData[player][pName]);
					mysql_query(DATABASE, szQuery);
					mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `seconddeputy`='Нет' WHERE `seconddeputy`='%e'", pData[player][pName]);
					mysql_query(DATABASE, szQuery);
					mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `member`='Нет' WHERE `member`='%e'", pData[player][pName]);
					mysql_query(DATABASE, szQuery);

					format(szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `member`='%s' WHERE `fractionid`=%d and `name`='%s'", pData[player][pName], pData[playerid][pMember], name);
					mysql_query(DATABASE, szQuery);

					format(szQuery, sizeof szQuery, "SELECT `id` FROM `"TABLE_DETACHMENT"` WHERE `fractionid`=%d and `name`='%s'", pData[playerid][pMember], name);
					mysql_query(DATABASE, szQuery); 
					new id;
					cache_get_value_name_int(0, "id", id);
					pData[player][pDetachID] = id;
					SetPVarInt(player, !#_pDetachRank, 0xFF);
					strmid(pData[player][pszDetachName], name, 0, strlen(name));

					format(cString, 128, " %s %s назначил %s руководителем взвода %s", GetRank(playerid), Name(playerid), pData[player][pName], name);
					SendFamilyMessage(pData[playerid][pMember], TEAM_BLUE_COLOR, cString);
					return playerShowDialog(playerid, DIALOG_DETACHMENT_BASE+2);
				}
				case 2..3: 
				{
					new player;
					sscanf(inputtext, "u", player);
					if(pData[player][pMember] != pData[playerid][pMember]) return 1;
					if(!ProxDetectorS(8.0, playerid, player)) 
					{	
						playerShowDialog(playerid, DIALOG_DETACHMENT_BASE+2);
						return SCM(playerid,COLOR_GREY," Игрок должен быть рядом с вами");
					}
					new szQuery[100+24];
					mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `firstdeputy`='Нет' WHERE `firstdeputy`='%e'", pData[player][pName]);
					mysql_query(DATABASE, szQuery);
					mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `seconddeputy`='Нет' WHERE `seconddeputy`='%e'", pData[player][pName]);
					mysql_query(DATABASE, szQuery);
					mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `member`='Нет' WHERE `member`='%e'", pData[player][pName]);
					mysql_query(DATABASE, szQuery);

					format(szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `%s`='%s' WHERE `fractionid`=%d and `name`='%s'",(tempint == 2)?("firstdeputy"):("seconddeputy"),  pData[player][pName], pData[playerid][pMember], name);
					mysql_query(DATABASE, szQuery);

					SendClientMessage(playerid, 0xDEBADFFF, szQuery);

					format(szQuery, sizeof szQuery, "SELECT `id` FROM `"TABLE_DETACHMENT"` WHERE `fractionid`=%d and `name`='%s'", pData[playerid][pMember], name);
					mysql_query(DATABASE, szQuery); 
					new id;
					cache_get_value_name_int(0, "id", id);
					pData[player][pDetachID] = id; 
					strmid(pData[player][pszDetachName], name, 0, strlen(name));
					SetPVarInt(player, !#_pDetachRank, 0xF);

					format(cString, 128, "%s %s назначил %s заместителем взвода %s", GetRank(playerid), Name(playerid), pData[player][pName], name);
					SendFamilyMessage(pData[playerid][pMember], TEAM_BLUE_COLOR, cString);
					return playerShowDialog(playerid, DIALOG_DETACHMENT_BASE+2);
				}
				case 4:
				{
					new szQuery[124+24];
					format(szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `color`=%d WHERE `fractionid`=%d and `name`='%s'", listitem, pData[playerid][pMember], name);
					mysql_query(DATABASE, szQuery);

					format(szQuery, sizeof szQuery, "SELECT `id` FROM `"TABLE_DETACHMENT"` WHERE `fractionid`=%d and `name`='%s'", pData[playerid][pMember], name);
					mysql_query(DATABASE, szQuery);

					new id;
					cache_get_value_name_int(0, "id", id);
					foreach(new __player:Player)
					{
						if(pData[__player][pMember] == pData[playerid][pMember] && pData[__player][pDetachID] == id && GetPVarInt(__player,"Fraction_Duty") && !GetPVarInt(__player, !#_pDetachRank) )
						{
							SetPVarInt(__player, !#_pDetachColor, listitem+1);	
							SetPlayerColor(__player, g_szColorsTable[listitem]);
						}
					}
					
					return playerShowDialog(playerid, DIALOG_DETACHMENT_BASE+2);
				}
				case 5: // member
				{
					new szQuery[142+24];
					format(szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `colormember`=%d WHERE `fractionid`=%d and `name`='%s'", listitem, pData[playerid][pMember], name);
					mysql_query(DATABASE, szQuery);

					format(szQuery, sizeof szQuery, "SELECT `id` FROM `"TABLE_DETACHMENT"` WHERE `fractionid`=%d and `name`='%s'", pData[playerid][pMember], name);
					mysql_query(DATABASE, szQuery);

					new id;
					cache_get_value_name_int(0, "id", id);
					foreach(new __player:Player)
					{
						if(pData[__player][pMember] == pData[playerid][pMember] && pData[__player][pDetachID] == id && GetPVarInt(__player,"Fraction_Duty") && GetPVarInt(__player, !#_pDetachRank) == 0xFF)
						{
							SetPVarInt(__player, !#_pDetachColor, listitem+1);	
							SetPlayerColor(__player, g_szColorsTable[listitem]);
						}
					}
					
					return playerShowDialog(playerid, DIALOG_DETACHMENT_BASE+2);
				}
				case 6: // deputy
				{
					new szQuery[128];
					format(szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `colordeputy`=%d WHERE `fractionid`=%d and `name`='%s'", listitem, pData[playerid][pMember], name);
					mysql_query(DATABASE, szQuery);

					format(szQuery, sizeof szQuery, "SELECT `id` FROM `"TABLE_DETACHMENT"` WHERE `fractionid`=%d and `name`='%s'", pData[playerid][pMember], name);
					mysql_query(DATABASE, szQuery);

					new id;
					cache_get_value_name_int(0, "id", id);
					foreach(new __player:Player)
					{
						if(pData[__player][pMember] == pData[playerid][pMember] && pData[__player][pDetachID] == id && GetPVarInt(__player,"Fraction_Duty") && GetPVarInt(__player, !#_pDetachRank) == 0xF)
						{
							SetPVarInt(__player, !#_pDetachColor, listitem+1);	
							SetPlayerColor(__player, g_szColorsTable[listitem]);
						}
					}
					
					return playerShowDialog(playerid, DIALOG_DETACHMENT_BASE+2);
				}
				case 8: // remove !!!! !!!!!
				{
					new szQuery[128];
					format(szQuery, sizeof szQuery, "SELECT `id` FROM `"TABLE_DETACHMENT"` WHERE `fractionid`=%d and `name`='%s'", pData[playerid][pMember], name);
					mysql_query(DATABASE, szQuery);
					new id;
					cache_get_value_name_int(0, "id", id);

					format(szQuery, sizeof szQuery, "DELETE FROM `"TABLE_DETACHMENT"` WHERE `fractionid`=%d and `name`='%s'", pData[playerid][pMember], name);
					mysql_query(DATABASE, szQuery);

					foreach(new __player:Player)
						if(pData[__player][pMember] == pData[playerid][pMember] && pData[__player][pDetachID] == id)
						{
							DeletePVar(__player, !#_pDetachColor);	
							DeletePVar(__player, !#_pDetachRank);
							pData[__player][pDetachID] = 0;
							SetPlayerToTeamColor(__player);
						}

					format(cString, 128, "%s %s расформировал взвод %s", GetRank(playerid), Name(playerid), name);
					SendFamilyMessage(pData[playerid][pMember], TEAM_BLUE_COLOR, cString);
					return playerShowDialog(playerid, DIALOG_DETACHMENT_BASE+1);

				}

	
			}

		}
	}
	return true;
}


stock playerShowDialog(playerid, dialogid)
{
	if(!IsPlayerConnected(playerid) || playerid == INVALID_PLAYER_ID)
		return printf(" [WARNING] playerShowDialog >> Попытка показать диалог %d невалидному плеер хендлу %d", playerid, dialogid), 0;

	switch(dialogid)
	{
		case 9000: // teleport
		{
			new szQuery[62];
			mysql_format(DATABASE, szQuery, 62, "SELECT `category` FROM `"TABLE_TELEPORT"`");
			mysql_query(DATABASE, szQuery);
			new array[10][32], category_tp[32];
			new r = cache_num_rows();
			if(!r) return SCM(playerid, COLOR_GREY, "Список пуст");
			for(new i = 0; i < 10; i++)
			{
				format(array[i], 32, " ");
			}
			for(new i = 0; i < r; i++)
			{
				cache_get_value_name(i,"category",category_tp);
				if(!has_tp(array, category_tp))
				{
					for(new j = 0; j < 10; j++)
					{
					    if(!strcmp(array[j], " ", true))
					    {
							format(array[j], 32, "%s", category_tp);
							break;
					    }
					}
				}
			}
			format(string, sizeof(string), "");
			new index = 0;
			for(new i = 0; i < 10; i++)
			{
			    if(!strcmp(array[i], " ", true)) continue;
				new strs[64];
				format(strs, 64, "[%i] %s\n", index, array[i]);
				strcat(string, strs);
				index++;
			}
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, "Телепорт", string, "Выбор", "Отмена");
			return 1;
		}
		case 9001: // teleport 
		{
			new category_tp[32];
			new szQuery[262];
		    GetPVarString(playerid, "chosen_category_tp", category_tp, 32);
		    mysql_format(DATABASE, szQuery, 262, "SELECT `name`,`key` FROM `"TABLE_TELEPORT"` WHERE `category` = '%s'", category_tp);
		    format(szQuery, 262, "SELECT `name`,`key` FROM `"TABLE_TELEPORT"` WHERE `category` = '%s'", category_tp);
			mysql_query(DATABASE, szQuery);
			new r = cache_num_rows();
			if(!r) return playerShowDialog(playerid, 9000);
			format(string, sizeof(string), "");
			new index = 0,
				start = 18 * GetPVarInt(playerid, "tp_page");
			for(new i = start; i < r && i < start+18; i++)
			{
			    new names[32], keyss[32];
				cache_get_value_name(i,"name",names);
				cache_get_value_name(i,"key",keyss);
			    new strs[128];
			    format(strs, sizeof(strs), "[%i] %s [key:%s] \n",i, names, keyss);
			    strcat(string, strs);
			    if(index >= 17) break;
			    index++;
			}
			if(GetPVarInt(playerid, "tp_page") > 0)
		    {
		        strcat(string, "<< Пред. Страница\n");
		    }
		    if(index >= 17 && r > start+18)
		    {
				strcat(string, ">> След. Страница");
			}
			ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_LIST, "Меню", string, "Выбор", "Назад");
			return 1;
		}
		case DIALOG_DETACHMENT_BASE: //plmenu
		{
			new szQuery[82];
			mysql_format(DATABASE, szQuery, sizeof szQuery, "SELECT `name` FROM `"TABLE_DETACHMENT"` WHERE `fractionid` = '%d'", pData[playerid][pMember]);
			mysql_query(DATABASE, szQuery);

			new r = cache_num_rows();
			new offset = MAX_DETACHMENT_LIST*GetPVarInt(playerid, !#_pDetFrac);
			string = "";

			if(r)
				for(new i = offset; i < offset+MAX_DETACHMENT_LIST && i < r; i++)
				{
					new name[27];
					cache_get_value_name(i, "name", name);
					strins(name, "\n", strlen(name));
					strcat(string, name);
				}
			SetPVarInt(playerid, !#_pDetFracVal, r);

			if ( r - offset <= MAX_DETACHMENT_LIST)					// 24 - 20 < 18 then that last page (probably) - push 
				strcat(string, "Создать взвод\n");
			if ( r - offset > MAX_DETACHMENT_LIST ) 				// 24 - 18 > 18 then we have one next page - push
				strcat(string, "> Следующая страница\n");
			if r > MAX_DETACHMENT_LIST*2 *then 						// 24 > 18*2  then we have a lot of pages - push
				strcat(string, ">> Последняя страница\n"); 
			if(offset)												// lol if offset != 0 then we dont on begin page
				strcat(string, "< Предыдущая страница\n");
			if(offset*MAX_DETACHMENT_LIST >= MAX_DETACHMENT_LIST*2 )// 
				strcat(string, "<< Первая страница\n");
			return ShowPlayerDialog(playerid, DIALOG_DETACHMENT_BASE, DIALOG_STYLE_LIST, "{FFFFFF}Редактирование >{00BF2B} Взводы", string, "Выбрать", "Отмена");
		}
		case DIALOG_DETACHMENT_BASE+2: // lol kek that edit fraction detachment 
		{
			new name[24+1];
			new szQuery[86+24+6];
			GetPVarString(playerid, !#_pDetFracName, name, sizeof(name));
			format(szQuery, sizeof szQuery, "SELECT * FROM `"TABLE_DETACHMENT"` WHERE `fractionid` = %d AND `name` = '%s' LIMIT 1", pData[playerid][pMember], name);
			//SendMes(playerid, -1, "sform = %s", szQuery);
			//mysql_format(DATABASE, szQuery, sizeof szQuery, "SELECT * FROM `"TABLE_DETACHMENT"` WHERE `fractionid` = %d AND `name` = '%s' LIMIT 1", pData[playerid][pMember], name);
			mysql_query(DATABASE, szQuery);
			if(!cache_num_rows())
				return SCM(playerid, COLOR_GREY, "Ошибка при обработке данных! Повторите запрос позже");
			new 
				szMember[24+1],
				szfirstdeputy[24+1],
				szseconddeputy[24+1],
				color,
				color1,
				color2;
			cache_get_value_name(0, "member", szMember);
			cache_get_value_name(0, "firstdeputy", szfirstdeputy);
			cache_get_value_name(0, "seconddeputy", szseconddeputy);
			cache_get_value_name_int(0, "color",color);
			cache_get_value_name_int(0, "colormember",color1);
			cache_get_value_name_int(0, "colordeputy",color2);

			format(YCMDstr, sizeof YCMDstr, 
				"Название:\t%s\
				\nГлава:\t%s\
				\nЗаместитель[0]:\t%s\
				\nЗаместитель[1]:\t%s\
				\nЦвет:\t{%06x}Сменить цвет для Бойцов\
				\nЦвет:\t{%06x}Сменить цвет для Главы\
				\nЦвет:\t{%06x}Сменить цвет для Замов\
				\nЧлены взвода онлайн\
				\nУдалить взвод",
				name, szMember, szfirstdeputy, szseconddeputy, g_szColorsTable[color] >>> 8, g_szColorsTable[color1] >>> 8, g_szColorsTable[color2] >>> 8);
			return ShowPlayerDialog(playerid, DIALOG_DETACHMENT_BASE+2, DIALOG_STYLE_TABLIST, "{FFFFFF}Редактирование >{00BF2B} Взводы", YCMDstr, "Выбрать", "Отмена");
		}

		default:
		{
			printf(" [WARNING] playerShowDialog >> Попытка показать невалидный диалог %d плеер хендлу %d", dialogid, playerid);
			return 0;
		}

	}
	return 0;
}
stock has_tp(const array[][], const text[])
{
	for(new i = 0; i < 10; i++)
	{
		if(!strcmp(array[i], text, true))
		    return true;
	}
	return false;
}

public OnPlayerDeath(playerid, killerid, reason)
{
	ShowPlayerDialog(playerid,55535,0, " ", " ", " ", " ");// чтобы если чел умер с открытым диалогом он скрылся
	OnDialogResponse(playerid, 55535, 0, 0, "0"); // чтобы если чел умер с открытым диалогом он скрылся

	if(Death{playerid} == 1) return true;
	Death{playerid} = 1;
	
	for(new i = 0; i <= 12; i++)
	{
		WeaponInfo[playerid][wWeapon][i] =
		WeaponInfo[playerid][wAmmo][i] = 0;
	}
	if(Mobile[playerid] < 1000)
	{
		Mobile[Mobile[playerid]] = 9999;
		Mobile[playerid] = 9999;
	}
	else if(Mobile[playerid] > 9999) Mobile[playerid] = 9999;
	if(robscdtimer[playerid] != -1)
	{	
		KillTimer(robscdtimer[playerid]);
		robscdtimer[playerid] = -1;
	}
	if OnPlayerEther[playerid] > 0 *then
	{
		//SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
		Tel[playerid] = 255;
		OnPlayerEther[playerid] = 0;
	}
	if GetPVarInt(playerid, "AdvertID") > 0 *then
	{
		switch(pData[playerid][pMember])
		{
		case 9: ViborNews = 0;
		case 16: ViborNews = 1;
		case 20: ViborNews = 2;
		}
		AdvertInfo[GetPVarInt(playerid, "AdvertID")][ViborNews][adOnEdit] = 0;
		DeletePVar(playerid, "AdvertID");
	}
	
	LiveOffer[playerid] = 
	LiveOfferls[playerid] = 
	LiveOfferlv[playerid] = 999;
	
	//SetPlayerHealth(playerid,2.0);
	new GotPVar = GetPVarInt(playerid, "VrConvoi");
	if(PaintReg{playerid} == 2)
	{
		SetPVarInt(playerid,"paintdeaths",GetPVarInt(playerid,"paintdeaths")+1);
		if(killerid != INVALID_PLAYER_ID)
		{
			GameTextForPlayer(killerid, "~w~Kills +1", 5000, 1);
			SetPlayerHealth(killerid, 100);
			if(playerid != killerid){ SetPVarInt(killerid,"paintkills",GetPVarInt(killerid,"paintkills")+1); }
			return true;
		}
		return false; // ============================================== false?
	}
	else if(PaintReg{playerid})
	{
		PaintReg{playerid} = 0;
		SendClientMessage(playerid,COLOR_GRAD1,"Вы были сняты с регистрации");
	}
	else if(race_state[playerid] > 0) DestroyVehicleEX(RaceInfo[race_state[playerid]][rCar]),race_state[playerid] = -1;
	else if(race_state[playerid] == 0)
	{
		race_state[playerid] = -1;
		SendClientMessage(playerid,COLOR_GRAD1," Вы были сняты с регистрации");
	}
	if(cuffto[playerid] != 9999)
	{
		TogglePlayerControllable(cuffto[playerid], 1);
		//SetPlayerSpecialAction(cuffto[playerid],SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(cuffto[playerid],0);
		PlayerCuffed[cuffto[playerid]] = 0;
		PlayerCuffedTime[cuffto[playerid]] = 0;
		cuffto[playerid] = 9999;
	}
	if(Convoi[playerid] != 9999)
	{
		SetPVarInt(Convoi[playerid], "VrConvoi", -1);
		if(TimerForPlayer[playerid] != -1) KillTimer(TimerForPlayer[playerid]);
		SCM(Convoi[playerid], COLOR_GREY, " Ваш заключенный мертв");
		TimerForPlayer[playerid] = -1;
		Convoi[playerid] = 9999;
	}
	else if(GotPVar != -1)
	{
		SetPVarInt(playerid, "TempConvoi", -1);
		if(TimerForPlayer[GotPVar] != -1) KillTimer(TimerForPlayer[GotPVar]);
		SCM(Convoi[playerid], COLOR_GREY, " Ваш конвой мертв");
		TimerForPlayer[GotPVar] = -1;
		Convoi[GotPVar] = 9999;
	}
	if(GetPVarInt(playerid,"farm_id"))
	{
		DisablePlayerCheckpoint(playerid);
		RemovePlayerAttachedObject(playerid,3);
		DeletePVar(playerid,"farm_id");
		DeletePVar(playerid,"farm_status");
		DeletePVar(playerid,"farm_rank");
		DeletePVar(playerid,"farm_zp");
	}
	if(GetPVarInt(playerid,"h_contract"))
	{
		DeletePVar(playerid,"h_contract");
		DeletePVar(playerid,"h_price");
		if(GetPVarInt(playerid,"h_stall"))
		{
			UpdateDynamic3DTextLabelText(StallInfo[GetPVarInt(playerid,"h_stall")][stText], 0xFF8C37FF,"Не работает");
			DeletePVar(playerid,"h_stall");
		}
	}
	if(GetPVarInt(playerid,"w_id"))
	{
		new null = -1, x = GetPVarInt(playerid,"w_id");
		for(new x_ = 9; x_ >= 0; x_--) if(strcmp(WorkshopList[x_][x][wlName],pData[playerid][pName],true) == 0 && strlen(WorkshopList[x_][x][wlName])) null = x_;
		if(null != -1)
		{
			for(new x_ = null; x_ < 9; x++)
			{
				WorkshopList[x_][x][wlID] = WorkshopList[x_+1][x][wlID];
				strmid(WorkshopList[x_][x][wlName],WorkshopList[x_+1][x][wlName],0,strlen(WorkshopList[x_+1][x][wlName]), MAX_PLAYER_NAME);
				WorkshopList[x_+1][x][wlID] = -1;
				strmid(WorkshopList[x_+1][x][wlName],"", 0, strlen(""), 5);
			}
			if(null == 0 && strlen(WorkshopList[0][x][wlName]))
			{
				DisablePlayerCheckpoint(playerid);
				SCM(WorkshopList[0][x][wlID],0x6BB3FFAA," Подошла ваша очередь. У вас есть 2 минуты что бы прибыть к гаражу!");
				SetPVarInt(WorkshopList[0][x][wlID],"w_time", gettime() + 120);
				SetPlayerCheckpoint(WorkshopList[0][x][wlID],WorkshopInfo[x][wMenu][0],WorkshopInfo[x][wMenu][1],WorkshopInfo[x][wMenu][2], 10.0);
			}
			DeletePVar(playerid,"w_time");
			DeletePVar(playerid,"w_id");
		}
	}
	if(cto_mechanic[playerid] > -1)
	{
		DeletePVar(playerid,"cost");
		DeletePVar(playerid,"prods");
		DeletePVar(playerid,"detals");
		DeletePVar(playerid,"color0");
		DeletePVar(playerid,"color1");
		DeletePVar(playerid,"w_id");
		DeletePVar(cto_mechanic[playerid],"installation");
		SetPlayerVirtualWorld(cto_mechanic[playerid],0);
		SetPlayerPos(cto_mechanic[playerid],WorkshopInfo[GetPVarInt(playerid,"InWorkshop")][wMenu][0],WorkshopInfo[GetPVarInt(playerid,"InWorkshop")][wMenu][1],WorkshopInfo[GetPVarInt(playerid,"InWorkshop")][wMenu][2]);
		DeletePVar(cto_mechanic[playerid],"installation_");
		cto_mechanic[playerid] = -1;
		DeletePVar(playerid,"InWorkshop");
		DeletePVar(playerid,"f_tune");
	}
	if(GetPVarInt(playerid,"InWorkshop") != -1)
	{
		if(cto_mechanic[GetPVarInt(playerid,"installation_")] != -1)
		{
			DeletePVar(GetPVarInt(playerid,"installation_"),"cost");
			DeletePVar(GetPVarInt(playerid,"installation_"),"prods");
			DeletePVar(GetPVarInt(playerid,"installation_"),"detals");
			DeletePVar(GetPVarInt(playerid,"installation_"),"color0");
			DeletePVar(GetPVarInt(playerid,"installation_"),"color1");
			DeletePVar(GetPVarInt(playerid,"installation_"),"w_id");
			SetPlayerVirtualWorld(GetPVarInt(playerid,"installation_"),0);
			if(!IsPlayerInAnyVehicle(GetPVarInt(playerid,"installation_")))
			{
				SetPlayerPos(GetPVarInt(playerid,"installation_"),WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][0],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][1],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][2]);
				SetVehiclePos(house_car[GetPVarInt(playerid,"installation_")],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][0],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][1],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][2]);
				PutPlayerInVehicle(GetPVarInt(playerid,"installation_"),house_car[GetPVarInt(playerid,"installation_")],0);
				SetPlayerVirtualWorld(GetPVarInt(playerid,"installation_"),0);
			}
			else
			{
				if(GetPVarInt(playerid,"Workshop") == 1) SetVehiclePos(GetPlayerVehicleID(GetPVarInt(playerid,"installation_")),WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][0],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][1],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][2]);
				SetVehicleVirtualWorld(GetPlayerVehicleID(GetPVarInt(playerid,"installation_")),0);
			}
			SCM(GetPVarInt(playerid,"installation_"),COLOR_LIGHTRED,"Механик вышел из игры!");
			cto_mechanic[GetPVarInt(playerid,"installation_")] = -1;
			SetPVarInt(GetPVarInt(playerid,"installation_"),"InWorkshop",-1);
		}
		DeletePVar(playerid,"installation");
		DeletePVar(playerid,"installation_");
		DeletePVar(playerid,"Workshop");
		pData[playerid][pPayCheck]+=GetPVarInt(playerid,"Workshop_");
		SetAccountInfo(playerid, pData[playerid][pPayCheck], "pPayCheck");
		WorkshopInfo[GetPVarInt(playerid,"Workshop")][wBank]-=GetPVarInt(playerid,"Workshop_");
		DeletePVar(playerid,"Workshop_");
		DeletePVar(playerid,"Workshop__");
	}
	if(RouletStol[playerid] > 0)
	{
		if(RouletPlay[RouletStol[playerid]] == false) pData[playerid][pCash]+=RouletBet[playerid];
		DestroyObject(RouletObject[playerid]);
		RouletBet[playerid] = 0;
		RouletStol[playerid] = 0;
		DeletePVar(playerid,"RX");
		DeletePVar(playerid,"RY");
		DeletePVar(playerid,"RZ");
		DeletePVar(playerid,"RXONE");
		DeletePVar(playerid,"RYONE");
		DeletePVar(playerid,"RZONE");
		DeletePVar(playerid,"RNumber");
		DeletePVar(playerid,"RNumbers");
		DeletePVar(playerid,"RNumber_");
		PlayerTextDrawHide(playerid,RouletText[playerid]);
		TogglePlayerControllable(playerid, true);
		SetCameraBehindPlayer(playerid);
	}
	DeletePVar(playerid,"CasinoRank");
	if(gcontract[playerid] >= 1 && GetPlayerVehicleID(playerid) == job_car[playerid])
	{
		if(Meh3d[GetPlayerVehicleID(playerid)] != Text3D:INVALID_3DTEXT_ID) DestroyDynamic3DTextLabel(Meh3d[GetPlayerVehicleID(playerid)]);
		gcontract[playerid] = 0;
	}
	TextDrawHideForPlayer(playerid, DRAP);
	SetPVarInt(playerid,"K_Times",GetPVarInt(playerid,"K_Times") + 1);
	
	enterbiz[playerid] = 0;
	
	
	if(GetPVarInt(playerid, "LoaderWork")) 	DeletePVar(playerid, "LoaderWork");
	if(GetPVarInt(playerid, "meshkov")) 	DeletePVar(playerid, "meshkov");
	
	JobCP[playerid] = 0;
	DisablePlayerCheckpoint(playerid);
	PicCP[playerid] = 1;
	copkey[playerid] = 0;

	//job_car[playerid] = 0;
	usemats[playerid] = 0;
	if(pData[playerid][pJob] == 7) pData[playerid][pJob] = 0;
	new weaponid;
	new gunname[25];
	GetWeaponName(weaponid, gunname, sizeof(gunname));
	forma[playerid] = 0;
	proverkaforma[playerid] = 0;
	//if(IsPlayerInAnyVehicle(playerid)) RemovePlayerFromVehicle(playerid);
	Tel[playerid] = 255;
	DisablePlayerCheckpoint(playerid);
	if(gPlayerCheckpointStatus[playerid] > 4 && gPlayerCheckpointStatus[playerid] < 11)
	{
		DisablePlayerCheckpoint(playerid);
		gPlayerCheckpointStatus[playerid] = 0;
	}
	
	return true;
}
stock show_main_menu(playerid, menu)
{
	switch(menu)
	{
		case 0:ShowPlayerDialog(playerid, 1120, DIALOG_STYLE_LIST, "Главное меню", "1. Информация\n2. Связь с администрацией\n3. Помощь по игре\n4. Настройки", "Далее", "Закрыть");
		case 1:ShowPlayerDialog(playerid, 1121, DIALOG_STYLE_LIST, "Главное меню > Информация", "1. Статистика персонажа\n2. Скиллы работ\n3. Скиллы оружия\n4. Лицензии", "Далее", "Назад");
		case 2:ShowPlayerDialog(playerid, 1122, DIALOG_STYLE_INPUT, "Главное меню > Связь с администрацией", "[               Напишите свой вопрос               ]", "Выбрать", "Назад");
		case 3:ShowPlayerDialog(playerid, 1123, DIALOG_STYLE_LIST, "Главное меню > Помощь по игре", "1. Задать вопрос по игре\n2. Список помощников\n3. Команды сервера", "Далее", "Назад");
		case 4:ShowPlayerDialog(playerid, 1124, DIALOG_STYLE_LIST, "Главное меню > Настройки","[0] Новый пароль\n[1] Безопасность\n[4] Цвет ника\n[5] Выбор спавна\n[6] Чат\n[8] Интерфейс", "Выбрать", "Назад");
	}
	return 1;
}
public OnPlayerDisconnect(playerid, reason)
{
	if(Kicktime[playerid] != -1)
	{
		KillTimer(Kicktime[playerid]);
		Kicktime[playerid] = -1;
	}
	if(robscdtimer[playerid] != -1)
	{
		KillTimer(robscdtimer[playerid]);
		robscdtimer[playerid] = -1;
	}
	if(speed_update[playerid] != -1)
	{
		KillTimer(speed_update[playerid]);		
		speed_update[playerid] = -1;
	}
	if(kekovichs[playerid] != -1)
	{
		KillTimer(kekovichs[playerid]);
		kekovichs[playerid] = -1;
	}
	if(job_auto_timer_check[playerid] != -1)
	{
		KillTimer(job_auto_timer_check[playerid]);
		job_auto_timer_check[playerid] = -1;
	}
	if(pData[playerid][pLogin])
	{
		new logout_string[312];
		format(logout_string,sizeof logout_string, "UPDATE `"TABLE_ACCOUNTS"` SET `last_session` = '%d' WHERE Name = '%s'",gettime(), Name(playerid));
		Iter_Clear(OnPlayersStream[playerid]);
	}
	if OnPlayerEther[playerid] > 0 *then
	{
		Tel[playerid] = 255;
		OnPlayerEther[playerid] = 0;
	}
	if GetPVarInt(playerid, "AdvertID") > 0 *then
	{
		switch(pData[playerid][pMember])
		{
		case 9: ViborNews = 0;
		case 16: ViborNews = 1;
		case 20: ViborNews = 2;
		}
		AdvertInfo[GetPVarInt(playerid, "AdvertID")][ViborNews][adOnEdit] = 0;
		DeletePVar(playerid, "AdvertID");
	}
	if(Mobile[playerid] < 1000)
	{
		Mobile[Mobile[playerid]] = 9999;
		Mobile[playerid] = 9999;
	}
	else if(Mobile[playerid] > 9999) Mobile[playerid] = 9999;

	pData[playerid][pState] = 
	pData[playerid][pLogin] = false;
	if(GetPVarInt(playerid,"BoneStol")) ExitBone(playerid);
	if(gz_autorob[playerid] != -1)
	{
		GangZoneDestroy(gz_autorob[playerid]);
		printf("GangZoneDestroy [Robbing GZ] [ID: %i] for playerid: %i",gz_autorob[playerid],playerid);
		gz_autorob[playerid] = -1;
	}
	if(Convoi[playerid] != 9999) Convoi[playerid] = 9999,TogglePlayerControllable(playerid, 1);
	PaintReg{playerid} = 0;
	if(GetPVarInt(playerid,"CarOffer"))
	{
		CarOffer[GetPVarInt(playerid,"CarOffer")-1] = 9999;
		CarPrice[GetPVarInt(playerid,"CarOffer")-1] = 0;
		DeletePVar(playerid,"CarOffer");
	}
	if(CarOffer[playerid] != 9999)
	{
		DeletePVar(CarOffer[playerid],"CarOffer");
		CarOffer[playerid] = 9999;
		CarPrice[playerid] = 0;
	}
	if(GetPVarInt(playerid,"fight"))
	{
		foreach(new i: Player)
		{
			if(GetPVarInt(i,"fight"))
			{
				SetPlayerPos(i,770.6216,3.0816,1000.7194);
				SetPlayerFacingAngle(i,90);
				DeletePVar(i,"fight");
				SCM(i,COLOR_RED,"Противник вышел из игры");
			}
		}
		for(new idx = 0; idx < TOTALSTYLELIST; idx++)
		{
			strmid(StyleList[idx][slName],StyleList[idx+1][slName], 0, strlen(StyleList[idx+1][slName]), MAX_PLAYER_NAME);
			strmid(StyleList[idx][slName_two],StyleList[idx+1][slName_two], 0, strlen(StyleList[idx+1][slName_two]), MAX_PLAYER_NAME);
			StyleList[idx][slPrice] = StyleList[idx+1][slPrice];
		}
		TOTALSTYLELIST--;
	}
	if(GetPVarInt(playerid,"h_stall")) UpdateDynamic3DTextLabelText(StallInfo[GetPVarInt(playerid,"h_stall")][stText], 0xFF8C37FF,"Не работает");
	if(GetPVarInt(playerid,"took_faggio")) DestroyVehicleEX(GetPVarInt(playerid,"took_faggio"));
	
	if(GetPVarInt(playerid,"bWar_on") && LabelBwar[playerid] != Text3D:INVALID_3DTEXT_ID) DestroyDynamic3DTextLabel(LabelBwar[playerid]);
	if(cuffto[playerid] != 9999)
	{
		TogglePlayerControllable(cuffto[playerid], 1);
		SetPlayerSpecialAction(cuffto[playerid],SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(cuffto[playerid],0);
		PlayerCuffed[cuffto[playerid]] = 0;
		PlayerCuffedTime[cuffto[playerid]] = 0;
		cuffto[playerid] = 9999;
	}
	if(0 <= pData[playerid][pDuelID] <= 20)
	{
		MatchInfo[pData[playerid][pDuelID]][mPlayer_1] = -1;
		MatchInfo[pData[playerid][pDuelID]][mZone] = -1;
		pData[playerid][pDuelIDP] = pData[playerid][pDuelID] = -1;
	}
	else if(pData[playerid][pDuelIDP] != -1)
	{
		ResetPlayerWeaponEx(playerid);
		
		pData[pData[playerid][pDuelIDP]][pCash] += pData[playerid][pDuelID]*2;
		SendClientMessage(pData[playerid][pDuelIDP], COLOR_GREEN, " Состязание окончено! Вы победили.");
		
		SetPlayerInterior(pData[playerid][pDuelIDP], 0);
		SetPlayerPos(pData[playerid][pDuelIDP],2059.7783,-1899.8955,13.5469);
		SetPlayerFacingAngle(pData[playerid][pDuelIDP], 36.3569);
		SetPlayerVirtualWorld(pData[playerid][pDuelIDP], 0);
		ResetPlayerWeaponEx(pData[playerid][pDuelIDP]);
		
		pData[pData[playerid][pDuelIDP]][pDuelIDP] = pData[pData[playerid][pDuelIDP]][pDuelID] = -1;
		pData[playerid][pDuelIDP] = pData[playerid][pDuelID] = -1;
	}
	
	if(race_state[playerid] > 0) DestroyVehicleEX(RaceInfo[race_state[playerid]][rCar]),race_state[playerid] = -1;
	else if(race_state[playerid] == 0) race_state[playerid] = -1;
	
	if(inTaxi[playerid] != INVALID_PLAYER_ID)
	{

		SCM(inTaxi[playerid], COLOR_BLUE, " Пассажир вышел из вашего Такси. Деньги будут зачислены во время зарплаты");
	}
	
	if(GetPVarInt(playerid,"w_id"))
	{
		new null = -1, x = GetPVarInt(playerid,"w_id");
		for(new x_ = 9; x_ >= 0; x_--) if(strcmp(WorkshopList[x_][x][wlName],pData[playerid][pName],true) == 0 && strlen(WorkshopList[x_][x][wlName])) null = x_;
		if(null != -1)
		{
			for(new x_ = null; x_ < 9; x++)
			{
				WorkshopList[x_][x][wlID] = WorkshopList[x_+1][x][wlID];
				strmid(WorkshopList[x_][x][wlName],WorkshopList[x_+1][x][wlName],0,strlen(WorkshopList[x_+1][x][wlName]), MAX_PLAYER_NAME);
				WorkshopList[x_+1][x][wlID] = -1;
				strmid(WorkshopList[x_+1][x][wlName],"", 0, strlen(""), 5);
			}
			if(null == 0 && strlen(WorkshopList[0][x][wlName]))
			{
				DisablePlayerCheckpoint(playerid);
				SCM(WorkshopList[0][x][wlID],0x6BB3FFAA," Подошла ваша очередь. У вас есть 2 минуты что бы прибыть к гаражу!");
				SetPVarInt(WorkshopList[0][x][wlID],"w_time", gettime() + 120);
				SetPlayerCheckpoint(WorkshopList[0][x][wlID],WorkshopInfo[x][wMenu][0],WorkshopInfo[x][wMenu][1],WorkshopInfo[x][wMenu][2], 10.0);
			}
			DeletePVar(playerid,"w_time");
			DeletePVar(playerid,"w_id");
		}
	}
	if(GetPVarInt(playerid,"InWorkshop") != -1)
	{
		DeletePVar(playerid,"cost");
		DeletePVar(playerid,"prods");
		DeletePVar(playerid,"detals");
		DeletePVar(playerid,"color0");
		DeletePVar(playerid,"color1");
		DeletePVar(playerid,"w_id");
		DeletePVar(cto_mechanic[playerid],"installation");
		SetPlayerVirtualWorld(cto_mechanic[playerid],0);
		SetPlayerPos(cto_mechanic[playerid],WorkshopInfo[GetPVarInt(playerid,"InWorkshop")][wMenu][0],WorkshopInfo[GetPVarInt(playerid,"InWorkshop")][wMenu][1],WorkshopInfo[GetPVarInt(playerid,"InWorkshop")][wMenu][2]);
		SCM(cto_mechanic[playerid],COLOR_LIGHTRED,"Заказчик вышел из игры!");
		DeletePVar(cto_mechanic[playerid],"installation_");
		cto_mechanic[playerid] = -1;
		SetPVarInt(playerid,"InWorkshop",-1);
		DeletePVar(playerid,"f_tune");
	}
	if(GetPVarInt(playerid,"InWorkshop") != -1)
	{
		if(cto_mechanic[GetPVarInt(playerid,"installation_")] != -1)
		{
			DeletePVar(GetPVarInt(playerid,"installation_"),"cost");
			DeletePVar(GetPVarInt(playerid,"installation_"),"prods");
			DeletePVar(GetPVarInt(playerid,"installation_"),"detals");
			DeletePVar(GetPVarInt(playerid,"installation_"),"color0");
			DeletePVar(GetPVarInt(playerid,"installation_"),"color1");
			DeletePVar(GetPVarInt(playerid,"installation_"),"w_id");
			SetPlayerVirtualWorld(GetPVarInt(playerid,"installation_"),0);
			if(!IsPlayerInAnyVehicle(GetPVarInt(playerid,"installation_")))
			{
				SetPlayerPos(GetPVarInt(playerid,"installation_"),WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][0],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][1],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][2]);
				SetVehiclePos(house_car[GetPVarInt(playerid,"installation_")],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][0],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][1],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][2]);
				PutPlayerInVehicle(GetPVarInt(playerid,"installation_"),house_car[GetPVarInt(playerid,"installation_")],0);
				SetPlayerVirtualWorld(GetPVarInt(playerid,"installation_"),0);
			}
			else
			{
				if(GetPVarInt(playerid,"Workshop") == 1) SetVehiclePos(GetPlayerVehicleID(GetPVarInt(playerid,"installation_")),WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][0],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][1],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][2]);
				SetVehicleVirtualWorld(GetPlayerVehicleID(GetPVarInt(playerid,"installation_")),0);
			}
			SCM(GetPVarInt(playerid,"installation_"),COLOR_LIGHTRED,"Механик вышел из игры!");
			cto_mechanic[GetPVarInt(playerid,"installation_")] = -1;
			SetPVarInt(GetPVarInt(playerid,"installation_"),"InWorkshop",-1);
		}
		DeletePVar(playerid,"installation");
		DeletePVar(playerid,"installation_");
		DeletePVar(playerid,"Workshop");
		pData[playerid][pPayCheck]+=GetPVarInt(playerid,"Workshop_");
		SetAccountInfo(playerid, pData[playerid][pPayCheck], "pPayCheck");
		WorkshopInfo[GetPVarInt(playerid,"Workshop")][wBank]-=GetPVarInt(playerid,"Workshop_");
		DeletePVar(playerid,"Workshop_");
		DeletePVar(playerid,"Workshop__");
	}
	if(RouletStol[playerid] > 0)
	{
		if(RouletPlay[RouletStol[playerid]] == false) pData[playerid][pCash]+=RouletBet[playerid];
		SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
		DestroyObject(RouletObject[playerid]);
		RouletBet[playerid] = 0;
		RouletStol[playerid] = 0;
		DeletePVar(playerid,"RX");
		DeletePVar(playerid,"RY");
		DeletePVar(playerid,"RZ");
		DeletePVar(playerid,"RXONE");
		DeletePVar(playerid,"RYONE");
		DeletePVar(playerid,"RZONE");
		DeletePVar(playerid,"RNumber");
		DeletePVar(playerid,"RNumbers");
		DeletePVar(playerid,"RNumber_");
		TogglePlayerControllable(playerid, true);
		SetCameraBehindPlayer(playerid);
	}
	
	if(Convoi[playerid] != 9999) SetPVarInt(Convoi[playerid], "TempConvoi", -1);
	
	if(SpecID[playerid] != INVALID_PLAYER_ID)
	{
		if(Spectate[SpecID[playerid]] == 1 && SpecAd[SpecID[playerid]] == playerid)
		{
			GameTextForPlayer(SpecID[playerid], "~r~~n~PLAYER DISCONNECT", 5000, 4);
			ShowPlayerDialog(SpecID[playerid], 203, DIALOG_STYLE_MSGBOX, "Игрок вышел", "Игрок, за которым вы следили, вышел\nХотите отключить Recon?", "Выйти", "Отмена");
			DisallowSpawn[playerid] = 1;
		}
	}
	if(SpecAd[playerid] != 65535)
	{
		SpecID[SpecAd[playerid]] = 65535;
		SpecAd[playerid] = 65535;
	}
	SpecID[playerid] = 65535;
	if(tipsterplayer == playerid)
	{
		SendRadioMessage(2,COLOR_ISPOLZUY ,"Игрок покинул район. Прослушивание отключено");
		tipsteron = -1;
		tipsterplayer = -1;
	}
	if(GetPVarInt(playerid,"fish_began")) RemovePlayerAttachedObject(playerid,0);
	if(PlayerCuffed[playerid] > 0 && reason == 1 && pData[playerid][pJailTime] == 0)
	{
		SetPlayerWantedLevelEx(playerid, -6);
		pData[playerid][pJailTime] = 3600;
		pData[playerid][pArrested] += 1;
		pData[playerid][pMestoJail] = 1;

		SetAccountInfo(playerid, pData[playerid][pJailTime], "pJailTime");
		SetAccountInfo(playerid, pData[playerid][pArrested], "pArrested");
		SetAccountInfo(playerid, pData[playerid][pMestoJail], "pMestoJail");
	}
	if(GetPVarInt(playerid, "TypeBus")) DestroyDynamic3DTextLabel(JobText3D[playerid]);
	if(job_car[playerid] != 0)
	{
		SetVehicleToRespawn(job_car[playerid]);
		if(trailer_id[playerid] != 0) DestroyVehicleEX(trailer_id[playerid]);
	}
	if(GetPVarInt(playerid,"job_auto") && GetPVarInt(playerid,"job_auto_seat"))
	{
		if(caroff[GetPVarInt(playerid,"job_auto_seat")] == true) DestroyVehicleEX(GetPVarInt(playerid,"job_auto_seat"));
		else SetVehicleToRespawn(GetPVarInt(playerid,"job_auto_seat"));
		caroff[GetPVarInt(playerid,"job_auto_seat")] = false;
		DeletePVar(playerid,"job_auto_seat");
	}
	if(tookmoped[playerid] != 0) DestroyVehicleEX(tookmoped[playerid]), tookmoped[playerid] = 0;
	if(GetPVarInt(playerid, "TypeBus") > 0)
	{
		DeletePVar(playerid, "BusTime");
		DeletePVar(playerid, "TypeBus");
		DeletePVar(playerid, "BusStop");
		DeletePVar(playerid, "BusMoney");
		pData[playerid][pPayCheck] -= GetPVarInt(playerid,"BusRepairMoney");
		SetAccountInfo(playerid, pData[playerid][pPayCheck], "pPayCheck");
		DeletePVar(playerid, "BusRepairMoney");
		pPressed[playerid] = -1;
		SetVehicleToRespawn(job_car[playerid]);
		DisablePlayerRaceCheckpoint(playerid);
	}
	if(gcontract[playerid] >= 1 && GetPlayerVehicleID(playerid) == job_car[playerid] && Meh3d[GetPlayerVehicleID(playerid)] != Text3D:INVALID_3DTEXT_ID) DestroyDynamic3DTextLabel(Meh3d[GetPlayerVehicleID(playerid)]), gcontract[playerid] = 0;
	new year, month,day;
	format(WantNickChange[playerid],MAX_PLAYER_NAME, "");
	getdate(year, month, day);
	if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
	new szQuery[117+3*11+MAX_PLAYER_NAME];
	mysql_format(DATABASE,szQuery, sizeof(szQuery), "UPDATE `"TABLE_ACCOUNTS"` SET pVhoddata = '%i',pVhodMes = '%i',pVhodchas = '%i',pVhodminute = '%i' WHERE name = '%e'",day,month,ServHour,ServMinute,pData[playerid][pName]);
	mysql_query(DATABASE,szQuery);
	printf("Disconnect %s Ended",Name(playerid));
	DestroyMyVehs(playerid);
	ResetNew(playerid);
	return true;
}
stock CheatKick(playerid,number)
{
	if(dostup[playerid]) return true;
	if(GetPVarInt(playerid,"CheatKick") > 0) return true;
	if(PlayerCuffed[playerid] > 0 && pData[playerid][pJailTime] == 0)
	{
		SetPlayerWantedLevelEx(playerid, -6);
		pData[playerid][pJailTime] = 3600;
		pData[playerid][pArrested] += 1;
		pData[playerid][pMestoJail] = 1;
	}
	if(number == 1115 || number == 1116 || number == 1128) ResetPlayerWeaponEx(playerid);
	SetPVarInt(playerid,"CheatKick",1);
	SendMes(playerid,COLOR_LIGHTRED," Вы были кикнуты по подозрению в читерстве (#%i)",number);
	return L_Kick(playerid,111,number);
}
public OnPlayerSpawn(playerid)
{
	if(GetPVarInt(playerid, "player_reg"))
	{
		ChosePlayerSkin(playerid);
		return 1;
	}
	
	if(!pData[playerid][pLogin]) return CheatKick(playerid,1112);
	if(!gPlayerAnimLibsPreloaded[playerid]) PreloadAllAnimLibs(playerid);
	//SetPlayerTeam(playerid, 0); ////////////////////////////////
	TextDrawShowForPlayer(playerid,gHungerText1);
	TextDrawShowForPlayer(playerid,gHungerText2);
	PlayerTextDrawShow(playerid,gHungerText3[playerid]);
	
	DeletePVar(playerid, !#_dGetMaterials);
	
	Death{playerid} = 0;
	
	for(new i = 0; i <= 12; i++)
	{
		if(WeaponInfo[playerid][wWeapon][i])
		{
			GivePlayerWeapon(playerid, WeaponInfo[playerid][wWeapon][i], WeaponInfo[playerid][wAmmo][i]);
		}
	}
	
	format_string[0] = EOS;
	
	
	gcontract[playerid] = 0;
	accept_car_damage[playerid] = 0.0;
	SetPlayerHealth(playerid, 100);
	SetPlayerArmour(playerid,0);

	RobTickRTC[playerid] = 0;
	new GotPVar = GetPVarInt(playerid, "TempConvoi");
	if(Convoi[playerid] != 9999)
	{
		SetPVarInt(Convoi[playerid], "TempConvoi", -1);
		if(TimerForPlayer[playerid] != -1) KillTimer(TimerForPlayer[playerid]);
		TimerForPlayer[playerid] = -1;
		Convoi[playerid] = 9999;
	}
	else if(GotPVar != -1)
	{
		SetPVarInt(playerid, "TempConvoi", -1);
		if(TimerForPlayer[GotPVar] != -1) KillTimer(TimerForPlayer[GotPVar]);
		TimerForPlayer[GotPVar] = -1;
		Convoi[GotPVar] = 9999;
	}
	if(GetPVarInt(playerid,"farm_id"))
	{
		DisablePlayerCheckpoint(playerid);
		RemovePlayerAttachedObject(playerid,3);
		DeletePVar(playerid,"farm_id");
		DeletePVar(playerid,"farm_status");
		DeletePVar(playerid,"farm_rank");
		DeletePVar(playerid,"farm_zp");
	}
	DeletePVar(playerid,"CasinoRank");
	SetPVarInt(playerid,"K_Times",0);
	switch(pData[playerid][pMember]) { case 5,6,14,13,12,15,17,18,24,26,29: SetPVarInt(playerid,"Fraction_Duty",1); }
	SetPlayerSpawn(playerid);
	SetPlayerSkills(playerid);
	copkey[playerid] = 0;
	if(Spectate[playerid])
	{
		Spectate[playerid] = 0;
		SetPlayerPos(playerid,SpecPlayer[playerid][0],SpecPlayer[playerid][1],SpecPlayer[playerid][2]);
		SetPlayerInterior(playerid,SpecPlayerInt[playerid]);
		SetPlayerVirtualWorld(playerid,SpecPlayerWorld[playerid]);
		SetPlayerFacingAngle(playerid, SpecPlayerAngle[playerid]);
		PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
		SetPlayerHealth(playerid, 255.0);
		for(new i; i < 35; i++) PlayerTextDrawHide(playerid, ReconPlayer[i]);
		return true;
	}
	DollahScoreUpdate(playerid);
	SetPlayerToTeamColor(playerid);
	// objects
	new szQuery[68+25];
	mysql_format(DATABASE, szQuery, sizeof(szQuery), "SELECT * FROM `"TABLE_ACS"` WHERE `Owned`='%e' and `Status`=1", pData[playerid][pName]);
	new Cache:result = mysql_query(DATABASE, szQuery);
	cache_set_active(result);
	if(cache_num_rows())
	{
		for (new i, x = cache_num_rows(); i < x; i++)
		{
			new objid;
			new skin = GetPlayerSkin(playerid);
			cache_get_value_name_int(i, "ObjectID", objid);
			if(0 <= objid <= 15)
			{
				if SkinHead[skin][0] != 0.0 *then
					SetPlayerAttachedObject(playerid, 0, Acs_Info[objid][aObjID], 2, SkinHead[skin][0], SkinHead[skin][1], SkinHead[skin][2], SkinHead[skin][3],SkinHead[skin][4], SkinHead[skin][5]);
			}
			else if(16 <= objid <= 25)
			{
				if SkinCaps[skin][0] != 0.0 *then
					SetPlayerAttachedObject(playerid, 0,Acs_Info[objid][aObjID], 2, SkinCaps[skin][0], SkinCaps[skin][1], SkinCaps[skin][2], SkinCaps[skin][3],SkinCaps[skin][4], SkinCaps[skin][5]);
			}
			else if(26 <= objid <= 40) SetPlayerAttachedObject(playerid, 1,Acs_Info[objid][aObjID], 5, Clock_Massive[skin][0], Clock_Massive[skin][1],Clock_Massive[skin][2], Clock_Massive[skin][3], Clock_Massive[skin][4], Clock_Massive[skin][5], Clock_Massive[skin][6], Clock_Massive[skin][7], Clock_Massive[skin][8]);
			else if(41 <= objid <= 70) SetPlayerAttachedObject(playerid,2,Acs_Info[objid][aObjID],2,_skinGlasses[skin][0], _skinGlasses[skin][1], _skinGlasses[skin][2], _skinGlasses[skin][3], _skinGlasses[skin][4], _skinGlasses[skin][5]); //else if(41 <= objid <= 70)
			else if(71 <= objid <= 80) SetPlayerAttachedObject(playerid, 3, Acs_Info[objid][aObjID], 2, BandSkin[skin][0], BandSkin[skin][1], BandSkin[skin][2], BandSkin[skin][3],BandSkin[skin][4], BandSkin[skin][5], 1.000000, 1.000000, 1.000000);
		}
	}
	cache_delete(result);
	//
	
	return true;
}
stock SetPlayerSpawn(playerid)
{
	if(Convoi[playerid] != 9999)
	{
		SetPVarInt(Convoi[playerid], "TempConvoi", -1);
		if(TimerForPlayer[playerid] != -1) KillTimer(TimerForPlayer[playerid]);
		TimerForPlayer[playerid] = -1;
		TogglePlayerControllable(playerid, 1);
		Convoi[playerid] = 9999;
	}
	if(IsPlayerConnected(playerid))
	{

		if(pData[playerid][pQuestShow] == 0)
		{
			ShowPlayerDialog(playerid,11228,DIALOG_STYLE_MSGBOX,"Задание","Здравствуйте! Вам пишет,игровой робот-спамер,по распоряжению Администрации нашего проекта.\nМы с администрацией рады каждому новому игроку и очень переживаем,\nчто новичкам иногда трудно разобраться в игре сразу после регистрации.\nПо этой причине мы приготовили небольошое описание действий,\nкоторое надо совершить в первую очередь,чтобы понять основные игровые моменты",
			"Готово","");
			pData[playerid][pQuestShow] = 1;
		}

		if(pData[playerid][pWantedLevel]) SetPlayerWantedLevel(playerid,pData[playerid][pWantedLevel] );
		SetCameraBehindPlayer(playerid);
		switch(pData[playerid][pMember] && GetPVarInt(playerid,"Fraction_Duty"))
		{
			case 1,2,3,4,7,8,9,10,11,16,19,20,21,22,23:
			{
				SetPlayerSkin(playerid, pData[playerid][pModel]);
			}
		}
		switch(pData[playerid][pMember] && !GetPVarInt(playerid,"Fraction_Duty"))
		{
			case 1,2,3,4,7,8,9,10,11,16,19,20,21,22,23:
			{
				SetPlayerSkin(playerid, pData[playerid][pChar][0]);
				SetPlayerColor(playerid, TEAM_HIT_COLOR);
			}
		}
		if(GetPVarInt(playerid,"Fraction_Duty"))
		{
			switch(pData[playerid][pMember])
			{
				case 1,10,21,5,6,14:
				{
					SetPlayerSkin(playerid, pData[playerid][pModel]);
					SetPlayerToTeamColor(playerid);
				}
				case 12,13,15,17,18:
				{
					SetPlayerSkin(playerid, pData[playerid][pModel]);
					SetPlayerToTeamColor(playerid);
					GivePlayerWeaponEx(playerid,5,1);
				}
			}
		}
		if(GetPVarInt(playerid,"Fraction_Duty"))
		{
			switch(pData[playerid][pMember])
			{
				case 5: GivePlayerWeaponEx(playerid,2,1);
				case 14: GivePlayerWeaponEx(playerid,1,1);
				case 6: GivePlayerWeaponEx(playerid,8,1);
				case 9, 16, 20: GivePlayerWeaponEx(playerid, 43, 60);
				case 24,26,29: GivePlayerWeaponEx(playerid, 7, 1);
			}
		}
		if(pData[playerid][pMember] <= 0)
		{
			SetPlayerSkin(playerid, pData[playerid][pChar][0]);
			SetPlayerColor(playerid, TEAM_HIT_COLOR);
		}
		//----------------------------------------------------------------------
		if(pData[playerid][pJailTime] > 0)
		{
			switch(pData[playerid][pMestoJail])
			{
				case 1: // LS
				{
					SetPlayerInterior(playerid, 6);
					SetPlayerPos(playerid,264.1425,77.4712,1001.0391);
					SetPlayerFacingAngle(playerid, 263.0160);
				}
				case 2: // SF
				{
					SetPlayerInterior(playerid, 10);
					SetPlayerPos(playerid,219.5400,109.9767,999.0156);
					SetPlayerFacingAngle(playerid, 1.0000);
				}
				case 3: // LV
				{
					SetPlayerInterior(playerid, 3);
					SetPlayerPos(playerid,198.3642,161.8103,1003.0300);
					SetPlayerFacingAngle(playerid, 1.0000);
				}
				case 4:
				{
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid,5512.2275,1248.5988,8.8505);
				}
			}
			return true;
		}
		if(0 <= pData[playerid][pDuelID] <= 20)
		{
			MatchInfo[pData[playerid][pDuelID]][mPlayer_1] = -1;
			MatchInfo[pData[playerid][pDuelID]][mZone] = -1;
			pData[playerid][pDuelIDP] = pData[playerid][pDuelID] = -1;
		}
		else if(pData[playerid][pDuelIDP] != -1)
		{
			pData[pData[playerid][pDuelIDP]][pCash] += pData[playerid][pDuelID]*2;
			SendClientMessage(playerid, COLOR_RED, " Состязание окончено! Вы проиграли.");
			SendClientMessage(pData[playerid][pDuelIDP], COLOR_GREEN, " Состязание окончено! Вы победили.");
			
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid,2055.6174,-1899.9310,13.5469);
			SetPlayerFacingAngle(playerid, 314.2628);
			SetPlayerVirtualWorld(playerid, 0);
			ResetPlayerWeaponEx(playerid);
			
			SetPlayerInterior(pData[playerid][pDuelIDP], 0);
			SetPlayerPos(pData[playerid][pDuelIDP],2059.7783,-1899.8955,13.5469);
			SetPlayerFacingAngle(pData[playerid][pDuelIDP], 36.3569);
			SetPlayerVirtualWorld(pData[playerid][pDuelIDP], 0);
			ResetPlayerWeaponEx(pData[playerid][pDuelIDP]);
			SetPlayerHealth(pData[playerid][pDuelIDP], 100.0);
			
			pData[pData[playerid][pDuelIDP]][pDuelIDP] = pData[pData[playerid][pDuelIDP]][pDuelID] = -1;
			pData[playerid][pDuelIDP] = pData[playerid][pDuelID] = -1;
			return true;
		}
		if(PaintReg{playerid} && paint_info[1] == 2)
		{
			ResetPlayerWeaponEx(playerid);
			GivePlayerWeaponEx(playerid, 24, 21);
			new rand = random(sizeof(PaintballSpawns));
			SetPlayerHealth(playerid, 100.0);
			SetPlayerPos(playerid, PaintballSpawns[rand][0], PaintballSpawns[rand][1], PaintballSpawns[rand][2]);
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,10);
			return true;
		}
		if(GetPVarInt(playerid,"style_clothes"))
		{
			SetPlayerPos(playerid,768.7371,5.9403,1000.7152);
			SetPlayerInterior(playerid,5);
			SetPlayerVirtualWorld(playerid, 2);
			SetPlayerSkin(playerid,random(2)+80);
			SetPlayerFacingAngle(playerid, 90);
			switch(pData[playerid][pStyleSkill][1])
			{
			case 0: SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
			case 1: SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
			case 2: SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
			}
			if(pData[playerid][pJob] == 6) SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
			return true;
		}
		switch(pData[playerid][pMember])
		{
			case 3:
			{
				if(pData[playerid][pRank] < 3)
				{
					if(forma[playerid] == 1)
					{
						SetPlayerSkin(playerid, 252);
						SetPlayerInterior(playerid, 0);
						SetPlayerPos(playerid, -1346.2050,492.3983,11.2027);
						return SetPlayerVirtualWorld(playerid, 0);
					}
					SetPVarInt(playerid,"Fraction_Duty",1);
					SetPlayerSkin(playerid, pData[playerid][pModel]);
					SCM(playerid, COLOR_BLUE," Рабочий день начат");
					SetPlayerToTeamColor(playerid);
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid, -1371.6482,492.1947,11.1953);
					pData[playerid][pJob] = 0;
					SetPlayerVirtualWorld(playerid, 0);
					return true;
				}
				if(GetPVarInt(playerid,"Fraction_Duty"))
				{
					SetPVarInt(playerid,"Fraction_Duty",1);
					SetPlayerSkin(playerid, pData[playerid][pModel]);
					SCM(playerid, COLOR_BLUE," Рабочий день начат");
					SetPlayerToTeamColor(playerid);
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid, -1371.6482,492.1947,11.1953);
					pData[playerid][pJob] = 0;
					SetPlayerVirtualWorld(playerid, 0);
					return true;
				}
			}
			case 19:
			{
				if(pData[playerid][pRank] < 3)
				{
					if(forma[playerid] == 1)
					{
						SetPlayerSkin(playerid, 252);
						SetPlayerInterior(playerid, 1);
						SetPlayerPos(playerid, 2534.0103,-1336.2085,2166.6021);
						SetPlayerVirtualWorld(playerid, 0);
						FreezeInt(playerid); // Если пинг больше 150 > Freeze
						return true;
					}
					SetPVarInt(playerid,"Fraction_Duty",1);
					SetPlayerSkin(playerid, pData[playerid][pModel]);
					SCM(playerid, COLOR_BLUE," Рабочий день начат");
					SetPlayerToTeamColor(playerid);
					SetPlayerInterior(playerid, 1);
					SetPlayerPos(playerid, 2534.0103,-1336.2085,2166.6021);
					SetPlayerVirtualWorld(playerid, 0);
					FreezeInt(playerid); // Если пинг больше 150 > Freeze
					pData[playerid][pJob] = 0;
					return true;
				}
				if(GetPVarInt(playerid,"Fraction_Duty"))
				{
					SetPVarInt(playerid,"Fraction_Duty",1);
					SetPlayerSkin(playerid, pData[playerid][pModel]);
					SCM(playerid, COLOR_BLUE," Рабочий день начат");
					SetPlayerToTeamColor(playerid);
					SetPlayerInterior(playerid, 1);
					SetPlayerVirtualWorld(playerid, 0);
					SetPlayerPos(playerid, 2539.3450,-1308.4747,2166.6021);
					FreezeInt(playerid); // Если пинг больше 150 > Freeze
					pData[playerid][pJob] = 0;
					return true;
				}
			}
		}
		if(pData[playerid][pPHouseKey] != INVALID_HOUSE_ID)
		{
			if(pData[playerid][pSpawnChange] == 1)
			{
				SetPVarInt(playerid, !#pPickHouseId, pData[playerid][pPHouseKey]+1);
				new house = pData[playerid][pPHouseKey];
				new int = HouseInfo[house][hInt];
				SetPlayerInterior(playerid,interior_info[int][int_int]);
				SetPlayerPos(playerid,interior_info[int][int_x],interior_info[int][int_y],interior_info[int][int_z]);
				SetPlayerVirtualWorld(playerid, house+50);
				return true;
			}
		}
		
		if(GetPVarInt(playerid,"Fraction_Duty"))
		{
			switch(pData[playerid][pMember])
			{
			case 1:
				{
					SetPlayerInterior(playerid, 6);
					SetPlayerPos(playerid, 235.8750,73.5106,1005.0391);
					return SetPlayerVirtualWorld(playerid, 0);
				}
			case 2:
				{
					SetPlayerInterior(playerid, 3);
					SetPlayerPos(playerid, -2464.4656,506.6172,1039.1265);
					SetPlayerFacingAngle(playerid, 359.7211);
					return SetPlayerVirtualWorld(playerid, 130);
				}
			case 22:
				{
					if(pData[playerid][pJobHeal] == 2 && !pData[playerid][pLeader]) // SF
					{
						SetPlayerInterior(playerid, 15);
						SetPlayerVirtualWorld(playerid, 3);
						SetPlayerPos(playerid, 372.0985,-53.2946,1076.4708);
						SetPlayerFacingAngle(playerid, 90.0000);
					}
					else if(pData[playerid][pJobHeal] == 3 && !pData[playerid][pLeader]) // LV
					{
						SetPlayerInterior(playerid, 15);
						SetPlayerVirtualWorld(playerid, 5);
						SetPlayerPos(playerid, 372.0985,-53.2946,1076.4708);
						SetPlayerFacingAngle(playerid, 90.0000);
					}
					else if(pData[playerid][pJobHeal] == 4 && !pData[playerid][pLeader]) // FC
					{
						SetPlayerInterior(playerid, 15);
						SetPlayerVirtualWorld(playerid, 6);
						SetPlayerPos(playerid, 372.0985,-53.2946,1076.4708);
						SetPlayerFacingAngle(playerid, 90.0000);
					}
					else 
					{
						SetPlayerInterior(playerid, 15);
						SetPlayerVirtualWorld(playerid, 4);
						SetPlayerPos(playerid, 372.0985,-53.2946,1076.4708);
						SetPlayerFacingAngle(playerid, 90.0000);
					}
					SetPlayerToTeamColor(playerid);
					return true;
				}
			case 7:
				{
					SetPlayerInterior(playerid, 3);
					SetPlayerPos(playerid, 365.1517,190.6857,1014.1875);
					SetPlayerFacingAngle(playerid, 178.5881);
					SetPlayerVirtualWorld(playerid, 0);
					if(pData[playerid][pRank] > 2 && pData[playerid][pRank] < 5)
					{
						GivePlayerWeaponEx(playerid,24,21);
						SetPlayerArmour(playerid, 100);
					}
					return true;
				}
			case 8:
				{
					SetPlayerInterior(playerid, 1);
					SetPlayerPos(playerid, 2151.4502,1602.8522,1006.1752);
					SetPlayerSkin(playerid, pData[playerid][pModel]);
					SetPlayerFacingAngle(playerid, 269.7087);
					return SetPlayerVirtualWorld(playerid, 0);
				}
			case 9: //sfn
				{
					SetPlayerPos(playerid, 1451.6831,-1077.4824,1717.9871);
					SetPlayerFacingAngle(playerid, 86.0787);
					SetPlayerVirtualWorld(playerid, 2);
					SetPlayerInterior(playerid, 1);
					return SelectWavesRadio[playerid] = 1;
				}
			case 10:
				{
					SetPlayerInterior(playerid, 10);
					SetPlayerVirtualWorld(playerid, 0);
					SetPlayerPos(playerid, 221.2526,111.5752,1010.2118);
					return SetPlayerFacingAngle(playerid, 268.9050);
				}
			case 11:
				{
					FreezeInt(playerid); // Если пинг больше 150 > Freeze
					SetPlayerInterior(playerid, 3);
					SetPlayerPos(playerid, -2038.6775, -71.3978, 94.4108);
					SetPlayerVirtualWorld(playerid, 1);
					return SetPlayerFacingAngle(playerid, 252.2673);
				}
			case 16: //sfn
				{
					SetPlayerPos(playerid, 1451.6831,-1077.4824,1717.9871);
					SetPlayerFacingAngle(playerid, 86.0787);
					SetPlayerVirtualWorld(playerid, 1);
					SetPlayerInterior(playerid, 1);
					return SelectWavesRadio[playerid] = 2;
				}
			case 20: //sfn
				{
					SetPlayerPos(playerid, 1451.6831,-1077.4824,1717.9871);
					SetPlayerFacingAngle(playerid, 86.0787);
					SetPlayerVirtualWorld(playerid, 3);
					SetPlayerInterior(playerid, 1);
					return SelectWavesRadio[playerid] = 3;
				}
			case 21:
				{
					SetPlayerInterior(playerid, 3);
					SetPlayerPos(playerid, 211.3636,184.3113,1003.0313);
					SetPlayerFacingAngle(playerid, 174.3579);
					return SetPlayerVirtualWorld(playerid, 122);
				}
			case 34:
				{
					SetPlayerInterior(playerid, 3);
					SetPlayerVirtualWorld(playerid, 1);
					return SetPlayerPos(playerid, 1491.0817,1306.0920,1093.2964);
				}
			}
		}
		switch(pData[playerid][pMember])
		{
		case 5:
			{
				SetPlayerInterior(playerid, 5);
				SetPlayerPos(playerid, 1265.7104,-793.7453,1084.0078);
				SetPlayerSkin(playerid, pData[playerid][pModel]);
				return SetPlayerVirtualWorld(playerid, 2);
			}
		case 6:
			{
				SetPlayerInterior(playerid, 5);
				SetPlayerPos(playerid, 1265.7104,-793.7453,1084.0078);
				SetPlayerSkin(playerid, pData[playerid][pModel]);
				return SetPlayerVirtualWorld(playerid, 0);
			}
		case 12:
			{
				SetPlayerPos(playerid, 619.1865,-151.3998,1093.2360);
				SetPlayerSkin(playerid, pData[playerid][pModel]);
				SetPlayerFacingAngle(playerid, 359.9831);
				SetPlayerInterior(playerid,6);
				FreezeInt(playerid); // Если пинг больше 150 > Freeze
				return SetPlayerVirtualWorld(playerid, 34);
			}
		case 13:
			{
				SetPlayerInterior(playerid, 4);
				SetPlayerVirtualWorld(playerid, 75);
				SetPlayerFacingAngle(playerid, 358.0241);
				SetPlayerPos(playerid, 2795.6206,-1605.5884,-36.9231);
				return SetPlayerSkin(playerid, pData[playerid][pModel]);
			}
		case 14:
			{
				SetPlayerInterior(playerid, 5);
				SetPlayerPos(playerid, 1265.7104,-793.7453,1084.0078);
				SetPlayerSkin(playerid, pData[playerid][pModel]);
				SetPlayerVirtualWorld(playerid, 1);
				return GivePlayerWeaponEx(playerid,1,2);
			}
		case 15:
			{
				SetPlayerInterior(playerid, 3);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid,  2496.012939,-1708.923217,1014.742187);
				SetPlayerSkin(playerid, pData[playerid][pModel]);
				SetPlayerFacingAngle(playerid, 0.191693);
				return SetPlayerVirtualWorld(playerid, 1);
			}
		case 17:
			{
				SetPlayerFacingAngle(playerid, 87.4820);
				SetPlayerPos(playerid, 1586.4243,-1606.0127,394.4919);
				SetPlayerSkin(playerid, pData[playerid][pModel]);
				SetPlayerInterior(playerid,8);
				FreezeInt(playerid); // Если пинг больше 150 > Freeze
				return SetPlayerVirtualWorld(playerid, 36);
			}
		case 18:
			{
				SetPlayerFacingAngle(playerid, 268.0580);
				SetPlayerInterior(playerid, 8);
				SetPlayerVirtualWorld(playerid, 63);
				SetPlayerPos(playerid, 284.8345,-142.5717,1161.2759);
				SetPlayerSkin(playerid, pData[playerid][pModel]);
				FreezeInt(playerid); // Если пинг больше 150 > Freeze
				return RemovePlayerAttachedObject(playerid, 1);
			}
		case 23:
			{
				SetPlayerInterior(playerid, 1);
				SetPlayerPos(playerid, 773.7842,-466.0484,1428.1820);
				SetPlayerSkin(playerid, pData[playerid][pModel]);
				SetPlayerFacingAngle(playerid, 7.3397);
				return SetPlayerVirtualWorld(playerid, 2);
			}
		case 24:
			{
				SetPlayerInterior(playerid, 1);
				SetPlayerPos(playerid, 773.7842,-466.0484,1428.1820);
				SetPlayerSkin(playerid, pData[playerid][pModel]);
				SetPlayerFacingAngle(playerid, 7.3397);
				return SetPlayerVirtualWorld(playerid, 52);
			}
		case 25:
			{
				SetPlayerInterior(playerid, 1);
				SetPlayerPos(playerid, 773.7842,-466.0484,1428.1820);
				SetPlayerSkin(playerid, pData[playerid][pModel]);
				SetPlayerFacingAngle(playerid, 7.3397);
				return SetPlayerVirtualWorld(playerid, 4);
			}
		case 26:
			{
				SetPlayerInterior(playerid, 1);
				SetPlayerPos(playerid, 773.7842,-466.0484,1428.1820);
				SetPlayerFacingAngle(playerid, 7.3397);
				SetPlayerSkin(playerid, pData[playerid][pModel]);
				return SetPlayerVirtualWorld(playerid, 998);
			}
		case 27:
			{
				SetPlayerInterior(playerid, 1);
				SetPlayerPos(playerid, 773.7842,-466.0484,1428.1820);
				SetPlayerSkin(playerid, pData[playerid][pModel]);
				SetPlayerFacingAngle(playerid, 7.3397);
				return SetPlayerVirtualWorld(playerid, 6);
			}
		case 28:
			{
				SetPlayerInterior(playerid, 1);
				SetPlayerPos(playerid, 773.7842,-466.0484,1428.1820);
				SetPlayerSkin(playerid, pData[playerid][pModel]);
				SetPlayerFacingAngle(playerid, 7.3397);
				return SetPlayerVirtualWorld(playerid, 7);
			}
		case 29:
			{
				SetPlayerInterior(playerid, 1);
				SetPlayerPos(playerid, 773.7842,-466.0484,1428.1820);
				SetPlayerSkin(playerid, pData[playerid][pModel]);
				SetPlayerFacingAngle(playerid, 7.3397);
				return SetPlayerVirtualWorld(playerid, 8);
			}
		case 30:
			{
				SetPlayerInterior(playerid, 1);
				SetPlayerPos(playerid, 773.7842,-466.0484,1428.1820);
				SetPlayerSkin(playerid, pData[playerid][pModel]);
				SetPlayerFacingAngle(playerid, 7.3397);
				return SetPlayerVirtualWorld(playerid, 9);
			}
		case 31:
			{
				SetPlayerInterior(playerid, 1);
				SetPlayerPos(playerid, 773.7842,-466.0484,1428.1820);
				SetPlayerSkin(playerid, pData[playerid][pModel]);
				SetPlayerFacingAngle(playerid, 7.3397);
				return SetPlayerVirtualWorld(playerid, 10);
			}
		case 32:
			{
				SetPlayerInterior(playerid, 1);
				SetPlayerPos(playerid, 773.7842,-466.0484,1428.1820);
				SetPlayerSkin(playerid, pData[playerid][pModel]);
				SetPlayerFacingAngle(playerid, 7.3397);
				return SetPlayerVirtualWorld(playerid, 11);
			}
		case 34:
			{
				SetPlayerInterior(playerid, 3);
				SetPlayerSkin(playerid, pData[playerid][pModel]);
				SetPlayerVirtualWorld(playerid, 1);
				return SetPlayerPos(playerid, 1491.0817,1306.0920,1093.2964);
			}
		}
	}
	switch(pData[playerid][pLevel])
	{
	case 1:
		{
			new x = random(2);
			if(x == 0)
			{
				SetPlayerPos(playerid, 1154.3717, -1769.2594, 16.5938);
				SetPlayerFacingAngle(playerid, 0.6853);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid, 0);
			}
			else
			{
				SetPlayerPos(playerid, 1754.2037,-1920.7112,13.5721);
				SetPlayerFacingAngle(playerid, 270.5025);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid, 0);
			}
		}
	case 2:
		{
			SetPlayerPos(playerid, 2231.3958,-1159.7759,25.8330);
			SetPlayerFacingAngle(playerid,88.0242);
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	case 3..5:
		{
			SetPlayerPos(playerid, -1967.2679,115.1929,27.6875);
			SetPlayerFacingAngle(playerid, 1.3365);
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	case 6..1000:
		{
			SetPlayerPos(playerid, 2851.5886,1293.5615,11.3906);
			SetPlayerFacingAngle(playerid, 93.9123);
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	return true;
}
public OnPlayerEnterCheckpoint(playerid)
{
	if(GetPVarInt(playerid, "delivery_step") == 2)
	{
		new dd = GetPVarInt(playerid, "delivery_id");
		delivery_info[dd][accept] = 0;
		new zp = 500+floatround(pData[playerid][job_skill][job_delivery]/2);

		format(string, 16, "~g~+$%i",zp); 
		GameTextForPlayer(playerid, string, 5000, 1);
		GiveMoney(playerid, zp);
		give_job_exp(playerid, job_delivery, (5+random(3)));

		RemovePlayerAttachedObject(playerid,1);
		DisablePlayerCheckpoint(playerid);
		HouseInfo[delivery_info[dd][adress]][h_prod] += 100;
		DeletePVar(playerid, "delivery_step");
		DeletePVar(playerid, "delivery_id");
		return 1;
	}
	if(GetPVarInt(playerid,"farm_status") == 1)
	{
		switch(booston)
		{
		case 0:
			{
				if(Farmtimer[playerid] != -1) KillTimer(Farmtimer[playerid]);
				ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,1,1,1,1,0);
				Farmtimer[playerid] = SetTimerEx("FarmDuty", 15000, false, "d", playerid);
			}
		default:
			{
				if(Farmtimer[playerid] != -1) KillTimer(Farmtimer[playerid]);
				ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,1,1,1,1,0);
				Farmtimer[playerid] = SetTimerEx("FarmDuty", 4950, false, "d", playerid);
			}
		}
	}
	DeletePVar(playerid,"checkpoint");
	if(updatecheck[playerid] != 9999)
	{
		if(kekovichs[playerid] != -1)
		{
			KillTimer(kekovichs[playerid]);
			kekovichs[playerid] = -1;
		}
		DisablePlayerCheckpoint(playerid);
	}
	if(updatecheck[playerid] != 9999) GameTextForPlayer(playerid, "\n\n~g~At Destination", 3000, 3),updatecheck[playerid] = 9999;
	new tmpcar = GetPlayerVehicleID(playerid);
	SetPVarInt(playerid,"entercheckpoint", GetTickCount());
	if(GetPVarInt(playerid,"installation") == 2 && IsPlayerInRangeOfPoint(playerid, 15.0, 1067.3966,2128.3901,10.5110) && GetPVarInt(playerid,"Workshop") > 0)
	{
		switch(GetPVarInt(GetPVarInt(playerid,"installation_"),"detals"))
		{
		case 99: CarInfo[GetPVarInt(playerid,"installation_")][carPercent][GetPVarInt(GetPVarInt(playerid,"installation_"),"chosencar")] = 100;
		case 100:
			{
				CarInfo[GetPVarInt(playerid,"installation_")][carColor_one][GetPVarInt(GetPVarInt(playerid,"installation_"),"chosencar")] = GetPVarInt(GetPVarInt(playerid,"installation_"),"color0");
				CarInfo[GetPVarInt(playerid,"installation_")][carColor_two][GetPVarInt(GetPVarInt(playerid,"installation_"),"chosencar")] = GetPVarInt(GetPVarInt(playerid,"installation_"),"color1");
				SaveMySQL(10,playerid);
				DeletePVar(GetPVarInt(playerid,"installation_"),"color0");
				DeletePVar(GetPVarInt(playerid,"installation_"),"color1");
			}
		}
		new x = GetPVarInt(playerid,"installation_");
		ApplyAnimation(playerid,"GANGS","hndshkba",4.1,0,1,1,0,1,1);
		SCM(playerid,COLOR_GREEN,"Деталь установлена");
		SCM(x,COLOR_GREEN,"Механик установил деталь");
		WorkshopInfo[GetPVarInt(playerid,"Workshop")][wProds]-=GetPVarInt(GetPVarInt(playerid,"installation_"),"prods");
		new wPay = GetPVarInt(x,"cost");
		new wA = wPay/100*25;
		WorkshopInfo[GetPVarInt(playerid,"Workshop")][wBank] += wA;
		pData[GetPVarInt(playerid,"installation_")][pBank]-=GetPVarInt(GetPVarInt(playerid,"installation_"),"cost");
		SetAccountInfo(GetPVarInt(playerid,"installation_"), pData[GetPVarInt(playerid,"installation_")][pBank], "pBank");
		SetPVarInt(playerid,"Workshop_",GetPVarInt(playerid,"Workshop_")+((GetPVarInt(GetPVarInt(playerid,"installation_"),"cost")/1000)*WorkshopInfo[GetPVarInt(playerid,"Workshop")][wZp]));
		DeletePVar(GetPVarInt(playerid,"installation_"),"cost");
		DeletePVar(GetPVarInt(playerid,"installation_"),"prods");
		DeletePVar(GetPVarInt(playerid,"installation_"),"detals");
		DeletePVar(GetPVarInt(playerid,"installation_"),"number");
		DeletePVar(GetPVarInt(playerid,"installation_"),"color0");
		DeletePVar(GetPVarInt(playerid,"installation_"),"color1");
		DeletePVar(playerid,"installation");
		SaveTuning(GetPVarInt(playerid,"installation_"),house_car[GetPVarInt(playerid,"installation_")]);
		return DisablePlayerCheckpoint(playerid);
	}
	if(GetPVarInt(playerid,"Pursiut"))
	{
		DeletePVar(playerid,"Pursiut");
		DeletePVar(playerid,"Partner");
		SCM(playerid,-1,"Патрулирование закончено, вы догнали преступника!");
		DisablePlayerCheckpoint(playerid);
	}
	if(GetPVarInt(playerid,"w_time") > gettime() && GetPVarInt(playerid,"w_id"))
	{
		if(GetVehicleModel(house_car[playerid]) == 0) return SCM(playerid,COLOR_GREY," У вас нет автомобиля!");
		if(pData[playerid][pState] != PLAYER_STATE_DRIVER || GetPlayerVehicleID(playerid) != house_car[playerid]) return SCM(playerid,COLOR_GREY," Вы должны находиться за рулем автомобиля!");
		new null = -1;
		foreach(new i: OnPlayersStream[playerid])
		{
			if(!IsPlayerInAnyVehicle(i) || GetPlayerVehicleID(i) != GetPlayerVehicleID(playerid) || GetPVarInt(i,"Workshop") != GetPVarInt(playerid,"w_id") || i == playerid) continue;
			null = i;
		}
		if(null == -1) return SCM(playerid,COLOR_GREY," Механик должен находиться с вами в авто!");
		SetPVarInt(playerid,"InWorkshop",GetPVarInt(playerid,"w_id"));
		SetPVarInt(playerid,"f_tune",1);
		DeletePVar(playerid,"w_time");
		SetPVarInt(null,"installation_",playerid);
		cto_mechanic[playerid] = null;
		SetPlayerVirtualWorld(playerid,GetPVarInt(playerid,"w_id"));
		SetPlayerVirtualWorld(null,GetPVarInt(playerid,"w_id"));
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),GetPVarInt(playerid,"w_id"));
		SetVehiclePos(GetPlayerVehicleID(playerid),1067.3966,2128.3901,10.5110);
		SetVehicleZAngle(GetPlayerVehicleID(playerid),271.2212);
		SCM(null,COLOR_YELLOW,"Используйте /tupdate");
		return DisablePlayerCheckpoint(playerid);
	}
	if(PicCP[playerid]==3)
	{
		ShowPlayerDialog(playerid, 7925, 2, "Доступное оружие", "Desert Eagle\t[$500]\nSilenced 9mm\t[$300]\nCountry Rifle\t[$750]\nShotgun\t[$500]\nSMG\t\t[$250]\nAK47\t\t[$500]\nM4\t\t[$500]\nTear Gas\t[$1000]\n\n\nGolf Club\t[$1200]\nBaseboll Bat\t[$1000]\nShovel\t\t[$1200]\nPool Cue\t[$1300]\nKatana\t\t[$2500]\nPurle Dildo\t[$1500]\nFlowers\t[$3000]\nCane\t\t[$1300]\nParachute\t[$1000]", "Далее", "Закрыть");
		return true;
	}
	if(GetPVarInt(playerid,"job_auto_seat"))
	{
		if(GetPVarInt(playerid,"job_auto") != GetVehicleModel(tmpcar)) return SCM(playerid,COLOR_BLUE," Это не та машина, которую мы заказывали!");
		new cash;
		if(AntiCheatGetVehicleHealth(tmpcar) < 700) return SCM(playerid,COLOR_BLUE," Нам не нужен металолом!");
		for(new i = 0; i <= 19; i++) if(GetVehicleModel(tmpcar) == ShopCar[i][0]) cash = 500+(job_lvl(pData[playerid][job_skill][job_ugon])*7), give_job_exp(playerid, job_ugon, 2);
		for(new i = 39; i <= 56; i++) if(GetVehicleModel(tmpcar) == ShopCar[i][0]) cash = 700+(job_lvl(pData[playerid][job_skill][job_ugon])*7), give_job_exp(playerid, job_ugon, 2);
		for(new i = 20; i <= 38; i++) if(GetVehicleModel(tmpcar) == ShopCar[i][0]) cash = 900+(job_lvl(pData[playerid][job_skill][job_ugon])*7), give_job_exp(playerid, job_ugon, 2);
		for(new i = 57; i <= 71; i++) if(GetVehicleModel(tmpcar) == ShopCar[i][0]) cash = 1100+(job_lvl(pData[playerid][job_skill][job_ugon])*7), give_job_exp(playerid, job_ugon, 2);
		for(new i = 72; i <= 85; i++) if(GetVehicleModel(tmpcar) == ShopCar[i][0]) cash = 1300+(job_lvl(pData[playerid][job_skill][job_ugon])*7), give_job_exp(playerid, job_ugon, 2);
		SCM(playerid,COLOR_BLUE," [SMS]: Отличная работа. Приходи ещё.");
		pData[playerid][pCash] += cash;
		SetAccountInfo(playerid, pData[playerid][pCash], "pCash");

		format(string,10,"~b~+$%i",cash);
		GameTextForPlayer(playerid,string, 3000, 1);

		if(IsPlayerConnected(vehicleforeach(tmpcar)) && pData[vehicleforeach(tmpcar)][pLogin])
		{
			if(pData[vehicleforeach(tmpcar)][pPHouseKey] != INVALID_HOUSE_ID) SetVehicleToRespawn(tmpcar);
		}
		else DestroyVehicleEX(tmpcar);
		caroff[tmpcar]=false;
		DeletePVar(playerid,"job_auto_seat");
		DeletePVar(playerid,"job_auto");
		DeletePVar(playerid,"job_auto_time");
		DisablePlayerCheckpoint(playerid);
	}
	if(IsPlayerInRangeOfPoint(playerid,25,-1467.2990,1489.6672,10.2395) && GetPVarInt(playerid,"load_mats") == 1)
	{
		if(load_mats[GetPlayerVehicleID(playerid)-armycarsf[24]] >= 30000) SCM(playerid, COLOR_GREY, " Вертолёт загружен");
		else SCM(playerid,TEAM_GROVE_COLOR,"Материалы успешно загружены! Материалов в вертолёте: 30000/30000");
		SCM(playerid, COLOR_WHITE, " Доставьте материалы на Зону 51");
		SetPVarInt(playerid,"load_mats",2);
		DisablePlayerCheckpoint(playerid);
		SetPlayerCheckpoint(playerid,334.5107,1994.6956,17.6406,10);
		load_mats[GetPlayerVehicleID(playerid)-armycarsf[24]] = 30000;
	}
	else if(IsPlayerInRangeOfPoint(playerid,25,340.2681,1991.6899,17.6406) && GetPVarInt(playerid,"load_mats") == 2)
	{
		if(armmatbi >= 300000) return SCM(playerid, COLOR_GREY, " Склад заполнен!"), DisablePlayerCheckpoint(playerid);

		load_mats[GetPlayerVehicleID(playerid)-armycarsf[24]] -= 30000;
		armmatbi += 30000;
		if(armmatbi > 300000) armmatbi = 300000;
		format(string,50, "{33AA33}Склад армии ЛВ: {FFFFFF}%i", armmatbi);
		UpdateDynamic3DTextLabelText(LvaLable, 0xFFFF00FF, string);
		SCM(playerid, TEAM_GROVE_COLOR, " Материалы успешно доставлены! Материалов в вертолёте: 0/30000");
		SendMes(playerid,COLOR_YELLOW," На складе Зоны 51 %i/300000 матов", armmatbi);
		DisablePlayerCheckpoint(playerid);
		SetPlayerCheckpoint(playerid,-1467.2990,1489.6672,10.2395,14.0);
		SCM(playerid,COLOR_WHITE, " Отправляйтесь на корабль для загрузки Оружия");
		SetPVarInt(playerid,"load_mats",1);
		if(pData[playerid][pPayCheck] < 20000)
		{
			pData[playerid][pPayCheck] += 500;
			SetAccountInfo(playerid, pData[playerid][pPayCheck], "pPayCheck");
		}
	}
	if(IsPlayerInRangeOfPoint(playerid,25,-1467.2990,1489.6672,10.2395) && GetPVarInt(playerid,"load_mats") == 3)
	{
		if(load_mats_lsa >= 30000) SCM(playerid, COLOR_GREY, " Вертолёт загружен");
		else SCM(playerid,TEAM_GROVE_COLOR,"Материалы успешно загружены! Материалов в вертолёте: 30000/30000");
		load_mats_lsa = 30000;
		SCM(playerid, COLOR_WHITE, " Доставьте материалы в LSA");
		SetPVarInt(playerid,"load_mats",4);
		DisablePlayerCheckpoint(playerid);
		SetPlayerCheckpoint(playerid,2773.1833,-2354.5332,15.3227,10);
	}
	else if(GetPVarInt(playerid,"load_mats") == 4)
	{
		if(lsamatbi >= 100000) return SCM(playerid, COLOR_GREY,"Склад заполнен!"), DisablePlayerCheckpoint(playerid);
		load_mats_lsa -= 30000;
		lsamatbi += 30000;
		if(lsamatbi > 100000) lsamatbi = 100000;
		SCM(playerid,TEAM_GROVE_COLOR,"Материалы успешно доставлены! Материалов в вертолёте: 0/30000");
		SendMes(playerid,COLOR_WHITE," На складе LSA %i/100000 матов", lsamatbi);
		DisablePlayerCheckpoint(playerid);
		SetPlayerCheckpoint(playerid,-1467.2990,1489.6672,10.2395,14.0);
		SCM(playerid,COLOR_WHITE, " Отправляйтесь на корабль, для загрузки Оружия");
		SetPVarInt(playerid,"load_mats",3);
		if(pData[playerid][pPayCheck] < 20000)
		{
			pData[playerid][pPayCheck] += 500;
			SetAccountInfo(playerid, pData[playerid][pPayCheck], "pPayCheck");
		}
	}
	if(CP[playerid] == 500)
	{
		SCM(playerid, COLOR_GREEN, " Вы получили премию, в размере: 600 вирт");
		pData[playerid][pCash] += 600;
		SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
		DisablePlayerCheckpoint(playerid);
		CP[playerid] = 0;
	}
	else if(GetPVarInt(playerid,"MatsArmyCar") == 1)
	{
		DisablePlayerCheckpoint(playerid);
		if(MatHaul[tmpcar-gunscar[0]] >= 10000 || armmatbi <= 10000) return SCM(playerid,COLOR_GREY," Склад пуст / грузовик полон");
		MatHaul[tmpcar-gunscar[0]] = 10000;
		SCM(playerid,TEAM_GROVE_COLOR,"Материалов: 10000/10000");
		armmatbi -= 10000;
		format(string,160, "{33AA33}Склад армии ЛВ: {FFFFFF}%i", armmatbi);
		UpdateDynamic3DTextLabelText(LvaLable, 0xFFFF00FF, string);
		SendMes(playerid,COLOR_YELLOW,"На главном складе: %i/300000",armmatbi);
		DeletePVar(playerid,"MatsArmyCar");
	}
	else if(GetPVarInt(playerid,"MatsArmyCar") >= 2 && GetPVarInt(playerid,"MatsArmyCar") <= 7)
	{
		DisablePlayerCheckpoint(playerid);
		if(MatHaul[tmpcar-gunscar[0]] <= 0) return SCM(playerid,COLOR_GREY," Грузовик пуст");
		MatHaul[tmpcar-gunscar[0]] = 0;
		SCM(playerid,TEAM_GROVE_COLOR,"Материалов: 0/10000");
		switch(GetPVarInt(playerid,"MatsArmyCar"))
		{
		case 2:
			{
				armmatbi += 10000;
				if(armmatbi > 300000) armmatbi = 300000;
				SendMes(playerid,COLOR_YELLOW,"На главном складе: %i/300000",armmatbi);
			}
		case 3:
			{
				lspdmatbi += 10000;
				if(lspdmatbi > 100000) lspdmatbi = 100000;
				SendMes(playerid,COLOR_YELLOW," На складе LSPD: %i/100000",lspdmatbi);
			}
		case 4:
			{
				sfpdmats += 10000;
				if(sfpdmats > 100000) sfpdmats = 100000;
				SendMes(playerid,COLOR_YELLOW," На складе SFPD: %i/100000",sfpdmats);
			}
		case 5:
			{
				lvpdmats += 10000;
				if(lvpdmats > 100000) lvpdmats = 100000;
				SendMes(playerid,COLOR_YELLOW," На складе LVPD: %i/100000",lvpdmats);
			}
		case 6:
			{
				fbimats += 10000;
				if(fbimats > 100000) fbimats = 100000;
				SendMes(playerid,COLOR_YELLOW," На складе ФБР: %i/100000",fbimats);
			}
		case 7:
			{
				armmatsf += 10000;
				if(armmatsf > 100000) armmatsf = 100000;
				SendMes(playerid,COLOR_YELLOW," На складе Армии СФ: %i/100000",armmatsf);
			}
		}
		if(pData[playerid][pPayCheck] < 20000)
		{
			pData[playerid][pPayCheck] += 500;
			SetAccountInfo(playerid, pData[playerid][pPayCheck], "pPayCheck");
		}
		DeletePVar(playerid,"MatsArmyCar");
	}
	if(CP[playerid] == 123)
	{
		DisablePlayerCheckpoint(playerid);
		SCM(playerid, COLOR_WHITE, " Введите /sloading для загрузки");
		return CP[playerid] = 0;
	}
	if(GruzCP[playerid] == 1 && PlayerToPoint(2.0,playerid,600.4599,868.0458,-42.9609))
	{
		DisablePlayerCheckpoint(playerid);
		SetPlayerSpecialAction (playerid, SPECIAL_ACTION_CARRY);
		SetPlayerAttachedObject(playerid, 1 , 2358, 1,0.11,0.36,0.0,0.0,90.0);
	}

	if(GetPVarInt(playerid, "LoaderWork"))return 1;
	
	else if(CP[playerid] == 500)
	{
		pData[playerid][pCash] += 600;
		SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
		CP[playerid] = 0;
		format(string, 32, "~g~+600");
		GameTextForPlayer(playerid, string, 5000, 1);
		DisablePlayerCheckpoint(playerid);
	}
	else
	{
		switch (gPlayerCheckpointStatus[playerid])
		{
		case 12:
			{
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				DisablePlayerCheckpoint(playerid);
				gPlayerCheckpointStatus[playerid] = 0;
				GameTextForPlayer(playerid, "~w~Is in~n~~y~House", 5000, 1);
			}
		}
	}
	return true;
}
public OnPlayerLeaveCheckpoint(playerid) return true;
public OnPlayerEnterRaceCheckpoint(playerid)
{
	SendMes(playerid,-1,"cp - %d",CP[playerid]);
	SetPVarInt(playerid,"entercheckpoint", GetTickCount());
	if(CP[playerid] == 776) GameTextForPlayer(playerid, "~r~Point Is Established", 3000, 1),CP[playerid] = 0;
	DisablePlayerRaceCheckpoint(playerid);
	new _vehicleidx = GetPlayerVehicleID(playerid);
	if(pData[playerid][pState] == PLAYER_STATE_DRIVER)
	{
		if(_vehicleidx >= g_szGangBoats[0] && _vehicleidx <= g_szGangBoats[4])
		{
			if(g_szGangBoatStat[_vehicleidx][e_bLoading] == E_MATERIALS_EMPTY)
			{
				new Float:fX, Float:fY, Float:fZ, Float:fAZ;
				AntiCheatGetVehiclePos(_vehicleidx, Float:fX, Float:fY, Float:fZ);
				GetVehicleZAngle(_vehicleidx, Float:fAZ);
				g_szGangBoatStat[_vehicleidx][e_iPickup] = CreateDynamicPickup(2969, 23, Float:fX, -2354.4233, 2.8009); 
				new _tmpstr[16+6];
				format(_tmpstr, sizeof _tmpstr, "Загружено: %d/%d", g_szGangBoatStat[_vehicleidx][e_iMaterials], MAX_BOAT_MATERIALS);
				new Text3D:tmlLabel = CreateDynamic3DTextLabel(_tmpstr, TEAM_GROVE_COLOR, Float:fX, -2354.4233, 2.8009+0.5, 5.0);
				new _arrayData[2];
				_arrayData[0] = _vehicleidx;
				_arrayData[1] = _:tmlLabel;

				g_szGangBoatStat[_vehicleidx][e_bLoading] = E_MATERIALS_LOADING;
				Streamer_SetArrayData(STREAMER_TYPE_PICKUP, g_szGangBoatStat[_vehicleidx][e_iPickup], E_STREAMER_EXTRA_ID, _arrayData);
				//SetPlayerRaceCheckpoint(playerid, 1, 2865.9685, -2354.4233, 2.8009, 2865.9685, -2354.4233, 2.8009, 10.5);
			}
			else if(g_szGangBoatStat[_vehicleidx][e_bLoading] == E_MATERIALS_LOADING)
			{
				new Float:fX, Float:fY, Float:fZ;
				AntiCheatGetVehiclePos(_vehicleidx, Float:fX, Float:fY, Float:fZ);

				g_szGangBoatStat[_vehicleidx][e_iPickup] = CreateDynamicPickup(2969, 23, Float:fX, -1487.40, 1.6218); 
				new _tmpstr[16+6];
				format(_tmpstr, sizeof _tmpstr, "Загружено: %d/%d", g_szGangBoatStat[_vehicleidx][e_iMaterials], MAX_BOAT_MATERIALS);
				new Text3D:tmlLabel = CreateDynamic3DTextLabel(_tmpstr, TEAM_GROVE_COLOR, Float:fX, -1487.40, 1.6218+0.5, 10.0);
				new _arrayData[2];
				_arrayData[0] = _vehicleidx;
				_arrayData[1] = _:tmlLabel;

				g_szGangBoatStat[_vehicleidx][e_bLoading] = E_MATERIALS_UNLOADING;

				Streamer_SetArrayData(STREAMER_TYPE_PICKUP, g_szGangBoatStat[_vehicleidx][e_iPickup], E_STREAMER_EXTRA_ID, _arrayData);
			}
			//	SetPlayerRaceCheckpoint(playerid, 1, 2955.7334, -1485.0795, 1.6218, 2955.7334, -1485.0795, 1.6218, 10.5);
			//SCM(playerid, TEAM_GROVE_COLOR, "Чтобы начать загрузку материалов введите: {FFFFFF}/gloading");
		}
		if(race_state[playerid] != -1 && race_info[1] == 3)
		{
			DisablePlayerRaceCheckpoint(playerid);
			SetPVarInt(playerid,"gonkaid",GetPVarInt(playerid,"gonkaid")+1);
			if(GetPVarInt(playerid,"gonkaid") == 32)
			{
				if(RaceList < 3)
				{
					SendMes(playerid,COLOR_BLUE,"Поздравляем! Вы заняли %i место!",RaceList+1);
					switch(booston)
					{
					case 0:
						{
							format(string,32,"~g~+$%i",15000-(RaceList*5000));
							GameTextForPlayer(playerid,string, 5000, 1);
							pData[playerid][pCash] += 15000-(RaceList*5000);
						}
					default:
						{
							format(string,32,"~g~+$%i",45000-(RaceList*15000));
							GameTextForPlayer(playerid,string, 5000, 1);
							pData[playerid][pCash] += 45000-(RaceList*15000);
						}
					}
					SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
				}
				SetPlayerInterior(playerid,3);
				SetPlayerPos(playerid,831.7769,6.8750,1004.1797);
				SetPlayerFacingAngle(playerid,108.1610);
				strmid(RaceInfo[RaceList][rName],pData[playerid][pName], 0, strlen(pData[playerid][pName]), 24);
				RaceList++;
				DestroyVehicleEX(RaceInfo[race_state[playerid]][rCar]);
				race_state[playerid] = -1;
				return true;
			}
			if(GetPVarInt(playerid,"gonkaid") != 31) SetPlayerRaceCheckpoint(playerid, 0, RaceGonka[GetPVarInt(playerid,"gonkaid")][0x0],RaceGonka[GetPVarInt(playerid,"gonkaid")][0x1],RaceGonka[GetPVarInt(playerid,"gonkaid")][0x2],RaceGonka[GetPVarInt(playerid,"gonkaid")+1][0x0],RaceGonka[GetPVarInt(playerid,"gonkaid")+1][0x1],RaceGonka[GetPVarInt(playerid,"gonkaid")+1][0x2], 8.0);
			else SetPlayerRaceCheckpoint(playerid, 1, RaceGonka[GetPVarInt(playerid,"gonkaid")][0x0],RaceGonka[GetPVarInt(playerid,"gonkaid")][0x1],RaceGonka[GetPVarInt(playerid,"gonkaid")][0x2],0.0,0.0,0.0,8.0);
			format(string,64,"~g~~w~%i / 32~g~",GetPVarInt(playerid,"gonkaid")); GameTextForPlayer(playerid,string, 5000, 4);
		}
		if(GetPVarInt(playerid,"farm_status") == 5)
		{
			SetPVarInt(playerid,"farm_combine", GetPVarInt(playerid,"farm_combine")+1);
			switch(GetPVarInt(playerid,"farm_id"))
			{
			case 1:
				{
					if(GetPVarInt(playerid,"farm_combine") == sizeof(Farmcombine_coord_one))
					{
						FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain_Sown] = 5000;
						FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain]-=5000;
						SendMes(playerid, COLOR_WHITE," {1E5580}Поле засеяно на {FFFFFF}5000. {1E5580}Зерна  На складе {FFFFFF}%i / 10000",FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain]);
						DeletePVar(playerid,"farm_status");
						DeletePVar(playerid,"farm_combine");
					}
					else if(GetPVarInt(playerid,"farm_combine") == sizeof(Farmcombine_coord_one)-1) SetPlayerRaceCheckpoint(playerid,1,Farmcombine_coord_one[GetPVarInt(playerid,"farm_combine")][0],Farmcombine_coord_one[GetPVarInt(playerid,"farm_combine")][1],Farmcombine_coord_one[GetPVarInt(playerid,"farm_combine")][2],0,0,0,5.0);
					else SetPlayerRaceCheckpoint(playerid,0,Farmcombine_coord_one[GetPVarInt(playerid,"farm_combine")][0],Farmcombine_coord_one[GetPVarInt(playerid,"farm_combine")][1],Farmcombine_coord_one[GetPVarInt(playerid,"farm_combine")][2],Farmcombine_coord_one[GetPVarInt(playerid,"farm_combine")+1][0],Farmcombine_coord_one[GetPVarInt(playerid,"farm_combine")+1][1],Farmcombine_coord_one[GetPVarInt(playerid,"farm_combine")+1][2],5.0);
				}
			case 2:
				{
					if(GetPVarInt(playerid,"farm_combine") == sizeof(Farmcombine_coord_two))
					{
						FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain_Sown] = 5000;
						FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain]-=5000;
						SendMes(playerid, COLOR_WHITE," {1E5580}Поле засеяно на {FFFFFF}5000. {1E5580}Зерна  На складе {FFFFFF}%i / 10000",FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain]);
						DeletePVar(playerid,"farm_status");
						DeletePVar(playerid,"farm_combine");
					}
					else if(GetPVarInt(playerid,"farm_combine") == sizeof(Farmcombine_coord_two)-1) SetPlayerRaceCheckpoint(playerid,1,Farmcombine_coord_two[GetPVarInt(playerid,"farm_combine")][0],Farmcombine_coord_two[GetPVarInt(playerid,"farm_combine")][1],Farmcombine_coord_two[GetPVarInt(playerid,"farm_combine")][2],0,0,0,5.0);
					else SetPlayerRaceCheckpoint(playerid,0,Farmcombine_coord_two[GetPVarInt(playerid,"farm_combine")][0],Farmcombine_coord_two[GetPVarInt(playerid,"farm_combine")][1],Farmcombine_coord_two[GetPVarInt(playerid,"farm_combine")][2],Farmcombine_coord_two[GetPVarInt(playerid,"farm_combine")+1][0],Farmcombine_coord_two[GetPVarInt(playerid,"farm_combine")+1][1],Farmcombine_coord_two[GetPVarInt(playerid,"farm_combine")+1][2],5.0);
				}
			case 3:
				{
					if(GetPVarInt(playerid,"farm_combine") == sizeof(Farmcombine_coord_three))
					{
						FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain_Sown] = 5000;
						FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain]-=5000;
						SendMes(playerid, COLOR_WHITE," {1E5580}Поле засеяно на {FFFFFF}5000. {1E5580}Зерна  На складе {FFFFFF}%i / 10000",FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain]);
						DeletePVar(playerid,"farm_status");
						DeletePVar(playerid,"farm_combine");
					}
					else if(GetPVarInt(playerid,"farm_combine") == sizeof(Farmcombine_coord_three)-1) SetPlayerRaceCheckpoint(playerid,1,Farmcombine_coord_three[GetPVarInt(playerid,"farm_combine")][0],Farmcombine_coord_three[GetPVarInt(playerid,"farm_combine")][1],Farmcombine_coord_three[GetPVarInt(playerid,"farm_combine")][2],0,0,0,5.0);
					else SetPlayerRaceCheckpoint(playerid,0,Farmcombine_coord_three[GetPVarInt(playerid,"farm_combine")][0],Farmcombine_coord_three[GetPVarInt(playerid,"farm_combine")][1],Farmcombine_coord_three[GetPVarInt(playerid,"farm_combine")][2],Farmcombine_coord_three[GetPVarInt(playerid,"farm_combine")+1][0],Farmcombine_coord_three[GetPVarInt(playerid,"farm_combine")+1][1],Farmcombine_coord_three[GetPVarInt(playerid,"farm_combine")+1][2],5.0);
				}
			case 4:
				{
					if(GetPVarInt(playerid,"farm_combine") == sizeof(Farmcombine_coord_four))
					{
						FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain_Sown] = 5000;
						FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain]-=5000;
						SendMes(playerid, COLOR_WHITE," {1E5580}Поле засеяно на {FFFFFF}5000. {1E5580}Зерна  На складе {FFFFFF}%i / 10000",FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain]);
						DeletePVar(playerid,"farm_status");
						DeletePVar(playerid,"farm_combine");
					}
					else if(GetPVarInt(playerid,"farm_combine") == sizeof(Farmcombine_coord_four)-1) SetPlayerRaceCheckpoint(playerid,1,Farmcombine_coord_four[GetPVarInt(playerid,"farm_combine")][0],Farmcombine_coord_four[GetPVarInt(playerid,"farm_combine")][1],Farmcombine_coord_four[GetPVarInt(playerid,"farm_combine")][2],0,0,0,5.0);
					else SetPlayerRaceCheckpoint(playerid,0,Farmcombine_coord_four[GetPVarInt(playerid,"farm_combine")][0],Farmcombine_coord_four[GetPVarInt(playerid,"farm_combine")][1],Farmcombine_coord_four[GetPVarInt(playerid,"farm_combine")][2],Farmcombine_coord_four[GetPVarInt(playerid,"farm_combine")+1][0],Farmcombine_coord_four[GetPVarInt(playerid,"farm_combine")+1][1],Farmcombine_coord_four[GetPVarInt(playerid,"farm_combine")+1][2],5.0);
				}
			case 5:
				{
					if(GetPVarInt(playerid,"farm_combine") == sizeof(Farmcombine_coord_five))
					{
						FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain_Sown] = 5000;
						FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain]-=5000;
						SendMes(playerid, COLOR_WHITE," {1E5580}Поле засеяно на {FFFFFF}5000. {1E5580}Зерна  На складе {FFFFFF}%i / 10000",FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain]);
						DeletePVar(playerid,"farm_status");
						DeletePVar(playerid,"farm_combine");
					}
					else if(GetPVarInt(playerid,"farm_combine") == sizeof(Farmcombine_coord_five)-1) SetPlayerRaceCheckpoint(playerid,1,Farmcombine_coord_five[GetPVarInt(playerid,"farm_combine")][0],Farmcombine_coord_five[GetPVarInt(playerid,"farm_combine")][1],Farmcombine_coord_five[GetPVarInt(playerid,"farm_combine")][2],0,0,0,5.0);
					else SetPlayerRaceCheckpoint(playerid,0,Farmcombine_coord_five[GetPVarInt(playerid,"farm_combine")][0],Farmcombine_coord_five[GetPVarInt(playerid,"farm_combine")][1],Farmcombine_coord_five[GetPVarInt(playerid,"farm_combine")][2],Farmcombine_coord_five[GetPVarInt(playerid,"farm_combine")+1][0],Farmcombine_coord_five[GetPVarInt(playerid,"farm_combine")+1][1],Farmcombine_coord_five[GetPVarInt(playerid,"farm_combine")+1][2],5.0);
				}
			}
		}
		if(GetPVarInt(playerid,"farm_status") == 3)
		{
			new car;
			for(new i = 1; i <= TOTALFARM; i++) if(GetPlayerVehicleID(playerid) >= FarmInfo[i][fSeed_Car][0] && GetPlayerVehicleID(playerid) <= FarmInfo[i][fSeed_Car][1]) car = i;
			if(car == 0) return L_Kick(playerid,15);
			TogglePlayerControllable(playerid, 0);
			SCM(playerid,COLOR_YELLOW," Пожалуйста подождите");
			return SetTimerEx("Farmduty" , 2000, false, "i", playerid);
		}
		if(LessonCar[playerid] == 1)
		{
			switch(pLessonCar[playerid])
			{
			case CHECKPOINT_1:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_3;
					SetPlayerRaceCheckpoint(playerid, 0,-2047.3120,-82.8890,34.9072,-2047.3120,-82.8890,34.9072, 5.0);
				}
			case CHECKPOINT_3:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_4;
					SetPlayerRaceCheckpoint(playerid, 0,-2020.2249,-72.4633,34.9145,-2004.6350,-55.5920,34.9081, 5.0);
				}
			case CHECKPOINT_4:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_5;
					SetPlayerRaceCheckpoint(playerid, 0,-2004.6350,-55.5920,34.9081,-2004.0828,63.9897,29.0385, 5.0);
				}
			case CHECKPOINT_5:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_6;
					SetPlayerRaceCheckpoint(playerid, 0,-2004.0828,63.9897,29.0385,-2004.9127,159.6589,27.2818, 5.0);
				}
			case CHECKPOINT_6:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_7;
					SetPlayerRaceCheckpoint(playerid, 0,-2004.9127,159.6589,27.2818,-2022.3209,172.0152,28.4565, 5.0);
				}
			case CHECKPOINT_7:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_8;
					SetPlayerRaceCheckpoint(playerid, 0,-2022.3209,172.0152,28.4565,-2029.9869,156.7025,28.5793, 5.0);
				}
			case CHECKPOINT_8:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_9;
					SetPlayerRaceCheckpoint(playerid, 0,-2029.9869,156.7025,28.5793,-2017.3555,138.1394,27.6932, 5.0);
				}
			case CHECKPOINT_9:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_10;
					SetPlayerRaceCheckpoint(playerid, 0,-2017.3555,138.1394,27.6932,-2003.2570,159.9656,27.2823, 5.0);
				}
			case CHECKPOINT_10:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_11;
					SetPlayerRaceCheckpoint(playerid, 0,-2003.2570,159.9656,27.2823,-2000.3943,288.7868,33.7211, 5.0);
				}
			case CHECKPOINT_11:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_13;//
					SetPlayerRaceCheckpoint(playerid, 0,-2000.3943,288.7868,33.7211,-2021.0210,321.9275,34.7585, 5.0);
				}
			case CHECKPOINT_13:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_14;//
					SetPlayerRaceCheckpoint(playerid, 0,-2021.0210,321.9275,34.7585,-2239.3616,321.8053,34.9154, 5.0);
				}
			case CHECKPOINT_14:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_15;//
					SetPlayerRaceCheckpoint(playerid, 0,-2239.3616,321.8053,34.9154,-2254.4856,298.3696,34.9073, 5.0);
				}
			case CHECKPOINT_15:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_16;//
					SetPlayerRaceCheckpoint(playerid, 0,-2254.4856,298.3696,34.9073,-2259.3555,-59.4185,34.9898, 5.0);
				}
			case CHECKPOINT_16:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_17;//
					SetPlayerRaceCheckpoint(playerid, 0,-2259.3555,-59.4185,34.9898,-2409.8345,-67.7337,35.0145, 5.0);
				}
			case CHECKPOINT_17:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_18;//
					SetPlayerRaceCheckpoint(playerid, 0,-2409.8345,-67.7337,35.0145,-2423.4453,-116.1348,35.0505, 5.0);
				}
			case CHECKPOINT_18:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_19;//
					SetPlayerRaceCheckpoint(playerid, 0,-2423.4453,-116.1348,35.0505,-2430.5403,-197.4688,35.0630, 5.0);
				}
			case CHECKPOINT_19:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_20;//
					SetPlayerRaceCheckpoint(playerid, 0,-2430.5403,-197.4688,35.0630,-2512.2915,-207.9353,24.7875, 5.0);
				}
			case CHECKPOINT_20:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_21;//
					SetPlayerRaceCheckpoint(playerid, 0,-2512.2915,-207.9353,24.7875,-2698.0916,-208.0479,3.9219, 5.0);
				}
			case CHECKPOINT_21:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_22;//
					SetPlayerRaceCheckpoint(playerid, 0,-2698.0916,-208.0479,3.9219,-2704.1455,-177.0296,3.9226, 5.0);
				}
			case CHECKPOINT_22:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_23;//
					SetPlayerRaceCheckpoint(playerid, 0,-2704.1455,-177.0296,3.9226,-2703.7417,129.7518,3.9227, 5.0);
				}
			case CHECKPOINT_23:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_24;//
					SetPlayerRaceCheckpoint(playerid, 0,-2703.7417,129.7518,3.9227,-2704.3784,324.0871,3.9407, 5.0);
				}
			case CHECKPOINT_24:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_25;//
					SetPlayerRaceCheckpoint(playerid, 0,-2704.3784,324.0871,3.9407,-2687.5083,333.3723,3.9292, 5.0);
				}
			case CHECKPOINT_25:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_26;//
					SetPlayerRaceCheckpoint(playerid, 0,-2687.5083,333.3723,3.9292,-2660.8440,347.2428,3.9233, 5.0);
				}
			case CHECKPOINT_26:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_27;//
					SetPlayerRaceCheckpoint(playerid, 0,-2660.8440,347.2428,3.9233,-2660.1770,402.8072,3.8754, 5.0);
				}
			case CHECKPOINT_27:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_28;//
					SetPlayerRaceCheckpoint(playerid, 0,-2660.1770,402.8072,3.8754,-2695.0830,417.7195,3.8885, 5.0);
				}
			case CHECKPOINT_28:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_29;//
					SetPlayerRaceCheckpoint(playerid, 0,-2695.0830,417.7195,3.8885,-2703.8547,455.9360,3.9302, 5.0);
				}
			case CHECKPOINT_29:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_30;//
					SetPlayerRaceCheckpoint(playerid, 0,-2703.8547,455.9360,3.9302,-2747.8162,554.4193,14.1497, 5.0);
				}
			case CHECKPOINT_30:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_31;//
					SetPlayerRaceCheckpoint(playerid, 0,-2747.8162,554.4193,14.1497,-2671.2651,562.7997,14.2034, 5.0);
				}
			case CHECKPOINT_31:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_32;//
					SetPlayerRaceCheckpoint(playerid, 0,-2671.2651,562.7997,14.2034,-2538.5269,562.7781,14.2080, 5.0);
				}
			case CHECKPOINT_32:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_33;//
					SetPlayerRaceCheckpoint(playerid, 0,-2538.5269,562.7781,14.2080,-2525.4382,600.6388,21.0344, 5.0);
				}
			case CHECKPOINT_33:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_34;//
					SetPlayerRaceCheckpoint(playerid, 0,-2525.4382,600.6388,21.0344,-2523.5493,815.4084,49.6125, 5.0);
				}
			case CHECKPOINT_34:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_35;//
					SetPlayerRaceCheckpoint(playerid, 0,-2523.5493,815.4084,49.6125,-2524.7771,1012.3589,77.9656, 5.0);
				}
			case CHECKPOINT_35:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_36;//
					SetPlayerRaceCheckpoint(playerid, 0,-2524.7771,1012.3589,77.9656,-2519.0784,1102.1168,55.3142, 5.0);
				}
			case CHECKPOINT_36:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_37;//
					SetPlayerRaceCheckpoint(playerid, 0,-2519.0784,1102.1168,55.3142,-2543.8076,1121.2388,55.3183, 5.0);
				}
			case CHECKPOINT_37:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_38;//
					SetPlayerRaceCheckpoint(playerid, 0,-2543.8076,1121.2388,55.3183,-2654.0317,1195.3846,55.1729, 5.0);
				}
			case CHECKPOINT_38:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_40;//
					SetPlayerRaceCheckpoint(playerid, 0,-2654.0317,1195.3846,55.1729,-2534.5251,1185.9242,42.3106, 5.0);
				}
			case CHECKPOINT_40:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_41;//
					SetPlayerRaceCheckpoint(playerid, 0,-2534.5251,1185.9242,42.3106,-2454.5630,1222.4424,34.7949, 5.0);
				}
			case CHECKPOINT_41:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_42;//
					SetPlayerRaceCheckpoint(playerid, 0,-2454.5630,1222.4424,34.7949,-2453.9104,1363.3192,6.7814, 5.0);
				}
			case CHECKPOINT_42:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_43;//
					SetPlayerRaceCheckpoint(playerid, 0,-2453.9104,1363.3192,6.7814,-2327.0271,1363.4899,6.7821, 5.0);
				}
			case CHECKPOINT_43:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_44;//
					SetPlayerRaceCheckpoint(playerid, 0,-2327.0271,1363.4899,6.7821,-2280.0376,1333.7422,6.7823, 5.0);
				}
			case CHECKPOINT_44:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_45;//
					SetPlayerRaceCheckpoint(playerid, 0,-2280.0376,1333.7422,6.7823,-2061.0693,1305.2551,6.8781, 5.0);
				}
			case CHECKPOINT_45:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_46;//
					SetPlayerRaceCheckpoint(playerid, 0,-2061.0693,1305.2551,6.8781,-2009.4646,1285.4056,6.7899, 5.0);
				}
			case CHECKPOINT_46:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_47;//
					SetPlayerRaceCheckpoint(playerid, 0,-2009.4646,1285.4056,6.7899,-1912.2991,1291.7936,6.7814, 5.0);
				}
			case CHECKPOINT_47:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_48;//
					SetPlayerRaceCheckpoint(playerid, 0,-1912.2991,1291.7936,6.7814,-1760.2518,1337.8812,6.7821, 5.0);
				}
			case CHECKPOINT_48:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_49;//
					SetPlayerRaceCheckpoint(playerid, 0,-1760.2518,1337.8812,6.7821,-1639.5083,1216.5533,6.7822, 5.0);
				}
			case CHECKPOINT_49:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_50;//
					SetPlayerRaceCheckpoint(playerid, 0,-1639.5083,1216.5533,6.7822,-1607.8207,1030.2471,6.7816, 5.0);
				}
			case CHECKPOINT_50:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_51;//
					SetPlayerRaceCheckpoint(playerid, 0,-1607.8207,1030.2471,6.7816,-1563.3192,814.5651,6.7817, 5.0);
				}
			case CHECKPOINT_51:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_52;//
					SetPlayerRaceCheckpoint(playerid, 0,-1563.3192,814.5651,6.7817,-1563.3192,743.6430,6.7820, 5.0);
				}
			case CHECKPOINT_52:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_53;//
					SetPlayerRaceCheckpoint(playerid, 0,-1563.3192,743.6430,6.7820,-1703.4800,735.9361,24.4788, 5.0);
				}
			case CHECKPOINT_53:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_54;//
					SetPlayerRaceCheckpoint(playerid, 0,-1703.4800,735.9361,24.4788,-1716.9756,700.5042,24.4776, 5.0);
				}
			case CHECKPOINT_54:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_55;//
					SetPlayerRaceCheckpoint(playerid, 0,-1716.9756,700.5042,24.4776,-1823.9097,610.2460,34.7587, 5.0);
				}
			case CHECKPOINT_55:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_56;//
					SetPlayerRaceCheckpoint(playerid, 0,-1823.9097,610.2460,34.7587,-1993.1875,609.6210,34.7618, 5.0);
				}
			case CHECKPOINT_56:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_57;//
					SetPlayerRaceCheckpoint(playerid, 0,-1993.1875,609.6210,34.7618,-2007.4740,530.2824,34.7916, 5.0);
				}
			case CHECKPOINT_57:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_58;//
					SetPlayerRaceCheckpoint(playerid, 0,-2007.4740,530.2824,34.7916,-2008.0841,466.2849,34.7550, 5.0);
				}
			case CHECKPOINT_58:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_59;//
					SetPlayerRaceCheckpoint(playerid, 0,-2008.0841,466.2849,34.7550,-2009.4291,191.2641,27.2783, 5.0);
				}
			case CHECKPOINT_59:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_60;//
					SetPlayerRaceCheckpoint(playerid, 0,-2009.4291,191.2641,27.2783,-2009.0417,-13.3749,34.3996, 5.0);
				}
			case CHECKPOINT_60:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_61;//
					SetPlayerRaceCheckpoint(playerid, 0,-2009.0417,-13.3749,34.3996,-2008.8506,-57.0414,34.9097, 5.0);
				}
			case CHECKPOINT_61:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_62;//
					SetPlayerRaceCheckpoint(playerid, 0,-2008.8506,-57.0414,34.9097,-2036.2216,-67.9920,34.9151, 5.0);
				}
			case CHECKPOINT_62:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_63;//
					SetPlayerRaceCheckpoint(playerid, 0,-2036.2216,-67.9920,34.9151,-2047.7125,-81.9187,34.9092, 5.0);
				}
			case CHECKPOINT_63:
				{
					LessonStat[playerid]++;
					pLessonCar[playerid] = CHECKPOINT_64;
					SetPlayerRaceCheckpoint(playerid, 1,-2047.7125,-81.9187,34.9092,0.0,0.0,0.0, 5.0);
				}
			case CHECKPOINT_64:
				{
					if (AntiCheatGetVehicleHealth(GetPlayerVehicleID(playerid)) >= 850)
					{
						SCM(playerid, COLOR_GREEN, " Припаркуйте автомобиль и пройдите в здание автошколы");
						SetPVarInt(playerid,"givecarlic",1);
						DisablePlayerRaceCheckpoint(playerid);
					}
					else
					{
						SCM(playerid, COLOR_GREEN, " Припаркуйте автомобиль и пройдите в здание автошколы");
						SetPVarInt(playerid,"givecarlic",2);
						DisablePlayerRaceCheckpoint(playerid);
					}
				}
			}
		}
		if(GetPVarInt(playerid, "TypeBus") > 0)
		{
			new type = GetPVarInt(playerid, "TypeBus"), e_type, name[35];
			switch(GetPVarInt(playerid, "TypeBus"))
			{
			case 1: name = "ВнутриГородской ЛС";
			case 2: name = "ВнутриГородской СФ";
			case 3: name = "ВнутриГородской ЛВ";
			case 4: name = "АвтоВокзал LS << >> Автошкола SF";
			case 5: name = "АвтоВокзал LS << >> АвтоВокзал LV";
			case 6: name = "АвтоВокзал LS << >> Заводы";
			}
			if(type == 1)
			{
				if(pPressed[playerid] == 7 || pPressed[playerid] == 16 || pPressed[playerid] == 24 || pPressed[playerid] == 38 || pPressed[playerid] == 66 || pPressed[playerid] == 74 || pPressed[playerid] == 88 || pPressed[playerid] == 107  || pPressed[playerid] == 111|| pPressed[playerid] == 127)
				{
					if(GetPVarInt(playerid, "BusStop") == 0)
					{
						SetPVarInt(playerid, "TimeBus", 11);
						SCM(playerid, COLOR_GREEN, " Остановите автобус и подождите пассажиров!");
						format(string, 90, " Автобус отъезжает через 10 секунд");
						ProxDetector(30.0, playerid, string, COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						if(pPressed[playerid] == 127) pPressed[playerid] = 0;
						else pPressed[playerid]++;
						new i = pPressed[playerid];
						SetPlayerRaceCheckpoint(playerid,0,BusCityLS[i][0],BusCityLS[i][1],BusCityLS[i][2],BusCityLS[i][3],BusCityLS[i][4],BusCityLS[i][5],7.0);
						SetPVarInt(playerid, "BusStop", 0);
					}
				}
				else
				{
					pPressed[playerid]++;
					SetPVarInt(playerid, "BusMoney", GetPVarInt(playerid, "BusMoney") + 50);
					pData[playerid][pPayCheck] += 50;
					if(pPressed[playerid] == 7 || pPressed[playerid] == 16 || pPressed[playerid] == 24 || pPressed[playerid] == 38 || pPressed[playerid] == 66 || pPressed[playerid] == 74 || pPressed[playerid] == 88 || pPressed[playerid] == 107  || pPressed[playerid] == 111|| pPressed[playerid] == 132) e_type = 1;
					else e_type = 0;
					new i = pPressed[playerid];
					//SendMes(playerid,COLOR_WHITE," pPressed = %i",pPressed[playerid]);
					SetPlayerRaceCheckpoint(playerid,e_type,BusCityLS[i][0],BusCityLS[i][1],BusCityLS[i][2],BusCityLS[i][3],BusCityLS[i][4],BusCityLS[i][5],7.0);
				}
			}
			if(type == 2) // 9, 46, 82 / 91
			{
				if(pPressed[playerid] == 3 || pPressed[playerid] == 10 || pPressed[playerid] == 20 || pPressed[playerid] == 32 || pPressed[playerid] == 35 || pPressed[playerid] == 40 || pPressed[playerid] == 46 || pPressed[playerid] == 53 || pPressed[playerid] == 56)
				{
					if(GetPVarInt(playerid, "BusStop") == 0)
					{
						SetPVarInt(playerid, "TimeBus", 11);
						SCM(playerid, COLOR_GREEN, " Остановите автобус и подождите пассажиров!");
						format(string, 90, " Автобус отъезжает через 10 секунд");
						ProxDetector(30.0, playerid, string, COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						if(pPressed[playerid] == 56) pPressed[playerid] = 0;
						else pPressed[playerid]++;
						new i = pPressed[playerid];
						SetPlayerRaceCheckpoint(playerid,0,BusCitySF[i][0],BusCitySF[i][1],BusCitySF[i][2],BusCitySF[i][3],BusCitySF[i][4],BusCitySF[i][5],7.0);
						SetPVarInt(playerid, "BusStop", 0);
					}
				}
				else
				{
					pPressed[playerid]++;
					SetPVarInt(playerid, "BusMoney", GetPVarInt(playerid, "BusMoney") + 70);
					pData[playerid][pPayCheck] += 70;
					if(pPressed[playerid] == 3 || pPressed[playerid] == 10 || pPressed[playerid] == 20 || pPressed[playerid] == 32 || pPressed[playerid] == 35 || pPressed[playerid] == 40 || pPressed[playerid] == 46 || pPressed[playerid] == 53 || pPressed[playerid] == 56) e_type = 1;
					else e_type = 0;
					new i = pPressed[playerid];
					SetPlayerRaceCheckpoint(playerid,e_type,BusCitySF[i][0],BusCitySF[i][1],BusCitySF[i][2],BusCitySF[i][3],BusCitySF[i][4],BusCitySF[i][5],7.0);
				}
			}
			if(type == 3)
			{
				if(pPressed[playerid] == 7 || pPressed[playerid] == 10 || pPressed[playerid] == 18 || pPressed[playerid] == 24 || pPressed[playerid] == 32 || pPressed[playerid] == 39 || pPressed[playerid] == 51 || pPressed[playerid] == 64 || pPressed[playerid] == 71  || pPressed[playerid] == 79)
				{
					if(GetPVarInt(playerid, "BusStop") == 0)
					{
						SetPVarInt(playerid, "TimeBus", 11);
						SCM(playerid, COLOR_GREEN, " Остановите автобус и подождите пассажиров!");
						format(string, 90, " Автобус отъезжает через 10 секунд");
						ProxDetector(30.0, playerid, string, COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						if(pPressed[playerid] == 79) pPressed[playerid] = 3;
						else pPressed[playerid]++;
						new i = pPressed[playerid];
						SetPlayerRaceCheckpoint(playerid,0,BusCityLV[i][0],BusCityLV[i][1],BusCityLV[i][2],BusCityLV[i][3],BusCityLV[i][4],BusCityLV[i][5],7.0);
						SetPVarInt(playerid, "BusStop", 0);
					}
				}
				else
				{
					pPressed[playerid]++;
					SetPVarInt(playerid, "BusMoney", GetPVarInt(playerid, "BusMoney") + 60);
					pData[playerid][pPayCheck] += 60;
					if(pPressed[playerid] == 7 || pPressed[playerid] == 10 || pPressed[playerid] == 18 || pPressed[playerid] == 24 || pPressed[playerid] == 32 || pPressed[playerid] == 39 || pPressed[playerid] == 51 || pPressed[playerid] == 64 || pPressed[playerid] == 71 || pPressed[playerid] == 79) e_type = 1;
					else e_type = 0;
					new i = pPressed[playerid];
					SetPlayerRaceCheckpoint(playerid,e_type,BusCityLV[i][0],BusCityLV[i][1],BusCityLV[i][2],BusCityLV[i][3],BusCityLV[i][4],BusCityLV[i][5],7.0);
				}
			}
			if(type == 4)
			{
				if(pPressed[playerid] == 0 || pPressed[playerid] == 8 || pPressed[playerid] == 45 || pPressed[playerid] == 48 || pPressed[playerid] == 52 || pPressed[playerid] == 86|| pPressed[playerid] == 96)
				{
					if(GetPVarInt(playerid, "BusStop") == 0)
					{
						SetPVarInt(playerid, "TimeBus", 11);
						SCM(playerid, COLOR_GREEN, " Остановите автобус и подождите пассажиров!");
						format(string, 90, " Автобус АвтоВокзал LS << >> Автошкола SF  отъезжает через 10 секунд");
						ProxDetector(30.0, playerid, string, COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						if(pPressed[playerid] == 95) pPressed[playerid] = 0;
						else pPressed[playerid]++;
						new i = pPressed[playerid];
						SetPlayerRaceCheckpoint(playerid,0,BusSchool[i][0],BusSchool[i][1],BusSchool[i][2],BusSchool[i][3],BusSchool[i][4],BusSchool[i][5],7.0);
						SetPVarInt(playerid, "BusStop", 0);
					}
				}
				else
				{
					pPressed[playerid]++;
					SetPVarInt(playerid, "BusMoney", GetPVarInt(playerid, "BusMoney") + 40);
					pData[playerid][pPayCheck] += 40;
					if(pPressed[playerid] == 0 || pPressed[playerid] == 8 || pPressed[playerid] == 45 || pPressed[playerid] == 48 || pPressed[playerid] == 52 || pPressed[playerid] == 86|| pPressed[playerid] == 96) e_type = 1;
					else e_type = 0;
					new i = pPressed[playerid];
					SetPlayerRaceCheckpoint(playerid,e_type,BusSchool[i][0],BusSchool[i][1],BusSchool[i][2],BusSchool[i][3],BusSchool[i][4],BusSchool[i][5],7.0);
				}
			}
			if(type == 5)
			{
				if(pPressed[playerid] == 0 || pPressed[playerid] == 10 || pPressed[playerid] == 36  || pPressed[playerid] == 60 || pPressed[playerid] == 69)
				{
					if(GetPVarInt(playerid, "BusStop") == 0)
					{
						SetPVarInt(playerid, "TimeBus", 11);
						SCM(playerid, COLOR_GREEN, " Остановите автобус и подождите пассажиров!");
						format(string, 90, " Автобус АвтоВокзал LS << >> АвтоВокзал LV отъезжает через 10 секунд");
						ProxDetector(30.0, playerid, string, COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						if(pPressed[playerid] == 69) pPressed[playerid] = 0;
						else pPressed[playerid]++;
						new i = pPressed[playerid];
						SetPlayerRaceCheckpoint(playerid,0,BusLSLV[i][0],BusLSLV[i][1],BusLSLV[i][2],BusLSLV[i][3],BusLSLV[i][4],BusLSLV[i][5],7.0);
						SetPVarInt(playerid, "BusStop", 0);
					}
				}
				else
				{
					pPressed[playerid]++;
					SetPVarInt(playerid, "BusMoney", GetPVarInt(playerid, "BusMoney") + 60);
					pData[playerid][pPayCheck] += 60;
					if(pPressed[playerid] == 0 || pPressed[playerid] == 10 || pPressed[playerid] == 36  || pPressed[playerid] == 60 || pPressed[playerid] == 69) e_type = 1;
					else e_type = 0;
					new i = pPressed[playerid];
					SetPlayerRaceCheckpoint(playerid,e_type,BusLSLV[i][0],BusLSLV[i][1],BusLSLV[i][2],BusLSLV[i][3],BusLSLV[i][4],BusLSLV[i][5],7.0);
				}
			}
			if(type == 6)
			{
				if(pPressed[playerid] == 0 || pPressed[playerid] == 10 || pPressed[playerid] == 36  || pPressed[playerid] == 60 || pPressed[playerid] == 69)
				{
					if(GetPVarInt(playerid, "BusStop") == 0)
					{
						SetPVarInt(playerid, "TimeBus", 11);
						SCM(playerid, COLOR_GREEN, " Остановите автобус и подождите пассажиров!");
						format(string, 90, " Автобус АвтоВокзал LS << >> Заводы отъезжает через 10 секунд");
						ProxDetector(30.0, playerid, string, COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					}
					else
					{
						if(pPressed[playerid] == 69) pPressed[playerid] = 0;
						else pPressed[playerid]++;
						new i = pPressed[playerid];
						SetPlayerRaceCheckpoint(playerid,0,BusLSZavodi[i][0],BusLSZavodi[i][1],BusLSZavodi[i][2],BusLSZavodi[i][3],BusLSZavodi[i][4],BusLSZavodi[i][5],7.0);
						SetPVarInt(playerid, "BusStop", 0);
					}
				}
				else
				{
					pPressed[playerid]++;
					SetPVarInt(playerid, "BusMoney", GetPVarInt(playerid, "BusMoney") + 60);
					pData[playerid][pPayCheck] += 60;
					if(pPressed[playerid] == 0 || pPressed[playerid] == 10 || pPressed[playerid] == 36  || pPressed[playerid] == 60 || pPressed[playerid] == 69) e_type = 1;
					else e_type = 0;
					new i = pPressed[playerid];
					SetPlayerRaceCheckpoint(playerid,e_type,BusLSZavodi[i][0],BusLSZavodi[i][1],BusLSZavodi[i][2],BusLSZavodi[i][3],BusLSZavodi[i][4],BusLSZavodi[i][5],7.0);
				}
			}
		}
	}
	return true;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
	return true;
}

public OnRconCommand(cmd[])
{
	return true;
}

public OnRconLoginAttempt(ip[], password[], success) return false;

publics: OnGatesOpening(areaid, Float:xOffset, Float:zOffset, Float:speedGat)
{
	if(areaid >= gServerGates[eAutoSchoolGates] && areaid <= gServerGates[eAutoSchoolGates])
	{
		
		new objectid = Streamer_GetIntData(STREAMER_TYPE_AREA, areaid, E_STREAMER_EXTRA_ID);
		if(!IsValidDynamicObject(objectid))
			return 1;

		new objectflag = Streamer_GetIntData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_EXTRA_ID);
		if(objectflag == 0xB || objectflag == 0xFF || objectflag == 0x1) // if gate close
			return 1;

		new Float:x, Float:y, Float:z;
		Streamer_GetFloatData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_X, x);
		Streamer_GetFloatData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_Y, y);
		Streamer_GetFloatData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_Z, z);
		MoveDynamicObject(objectid, x-xOffset, y, z-zOffset, speedGat);
		Streamer_SetIntData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_EXTRA_ID, 0xFF);
		//SetTimerEx(#OnGatesOpening, 4000, false, "dfff", objectid, xOffset, 0.0001, 0.52);
	}
	return 1;
}

public OnDynamicObjectMoved(STREAMER_TAG_OBJECT:objectid)
{
	new objectflag = Streamer_GetIntData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_EXTRA_ID);
	if(objectflag == 0x1) // open
		objectflag = 0xA;
	else if(objectflag == 0xFF) // closing
		objectflag = 0xB;
	Streamer_SetIntData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_EXTRA_ID, objectflag);
	printf("OnDynamicObjectMoved > %d", objectflag);
	return 1;
}
publics: WheelTooo(idx)
{

	WheelTick[idx] ++;
	new WheelX = random(100);
	foreach(new i: Player)
	{
 		if( IsPlayerInDynamicArea(i, Fortune[idx]) )
   		{
			switch(WheelX)
			{
				case 0..47: GameTextForPlayer(i, "~g~X2", 4000, 6);
				case 48..71: GameTextForPlayer(i, "~y~X4", 4000, 6);
				case 72..83: GameTextForPlayer(i, "~b~X8", 4000, 6);
				case 84..89: GameTextForPlayer(i, "~w~X16", 4000, 6);
				case 90..93: GameTextForPlayer(i, "~p~X32", 4000, 6);
				default: GameTextForPlayer(i, "~r~X0", 4000, 6);
			}
		}
	}
	if(WheelTick[idx] > 30)
	{
	    KillTimer(WheelTimer[idx]);
	    WheelTimer[idx] = -1;
	    WheelTick[idx] = 0;
	    foreach(new i: Player)
		{
		    if( IsPlayerInDynamicArea(i, Fortune[idx]) )
		    {
				switch(WheelX)
				{
					case 0..47: {
					    SCM(i, 0xE09B11FF, "Выпало X2");
					    if(WheelBet[i] == 1)//x2
						{
							SendMes(i, 0xE09B11FF, " Вы выиграли $%d",WheelBetMoney[i]*2);
							pData[i][pCash] += WheelBetMoney[i]*2;
							PlayerPlaySound(i, 31205, 0.0, 0.0, 0.0);
						}
					}
					case 48..71: {
					    SCM(i, 0xE09B11FF, "Выпало X4");
					    if(WheelBet[i] == 2)//x4
						{
							SendMes(i, COLOR_BLUEGREEN, " Вы выиграли $%d",WheelBetMoney[i]*4);
							pData[i][pCash] += WheelBetMoney[i]*4;
							PlayerPlaySound(i, 31205, 0.0, 0.0, 0.0);
						}
					}
					case 72..83: {
					    SCM(i, 0xE09B11FF, "Выпало X8");
					    if(WheelBet[i] == 3)//x8
						{
							SendMes(i, COLOR_BLUEGREEN, " Вы выиграли $%d",WheelBetMoney[i]*8);
							pData[i][pCash] += WheelBetMoney[i]*8;
							PlayerPlaySound(i, 31205, 0.0, 0.0, 0.0);
						}
					}
					case 84..89: {
					    SCM(i, 0xE09B11FF, "Выпало X16");
					    if(WheelBet[i] == 4)//x16
						{
							SendMes(i, COLOR_BLUEGREEN, " Вы выиграли $%d",WheelBetMoney[i]*16);
							pData[i][pCash] += WheelBetMoney[i]*16;
							PlayerPlaySound(i, 31205, 0.0, 0.0, 0.0);
						}
					}
					case 90..93: {//x32
					    SCM(i, 0xE09B11FF, "Выпало X32");
					    if(WheelBet[i] == 5)
						{
							SendMes(i, COLOR_BLUEGREEN, " Вы выиграли $%d",WheelBetMoney[i]*32);
							pData[i][pCash] += WheelBetMoney[i]*32;
							PlayerPlaySound(i, 31205, 0.0, 0.0, 0.0);
						}
					}
					default: {//x0
					    SCM(i, 0xE09B11FF, "Выпало X0");
					}
				}
			}
		}
	}
}
public OnPlayerLeaveDynamicArea(playerid, areaid) 
{
	if(areaid >= atm_area[0] && areaid <= atm_area[1])
	{
		DeletePVar(playerid, "vozle_atm");
		return 1;
	}
	if(areaid >= kvart_info[0][k_area] && areaid <= kvart_info[total_kvart-1][k_area])
	{
		if(GetPlayerVirtualWorld(playerid) < 50000)
		{
			DeletePVar(playerid, "id_kvart_enter");
		}
		return 1;
	}
	if(GetPVarInt(playerid, !#pPickHouseId))
	{
		if(GetPlayerVirtualWorld(playerid) == 0) 
		{
			DeletePVar(playerid, !#pPickHouseId);
		}
	}

	if(areaid >= anti_dm_zone[0] && areaid <= anti_dm_zone[1])
	{
		DeletePVar(playerid, "in_anti_dm_zone");
		//return 1;
	}
	return 1;
}
public OnPlayerEnterDynamicArea(playerid, areaid)
{
	if(!pData[playerid][pLogin]) return true;
	if(GetPVarInt(playerid, "no_need_area"))
	{
		DeletePVar(playerid, "no_need_area");
		return 1;
	}
	if(areaid >= atm_area[0] && areaid <= atm_area[1])
	{
		SetPVarInt(playerid, "vozle_atm", 1);
		return 1;
	}
	if(areaid == pravila_pick)
	{
		new mes[1560];
		strcat(mes,"{ffffff}1. Игровой процесс.\n\
		{ef5350}Запрещено:{ffffff}\n\
		- Использование любых программ скриптов читов и.т.п. дающие нечестное преймущество в игре.\n\
		- Использование багов (Ошибок, Неисправностей мода).\n\
		- Использование ESK в целях ухода от погони/смерти.\n\
		- Убивать игроков на спавне (Место возраждения, базы организация).\n");
	    strcat(mes,"- Убивать игроков при помощи транспорта (Давить, Стрелять с водительского места).\n\
		- Убийство/нанесение физического вреда игрокам без причины (ДМ - Death Match).\n\
		- Воображение из себя супер героя (Powergaming).\n\
		- Развод игроков на деньги.\n\
		- Просьбы, вымогательство паролей от аккаунта.\n");
		strcat(mes,"- Выдача себе за членов администрации.\n\
		- Злоупотребление игровыми возможностями для создания неудобств игрокам.\n\n\
		2. Ник в игре.\n\
		(сменить ник можно через /mm >> Сменить ник)\n\
		- Ник должен состоять из Имени_Фамилии с заглавных букв.\n");
		strcat(mes,"{ef5350}Запрещено:{ffffff}\n\
		- Использовать чужие (Уже кем-то занятые) ники.\n\
		- Использовать ники, содержащие Нецензурные или оскорбительные слова.\n\
		- Отправлять более одной заявки в час (Исключение: Просьба администрации).\n\
		- Если вам отказали в смене ника, значит нельзя.");		
		ShowPlayerDialog(playerid,99,0,"Правила сервера",mes,"Далее","Закрыть");
		return 1;
	}

	else if(areaid == rabota1)
	{
		new rabotadialog[2148];
		format(rabotadialog,sizeof(rabotadialog), "%s%s%s%s%s%s%s%s%s%s%s%s",
		rabotaMSG[0],rabotaMSG[1],rabotaMSG[2],rabotaMSG[3],rabotaMSG[4],rabotaMSG[5],rabotaMSG[6],rabotaMSG[7],rabotaMSG[8],rabotaMSG[9],rabotaMSG[10],rabotaMSG[11]);
		ShowPlayerDialog(playerid,133,DIALOG_STYLE_MSGBOX, "Информация о работе", rabotadialog, "Готово", "");
	}
	else if(areaid == sudepic[0])
	{
		if(IsAArm(playerid) || IsACop(playerid) || pData[playerid][pMember] == 2 || IsAMayor(playerid) || copkey[playerid] == 1)
		{
			SetPlayerPos(playerid,-2784.4124,379.9261,2004.4155);
			SetPlayerFacingAngle(playerid, 88.3087);
			SetPlayerVirtualWorld(playerid, 2);
		}
		else SCM(playerid, COLOR_REDD, " Дверь заперта!  У вас нет пропуска");
	}
	else if(areaid == sudepic[1])
	{
		SetPlayerPos(playerid,-2758.7830,374.9568,4.3366);
		SetPlayerFacingAngle(playerid, 269.9643);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(areaid == ammonac[0])
	{
		if(!PlayerLicenses(playerid, LICENSES_GET, LIC_WEAPONS)) return SCM(playerid, COLOR_RED, " У вас нет лицензии на оружие");
		SetPlayerInterior(playerid,7);
		SetPlayerPos(playerid,314.4596,-141.2016,999.6016);
		SetPlayerFacingAngle(playerid, 16.0505);
		SetPlayerVirtualWorld(playerid, 0);
		if(!GetPVarInt(playerid,"checkpoint")) SetPlayerCheckpoint(playerid,313.7471,-133.8828,999.6016,1.5);
		PicCP[playerid] = 3;
	}
	else if(areaid == nikname)
	{
		ShowPlayerDialog(playerid,10352,DIALOG_STYLE_MSGBOX, "Смена имени","Вы желаете добавить заявку на смену имени?", "Добавить", "Отмена");
		return true;
	}
	else if(areaid == nikname2)
	{
		ShowPlayerDialog(playerid,10352,DIALOG_STYLE_MSGBOX, "Смена имени","Вы желаете добавить заявку на смену имени?", "Добавить", "Отмена");
		return true;
	}
	else if(areaid == ammonac[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-2625.8115,211.2747,4.6192);
		SetPlayerFacingAngle(playerid, 171.4908);
		SetPlayerVirtualWorld(playerid,0);
		DisablePlayerCheckpoint(playerid);
		PicCP[playerid] = 0;
	}
	else if(areaid == ammonac[2])
	{
		if(!PlayerLicenses(playerid, LICENSES_GET, LIC_WEAPONS)) return SCM(playerid, COLOR_RED, " У вас нет лицензии на оружие");
		SetPlayerInterior(playerid,1);
		SetPlayerPos(playerid,286.4246,-39.4431,1001.5156);
		SetPlayerFacingAngle(playerid, 180.1923);
		SetPlayerVirtualWorld(playerid, 0);
		if(!GetPVarInt(playerid,"checkpoint")) SetPlayerCheckpoint(playerid,295.4419,-37.9094,1001.5156,1.5);
		PicCP[playerid] = 3;
	}
	else if(areaid == ammonac[3])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,2157.0044,943.3574,10.8203);
		SetPlayerFacingAngle(playerid, 87.4521);
		SetPlayerVirtualWorld(playerid,0);
		DisablePlayerCheckpoint(playerid);
		PicCP[playerid] = 0;
	}
	else if(areaid == ammonac[4])
	{
		if(!PlayerLicenses(playerid, LICENSES_GET, LIC_WEAPONS)) return SCM(playerid, COLOR_RED, " У вас нет лицензии на оружие");
		SetPlayerInterior(playerid,4);
		SetPlayerPos(playerid,285.7668,-85.0216,1001.5156);
		SetPlayerFacingAngle(playerid, 357.9616);
		SetPlayerVirtualWorld(playerid, 0);
		if(!GetPVarInt(playerid,"checkpoint")) SetPlayerCheckpoint(playerid,296.9124,-80.0943,1001.5156,1.5);
		PicCP[playerid] = 3;
	}
	else if(areaid == ammonac[5])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,1366.3022,-1279.4131,13.5469);
		SetPlayerFacingAngle(playerid, 87.0350);
		SetPlayerVirtualWorld(playerid,0);
		DisablePlayerCheckpoint(playerid);
		PicCP[playerid] = 0;
	}
	else if(areaid == skills[0])
	{
		SetPlayerPos(playerid,303.6031,-159.3046,999.5938);
		SetPlayerFacingAngle(playerid, 93.0350);
	}
	else if(areaid == skills[1])
	{
		SetPlayerPos(playerid,308.4442,-160.3095,999.5938);
		SetPlayerFacingAngle(playerid, 269.0350);
	}
	else if(areaid == caligula[0])
	{
		//for(new i; i < MAX_BONE; i++) if(BoneInfo[i][Crupie] == playerid || GetPVarInt(playerid,"BoneStol")) return SCM(playerid,COLOR_GREY," Необходимо выйти из-за стола");
		if(GetPVarInt(playerid,"CasinoRank")) DeletePVar(playerid,"CasinoRank"), SetPlayerSkin(playerid,pData[playerid][pChar][0]);
		SetPlayerPos(playerid,2192.89,1677.09,12.3672);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
	}
	
	else if(areaid == caligula[2])
	{
		if(GetPlayerSkin(playerid) == 137 || GetPlayerSkin(playerid) == 212 || GetPlayerSkin(playerid) == 230
				|| GetPlayerSkin(playerid) == 78 || GetPlayerSkin(playerid) == 200 || GetPlayerSkin(playerid) == 79) return SCM(playerid,COLOR_GREY," Вы не прошли фейс контроль");
		SetPlayerPos(playerid,2233.79,1711.64,1011.58);
		SetPlayerInterior(playerid,1);
		SetPlayerVirtualWorld(playerid,999);
	}
	else if(areaid == monitoring) return ShowPlayerDialog(playerid,1755,DIALOG_STYLE_LIST,"Мониторинг бизнесов","Бары и клубы\nЗакусочные\nМагазины 24/7\nЗаправки", "Далее", "Отмена");
	
	else if(areaid == pickcars[4])
	{
		if(GetPVarInt(playerid,"job_auto")) return ShowPlayerDialog(playerid,1336,DIALOG_STYLE_MSGBOX,"Автоугонщик"," Вы уже взяли контракт\nВы хотите его отменить?", "Да", "Отмена");
		else if(pData[playerid][pMember] != 0 && !IsAGang(playerid)) return SCM(playerid,COLOR_BLUE, " Проваливай! Не дай бог настучишь копам!");
		else if(pData[playerid][pJob] != 65) return ShowPlayerDialog(playerid,1335,DIALOG_STYLE_MSGBOX,"Автоугонщик","Ты хочешь работать у нас?", "Да", "Нет");
		else if(pData[playerid][pLevel] < 2) return SCM(playerid,COLOR_GREY, " Доступно со второго уровня!");
		ShowPlayerDialog(playerid,1334,DIALOG_STYLE_LIST,"Выбор автомобиля","Nope Class\nD Class\nC Class\nB Class\nA Class", "Выбор", "Отмена");
	}
	else if(areaid >= pickcars[0] && areaid <= pickcars[3])
	{
		if(pData[playerid][pJob] != 65) return SCM(playerid,COLOR_BLUE, " Уйди!!! Не дай бог стуканёшь копам!");
		if(tookmoped[playerid] != 0) DestroyVehicleEX(tookmoped[playerid]), tookmoped[playerid] = 0;
		new Float:x,Float:y,Float:z;
		AntiCheatGetPos(playerid,x,y,z);
		tookmoped[playerid] = CreateVehicle_R(462,x,y,z,1,0,0, 300);
		CreatedCars[CreatedCar] = tookmoped[playerid];
		PutPlayerInVehicle(playerid, tookmoped[playerid], 0);
		SetPlayerArmedWeapon(playerid,0);
		UnLockCar(playerid,tookmoped[playerid]);
		return true;
	}
	else if(areaid == dragons[0])
	{
		//for(new i; i < MAX_BONE; i++) if(BoneInfo[i][Crupie] == playerid || GetPVarInt(playerid,"BoneStol")) return SCM(playerid,COLOR_GREY," Необходимо выйти из-за стола");
		if(GetPVarInt(playerid,"CasinoRank")) DeletePVar(playerid,"CasinoRank"), SetPlayerSkin(playerid,pData[playerid][pChar][0]);
		for(new i; i < MAX_BONE; i++) if(BoneInfo[i][Crupie] == playerid) return ExitBone(playerid);
		SetPlayerPos(playerid,2022.8,1007.89,10.8203);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
	}
	else if(areaid == dragons[1])
	{
		if(GetPlayerSkin(playerid) == 137 || GetPlayerSkin(playerid) == 212 || GetPlayerSkin(playerid) == 230
				|| GetPlayerSkin(playerid) == 78 || GetPlayerSkin(playerid) == 200 || GetPlayerSkin(playerid) == 79) return SCM(playerid,COLOR_GREY," Вы не прошли фейс контроль");
		SetPlayerPos(playerid,2016.04,1017.97,996.875);
		SetPlayerInterior(playerid,10);
		SetPlayerVirtualWorld(playerid,1);
	}
	else if(areaid == rob)
	{
		if(robh[playerid] != true)return SCM(playerid,COLOR_GREY," У тебя нет материалов для сдачи");
		robh[playerid] = false;
		pData[playerid][pCash] += 500;
		pData[playerid][pRobHouse] = 1;
		SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
		SetAccountInfo(playerid, pData[playerid][pRobHouse], "pRobHouse");
		SCM(playerid,COLOR_GREY," Вы сдали ограбленное на 500 вирт");
		return true;
	}

	else if(areaid == FormaFracPic[0])
	{
		if(pData[playerid][pMember] == 1)
		{
			if(!GetPVarInt(playerid,"Fraction_Duty")) ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите начать рабочий день?", "Да", "Нет");
			else ShowPlayerDialog(playerid,1011,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите закончить рабочий день?", "Да", "Нет");
		}
	}
	else if(areaid == FormaFracPic[1])
	{
		if(pData[playerid][pMember] == 2)
		{
			if(!GetPVarInt(playerid,"Fraction_Duty")) ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите начать рабочий день?", "Да", "Нет");
			else ShowPlayerDialog(playerid,1011,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите закончить рабочий день?", "Да", "Нет");
		}
	}
	else if(areaid == FormaFracPic[2])
	{
		if(pData[playerid][pMember] == 3)
		{
			if(pData[playerid][pRank] <= 2 && GetPVarInt(playerid,"Fraction_Duty")) return SCM(playerid,COLOR_GREY," Раздевалка доступна с 3 ранга!");
			if(!GetPVarInt(playerid,"Fraction_Duty")) ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите начать рабочий день?", "Да", "Нет");
			else ShowPlayerDialog(playerid,1011,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите закончить рабочий день?", "Да", "Нет");
		}
	}
	else if(areaid == FormaFracPic[3])
	{
		if(pData[playerid][pMember] == 22 && pData[playerid][pJobHeal] == 2 || pData[playerid][pLeader] == 22)
		{
			if(!GetPVarInt(playerid,"Fraction_Duty")) ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите начать рабочий день?", "Да", "Нет");
			else ShowPlayerDialog(playerid,1011,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите закончить рабочий день?", "Да", "Нет");
		}
	}
	else if(areaid == FormaFracPic[4])
	{
		if(pData[playerid][pMember] == 7)
		{
			if(!GetPVarInt(playerid,"Fraction_Duty")) ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите начать рабочий день?", "Да", "Нет");
			else ShowPlayerDialog(playerid,1011,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите закончить рабочий день?", "Да", "Нет");
		}
	}
	else if(areaid == FormaFracPic[6])
	{
		if(pData[playerid][pMember] == 10)
		{
			if(!GetPVarInt(playerid,"Fraction_Duty")) ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите начать рабочий день?", "Да", "Нет");
			else ShowPlayerDialog(playerid,1011,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите закончить рабочий день?", "Да", "Нет");
		}
	}
	else if(areaid == FormaFracPic[7])
	{
		if(pData[playerid][pMember] == 11)
		{
			if(!GetPVarInt(playerid,"Fraction_Duty")) ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите начать рабочий день?", "Да", "Нет");
			else ShowPlayerDialog(playerid,1011,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите закончить рабочий день?", "Да", "Нет");
		}
	}
	else if(areaid == FormaFracPic[9])
	{
		if(pData[playerid][pMember] == 19)
		{
			if(pData[playerid][pRank] <= 2 && GetPVarInt(playerid,"Fraction_Duty")) return SCM(playerid,COLOR_GREY," Раздевалка доступна с 3 ранга!");
			if(!GetPVarInt(playerid,"Fraction_Duty")) ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите начать рабочий день?", "Да", "Нет");
			else ShowPlayerDialog(playerid,1011,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите закончить рабочий день?", "Да", "Нет");
		}
	}
	else if(areaid == FormaFracPic[11])
	{
		if(pData[playerid][pMember] == 21)
		{
			if(!GetPVarInt(playerid,"Fraction_Duty")) ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите начать рабочий день?", "Да", "Нет");
			else ShowPlayerDialog(playerid,1011,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите закончить рабочий день?", "Да", "Нет");
		}
	}
	else if(areaid == FormaFracPic[12])
	{
		if(pData[playerid][pMember] == 22 && pData[playerid][pJobHeal] == 1 || pData[playerid][pLeader] == 22)
		{
			if(!GetPVarInt(playerid,"Fraction_Duty")) ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите начать рабочий день?", "Да", "Нет");
			else ShowPlayerDialog(playerid,1011,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите закончить рабочий день?", "Да", "Нет");
		}
	}
	else if(areaid == FormaFracPic[13])
	{
		if(pData[playerid][pMember] == 22 && pData[playerid][pJobHeal] == 3 || pData[playerid][pLeader] == 22)
		{
			if(!GetPVarInt(playerid,"Fraction_Duty")) ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите начать рабочий день?", "Да", "Нет");
			else ShowPlayerDialog(playerid,1011,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите закончить рабочий день?", "Да", "Нет");
		}
	}
	else if(areaid == FormaFracPic[14])
	{
		if(pData[playerid][pMember] == 22 && pData[playerid][pJobHeal] == 4 || pData[playerid][pLeader] == 22)
		{
			if(!GetPVarInt(playerid,"Fraction_Duty")) ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите начать рабочий день?", "Да", "Нет");
			else ShowPlayerDialog(playerid,1011,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите закончить рабочий день?", "Да", "Нет");
		}
	}

	else if(areaid == derbyrace[0])
	{
		return SCM(playerid,COLOR_GREY," Разработка");
	}
	else if(areaid == derbyrace[1])
	{
		SetPlayerInterior(playerid,1);
		SetPlayerPos(playerid,-2170.4685,638.5978,1052.3750);
		SetPlayerFacingAngle(playerid,355.9632);
	}
	else if(areaid == derbyrace[2])
	{
		//if(Playerderby[playerid] == 1) DerbyPlayers -= 1;
		TogglePlayerControllable(playerid, 1);
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,-2113.5208,-442.3560,38.2776);
		SetPlayerFacingAngle(playerid, 76.4112);
		//Playerderby[playerid] = 0;
	}
	else if(areaid == sportzal[0])
	{
		SetPlayerInterior(playerid,5);
		SetPlayerPos(playerid,771.4412,-2.7885,1000.7279);
		SetPlayerFacingAngle(playerid, 21.2131);
		SetPlayerVirtualWorld(playerid,2);
	}
	else if(areaid == sportzal[1])
	{
		if(GetPVarInt(playerid,"fight")) return true;
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,2097.5024,2489.8967,14.8390);
		SetPlayerFacingAngle(playerid, 180.8626);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
		if(GetPVarInt(playerid,"Fraction_Duty")) SetPlayerSkin(playerid,pData[playerid][pModel]);
		else SetPlayerSkin(playerid,pData[playerid][pChar][0]);
		DeletePVar(playerid,"style_clothes");
		for(new idx = 0; idx < TOTALSTYLELIST; idx++)
		{
			if(strcmp(StyleList[idx][slName],pData[playerid][pName],false) == 0 || strcmp(StyleList[idx][slName_two],pData[playerid][pName],false) == 0)
			{
				strmid(StyleList[idx][slName],StyleList[idx+1][slName], 0, strlen(StyleList[idx+1][slName]), MAX_PLAYER_NAME);
				strmid(StyleList[idx][slName_two],StyleList[idx+1][slName_two], 0, strlen(StyleList[idx+1][slName_two]), MAX_PLAYER_NAME);
				StyleList[idx][slPrice] = StyleList[idx+1][slPrice];
				TOTALSTYLELIST--;
			}
		}
	}
	else if(areaid == style_pickup_clothes)
	{
		if(GetPVarInt(playerid,"fight")) return true;
		if(!GetPVarInt(playerid,"style_clothes"))
		{
			SetPVarInt(playerid,"style_clothes",1);
			if(pData[playerid][pJob] != 6)
			{
				ResetPlayerWeaponEx(playerid);
				SCM(playerid,TEAM_GROVE_COLOR," Вы начали тренировку.");
				SCM(playerid,TEAM_GROVE_COLOR,"Для повышения навыка, наносите удары по груше. Чем разнообразнее удары, тем быстрее растет навык.");
				switch(pData[playerid][pSex])
				{
				case 0: SetPlayerSkin(playerid,random(2)+80);
				default: SetPlayerSkin(playerid, 192);
				}
				switch(pData[playerid][pStyleSkill][1])
				{
				case 0: SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
				case 1: SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
				case 2: SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
				}
			}
			else
			{
				SCM(playerid,TEAM_GROVE_COLOR," Вы начали работу тренера. Чтобы начать бой, используйте /startfight");
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
				switch(pData[playerid][pSex])
				{
				case 0: SetPlayerSkin(playerid,random(2)+203);
				default: SetPlayerSkin(playerid, 41);
				}
			}
		}
		else
		{
			if(GetPVarInt(playerid,"Fraction_Duty")) SetPlayerSkin(playerid,pData[playerid][pModel]);
			else SetPlayerSkin(playerid,pData[playerid][pChar][0]);
			DeletePVar(playerid,"style_clothes");
			switch(pData[playerid][pStyleSelect])
			{
			case 0: SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
			case 1: SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
			case 2: SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
			case 3: SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
			}
		}
		return true;
	}
	else if(areaid >= carpick[0] && areaid <= carpick[2]) GameTextForPlayer(playerid,"~g~print: ~w~\"/buycar\"", 5000, 3);
	else if(areaid == arace)
	{
		if(!PlayerLicenses(playerid, LICENSES_GET, LIC_DRIVER)) return SCM(playerid,COLOR_GREY, " У вас нет водительских прав");
		new null;
		foreach(new i: Player) if(!race_state[i]) null++;
		if(null >= 12) return SCM(playerid,COLOR_GREY, " Слишком много участников");
		if(race_info[1] != 1) return SCM(playerid,COLOR_GREY," Регистрация закрыта");
		if(pData[playerid][pWarns]) return SCM(playerid,COLOR_GREY, " Нельзя учавствовать с Варном");
		if(!race_state[playerid]) return SCM(playerid, COLOR_GREY, " Вы уже зарегистрировались на гонку");
		race_state[playerid] = 0;
		SCM(playerid,0x6495EDFF," Вы успешно зарегистрированы на гонку. Не выходите из помещения!");
		format(cString, sizeof(cString), " Зарегестрирован участник под номером: %i",null+1);
		ProxDetector(30.0, playerid, cString, 0x6495EDFF,0x6495EDFF,0x6495EDFF,0x6495EDFF,0x6495EDFF);
		return true;
	}
	else if(areaid == racee[0])
	{
		SetPlayerInterior(playerid,3);
		SetPlayerPos(playerid,831.7769,6.8750,1004.1797);
		SetPlayerFacingAngle(playerid,108.1610);
	}
	else if(areaid == racee[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,1958.6117,-2183.5022,13.5469);
		SetPlayerFacingAngle(playerid,271.8013);
		SetPlayerVirtualWorld(playerid,0);
		race_state[playerid] = -1;
	}
	else if(areaid == pdd)
	{
		GameTextForPlayer(playerid, "~r~/pdd", 1000, 1);
	}
	else if(areaid == medicss[0])
	{
		SetPlayerInterior(playerid,15);
		SetPlayerPos(playerid,385.4939,-60.0559,1076.4708);
		SetPlayerFacingAngle(playerid, 90.7810);
		SetPlayerVirtualWorld(playerid, 3);
		FreezeInt(playerid); // Если пинг больше 150 > Freeze
	}
	else if(areaid == medicss[1])
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,-2664.4895,636.7567,14.4531);
		SetPlayerFacingAngle(playerid, 180.9984);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(areaid == medicss[2])
	{
		SetPlayerInterior(playerid,15);
		SetPlayerPos(playerid,385.4939,-60.0559,1076.4708);
		SetPlayerFacingAngle(playerid, 90.7810);
		SetPlayerVirtualWorld(playerid, 4);
		FreezeInt(playerid); // Если пинг больше 150 > Freeze
	}
	else if(areaid == medicss[3])
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,1176.2983,-1323.4597,14.0144);
		SetPlayerFacingAngle(playerid, 270.0000);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(areaid == medicss[4])
	{
		SetPlayerInterior(playerid,15);
		SetPlayerPos(playerid,385.4939,-60.0559,1076.4708);
		SetPlayerFacingAngle(playerid, 90.7810);
		SetPlayerVirtualWorld(playerid, 5);
		FreezeInt(playerid); // Если пинг больше 150 > Freeze
	}
	else if(areaid == medicss[5])
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,1607.5677,1818.9572,10.8203);
		SetPlayerFacingAngle(playerid, 360.0000);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(areaid == medicss[6])
	{
		SetPlayerInterior(playerid,15);
		SetPlayerPos(playerid,385.4939,-60.0559,1076.4708);
		SetPlayerFacingAngle(playerid, 90.7810);
		SetPlayerVirtualWorld(playerid, 6);
		FreezeInt(playerid); // Если пинг больше 150 > Freeze
	}
	else if(areaid == medicss[7])
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,-316.9453,1054.3575,19.8931);
		SetPlayerFacingAngle(playerid, 1.1459);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(areaid == mast[0])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,1657.9347,2197.8618,10.8203);
		SetPlayerFacingAngle(playerid, 183.9151);
		SetPlayerVirtualWorld(playerid, 0);
		RemovePlayerAttachedObject(playerid,0);
	}
	else if(areaid == mast[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-1800.4135,1197.5573,25.1194);
		SetPlayerFacingAngle(playerid, 182.3717);
		SetPlayerVirtualWorld(playerid, 0);
		RemovePlayerAttachedObject(playerid,0);
	}
	else if(areaid == mast[2])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,854.0541,-601.7619,18.4219);
		SetPlayerFacingAngle(playerid, 0.6835);
		SetPlayerVirtualWorld(playerid, 0);
		RemovePlayerAttachedObject(playerid,0);
	}
	else if(areaid == addictionenter)
	{
		SetPlayerInterior(playerid,5);
		SetPlayerPos(playerid,318.2598,1118.8209,1083.8828);
		SetPlayerFacingAngle(playerid, 2.7967);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(areaid == zip[0])
	{
		SetPlayerInterior(playerid,5);
		SetPlayerPos(playerid,225.2378,-8.0487,1002.2109);
		SetPlayerFacingAngle(playerid, 89.5070);
		SetPlayerVirtualWorld(playerid,1);
		zips[playerid] = true;
	}
	else if(areaid == zip[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-1696.8130,948.5907,24.8906);
		SetPlayerFacingAngle(playerid, 137.1418);
		SetPlayerVirtualWorld(playerid,0);
		zips[playerid] = false;
	}
	else if(areaid == victim2[0])
	{
		SetPlayerInterior(playerid,5);
		SetPlayerPos(playerid,225.2378,-8.0487,1002.2109);
		SetPlayerFacingAngle(playerid, 89.5070);
		SetPlayerVirtualWorld(playerid,2);
	}
	else if(areaid == victim2[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,458.0936,-1501.5496,31.0372);
		SetPlayerFacingAngle(playerid, 101.4322);
		SetPlayerVirtualWorld(playerid,0);
	}
	else if(areaid == addictionexit)
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,2168.0977,-1673.5548,15.0826);
		SetPlayerFacingAngle(playerid,217.7220);
		SetPlayerVirtualWorld(playerid,0);
	}
	else if(areaid == rmpic[1])
	{
		SetPlayerInterior(playerid, 5);
		SetPlayerPos(playerid,1286.2816,-836.2054,1085);
		SetPlayerFacingAngle(playerid, 3.7600);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(areaid == rmpic[0])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,963.4916,1684.2570,8.8516);
		SetPlayerFacingAngle(playerid, 270.5075);
		SetPlayerVirtualWorld(playerid,0);
	}
	else if(areaid == rmpic2[1])
	{
		SetPlayerInterior(playerid, 5);
		SetPlayerPos(playerid,1263.1458,-785.5604,1091.9063);
		SetPlayerFacingAngle(playerid, 349.0933);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(areaid == rmpic2[0])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,964.5447,1782.8569,8.8581);
		SetPlayerFacingAngle(playerid, 276.0833);
		SetPlayerVirtualWorld(playerid,0);
	}
	else if(areaid == rmpick[1])
	{
		SetPlayerInterior(playerid, 5);
		SetPlayerPos(playerid,1298.9998,-794.4816,1084.0078);
		SetPlayerFacingAngle(playerid, 346.4799);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(areaid == rmpick[0])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,940.2573,1733.2078,8.8516);
		SetPlayerFacingAngle(playerid, 268.7956);
		SetPlayerVirtualWorld(playerid,0);
	}
	else if(areaid == yakexit[1])
	{
		SetPlayerInterior(playerid, 5);
		SetPlayerPos(playerid,1298.6915,-794.2542,1084.0078);
		SetPlayerFacingAngle(playerid, 349.0933);
	}
	else if(areaid == yakexit[0])
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,1457.5305,2773.4219,10.8203);
		SetPlayerFacingAngle(playerid, 276.0466);
	}
	else if(areaid == fbi[5]) // vhod s garaja
	{
		SetPlayerInterior(playerid,3);
		SetPlayerVirtualWorld(playerid, 130);
		SetPlayerPos(playerid,-2477.3003,532.0105,1039.1265);
		SetPlayerFacingAngle(playerid, 180.0000);
	}
	else if(areaid == fbi[4]) //
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,-2443.0530,497.7977,492.1183);
		SetPlayerFacingAngle(playerid, 0.00000);
	}
	else if(areaid == fbi[3])
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,-2456.9695,518.1188,492.1730);
		SetPlayerFacingAngle(playerid, 180.00000);
	}
	else if(areaid == fbi[2])
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,-2452.6711,513.1982,45.5625);
		SetPlayerFacingAngle(playerid, 270.0000);
	}
	else if(areaid == fbi[1]) //exit na ulicu
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,-2453.7595,503.7701,30.0798);
		SetPlayerFacingAngle(playerid, 270.00000);
	}
	else if(areaid == fbi[0])//vhod v ofis
	{
		if(IsAArm(playerid) || IsACop(playerid) || pData[playerid][pMember] == 2 || IsAMayor(playerid) || copkey[playerid] == 1)
		{
			SetPlayerInterior(playerid,3);
			SetPlayerVirtualWorld(playerid, 130);
			SetPlayerPos(playerid,-2461.4475,516.3433,1039.1265);
		}
		else
		{
			SCM(playerid, COLOR_REDD, " Дверь заперта!  У вас нет пропуска");
		}
	}

	else if(areaid == rmspawn[1]) // Vyhod RM
	{
		SetPlayerPos(playerid, 962.8901,1684.3445,8.8516);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 88.6402);
	}
	else if(areaid == lift)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,1161.3190,-1327.4117,31.4998);
		SetPlayerFacingAngle(playerid, 0);
	}
	else if(areaid == kauta)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,-1328.9766,495.3914,27.8631);
		SetPlayerVirtualWorld(playerid, 5);
		SetPlayerFacingAngle(playerid, 0);
		FreezeInt(playerid); // Если пинг больше 150 > Freeze
	}
	else if(areaid == kauta2)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,-1348.2666,494.8684,18.2278);
		SetPlayerFacingAngle(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(areaid == wmcvhod)
	{
		SetPlayerInterior(playerid, 1);
		SetPlayerVirtualWorld(playerid, 998);
		SetPlayerPos(playerid, 784.3250,-457.1505,1428.1820);
		SetPlayerFacingAngle(playerid,92.1326);
	}
	else if(areaid == vmcvhod)
	{
		SetPlayerInterior(playerid, 1);
		SetPlayerVirtualWorld(playerid, 52);
		SetPlayerPos(playerid, 784.3250,-457.1505,1428.1820);
		SetPlayerFacingAngle(playerid,92.1326);
	}
	else if(areaid == vmcvqhod)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, 681.5864,-478.4098,16.3359);
		SetPlayerFacingAngle(playerid,179.4115);
	}
	
	else if(areaid == rmspawn[1]) // Vyhod LCN
	{
		SetPlayerPos(playerid, 1532.5365,751.3397,11.0234);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 88.6402);
	}
	else if(areaid == wmcvqhod)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, 661.4137,1718.1427,7.1875);
		SetPlayerFacingAngle(playerid,39.7059);
	}
	else if(areaid == pmcvhod)
	{
		SetPlayerInterior(playerid, 1);
		SetPlayerVirtualWorld(playerid, 8);
		SetPlayerPos(playerid, 784.3250,-457.1505,1428.1820);
		SetPlayerFacingAngle(playerid,92.1326);
	}
	else if(areaid == pmcvqhod)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, -253.0328,2602.9119,62.8582);
		SetPlayerFacingAngle(playerid,274.2725);
	}
	else if(areaid == paints[0])
	{
		if(paint_info[1] != 1) return SCM(playerid,COLOR_GREY," Регистрация закрыта");
		//if(pData[playerid][pLevel] < 3)return SCM(playerid,COLOR_GRAD1,"Участвовать можно с 3-х лет проживания в штате!");
		if(pData[playerid][pWarns]) return SCM(playerid,COLOR_GREY, " Нельзя учавствовать с Варном");
		if(PaintReg{playerid}) return SCM(playerid, COLOR_GREY, " Вы уже зарегистрировались на матч!");
		new null;
		foreach(new i: Player) if(PaintReg{i}) null++;
		if(null >= 20) return SCM(playerid,COLOR_GREY, " Слишком много участников");
		PaintReg{playerid} = 1;
		SCM(playerid,0x6495EDFF," Вы успешно зарегистрированы на матч. Не выходите из помещения!");
		format(string, 144, " Зарегистрирован участник под номером: %i", null+1);
		foreach(new i: Player)
		{
			if(PaintReg{i}) SCM(i,0x6495EDFF, string);
		}
		return true;
	}
	else if(areaid == paints[1])
	{
		SetPlayerInterior(playerid, 1);
		SetPlayerPos(playerid, 286.4868, -40.2647, 1001.5156);
		SetPlayerFacingAngle(playerid, 318.7845);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(areaid == paints[2])
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 2593.7839,2790.6182,10.8203);
		SetPlayerFacingAngle(playerid, 92.0974);
		SetPlayerVirtualWorld(playerid, 0);
		CP[playerid] = 0;
		if(PaintReg{playerid})
		{
			PaintReg{playerid} = 0;
			SendClientMessage(playerid,COLOR_GRAD1," Вы были сняты с регистрации");
		}
		return true;
	}
	else if(areaid == lift2)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,1147.1436,-1315.2219,13.6735);
		SetPlayerFacingAngle(playerid, 0);
	}
	else if(areaid == lift3)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,-2713.6965,629.1685,34.4028);
		SetPlayerFacingAngle(playerid, 0);
	}
	else if(areaid == lift4)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,-2705.8311,637.6959,14.4545);
		SetPlayerFacingAngle(playerid, 0);
	}
	else if(areaid == cerkva)
	{
		SetPlayerInterior(playerid, 1);
		SetPlayerPos(playerid,-1940.1830,1118.6595,1332.6483);
		SetPlayerVirtualWorld(playerid, 1);
		FreezeInt(playerid); // Если пинг больше 150 > Freeze
	}
	else if(areaid == cerkva2)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,-1985.9872,1118.4680,53.6462);
		SetPlayerFacingAngle(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(areaid == lift5)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,1607.3185,1788.1012,30.4688);
		SetPlayerFacingAngle(playerid, 0);
	}
	else if(areaid == lift6)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,1599.6445,1817.1877,10.8203);
		SetPlayerFacingAngle(playerid, 0);
	}
	else if(areaid == ash)
	{
		SetPlayerInterior(playerid, 3);
		SetPlayerPos(playerid,-2038.7968,-82.3299,94.4108);
		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerFacingAngle(playerid, 271.4633);
		FreezeInt(playerid); // Если пинг больше 150 > Freeze
	}
	else if(areaid == ash2)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,-2026.4634,-100.4977,35.1641);
		SetPlayerFacingAngle(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(areaid == ash3)
	{
		SetPlayerInterior(playerid, 3);
		SetPlayerPos(playerid,-2051.0762,-119.9573,1035.2432);
		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerFacingAngle(playerid, 359.9116);
		FreezeInt(playerid); // Если пинг больше 150 > Freeze
	}
	else if(areaid == ash4)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,-2029.7860,-122.9273,35.1974);
		SetPlayerFacingAngle(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(areaid == lspd[0])
	{
		if(pData[playerid][pMember] == 1 || IsAArm(playerid) || IsACop(playerid) || IsAFbi(playerid) || IsAMayor(playerid)|| copkey[playerid] == 1 || Convoi[playerid] != 9999)
		{
			SetPlayerInterior(playerid,6);
			SetPlayerPos(playerid,246.6428,65.8026,1003.6406);
			SetPlayerFacingAngle(playerid, 2.2168);
		}
		else SCM(playerid, COLOR_RED, "  Дверь заперта!  У вас нет пропуска");
	}
	else if(areaid == lspd[1])
	{
		if(pData[playerid][pMember] == 1 || IsAArm(playerid) || IsACop(playerid) || IsAFbi(playerid) || IsAMayor(playerid)|| copkey[playerid] == 1 || Convoi[playerid] != 9999)
		{
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,1552.8159,-1675.4498,16.1953);
			SetPlayerFacingAngle(playerid, 91.8310);
			SetPlayerVirtualWorld(playerid, 0);
		}
		else SCM(playerid, COLOR_RED, "  Дверь заперта!  У вас нет пропуска");
	}
	else if(areaid == lspd[4])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,1528.010864,-1678.141723,5.890625);
		SetPlayerFacingAngle(playerid, 259.617370);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(areaid == lspd[2])
	{
		if(pData[playerid][pMember] == 1 || IsAArm(playerid) || IsACop(playerid) || IsAFbi(playerid) || IsAMayor(playerid)|| copkey[playerid] == 1 || Convoi[playerid] != 9999)
		{
			SetPlayerInterior(playerid,6);
			SetPlayerPos(playerid,316.3837,-167.8547,999.5938);
			SetPlayerFacingAngle(playerid, 34.3574);
			SetPlayerVirtualWorld(playerid, 5);
		}
		else SCM(playerid, COLOR_RED, "  Дверь заперта!  У вас нет пропуска");
	}
	else if(areaid == sf[4])
	{
		if(pData[playerid][pMember] == 10 || IsAArm(playerid) || IsACop(playerid) || IsAFbi(playerid) || IsAMayor(playerid)|| copkey[playerid] == 1 || Convoi[playerid] != 9999)
		{
			SetPlayerInterior(playerid,6);
			SetPlayerPos(playerid,316.3837,-167.8547,999.5938);
			SetPlayerFacingAngle(playerid, 34.3574);
			SetPlayerVirtualWorld(playerid, 1);
		}
		else SCM(playerid, COLOR_RED, "  Дверь заперта!  У вас нет пропуска");
	}
	else if(areaid == sf[0])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-1606.4532,674.2636,-5.2422);
		SetPlayerFacingAngle(playerid, 357.2527);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(areaid == sf[1])
	{
		if(pData[playerid][pMember] == 10 || IsAArm(playerid) || IsACop(playerid) || IsAFbi(playerid) || IsAMayor(playerid)|| copkey[playerid] == 1 || Convoi[playerid] != 9999)
		{
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,-1590.8289,716.0479,-5.2422);
			SetPlayerFacingAngle(playerid, 269.9364);
			SetPlayerVirtualWorld(playerid, 0);
		}
		else SCM(playerid, COLOR_RED, "  Дверь заперта!  У вас нет пропуска");
	}
	else if(areaid == sf[2])
	{
		SetPlayerInterior(playerid,10);
		SetPlayerPos(playerid,217.3147,121.3382,999.0156);
		SetPlayerFacingAngle(playerid, 272.8898);
	}
	else if(areaid == sf[3])
	{
		if(pData[playerid][pMember] == 10 || IsAArm(playerid) || IsACop(playerid) || IsAFbi(playerid) || IsAMayor(playerid)|| copkey[playerid] == 1 || Convoi[playerid] != 9999)
		{
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,-1605.9866,718.9982,12.0476);
			SetPlayerFacingAngle(playerid, 359.1870);
		}
		else SCM(playerid, COLOR_RED, "  Дверь заперта!  У вас нет пропуска");
	}
	else if(areaid == sf[5])
	{
		if(pData[playerid][pMember] == 10 || IsAArm(playerid) || IsACop(playerid) || IsAFbi(playerid) || IsAMayor(playerid)|| copkey[playerid] == 1 || Convoi[playerid] != 9999)
		{
			SetPlayerInterior(playerid,10);
			SetPlayerPos(playerid,246.0613,110.8390,1003.2188);
			SetPlayerFacingAngle(playerid, 358.6587);
		}
		else SCM(playerid, COLOR_RED, "  Дверь заперта!  У вас нет пропуска");
	}
	else if(areaid == lspd[5])
	{
		SetPlayerInterior(playerid,6);
		SetPlayerPos(playerid,246.5438,85.7663,1003.6406);
		SetPlayerFacingAngle(playerid, 278.0311);
	}
	else if(areaid == lspd[3])
	{
		if(pData[playerid][pMember] == 1 || IsAArm(playerid) || IsACop(playerid) || IsAFbi(playerid) || IsAMayor(playerid)|| copkey[playerid] == 1 || Convoi[playerid] != 9999)
		{
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,1568.6962,-1692.2069,5.8906);
			SetPlayerFacingAngle(playerid, 259.617370);
			SetPlayerVirtualWorld(playerid, 0);
		}
		else SCM(playerid, COLOR_RED, "  Дверь заперта!  У вас нет пропуска");
	}
	else if(areaid == armijavhod)
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,156.4952,1945.6383,20.0000);
		SetPlayerFacingAngle(playerid, 183.1738);
	}
	else if(areaid == armijavihod)
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,139.5660,1936.6910,19.2734);
		SetPlayerFacingAngle(playerid, 183.1738);
	}
	else if(areaid == lvpdpic[0])
	{
		if(pData[playerid][pMember] == 21 || IsAArm(playerid) || IsACop(playerid) || IsAFbi(playerid) || IsAMayor(playerid)|| copkey[playerid] == 1 || Convoi[playerid] != 9999)
		{
			SetPlayerInterior(playerid,3);
			SetPlayerVirtualWorld(playerid, 122);
			SetPlayerPos(playerid,238.5033,141.1578,1003.0234);
			SetPlayerFacingAngle(playerid, 359.1617);
		}
		else SCM(playerid, COLOR_RED, "  Дверь заперта!  У вас нет пропуска");
	}
	else if(areaid == lvpdpic[1])
	{
		if(pData[playerid][pMember] == 21 || IsAArm(playerid) || IsACop(playerid) || IsAFbi(playerid) || IsAMayor(playerid)|| copkey[playerid] == 1 || Convoi[playerid] != 9999)
		{
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerPos(playerid,2295.1934,2451.8459,10.8203);
			SetPlayerFacingAngle(playerid, 94.8742);
		}
		else SCM(playerid, COLOR_RED, "  Дверь заперта!  У вас нет пропуска");
	}
	else if(areaid == lvpdpic[2])
	{
		if(pData[playerid][pMember] == 21 || IsAArm(playerid) || IsACop(playerid) || IsAFbi(playerid) || IsAMayor(playerid)|| copkey[playerid] == 1 || Convoi[playerid] != 9999)
		{
			SetPlayerInterior(playerid,3);
			SetPlayerVirtualWorld(playerid, 122);
			SetPlayerPos(playerid,288.7445,169.2445,1007.1719);
			SetPlayerFacingAngle(playerid, 9.7598);
		}
		else SCM(playerid, COLOR_RED, "  Дверь заперта!  У вас нет пропуска");
	}
	else if(areaid == lvpdpic[3])
	{
		if(pData[playerid][pMember] == 21 || IsAArm(playerid) || IsACop(playerid) || IsAFbi(playerid) || IsAMayor(playerid)|| copkey[playerid] == 1 || Convoi[playerid] != 9999)
		{
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerPos(playerid,2340.1965,2455.9792,14.9688);
			SetPlayerFacingAngle(playerid, 178.3347);
		}
		else SCM(playerid, COLOR_RED, "  Дверь заперта!  У вас нет пропуска");
	}
	else if(areaid == lvpdpic[4])
	{
		ShowPlayerDialog(playerid,8240,DIALOG_STYLE_MSGBOX, "Вход", "Куда вы хотите войти?", "Склад", "На крышу");
	}
	else if(areaid == lvpdpic[5])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,2293.3225,2468.6162,10.8203);
		SetPlayerFacingAngle(playerid, 93.6957);
	}
	else if(areaid == lvpdpic[6])
	{
		ShowPlayerDialog(playerid,8241,DIALOG_STYLE_MSGBOX, "Вход", "Куда Вы хотите войти?", "Склад", "Вниз");
	}
	else if(areaid >= chekmatlva[0] && areaid <= chekmatlva[1])
	{
		if (!IsAGang(playerid)) 
			return SCM(playerid,COLOR_GREY, " Вы не бандит");
		if(armmatbi <= 100) 
			return SCM(playerid,COLOR_GRAD1, " На складе нет материалов");
		if(pData[playerid][pMats] == 500) 
			return SCM(playerid,COLOR_GRAD1, " Вы не можете унести больше!");

		SCM(playerid, 0x6495EDFF, " Вы взяли несколько комплектов");
		armmatbi -= 100;
		new strings1[50];
		format(strings1,sizeof(strings1), "{33AA33}Склад армии ЛВ: {FFFFFF}%i", armmatbi);
		UpdateDynamic3DTextLabelText(LvaLable, 0xFFFF00FF, strings1);
		pData[playerid][pMats] += 500;
		if(pData[playerid][pMats] >= 500) pData[playerid][pMats] = 500;
		SetAccountInfo(playerid, pData[playerid][pMats], "pMats");
	}
	else if(areaid >= chekmats[0]&& areaid <= chekmats[1])
	{
		if (!IsAGang(playerid)) return SCM(playerid,COLOR_GREY, " Вы не бандит");
		if(armmatsf <= 100) return SCM(playerid,COLOR_GRAD1, " На складе нет материалов");
		if(pData[playerid][pMats] >= 500) return SCM(playerid,COLOR_GRAD1, " У вас на руках уже есть материалы");
		SCM(playerid, 0x6495EDFF, " Вы взяли несколько комплектов");
		armmatsf -= 100;
		pData[playerid][pMats] += 500;
		if(pData[playerid][pMats] >= 500) pData[playerid][pMats] = 500;
		SetAccountInfo(playerid, pData[playerid][pMats], "pMats");
	}
	else if(areaid == buygunzakon[0])
	{
		if(GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 2)
		{
			ShowPlayerDialog(playerid, 5225, DIALOG_STYLE_TABLIST_HEADERS, "Взять оружие",
			"Оружие\tПатроны\n\
			Desert Eagle\t[21п]\n\
			Shotgun\t[30п]\n\
			MP5\t[90п]\n\
			M4A1\t[150п]\n\
			Rifle\t[30п]\n\
			Броня\n\
			Спец оружие\n",
			"Взять", "Отмена");
		}
	}
	else if(areaid == buygunzakon[1])
	{
		if(GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 1)
		{
			ShowPlayerDialog(playerid, 5225, DIALOG_STYLE_TABLIST_HEADERS, "Взять оружие",
			"Оружие\tПатроны\n\
			Desert Eagle\t[21п]\n\
			Shotgun\t[30п]\n\
			MP5\t[90п]\n\
			M4A1\t[150п]\n\
			Rifle\t[30п]\n\
			Броня\n\
			Спец оружие\n",
			"Взять", "Отмена");
		}
	}
	else if(areaid == buygunzakon[3])
	{
		if(GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 21)
		{
			ShowPlayerDialog(playerid, 5225, DIALOG_STYLE_TABLIST_HEADERS, "Взять оружие",
			"Оружие\tПатроны\n\
			Desert Eagle\t[21п]\n\
			Shotgun\t[30п]\n\
			MP5\t[90п]\n\
			M4A1\t[150п]\n\
			Rifle\t[30п]\n\
			Броня\n\
			Спец оружие\n",
			"Взять", "Отмена");
		}
	}
	else if(areaid == buygunzakon[2])
	{
		if(GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 10)
		{
			ShowPlayerDialog(playerid, 5225, DIALOG_STYLE_TABLIST_HEADERS, "Взять оружие",
			"Оружие\tПатроны\n\
			Desert Eagle\t[21п]\n\
			Shotgun\t[30п]\n\
			MP5\t[90п]\n\
			M4A1\t[150п]\n\
			Rifle\t[30п]\n\
			Броня\n\
			Спец оружие\n",
			"Взять", "Отмена");
		}
	}
	else if(areaid >= serdce[0]&& areaid <= serdce[2])
	{
		if(pData[playerid][pLevel] == 1)
		{
			SetPlayerHealth(playerid, 100);
			UpdatePlayerHunger(playerid, 100);
		}
		else
		{
			SCM(playerid, 0xC21D00AA, "Только для новичков(1 лвл)");
		}
	}
	else if(areaid == serdce[3])
	{
		if(pData[playerid][pLevel] == 1 || pData[playerid][pMember] == 7 || pData[playerid][pLeader] == 7)
		{
			SetPlayerHealth(playerid, 100);
			UpdatePlayerHunger(playerid, 100);
		}
		else
		{
			SCM(playerid, 0xC21D00AA, "Только для новичков(1 лвл)");
		}
	}

	else if(areaid == skinshop[0] || areaid == skinshop[2])
	{
		if(pData[playerid][pSex] != 0) return SCM(playerid, COLOR_WHITE, " Вы ошиблись кабинкой");
		if(!GetPVarInt(playerid,"Fraction_Duty"))
		{
			SetPlayerInterior(playerid,5);
			SCM(playerid, COLOR_DRED, " Используйте клавишу 'Быстрый бег' (пробел по умолчанию)");
			SCM(playerid, COLOR_DRED, " Используйте клавишу 'Вверх,вниз' (W,S по умолчанию)");
			SetPlayerPos(playerid,222.3489,-8.5845,1002.2109);
			SetPlayerFacingAngle(playerid, 266.7302);
			SetPlayerCameraPos(playerid,225.3489,-8.5845,1002.2109);
			SetPlayerCameraLookAt(playerid,222.3489,-8.5845,1002.2109);
			TogglePlayerControllable(playerid, 0);
			ChangeSkin[playerid] = 0;
			new skin = Random(2,200);
			SetPlayerVirtualWorld(playerid,skin);
			if(!IsValidMenu(BuyClothes[0]))
			{
				BuyClothes[0] = CreateMenu("Clothes", 1, 50.0, 160.0, 110.0);
				SetMenuColumnHeader(BuyClothes[0], 0, "Choose Skin");
				AddMenuItem(BuyClothes[0], 0, "Next >>");
				AddMenuItem(BuyClothes[0], 0, "<< Previous");
				AddMenuItem(BuyClothes[0], 0, "Buy");
				AddMenuItem(BuyClothes[0], 0, "Exit");
			}
			ShowMenuForPlayer(BuyClothes[0], playerid);
			SetPlayerSkin(playerid,SkinMen[ChangeSkin[playerid]][0]);// Одеваем скин
			return true;
		}
		else if(pData[playerid][pMember] > 0)
		{
			if(pData[playerid][pMember] == 1) {  ChosenSkin[playerid] = 59; }
			else if(pData[playerid][pMember] == 2) {  ChosenSkin[playerid] = 286; }
			else if(pData[playerid][pMember] == 3) {  ChosenSkin[playerid] = 287; }
			else if(pData[playerid][pMember] == 4) {  ChosenSkin[playerid] = 70; }
			else if(pData[playerid][pMember] == 5) {  ChosenSkin[playerid] = 223; }
			else if(pData[playerid][pMember] == 6) {  ChosenSkin[playerid] = 120; }
			else if(pData[playerid][pMember] == 7) {  ChosenSkin[playerid] = 57; }
			else if(pData[playerid][pMember] == 8) {  ChosenSkin[playerid] = 171; }
			else if(pData[playerid][pMember] == 9) {  ChosenSkin[playerid] = 250; }
			else if(pData[playerid][pMember] == 10) {  ChosenSkin[playerid] = 280; }
			else if(pData[playerid][pMember] == 11) {  ChosenSkin[playerid] = 59; }
			else if(pData[playerid][pMember] == 12) {  ChosenSkin[playerid] = 102; }
			else if(pData[playerid][pMember] == 13) {  ChosenSkin[playerid] = 108; }
			else if(pData[playerid][pMember] == 14) {  ChosenSkin[playerid] = 111; }
			else if(pData[playerid][pMember] == 15) {  ChosenSkin[playerid] = 106; }
			else if(pData[playerid][pMember] == 16) {  ChosenSkin[playerid] = 250; }
			else if(pData[playerid][pMember] == 17) {  ChosenSkin[playerid] = 114; }
			else if(pData[playerid][pMember] == 18) {  ChosenSkin[playerid] = 173; }
			else if(pData[playerid][pMember] == 19) {  ChosenSkin[playerid] = 287; }
			else if(pData[playerid][pMember] == 20) {  ChosenSkin[playerid] = 250; }
			else if(pData[playerid][pMember] == 21) {  ChosenSkin[playerid] = 280; }
			else if(pData[playerid][pMember] == 22) {  ChosenSkin[playerid] = 70; }
			else if(pData[playerid][pMember] == 24) {  ChosenSkin[playerid] = 247; }
			else if(pData[playerid][pMember] == 26) {  ChosenSkin[playerid] = 247; }
			else if(pData[playerid][pMember] == 29) {  ChosenSkin[playerid] = 247; }
			SetPlayerInterior(playerid,5);
			SCM(playerid, COLOR_DRED, " Используйте клавишу 'Быстрый бег' (пробел по умолчанию)");
			SCM(playerid, COLOR_DRED, " Используйте клавишу 'Вверх,вниз' (W,S по умолчанию)");
			SetPlayerPos(playerid,222.3489,-8.5845,1002.2109);
			SetPlayerFacingAngle(playerid, 266.7302);
			SetPlayerCameraPos(playerid,225.3489,-8.5845,1002.2109);
			SetPlayerCameraLookAt(playerid,222.3489,-8.5845,1002.2109);
			TogglePlayerControllable(playerid, 0);
			new skin = Random(2,200);
			SetPlayerVirtualWorld(playerid,skin);
			SelectChar[playerid] = 255;
			SelectCharID[playerid] = pData[playerid][pMember];
			SelectCharPlace[playerid] = 1;
			pData[playerid][pModel] = ChosenSkin[playerid];
			SetAccountInfo(playerid, pData[playerid][pModel], "pModel");
			if(!IsValidMenu(ChoseSkin[0]))
			{
				ChoseSkin[0] = CreateMenu("Victim", 1, 50.0, 160.0, 110.0);
				SetMenuColumnHeader(ChoseSkin[0], 0, "Choose Skin");
				AddMenuItem(ChoseSkin[0], 0, ">> Next");
				AddMenuItem(ChoseSkin[0], 0, "<< Previous");
				AddMenuItem(ChoseSkin[0], 0, "Done");
			}
			ShowMenuForPlayer(ChoseSkin[0],playerid);
			return true;
		}
	}
	else if(areaid == skinshop[1] || areaid == skinshop[3])
	{
		if(pData[playerid][pSex] != 1) return SCM(playerid, COLOR_WHITE, " Вы ошиблись кабинкой");
		if(!GetPVarInt(playerid,"Fraction_Duty"))
		{
			if(!IsValidMenu(BuyClothes[0]))
			{
				BuyClothes[0] = CreateMenu("Clothes", 1, 50.0, 160.0, 110.0);
				SetMenuColumnHeader(BuyClothes[0], 0, "Choose Skin");
				AddMenuItem(BuyClothes[0], 0, "Next >>");
				AddMenuItem(BuyClothes[0], 0, "<< Previous");
				AddMenuItem(BuyClothes[0], 0, "Buy");
				AddMenuItem(BuyClothes[0], 0, "Exit");
			}
			ShowMenuForPlayer(BuyClothes[0], playerid);
			SetPlayerInterior(playerid,5);
			SCM(playerid, COLOR_DRED, " Используйте клавишу 'Быстрый бег' (пробел по умолчанию)");
			SCM(playerid, COLOR_DRED, " Используйте клавишу 'Вверх,вниз' (W,S по умолчанию)");
			SetPlayerPos(playerid,222.3489,-8.5845,1002.2109);
			SetPlayerFacingAngle(playerid, 266.7302);
			SetPlayerCameraPos(playerid,225.3489,-8.5845,1002.2109);
			SetPlayerCameraLookAt(playerid,222.3489,-8.5845,1002.2109);
			TogglePlayerControllable(playerid, 0);
			ChangeSkin[playerid]=0;
			new skin = Random(2,200);
			SetPlayerVirtualWorld(playerid,skin);
			if(ChangeSkin[playerid]	== sizeof(SkinMale)-1) ChangeSkin[playerid] = 0;
			else ChangeSkin[playerid]++;
			SetPlayerSkin(playerid,SkinMale[ChangeSkin[playerid]][0]);// Одеваем скин
		}
		else if(GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] >= 1)
		{
			if(!IsValidMenu(ChoseSkin[0]))
			{
				ChoseSkin[0] = CreateMenu("Victim", 1, 50.0, 160.0, 110.0);
				SetMenuColumnHeader(ChoseSkin[0], 0, "Choose Skin");
				AddMenuItem(ChoseSkin[0], 0, ">> Next");
				AddMenuItem(ChoseSkin[0], 0, "<< Previous");
				AddMenuItem(ChoseSkin[0], 0, "Done");
			}
			ShowMenuForPlayer(ChoseSkin[0],playerid);
			if(pData[playerid][pMember] == 1) {  ChosenSkin[playerid] = 59; }
			else if(pData[playerid][pMember] == 2) {  ChosenSkin[playerid] = 286; }
			else if(pData[playerid][pMember] == 3) {  ChosenSkin[playerid] = 287; }
			else if(pData[playerid][pMember] == 5) {  ChosenSkin[playerid] = 223; }
			else if(pData[playerid][pMember] == 6) {  ChosenSkin[playerid] = 120; }
			else if(pData[playerid][pMember] == 7) {  ChosenSkin[playerid] = 57; }
			else if(pData[playerid][pMember] == 8) {  ChosenSkin[playerid] = 171; }
			else if(pData[playerid][pMember] == 9) {  ChosenSkin[playerid] = 250; }
			else if(pData[playerid][pMember] == 10) {  ChosenSkin[playerid] = 280; }
			else if(pData[playerid][pMember] == 11) {  ChosenSkin[playerid] = 59; }
			else if(pData[playerid][pMember] == 12) {  ChosenSkin[playerid] = 102; }
			else if(pData[playerid][pMember] == 13) {  ChosenSkin[playerid] = 108; }
			else if(pData[playerid][pMember] == 14) {  ChosenSkin[playerid] = 111; }
			else if(pData[playerid][pMember] == 15) {  ChosenSkin[playerid] = 106; }
			else if(pData[playerid][pMember] == 16) {  ChosenSkin[playerid] = 250; }
			else if(pData[playerid][pMember] == 17) {  ChosenSkin[playerid] = 114; }
			else if(pData[playerid][pMember] == 18) {  ChosenSkin[playerid] = 173; }
			else if(pData[playerid][pMember] == 19) {  ChosenSkin[playerid] = 287; }
			else if(pData[playerid][pMember] == 20) {  ChosenSkin[playerid] = 250; }
			else if(pData[playerid][pMember] == 21) {  ChosenSkin[playerid] = 280; }
			else if(pData[playerid][pMember] == 22) {  ChosenSkin[playerid] = 70; }
			else if(pData[playerid][pMember] == 24) {  ChosenSkin[playerid] = 247; }
			else if(pData[playerid][pMember] == 26) {  ChosenSkin[playerid] = 247; }
			else if(pData[playerid][pMember] == 29) {  ChosenSkin[playerid] = 247; }
			else { return true; }
			SetPlayerInterior(playerid,5);
			new skin = Random(2,200);
			SetPlayerVirtualWorld(playerid,skin);
			SetPlayerPos(playerid,222.3489,-8.5845,1002.2109);
			SetPlayerFacingAngle(playerid, 266.7302);
			SetPlayerCameraPos(playerid,225.3489,-8.5845,1002.2109);
			SetPlayerCameraLookAt(playerid,222.3489,-8.5845,1002.2109);
			TogglePlayerControllable(playerid, 0);
			SelectChar[playerid] = 255;
			SelectCharID[playerid] = pData[playerid][pMember];
			SelectCharPlace[playerid] = 1;
			pData[playerid][pModel] = ChosenSkin[playerid];
			SetAccountInfo(playerid, pData[playerid][pModel], "pModel");
			return true;
		}
	}
	else if(areaid == marenter[0])
	{
		SetPlayerInterior(playerid,3);
		SetPlayerPos(playerid,385.9440,173.6978,1008.3828);
		SetPlayerFacingAngle(playerid, 88.1044);
		if(pData[playerid][pQuestL] == 1 && pData[playerid][pQuest] == 5) CheckQuest(playerid);
	}
	else if(areaid == marenter[1])
	{
		SetPlayerInterior(playerid,3);
		SetPlayerPos(playerid,366.4958,193.5977,1008.3828);
		SetPlayerFacingAngle(playerid, 91.0948);
		if(pData[playerid][pQuestL] == 1 && pData[playerid][pQuest] == 5) CheckQuest(playerid);
	}
	else if(areaid == marenter[2])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,1435.1095,-1789.6874,33.4297);
		SetPlayerFacingAngle(playerid, 87.9211);
	}
	else if(areaid == maria)
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,1410.1788,-1790.2755,13.5540);
		SetPlayerFacingAngle(playerid, 87.9211);
	}
	else if(areaid == marexit)
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,1480.8832,-1769.0471,18.7958);
		SetPlayerFacingAngle(playerid, 0.3133);
		DisablePlayerCheckpoint(playerid);
		PicCP[playerid] = 0;
		CP[playerid] = 0;
	}
	else if(areaid == rifa[0])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,2185.96,-1811.94,13.55);
		SetPlayerFacingAngle(playerid, 400);
	}
	else if(areaid == rifa[1])
	{
		SetPlayerInterior(playerid,8);
		SetPlayerVirtualWorld(playerid, 63);
		SetPlayerPos(playerid,288.6091,-141.6304,1161.2759);
		SetPlayerFacingAngle(playerid, 91.3475);
		FreezeInt(playerid); // Если пинг больше 150 > Freeze
	}
	else if(areaid == vagospic[0])
	{
		SetPlayerInterior(playerid,4);
		SetPlayerVirtualWorld(playerid, 75);
		SetPlayerPos(playerid,2806.8708,-1603.3502,-36.5231);
		SetPlayerFacingAngle(playerid, 500);
		FreezeInt(playerid); // Если пинг больше 150 > Freeze
	}
	else if(areaid == vagospic[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,2774.2017,-1628.0233,12.1775);
		SetPlayerFacingAngle(playerid, 330.4577);
	}
	else if(areaid == grooveenter)
	{
		SetPlayerInterior(playerid,3);
		SetPlayerPos(playerid,2496.1580,-1694.5743,1014.7422);
		SetPlayerFacingAngle(playerid,177.8856);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(areaid == grooveexit)
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,2495.1199,-1688.3727,13.7653);
		SetPlayerFacingAngle(playerid, 4.2929);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(areaid == aztecpic[0])
	{
		SetPlayerInterior(playerid,8);
		SetPlayerVirtualWorld(playerid, 36);
		SetPlayerPos(playerid,1581.9503,-1595.3385,394.4919);
		SetPlayerFacingAngle(playerid, 179.2462);
		FreezeInt(playerid); // Если пинг больше 150 > Freeze
	}
	else if(areaid == aztecpic[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,1667.4498,-2108.3840,13.8906);
		SetPlayerFacingAngle(playerid, 178.1356);
	}
	else if(areaid == bankpic[0])
	{
		Streamer_UpdateEx(playerid, 1524.0612,-1225.3260,1388.36);
		SetPlayerTime(playerid, 12,00);
		SetPlayerWeather(playerid, 4);
		SetPlayerInterior(playerid, 8);
		SetPlayerPos(playerid,1524.0612,-1225.3260,1388.3552);
		SetPlayerFacingAngle(playerid, 270.9225);
		SetPlayerVirtualWorld(playerid, 36);
		return 1;
	}
	else if(areaid == bankpic[1])
	{
		SetPlayerTime(playerid, ServHour,ServMinute);
		SetPlayerWeather(playerid, ServWeather);
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,1414.14,-1702.78,13.5395);
		SetPlayerFacingAngle(playerid, 209.7472);
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	else if(areaid == ballasvhod[0])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,2647.9932,-2021.5747,13.5469);
		SetPlayerFacingAngle(playerid, 100);
	}
	if(areaid >= gunpicpaint[0] && areaid <= gunpicpaint[4])
	{
		if(PaintReg{playerid} != 2) return true;
		if(areaid == gunpicpaint[0]) GivePlayerWeaponEx(playerid,25,21);
		else if(areaid == gunpicpaint[1]) GivePlayerWeaponEx(playerid,24,21);
		else if(areaid == gunpicpaint[2]) GivePlayerWeaponEx(playerid,29,60);
		else if(areaid == gunpicpaint[3]) GivePlayerWeaponEx(playerid,31,90);
		else if(areaid == gunpicpaint[4]) GivePlayerWeaponEx(playerid,30,90);
	}
	else if(areaid == ballasvhod[1])
	{
		SetPlayerInterior(playerid,6);
		SetPlayerVirtualWorld(playerid, 34);
		SetPlayerPos(playerid,607.4172,-148.2753,1093.2379);
		SetPlayerFacingAngle(playerid, 269.3373);
		FreezeInt(playerid); // Если пинг больше 150 > Freeze
	}
	else if(areaid == sklad[0])
	{
		SetPlayerInterior(playerid,6);
		SetPlayerPos(playerid,316.9104,-168.6356,999.5938);
		SetPlayerFacingAngle(playerid, 355.8037);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(areaid == sklad[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,338.3804,1949.1343,22.0174);
		SetPlayerFacingAngle(playerid, 92.2485);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(areaid == skladfbi)
	{
		SetPlayerInterior(playerid,6);
		SetPlayerPos(playerid,316.9104,-168.6356,999.5938);
		SetPlayerFacingAngle(playerid, 355.8037);
		SetPlayerVirtualWorld(playerid, 130);
	}
	else if(areaid == skladfbi2)
	{
		SetPlayerInterior(playerid, 3);
		SetPlayerPos(playerid,-2472.9421,513.9147,1039.1265);
		SetPlayerFacingAngle(playerid, 1.2345);
		SetPlayerVirtualWorld(playerid, 130);
		FreezeInt(playerid); // Если пинг больше 150 > Freeze
	}
	else if(areaid == sklad[2])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-1370.39,498.79,11.20);
		SetPlayerFacingAngle(playerid, 270.0000);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(areaid == sklad[3])
	{
		SetPlayerInterior(playerid,6);
		SetPlayerPos(playerid,316.9104,-168.6356,999.5938);
		SetPlayerFacingAngle(playerid, 355.8037);
		SetPlayerVirtualWorld(playerid, 3);
	}
	else if(areaid == lsaammo)
	{
		if(GetPVarInt(playerid,"Fraction_Duty") && (pData[playerid][pMember] == 19 || pData[playerid][pMember] == 3 || IsAFbi(playerid) || IsACop(playerid)))
		{
			SetPVarInt(playerid,"lsaammo",1);
			ShowPlayerDialog(playerid, 5225, DIALOG_STYLE_TABLIST_HEADERS, "Взять оружие",
			"Оружие\tПатроны\n\
			Desert Eagle\t[21п]\n\
			Shotgun\t[30п]\n\
			MP5\t[90п]\n\
			M4A1\t[150п]\n\
			Rifle\t[30п]\n\
			Броня\n\
			Спец оружие\n",
			"Взять", "Отмена");
		}
	}
	else if(areaid == lsamat)
	{
		if(!IsAGang(playerid)) return SCM(playerid,COLOR_GREY," Вы не бандит");
		SCM(playerid, 0x6495EDFF, " Склад с оружием. Чтобы украсть комплект, используйте /materials get");
	}
	else if(areaid == gunarm[0])
	{
		if(GetPVarInt(playerid,"Fraction_Duty") && ( pData[playerid][pMember] == 19 || IsACop(playerid) || IsAFbi(playerid) || IsAArm(playerid)))
		{
			ShowPlayerDialog(playerid, 5225, DIALOG_STYLE_TABLIST_HEADERS, "Взять оружие",
			"Оружие\tПатроны\n\
			Desert Eagle\t[21п]\n\
			Shotgun\t[30п]\n\
			MP5\t[90п]\n\
			M4A1\t[150п]\n\
			Rifle\t[30п]\n\
			Броня\n\
			Спец оружие\n",
			"Взять", "Отмена");
		}
	}
	else if(areaid == gunarm[1])
	{
		if(GetPVarInt(playerid,"Fraction_Duty") && ( pData[playerid][pMember] == 19 || IsACop(playerid) || IsAFbi(playerid) || IsAArm(playerid)))
		{
			ShowPlayerDialog(playerid, 5225, DIALOG_STYLE_TABLIST_HEADERS, "Взять оружие",
			"Оружие\tПатроны\n\
			Desert Eagle\t[21п]\n\
			Shotgun\t[30п]\n\
			MP5\t[90п]\n\
			M4A1\t[150п]\n\
			Rifle\t[30п]\n\
			Броня\n\
			Спец оружие\n",
			"Взять", "Отмена");
		}
	}
	else if(areaid == zonaa)
	{
		if(IsACop(playerid) || IsAFbi(playerid) || IsAArm(playerid) || proverkaforma[playerid] == 1)
		{
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,279.4233,1835.0087,17.6481);
			SetPlayerFacingAngle(playerid, 17.2727);
		}
		else
		{
			SCM(playerid, COLOR_WHITE, " У вас нет ключа!");
		}
	}
	else if(areaid == zona)
	{
		if(IsACop(playerid) || IsAFbi(playerid) || IsAArm(playerid) || proverkaforma[playerid] == 1)
		{
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,291.8297,1836.4666,17.6406);
			SetPlayerFacingAngle(playerid, 346.3333);
		}
		else
		{
			SCM(playerid, COLOR_WHITE, " У вас нет ключа!");
		}
	}
	if(areaid == RouletCloakroom[0])
	{
		if(GetPVarInt(playerid,"Fraction_Duty")) return true;
		for(new i; i < MAX_BONE; i++) if(BoneInfo[i][Crupie] == playerid || GetPVarInt(playerid,"BoneStol")) return SCM(playerid,COLOR_GREY," Необходимо выйти из-за стола");
		switch(GetPVarInt(playerid,"CasinoRank"))
		{
		case 0:
			{
				if(!GetCasino(playerid,1)) return true;
				switch(pData[playerid][pSex])
				{
				case 0:
					{
						if(GetCasino(playerid,1) == 1) SetPlayerSkin(playerid,171);
						else SetPlayerSkin(playerid,189);
					}
				case 1:
					{
						if(GetCasino(playerid,1) == 1) SetPlayerSkin(playerid,172);
						else SetPlayerSkin(playerid,194);
					}
				}
				SetPVarInt(playerid,"CasinoRank",GetCasino(playerid,1));
			}
		default:
			{
				DeletePVar(playerid,"CasinoRank");
				SetPlayerSkin(playerid,pData[playerid][pChar][0]);
			}
		}
		return true;
	}
	else if(areaid == RouletCloakroom[1])
	{
		if(GetPVarInt(playerid,"Fraction_Duty")) return true;
		for(new i; i < MAX_BONE; i++) if(BoneInfo[i][Crupie] == playerid || GetPVarInt(playerid,"BoneStol")) return SCM(playerid,COLOR_GREY," Необходимо выйти из-за стола");
		switch(GetPVarInt(playerid,"CasinoRank"))
		{
		case 0:
			{
				if(!GetCasino(playerid,2)) return true;
				switch(pData[playerid][pSex])
				{
				case 0:
					{
						if(GetCasino(playerid,2) == 1) SetPlayerSkin(playerid,171);
						else SetPlayerSkin(playerid,189);
					}
				case 1:
					{
						if(GetCasino(playerid,2) == 1) SetPlayerSkin(playerid,172);
						else SetPlayerSkin(playerid,194);
					}
				}
				SetPVarInt(playerid,"CasinoRank",GetCasino(playerid,2));
			}
		default:
			{
				DeletePVar(playerid,"CasinoRank");
				SetPlayerSkin(playerid,pData[playerid][pChar][0]);
			}
		}
		return true;
	}
	if(areaid >= garagexit[0] && areaid <= garagexit[3])
	{
		new i = GetPlayerVirtualWorld(playerid) - 100;
		if 0 > i *then return true;
		if(pData[playerid][pPHouseKey] == i || HouseInfo[i][hLock] == false ) // Если игрок владелец дома или дом открыт
		{
			new int = HouseInfo[i][hInt];
				
			sppos(playerid,interior_info[int][int_x],interior_info[int][int_y],interior_info[int][int_z],90.0,i+50,interior_info[i][int_int]);
		}
		else GameTextForPlayer(playerid, "~r~CLOSED", 5000, 1);
		return 1;
	}
	if(areaid == auctionpic[0])
	{
		new test = 0, sctring[856],str[64],id = 0;
		for(new i = 1; i <= TotalBizz; i++) if(strcmp(BizzInfo[i][bOwner],"None",true) == 0) test++;
		if(test == 0) return SCM(playerid,COLOR_GREY," В данный момент на аукционе нет бизнесов");
		if(test > 0)
		{
			for(new i = 1; i <= TotalBizz; i++)
			{
				if(strcmp(BizzInfo[i][bOwner],"None",true) == 0)
				{
					id++;
					bizname[playerid][id] = i;
					format(str,sizeof(str), "%s\n",BizzInfo[i][bMessage]);
					strcat(sctring,str);
				}
			}
			ShowPlayerDialog(playerid,1667,DIALOG_STYLE_LIST,"Аукцион бизнесов",sctring, "Далее", "Отмена");
			return true;
		}
	}
	else if(areaid == auctionpic[1])
	{
		new null = 0, str[556],idx = 0;
		for(new i = 1; i <= TOTALSHOPS; i++) if(strcmp(WorkshopInfo[i][wOwner],"None",true) == 0) null++;
		for(new i = 1; i <= TOTALFARM; i++) if(strcmp(FarmInfo[i][fOwner],"None",true) == 0) null++;
		if(null == 0) return SCM(playerid,COLOR_GREY," В данный момент на аукционе нет бизнесов");
		for(new i = 1; i <= TOTALSHOPS; i++)
		{
			if(strcmp(WorkshopInfo[i][wOwner],"None",true) != 0) continue;
			bizname[playerid][idx] = i;
			format(YCMDstr,64, "СТО [%i]\n",WorkshopInfo[i][wID]-1);
			strcat(str,YCMDstr);
			auction_info[idx] = 1;
			idx++;
		}
		for(new i = 1; i <= TOTALFARM; i++)
		{
			if(strcmp(FarmInfo[i][fOwner],"None",true) != 0) continue;
			bizname[playerid][idx] = i;
			format(YCMDstr,64, "Ферма [%i]\n",FarmInfo[i][fID]-1);
			strcat(str,YCMDstr);
			auction_info[idx] = 2;
			idx++;
		}
		for(new i = 0; i < gTotalTaxiStation; i++)
		{
			if(strcmp(g_tInfo[i][e_szOwner],"x",true) != 0) continue;
			bizname[playerid][idx] = i+1;
			format(YCMDstr,64, "Таксопарк [%i]\n",g_tInfo[i][e_dbId]-1);
			strcat(str,YCMDstr);
			auction_info[idx] = 3;
			idx++;
		}
		return ShowPlayerDialog(playerid,1690,DIALOG_STYLE_LIST,"Аукцион Ферм/СТО",str, "Далее", "Отмена");
	}
	else if(areaid == work_loader[0])
	{
		if(!GetPVarInt(playerid, "LoaderWork"))
			ShowPlayerDialog(playerid,4423,DIALOG_STYLE_MSGBOX, "Прораб", "Хочешь подработать у нас?", "Начать", "Отмена");
		else
			ShowPlayerDialog(playerid,4423,DIALOG_STYLE_MSGBOX, "Прораб", "Хочешь закончить работу?", "Закончить", "Отмена");

		return 1;
	}
	if(areaid == work_loader[1]) // берет мешек
	{
		if(GetPVarInt(playerid, "LoaderWork") == 1)
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpoint(playerid,2172.4146,-2255.5405,13.3041,1.5);
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_CARRY);
			SetPlayerAttachedObject(playerid, 1 , 2060, 1,0.11,0.36,0.0,0.0,90.0);
			SetPVarInt(playerid, "LoaderWork", 2);
			return 1;
		}
	}
	if(areaid == work_loader[2]) // кладет мешок
	{
		if(GetPVarInt(playerid, "LoaderWork") == 2)
		{
			SetPVarInt(playerid, "zp_loader", GetPVarInt(playerid, "zp_loader")+floatround((25+(pData[playerid][job_skill][job_loader]/4))));
			SetPVarInt(playerid, "meshkov",GetPVarInt(playerid, "meshkov")+1);
			SendMes(playerid, 0x388e3cFF, "Мешков перетащено: {ffffff}%i{388e3c}, заработано:{ffffff} %d",GetPVarInt(playerid, "meshkov"), GetPVarInt(playerid, "zp_loader"));
			DisablePlayerCheckpoint(playerid);
			give_job_exp(playerid, job_loader, 1+(random(2)));
			SetPVarInt(playerid, "LoaderWork", 1);
			if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
			SetPlayerCheckpoint(playerid,2224.7681,-2276.9041,14.7647,1.5);
			return 1;
		}
	}
	if(areaid >= anti_dm_zone[0] && areaid <= anti_dm_zone[1])
	{
		SetPVarInt(playerid, "in_anti_dm_zone", 1);
		//return 1;
	}
	if(areaid >= Fortune[0] && areaid <= Fortune[2])
	{
		PlayerPlaySound(playerid, 5400, 0.0,0.0,0.0);
	    GameTextForPlayer(playerid,"~g~PRESS ENTER",1300,4);
	    return 1;
	}
	else if(areaid >= g_szTaxiArea[0] && areaid <= g_szTaxiArea[gTotalTaxiStation-1])
	{
		//new id = Streamer_GetIntData(STREAMER_TYPE_AREA, areas, E_STREAMER_EXTRA_ID);
		new price = g_tInfo[areaid - g_szTaxiArea[0]][e_iPrice];
		new taxi_str[160];
		format(taxi_str, sizeof taxi_str, "Машина D\t1-15 lvl\t%d вирт\nМашина C\t15-30 lvl\t%d вирт\nМашина B\t30-45 lvl\t%d вирт\nМашина A\t45+ lvl\t%d вирт", price*1,price*2,price*3,price*4);
		return  ShowPlayerDialog(playerid,22319,DIALOG_STYLE_TABLIST,"Таксопарк",taxi_str,"Выбрать","Отмена");
		
	}
	else if( areaid >= bankarea[0] && areaid <= bankarea[2])
	{
		GameTextForPlayer(playerid, "~g~PRESS: ~w~ENTER", 5000, 4);
		return 1;
	}
	else if(areaid >= gServerGates[eAutoSchoolGates] && areaid <= gServerGates[eAutoSchoolGates])
	{
		if(pData[playerid][pMember] != 11)
			return 1;
		new objectid = Streamer_GetIntData(STREAMER_TYPE_AREA, areaid, E_STREAMER_EXTRA_ID);
		if(!IsValidDynamicObject(objectid))
			return 1;
		new objectflag = Streamer_GetIntData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_EXTRA_ID);
		if(objectflag == 0xA || objectflag == 0xFF || objectflag == 0x1)
			return 1;

		new Float:x, Float:y, Float:z;
		Streamer_GetFloatData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_X, x);
		Streamer_GetFloatData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_Y, y);
		Streamer_GetFloatData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_Z, z);
		//
		new Float:xOffset = 1.50;
		MoveDynamicObject(objectid, x+xOffset, y, z+0.0001, 0.82);
		Streamer_SetIntData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_EXTRA_ID, 0x1);
		SetTimerEx(#OnGatesOpening, 4000, false, "dfff", areaid, xOffset, 0.0001, 0.52);
	}
	else if(areaid == duelpickup)
	{
		if(!IsAGang(playerid)) return SCM(playerid,-1,"- Организатор: Чувак. Я работаю только с бандами!");
		else if(pData[playerid][pDuelID] != -1) return SCM(playerid,-1,"- Организатор: Чувак ты уже подал заявку. Жди...");
		ApplyActorAnimation(testactor,"PED","IDLE_CHAT",8.0,0,0,0,0,2000);
		ShowPlayerDialog(playerid,2120,DIALOG_STYLE_MSGBOX,"{FFFFFF}Организатор | {ae433d}Дуэль", "{FFFFFF}Хей чувак. Хочешь постреляться?", "Да", "Нет");
	}
	else if(areaid == orgpickup)
	{
		ShowPlayerDialog(playerid,1995,DIALOG_STYLE_LIST,"{FFFFFF}Организации | {ae433d}Штат","{FFFFFF}Список организаций\n{FFFFFF}Создать органзацию", "Далее", "Отмена");
	}
	else if(areaid == dresspick)
	{
		if(pData[playerid][pCash] < 10000) return SCM(playerid, COLOR_DRED, " [!]{FFFFFF}  Недостаточно средств");
		enter_acs[playerid] = 0;
		if(!IsValidMenu(headmenu[0]))
		{
			headmenu[0] = CreateMenu("Victim", 1, 50.0, 160.0, 90.0);
			SetMenuColumnHeader(headmenu[0], 0, "~g~Accessories");
			AddMenuItem(headmenu[0], 0, "Hats");
			AddMenuItem(headmenu[0], 0, "Caps");
			AddMenuItem(headmenu[0], 0, "Clock");
			AddMenuItem(headmenu[0], 0, "Glasses");
			AddMenuItem(headmenu[0], 0, "Bandans");
			AddMenuItem(headmenu[0], 0, "Berets");
			AddMenuItem(headmenu[0], 0, "Headdress");
			AddMenuItem(headmenu[0], 0, "Helmets");
			AddMenuItem(headmenu[0], 0, "Masks");
		}
		ShowMenuForPlayer(headmenu[0], playerid);
		SetPlayerInterior(playerid,5);
		SCM(playerid, COLOR_DRED, " Используйте клавишу 'Быстрый бег' (пробел по умолчанию)");
		SCM(playerid, COLOR_DRED, " Используйте клавишу 'Вверх,вниз' (W,S по умолчанию)");
		SetPlayerPos(playerid,222.3489,-8.5845,1002.2109);
		SetPlayerFacingAngle(playerid, 266.7302);
		SetPlayerCameraPos(playerid,225.3489,-8.5845,1002.2109);
		SetPlayerCameraLookAt(playerid,222.3489,-8.5845,1002.2109);
		TogglePlayerControllable(playerid, 0);
		SetPlayerVirtualWorld(playerid,playerid);
	}
	else if(areaid == triggers[0])
	{
		if(PlayerLicenses(playerid, LICENSES_GET, LIC_DRIVER))
		{
			if(pData[playerid][pQuestL] == 1 && pData[playerid][pQuest] == 2)
			{
				PlayerPlaySound(playerid, 4201, 0.0, 0.0, 0);
				ShowPlayerDialog(playerid,13372,DIALOG_STYLE_MSGBOX,"Задание","Тут неподалёку есть ферма,где можно неплохо заработать.\nМожешь использовать gps или найти таксиста и попросить его отвезти тебя.\nЕсли ты сможешь за раз собрать 30 кустов урожая,то я поделюсь с тобой своей прибылью\n{DDCD70}Задача: Собрать 30 единиц урожая\n{17B757}Награда: 2000 вирт"
				,"Готово","");
				pData[playerid][pQuest] = 3;
				pData[playerid][pQuestP] = 0;
				pData[playerid][pQuestPF] = 30;
				SCM(playerid,COLOR_WHITE," {108491}Задание выполнено");
			}
			return SCM(playerid, COLOR_GRAD1, " Вы уже имеете водительские права");
		}
		else if(GetPVarInt(playerid,"givecarlic") == 2)
		{
			SCM(playerid, COLOR_WHITE, " Извините! Вы недостаточно хорошо ездиете, чтобы получить водительские права!");
			SCM(playerid, COLOR_WHITE, " Пересдать экзамен можно в любое время.");
			SCM(playerid, COLOR_WHITE, " Мы настоятельно рекомендуем вам прочесть ПДД");
			LessonCar[playerid] = 0;
			LessonStat[playerid] = 0;
			TakingLesson[playerid] = 0;
			DeletePVar(playerid,"givecarlic");
		}
		else if(GetPVarInt(playerid,"givecarlic") == 1)
		{
			LessonCar[playerid] = 0;
			LessonStat[playerid] = 0;
			TakingLesson[playerid] = 0;
			PlayerLicenses(playerid, LICENSES_SET, LIC_DRIVER);
			SetAccountInfo(playerid, pData[playerid][pLicenses], "pLicenses");
			SCM(playerid, COLOR_WHITE, " Поздравляем вас! Вы здали экзамен по вождению");
			SCM(playerid, COLOR_GREEN, " Подсказка: Теперь вы можете устроить на работу в Мэрии << Испльзуйте /GPS >>");
			SCM(playerid, COLOR_GREEN, " Подсказка: Работа водителя автобуса очень интересная и прибыльная (зарплата государства + деньги за билеты)");
			SCM(playerid, COLOR_WHITE, " Мы рекомендуем вам поработать пару лет (( 2 левла )), а после вступить в организацию");
			if(pData[playerid][pQuestL] == 1 && pData[playerid][pQuest] == 2)
			{
				PlayerPlaySound(playerid, 4201, 0.0, 0.0, 0);
				ShowPlayerDialog(playerid,13372,DIALOG_STYLE_MSGBOX,"Задание","Тут неподалёку есть ферма,где можно неплохо заработать.\nМожешь использовать gps или найти таксиста и попросить его отвезти тебя.\nЕсли ты сможешь за раз собрать 30 кустов урожая,то я поделюсь с тобой своей прибылью\n{DDCD70}Задача: Собрать 30 единиц урожая\n{17B757}Награда: 2000 вирт"
				,"Готово","");
				pData[playerid][pQuest] = 3;
				pData[playerid][pQuestP] = 0;
				pData[playerid][pQuestPF] = 30;
				SCM(playerid,COLOR_WHITE," {108491}Задание выполнено");
			}
			DeletePVar(playerid,"givecarlic");
		}
		else ShowPlayerDialog(playerid,10022,DIALOG_STYLE_MSGBOX, "Экзамен по вождению","Приветствуем вас в Автошколе.\nЕсли вы хотите сдать на права, нажмите Далее", "Далее", "Отмена"); 
	}
	else if(areaid == triggers[1])
	{
		ShowPlayerDialog(playerid, 10092, DIALOG_STYLE_MSGBOX, "Устройство на работу", "Вы желаете просмотреть список доступных работ?", "Да", "Нет");
		return 1;
	}
	else if(areaid == triggers[2])
	{
		SetPVarInt(playerid,"help_dialog",0), ShowPlayerDialog(playerid, 1467, 0, "Помощь","Здравствуйте, я объясню Вам как играть на этом сервере.\nЧто вам делать, куда идти в данный момент", "Далее", "Отмена");
	}
	else if(areaid == pickuparmy[0])
	{
		SetPlayerInterior(playerid,1);
		SetPlayerPos(playerid,2525.0266,-1306.2601,2166.6021);
		SetPlayerFacingAngle(playerid, 270.3965);
		FreezeInt(playerid);
		army_actor_time = 5;
		if(army_actor_text != Text3D:INVALID_3DTEXT_ID) DestroyDynamic3DTextLabel(army_actor_text);
		if(pData[playerid][pRank] < 9)
		{
			ProxDetector(60.0, playerid, " Дневальный кричит: Дежурный по роте на выход!",COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
			army_actor_text = CreateDynamic3DTextLabel("Дежурный по роте на выход!", 0x6495EDFF, 2531.4487,-1305.2017,2166.6021+1.2, 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,-1);
		}
		else
		{
			ProxDetector(60.0, playerid, " Дневальный кричит: Смирно!!!",COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
			army_actor_text = CreateDynamic3DTextLabel("Смирно!!!", 0x6495EDFF, 2531.4487,-1305.2017,2166.6021+1.2, 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID,1,-1);
		}
		ApplyActorAnimation(army_actor, "VENDING", "VEND_Drink_P",4.1, 0, 1, 1, 1, 1); // Анимация воинского приветсвия
		
		return 1;
		
	}
	else if(areaid == pickuparmy[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,190.9442,1931.5645,17.6406);
		SetPlayerFacingAngle(playerid, 278.3481);
		return 1;
	}
	
	else if(areaid == lcnls[0])
	{

		if( !(pData[playerid][pMember] == 9 || pData[playerid][pMember] == 16 || pData[playerid][pMember] == 20 || pData[playerid][pAdmin] >= 1 || pData[playerid][pNkeys] == 9 || IsACop(playerid) || IsAFbi(playerid) ))
			return SCM(playerid, COLOR_RED, " У вас нет пропуска");
		
		SetPlayerPos(playerid,1442.4484,-1069.8578,1717.9871);
		SetPlayerFacingAngle(playerid, 270.3965);
		SetPlayerVirtualWorld(playerid,1);
		SetPlayerInterior(playerid,1);
	}
	else if(areaid == lcnls[1])
	{
		if OnPlayerEther[playerid] > 0 *then
		{
			SendClientMessage(playerid, COLOR_WHITE, " Вы вышли из прямого эфира");
			OnPlayerEther[playerid] = 0;
		}
		SetPlayerPos(playerid,1658.5444,-1692.8900,15.6094);
		SetPlayerFacingAngle(playerid, 201.0006);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
	}
	else if(areaid == lcnsf[0])
	{
		ShowPlayerDialog(playerid, 11120, DIALOG_STYLE_MSGBOX, "Лифт", "{FFFFFF}Куда вы хотите?", "Офис", "Крыша");
		SetPVarInt(playerid, !#p_dNewsEnter, 1);
	}
	else if(areaid == lcnsf[1])
	{
		ShowPlayerDialog(playerid, 11120, DIALOG_STYLE_MSGBOX, "Лифт", "{FFFFFF}Куда вы хотите?", "Улицы", "Крыша");
		SetPVarInt(playerid, !#p_dNewsEnter, 3);
	}
	else if(areaid == lcnsf[2])
	{
		ShowPlayerDialog(playerid, 11120, DIALOG_STYLE_MSGBOX, "Лифт", "{FFFFFF}Куда вы хотите?", "Офис", "Улица");
		SetPVarInt(playerid, !#p_dNewsEnter, 2);
	}
	else if(areaid == lcnlv[0])
	{
		if( !(pData[playerid][pMember] == 9 || pData[playerid][pMember] == 16 || pData[playerid][pMember] == 20 || pData[playerid][pAdmin] >= 1 || pData[playerid][pNkeys] == 9 || IsACop(playerid) || IsAFbi(playerid) ))
			return SCM(playerid, COLOR_RED, " У вас нет пропуска");
		SetPlayerPos(playerid,1442.4484,-1069.8578,1717.9871);
		SetPlayerFacingAngle(playerid, 270.3965);
		SetPlayerVirtualWorld(playerid,3);
		SetPlayerInterior(playerid,1);
	}
	else if(areaid == lcnlv[1])
	{
		if OnPlayerEther[playerid] > 0 *then
		{
			SendClientMessage(playerid, COLOR_WHITE, " Вы вышли из прямого эфира");
			OnPlayerEther[playerid] = 0;
		}
		SetPlayerPos(playerid,2648.7830,1183.8584,10.8203);
		SetPlayerFacingAngle(playerid, 174.7974);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
	}
	
	else if(areaid == style_pickup_queue)
	{
		if(!TOTALSTYLELIST) return ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Очередь на бой","Пусто","Скрыть","");
		else
		{
			string = "";
			for(new i = 0; i < TOTALSTYLELIST; i++)
			{
				format(YCMDstr,128,"%s  vs  %s. Банк: %i\n",StyleList[i][slName], StyleList[i][slName_two], StyleList[i][slPrice]);
				strcat(string,YCMDstr);
			}
			return ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Очередь на бой",string,"Скрыть","");
		}
	}
	else if(areaid == lcnpick[0])
	{
		SetPlayerInterior(playerid, 5);
		SetPlayerPos(playerid,1298.9360,-794.9082,1084.0078);			
		SetPlayerFacingAngle(playerid, 359.4005);
		SetPlayerVirtualWorld(playerid, 2);
	}
	else if(areaid == lcnpick[1])
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,1453.7816,750.9824,11.0234);
		SetPlayerFacingAngle(playerid, 89.0143);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(areaid == FormaFracPic[5])
	{
		if(pData[playerid][pMember] == 9 || pData[playerid][pMember] == 16 || pData[playerid][pMember] == 20)
		{
			if(!GetPVarInt(playerid,"Fraction_Duty")) ShowPlayerDialog(playerid,1010,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите начать рабочий день?", "Да", "Нет");
			else ShowPlayerDialog(playerid,1011,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите закончить рабочий день?", "Да", "Нет");
		}
	}
	else if(areaid == votepick)
	{
		if(Pick == 0) return SendClientMessage(playerid, COLOR_GREY, " В штате нет выборов!");
		if(pData[playerid][pPick] > 0) return SendClientMessage(playerid, COLOR_GREY, " Вы уже голосовали на этих выборах!");
		else if(PickLevel > pData[playerid][pLevel]) return SendMes(playerid,COLOR_GRAD1," Голосование доступно с %i уровня",PickLevel); 
		new full = 0, votegolos[6];
		string[0] = EOS;
		strcat(string,"{FFFFFF}Кандидат\t{FFFFFF}Голосов\n",sizeof string);
		for(new i = 0; i < 7; i++)
		{
			if(strcmp(PickName[i],"None",false))
			{
				format(votegolos,sizeof votegolos,"%i",PickTime[i]);
				
				strcat(string, PickName[i]);
				strcat(string, "\t");
				strcat(string, votegolos);
				strcat(string, "\n");
				full++;
			}
		}
		if(full == 0) ShowPlayerDialog(playerid, 0, 0, "{FFFFFF}Кандидаты | {ae433d}Выборы", "{FFFFFF}Кандидатов нет", "x", "");
		else ShowPlayerDialog(playerid, 753, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Кандидаты | {ae433d}Выборы", string, "Вперед", "Закрыть");
	}
	else if(areaid == bBar)
	{
		switch(pData[playerid][pMember])
		{
		case 24, 26, 29:
			{
				format(YCMDstr,sizeof(YCMDstr), "Вода\nСода\nТоник\nКока-кола\nПиво\nСаке\nВодка\nВино\nВиски\nКоньяк\nАбсент");
				ShowPlayerDialog(playerid, 2290, DIALOG_STYLE_LIST, "Меню Бара", YCMDstr, "Выбрать", "Отмена");
			}
		}
	}
	if(areaid >= podeezd_info[0][p_area] && areaid <= podeezd_info[total_podeezd-1][p_area])
	{
		new h = Streamer_GetIntData(STREAMER_TYPE_AREA,  areaid, E_STREAMER_EXTRA_ID);
		SetPVarInt(playerid, "podeezd", h);
		new str[8], varv[100];
		strcat(varv,"Парковка\n");
		for(new f = 0; f <= podeezd_info[h][p_floors]-1; f++)
		{
			format(str, 10, "%i этаж\n", f+1);
			strcat(varv,str);
		}
		return ShowPlayerDialog(playerid, 8999, 2, "Лифт", varv, "Перейти", "Закрыть");
		//return 1;
	}
	if(areaid == padik_exit)
	{
		new h = GetPVarInt(playerid, "podeezd");
		new str[8], varv[100];
		strcat(varv,"Улица\n");
		for(new f = 0; f <= podeezd_info[h][p_floors]-1; f++)
		{
			format(str, 10, "%i этаж\n", f+1);
			strcat(varv,str);
		}
		return ShowPlayerDialog(playerid, 8998, 2, "Лифт", varv, "Перейти", "Закрыть");	
	}
	if(areaid >= BizzInfo[1][bExitPic] && areaid <= BizzInfo[TotalBizz][bExitPic])
	{
		new biz = Streamer_GetIntData(STREAMER_TYPE_AREA,  areaid, E_STREAMER_EXTRA_ID);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,BizzInfo[biz][bEntranceX],BizzInfo[biz][bEntranceY],BizzInfo[biz][bEntranceZ]);
		SetPlayerVirtualWorld(playerid,0);
		SetPVarInt(playerid, "no_need_area", 1);
		return true;
	}
	if(areaid >= BizzInfo[1][bEnterPic] && areaid <= BizzInfo[TotalBizz][bEnterPic])
	{
		new b = Streamer_GetIntData(STREAMER_TYPE_AREA,  areaid, E_STREAMER_EXTRA_ID);
		if(strcmp(BizzInfo[b][bOwner],"None",true) == 0)
		{
		
			SetPlayerInterior(playerid,BizzInfo[b][bInterior]);
			SetPlayerPos(playerid,BizzInfo[b][bExitX],BizzInfo[b][bExitY],BizzInfo[b][bExitZ]);
			SetPlayerVirtualWorld(playerid,BizzInfo[b][bVirtualWorld]);
			SetPVarInt(playerid, "no_need_area", 1);
			return true;
		}
		if(BizzInfo[b][bType] == 1)
		{
			if(enterbiz[playerid] != b && pData[playerid][pPBizzKey] != b)
			{
				if(BizzInfo[b][bLocked] == 1)
				{
					SCM(playerid, COLOR_GRAD1, " Бизнес закрыт");
					return true;
				}
				format(string,100, "Цена входа %i вирт\nВы хотите войти?",BizzInfo[b][bEntranceCost]);
				ShowPlayerDialog(playerid,9898,DIALOG_STYLE_MSGBOX, "Вход",string, "Да", "Отмена");
				return true;
			}
			else
			{

				SetPlayerInterior(playerid,BizzInfo[b][bInterior]);
				SetPlayerPos(playerid,BizzInfo[b][bExitX],BizzInfo[b][bExitY],BizzInfo[b][bExitZ]);
				SetPlayerVirtualWorld(playerid,BizzInfo[b][bVirtualWorld]);
				SetPVarInt(playerid, "no_need_area", 1);
				return true;
			}
		}
		else
		{
			if(BizzInfo[b][bLocked] == 1)
			{
				SCM(playerid, COLOR_GRAD1, " Бизнес закрыт");
				return true;
			}

			SetPlayerInterior(playerid,BizzInfo[b][bInterior]);
			SetPlayerPos(playerid,BizzInfo[b][bExitX],BizzInfo[b][bExitY],BizzInfo[b][bExitZ]);
			SetPlayerVirtualWorld(playerid,BizzInfo[b][bVirtualWorld]);
			SetPVarInt(playerid, "no_need_area", 1);
			return true;
		}
	}

	if(areaid >= kvart_info[0][k_area] && areaid <= kvart_info[total_kvart-1][k_area])
	{
		new h = Streamer_GetIntData(STREAMER_TYPE_AREA,  areaid, E_STREAMER_EXTRA_ID);
		SetPVarInt(playerid, "id_kvart_enter", h+1);
		return 1;
	}
	if(areaid >= HouseInfo[0][h_area] && areaid <= HouseInfo[TotalHouse-1][h_area])
	{
		new h = Streamer_GetIntData(STREAMER_TYPE_AREA,  areaid, E_STREAMER_EXTRA_ID);
	
		new mes[150];		
		new classname[20];			
		switch(HouseInfo[h][hKlass])
		{
			case 0:classname = "Эконом";
			case 1:classname = "Стандарт";
			case 2:classname = "Комфорт";
			case 3:classname = "Престиж";
			case 4:classname = "Люкс";
			case 5:classname = "Особняк";
			default: classname = "Неизвестно";
		}
		SetPVarInt(playerid, !#pPickHouseId, h+1); 
		if(!strcmp(HouseInfo[h][hOwner],"None",true)) // на продажу
		{			
			format(mes,sizeof(mes),"{fce4ec}Номер дома: {9ccc65}%d\n{fce4ec}Класс: {9ccc65}%s\n{fce4ec}Цена: {9ccc65}%d\n{fce4ec} Введите: /buyhouse чтобы купить дом",h,classname,HouseInfo[h][hValue]);
			ShowPlayerDialog(playerid,10075,DIALOG_STYLE_MSGBOX,"Частный дом",mes,"Войти","Отмена");
		}
		else
		{
			format(mes,sizeof(mes),"{fce4ec}Номер дома: {9ccc65}%d\n{fce4ec}Класс: {9ccc65}%s\n{fce4ec}Владелец: {9ccc65}%s",h,classname,HouseInfo[h][hOwner]);
			ShowPlayerDialog(playerid,10075,DIALOG_STYLE_MSGBOX,"Частный дом",mes,"Войти","Отмена");
		}
		return 1;
		//	break;
	}
	return true;
}
public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
	if(!pData[playerid][pLogin]) return true;
	else if(pickupid >= mushroom[0] && pickupid <= mushroom[1])
	{
		if(GetPVarInt(playerid,"g_Flood") > 0) return true;
		SetPVarInt(playerid,"g_Flood",10);
		format(string, 40, "%s срезал(а) гриб", pData[playerid][pName]);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		pData[playerid][pMushrooms] += 1;
		SetAccountInfo(playerid, pData[playerid][pMushrooms], "pMushrooms");
		ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 6.1, 0, 0, 0, 0, 0,1);
		format(string,160, "Вы нашли гриб: \"%s\". Грибов собрано: %i штук",GribNames[random(3)],pData[playerid][pMushrooms]);
		SCM(playerid,COLOR_WHITE,string);
	}
	if(pickupid >= g_szLSAMat[0] && pickupid <= g_szLSAMat[1])
	{
		//SCM(playerid, -1, " pick lsamat ");
		if(!IsAGang(playerid))
			return SCM(playerid,COLOR_GRAD1, " Вы не бандит!");
		if(lsamatbi < MAX_MATERIALS_GET)return SCM(playerid,COLOR_GRAD1, " Склад армии пуст");
		if(GetPVarInt(playerid, !#_dGetMaterials)) return SCM(playerid,COLOR_GRAD1, "  Вы не можете взять больше");
		SCM(playerid, 0x6495EDFF, " Вы взяли 150 материалов со склада армии");
		//SCM(playerid, COLOR_WHITE, " Несите ящик в грузовик, используйте /materials put, чтобы положить материалы в фургон");
		//SetPlayerSpecialAction (playerid, SPECIAL_ACTION_CARRY);
		ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,0,0,0,0,1,0);
		SetPlayerAttachedObject(playerid, 1 , 2358, 1,0.11,0.36,0.0,0.0,90.0);
		SetPVarInt(playerid, !#_dGetMaterials, 0xFF);
		return 1;
	}

	new _arrayData[2];
	Streamer_GetArrayData(STREAMER_TYPE_PICKUP, pickupid, E_STREAMER_EXTRA_ID, _arrayData);
	if(_arrayData[0] != 0 && IsValidVehicle(_arrayData[0]) && _arrayData[1] != -1)
		if( _arrayData[0] >= g_szGangBoats[0] && _arrayData[0] <= g_szGangBoats[4] )
		{
			//SCM(playerid, -1, " pick lsamat ");
			if(g_szGangBoatStat[ _arrayData[0] ][e_bLoading] == E_MATERIALS_LOADING)
			{
				if(GetPVarInt(playerid, !#_dGetMaterials))
				{
					if(g_szGangBoatStat[ _arrayData[0] ][e_iMaterials] >= MAX_BOAT_MATERIALS )
					{
						SetPlayerSpecialAction (playerid, SPECIAL_ACTION_NONE);
						RemovePlayerAttachedObject(playerid, 1);
						ClearAnim(playerid);
						DeletePVar(playerid, !#_dGetMaterials);
						return SCM(playerid,COLOR_GRAD1, "  Вы не можете загрузить больше");
					}
					if(g_szGangBoatStat[ _arrayData[0] ][e_iMaterials] + MAX_MATERIALS_GET > MAX_BOAT_MATERIALS )
						g_szGangBoatStat[ _arrayData[0] ][e_iMaterials] = MAX_BOAT_MATERIALS;
					else 
						g_szGangBoatStat[ _arrayData[0] ][e_iMaterials] += MAX_MATERIALS_GET;
					new _tmpstr[16+6];
					format(_tmpstr, sizeof _tmpstr, "Загружено: %d/%d", g_szGangBoatStat[ _arrayData[0] ][e_iMaterials], MAX_BOAT_MATERIALS);
					UpdateDynamic3DTextLabelText(Text3D:_arrayData[1], TEAM_GROVE_COLOR, _tmpstr);
					SetPlayerSpecialAction (playerid, SPECIAL_ACTION_NONE);
					RemovePlayerAttachedObject(playerid, 1);
					ClearAnim(playerid);
					DeletePVar(playerid, !#_dGetMaterials);
					lsamatbi -= MAX_MATERIALS_GET;
				}
			}
			else if(g_szGangBoatStat[ _arrayData[0] ][e_bLoading] == E_MATERIALS_UNLOADING)
			{
				if(!GetPVarInt(playerid, !#_dGetMaterials))
				{

					if(g_szGangBoatStat[ _arrayData[0] ][e_iMaterials]-MAX_MATERIALS_GET <= 0 )
					{
						DeletePVar(playerid, !#_dGetMaterials);

						DestroyDynamicPickup(g_szGangBoatStat[_arrayData[0]][e_iPickup]);
						DestroyDynamic3DTextLabel(Text3D:_arrayData[1]);
						SetVehicleToRespawn(_arrayData[0]);
						return 1;
						//SetPlayerRaceCheckpoint(playerid, 1, 2955.7334, -1485.0795, 1.6218, 2955.7334, -1485.0795, 1.6218, 10.5);
					}

					g_szGangBoatStat[ _arrayData[0] ][e_iMaterials] -= MAX_MATERIALS_GET;

					new _tmpstr[16+6];
					format(_tmpstr, sizeof _tmpstr, "Загружено: %d/%d", g_szGangBoatStat[ _arrayData[0] ][e_iMaterials], MAX_BOAT_MATERIALS);
					UpdateDynamic3DTextLabelText(Text3D:_arrayData[1], TEAM_GROVE_COLOR, _tmpstr);

					//SetPlayerSpecialAction (playerid, SPECIAL_ACTION_CARRY);
					ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,0,0,0,0,1,0);
					SetPlayerAttachedObject(playerid, 1 , 2358, 1,0.11,0.36,0.0,0.0,90.0);
					SetPVarInt(playerid, !#_dGetMaterials, 0xD);

					if(g_szGangBoatStat[ _arrayData[0] ][e_iMaterials]-MAX_MATERIALS_GET <= 0 )
					{

						DestroyDynamicPickup(g_szGangBoatStat[_arrayData[0]][e_iPickup]);
						DestroyDynamic3DTextLabel(Text3D:_arrayData[1]);
						SetVehicleToRespawn(_arrayData[0]);
						return 1;
						//SetPlayerRaceCheckpoint(playerid, 1, 2955.7334, -1485.0795, 1.6218, 2955.7334, -1485.0795, 1.6218, 10.5);
					}
				}
			}
			return 1;

			//Streamer_SetArrayData(STREAMER_TYPE_PICKUP, g_szGangBoatStat[_vehicleidx][e_iPickup], E_STREAMER_EXTRA_ID, _arrayData);
		}

	
	for(new b = 1; b <= TotalBizz; b++)
	{
		
		if(pickupid == BizzInfo[b][bPickup] && PlayerToPoint(2.0,playerid,BizzInfo[b][bBarX],BizzInfo[b][bBarY],BizzInfo[b][bBarZ]))
		{
			if(PlayerToPoint(10, playerid,BizzInfo[b][bBarX], BizzInfo[b][bBarY], BizzInfo[b][bBarZ]) && BizzInfo[b][bType] == 2) // закусочная
			{
				if(GetPVarInt(playerid, "delivery_step") == 1)
				{

					new dd = GetPVarInt(playerid, "delivery_id");
					new house = delivery_info[dd][adress];

					SendMes(playerid, 0xe91e63FF, " Для вас оплачено '%s'. Адресс доставки отмечен на gps", delivery_food_name(delivery_info[dd][food]));
				
					SetPlayerCheckpoint(playerid, HouseInfo[house][hEntrancex], HouseInfo[house][hEntrancey], HouseInfo[house][hEntrancez], 1.0);
					SetPVarInt(playerid, "delivery_step", 2);
					SetPlayerAttachedObject(playerid,1,3026,1,-0.176000, -0.066000, 0.0000,0.0000, 0.0000, 0.0000, 1.07600, 1.079999, 1.029000,0xFF9ccc65,0xFF9ccc65);
					return 1;
				}
				GameTextForPlayer(playerid, "~g~Enter: '~w~/eat~g~'", 3000, 4);
			}
			if(PlayerToPoint(10, playerid,BizzInfo[b][bBarX], BizzInfo[b][bBarY], BizzInfo[b][bBarZ]) && BizzInfo[b][bType] == 3) // 24/7
			{
				GameTextForPlayer(playerid, "~g~Enter: '~w~/buy~g~'", 3000, 4);
			}
			if(!PlayerToPoint(10, playerid,BizzInfo[b][bBarX], BizzInfo[b][bBarY], BizzInfo[b][bBarZ]) || BizzInfo[b][bType] != 1 || GetPlayerVirtualWorld(playerid) != BizzInfo[b][bVirtualWorld]) continue;
			if(strcmp(BizzInfo[b][bOwner],"None",true) == 0 || BizzInfo[b][bLocked]) return SCM(playerid, COLOR_GREY, " Бизнес закрыт");
			format(YCMDstr,sizeof(YCMDstr), "Вода\t\t[%i вирт]\nСода\t\t[%i вирт]\nТоник\t\t[%i вирт]\nКока-кола\t[%i вирт]\nПиво\t\t[%i вирт]\nСаке\t\t[%i вирт]\nВодка\t\t[%i вирт]\nВино\t\t[%i вирт]\nВиски\t\t[%i вирт]\nКоньяк\t\t[%i вирт]\nАбсент\t\t[%i вирт]",
			BizzInfo[b][bPrice],BizzInfo[b][bPrice],BizzInfo[b][bPrice],BizzInfo[b][bPrice]*2,BizzInfo[b][bPrice]*2,BizzInfo[b][bPrice]*3,BizzInfo[b][bPrice]*3,BizzInfo[b][bPrice]*4,BizzInfo[b][bPrice]*5,BizzInfo[b][bPrice]*5,BizzInfo[b][bPrice]*6);
			ShowPlayerDialog(playerid, 2289, DIALOG_STYLE_LIST, "Меню Бара", YCMDstr, "Выбрать", "Отмена");
		}
	}
	foreach(new i: Vehicle)
	{
		new null;
		for(new idx = 1; idx <= TOTALFARM; idx++) if(i >= FarmInfo[idx][fSeed_Car][0] && i <= FarmInfo[idx][fSeed_Car][1]) null = idx;
		if(pickupid == Farmcar_pickup[i] && null)
		{
			new Float:x, Float:y, Float:z;
			if(GetPVarInt(playerid,"farm_id") != null) return true;
			if(GetPVarInt(playerid,"farm_status") == 0)
			{
				DisablePlayerCheckpoint(playerid);
				RemovePlayerAttachedObject(playerid,3);
				AntiCheatGetVehiclePos(i, x, y, z);
				new Float:X12, Float:Y12, Float:Z12;
				GetXYInBackOfPlayer(playerid, X12, Y12, Z12);
				SetPlayerCheckpoint(playerid,X12+random(5),Y12+random(5),z, 1.3);
				SetPVarInt(playerid,"farm_status", 1);
				SCM(playerid,COLOR_GREEN,"Для начала соберите урожай{ffffff} (( Встаньте на красный чекпоинт, и ждите 15 секунд ))");
				SCM(playerid,COLOR_GREEN,"Когда соберете положите в кузов автомобиля{ffffff} (( Встаньте на желтую стрелку ))");
				SCM(playerid,COLOR_GREEN,"Если захотите завершить работу, пройдите к раздевалке{ffffff} (( Встаньте на синий пикап у фермы ))");
				SCM(playerid,COLOR_GREEN,"Если вы фермер, то просто сядьте в машину для завершения сбора урожая");
			}
			else if(GetPVarInt(playerid,"farm_status") == 1) return SCM(playerid, COLOR_GREY,"Вы ещё не собрали урожай");
			else if(GetPVarInt(playerid,"farm_status") == 2)
			{
				if(Farmcar_prods[i] >= 1000)
				{
					SCM(playerid, COLOR_GREY,"В грузовике нет места");
					Farmcar_prods[i] = 1000;
					Update3DTextLabelText(Farmcar_text[i], 0x5CABBDFF, "Загружено\n{ffffff}1000 / 1000");
					return true;
				}
				Farmcar_prods[i] += 5;
				SetPVarInt(playerid,"farm_zp", GetPVarInt(playerid,"farm_zp") + FarmInfo[GetPVarInt(playerid,"farm_id")][fZp]);
				format(string, 32, "~b~count:~w~%i$",GetPVarInt(playerid,"farm_zp"));
				FarmStatPay[null][2] += 5;
				FarmStatDay[null][2] += 5;
				FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain_Sown] -= 5;
				GameTextForPlayer(playerid, string, 3000, 1);
				DisablePlayerCheckpoint(playerid);
				SetPVarInt(playerid,"farm_status",1);
				RemovePlayerAttachedObject(playerid,3);
				AntiCheatGetVehiclePos(i, x, y, z);
				new Float:X12, Float:Y12, Float:Z12;
				GetXYInBackOfPlayer(playerid, X12, Y12, Z12);
				SetPlayerCheckpoint(playerid,X12+random(5),Y12+random(5),z, 1.3);
				new LBLstring[64];
				LBLstring = "";
				format(LBLstring, 64, "Загружено\n{ffffff}%i / 1000",Farmcar_prods[i]);
				Update3DTextLabelText(Farmcar_text[i], 0x5CABBDAA, LBLstring);
				if(pData[playerid][pQuestL] == 1 && pData[playerid][pQuest] == 3) pData[playerid][pQuestP] ++, SetAccountInfo(playerid, pData[playerid][pQuestP], "pQuestP");
				if(pData[playerid][pQuestL] == 1 && pData[playerid][pQuest] == 3 && pData[playerid][pQuestP] == 30) CheckQuest(playerid);
			}
		}
		if((i >= comptruck[0] && i <= comptruck[1]) && car_pickup[i] == pickupid)
		{
			if(!IsPlayerInAnyVehicle(playerid) && GetPVarInt(playerid, "LoaderWork") && JobCP[playerid] == 2)
			{
				if(car_grain[i][0] >= car_grain[i][1]) return SCM(playerid,COLOR_GREY," В машине нет места"), car_grain[i][0] = car_grain[i][1];
				car_grain[i][0] += 100;
				if(car_grain[i][0] > car_grain[i][1]) car_grain[i][0] = car_grain[i][1];
				SetPVarInt(playerid, "meshkov",GetPVarInt(playerid, "meshkov")+1);
				format(string,100, "Мешков перетащено: %i",GetPVarInt(playerid, "meshkov"));
				SCM(playerid,COLOR_GREEN,string);
				DisablePlayerCheckpoint(playerid);
				SetPlayerSpecialAction (playerid, SPECIAL_ACTION_NONE);
				ApplyAnimation(playerid,"GANGS","hndshkba",4.1,0,1,1,0,1,1);

				if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
				SetPlayerCheckpoint(playerid,2230.3528,-2286.1353,14.3751,1.5);
				JobCP[playerid] = 1;
				new LBLstring[64];
				LBLstring = "";
				format(LBLstring, 64, "Загружено\n{ffffff}%i / %i",car_grain[i][0],car_grain[i][1]);
				Update3DTextLabelText(car_text[i], 0x5CABBDAA, LBLstring);
				
			}
		}
	}
	for(new idx = 1; idx <= TOTALFARM; idx++)
	{
		if(pickupid == FarmInfo[idx][fPickup][0]) return ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Информация о работе", "Здесь вы можете поработать сборщиком урожая.\n\nЧто бы начать работу найдите фермера,\nон вам всё объяснит.\n\nНеподалеку находится раздевалка,\nтам же получать деньги.\n\nЧтобы начать работу необходимо переодеться в робу,\nдалее вам укажут где,брать груз.\n\nКак только вы захотите завершить рабочий день,\nподойдите к раздевалке.", "Скрыть", "");
		if(pickupid == FarmInfo[idx][fPickup][1]) return ShowPlayerDialog(playerid,150,DIALOG_STYLE_MSGBOX,"Раздевалка", "Вы хотите начать рабочий день, или завершить?", "Начать", "Завершить");
	}
	for(new idx = 1; idx <= TOTALSHOPS; idx++)
	{
		if(pickupid == WorkshopInfo[idx][wPickup][0])
		{
			SetPlayerInterior(playerid,3);
			SetPlayerPos(playerid,WorkshopInfo[idx][wExit][0],WorkshopInfo[idx][wExit][1],WorkshopInfo[idx][wExit][2]);
			SetPlayerVirtualWorld(playerid,idx);
			return SetPlayerFacingAngle(playerid, 172.8032);
		}
		else if(pickupid == WorkshopInfo[idx][wPickup][1])
		{
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,WorkshopInfo[idx][wEntr][0],WorkshopInfo[idx][wEntr][1],WorkshopInfo[idx][wEntr][2]);
			SetPlayerVirtualWorld(playerid,0);
			return SetPlayerFacingAngle(playerid, 0);
		}
		else if(pickupid == WorkshopInfo[idx][wPickup][2]) return ShowPlayerDialog(playerid,139,DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите начать рабочий день, или завершить?", "Начать", "Закончить");
		else if(pickupid == WorkshopInfo[idx][wPickup][3])
		{
			new str[390];
			for(new i = 9; i >= 0; i--)
			{
				if(!strlen(WorkshopList[i][idx][wlName])) format(string,30,"%i. Пусто\n",i+1);
				else format(string,30,"%i. %s[ID:%i]\n",i+1,WorkshopList[i][idx][wlName],WorkshopList[i][idx][wlID]);
				strcat(str, string);
			}
			return ShowPlayerDialog(playerid,10111,DIALOG_STYLE_MSGBOX, "Очередь",str, "Закрыть", "");
		}
	}
	
	
	/*else if(pickupid >= Wardrobe[0] && pickupid <= Wardrobe[34])
	{
		new bouse = pData[playerid][pPHouseKey];
		if (GetPlayerVirtualWorld(playerid) != bouse+50) return true;
		if(GetPVarInt(playerid,"Fraction_Duty") || GetPVarInt(playerid, "LoaderWork") || GetPVarInt(playerid,"farm_id")) return SCM(playerid,COLOR_GREY," Вы не можете использовать гардероб! ( Если вы состоите в гос. организации, переоденьтесь на базе )");
		SetPlayerPos(playerid,181.5215,-88.0678,1002.0234);
		SetPlayerFacingAngle(playerid, 92.6158);
		SetPlayerCameraPos(playerid,179.1173,-88.0198,1002.0234);
		SetPlayerCameraLookAt(playerid,179.1173,-88.0198,1002.0234);
		SetPlayerInterior(playerid,18);
		ShowPlayerDialog(playerid,10399,DIALOG_STYLE_LIST, "Гардероб","Вешалка №1\nВешалка №2\nВешалка №3\nВешалка №4\nВешалка №5", "Повешать", "Выход");
	}*/
	return true;
}
new reg_skin[][] = {
	{137,200,230,239,79},// мужские
	{90,40,69,193,56}
};
public OnPlayerSelectedMenuRow(playerid, row)
{

	if(GetPlayerMenu(playerid) == buy_interior_menu)
	{
		if(!row) // next
		{
			if(GetPVarInt(playerid, "SelectedInt_add"))
			{//выбор интерьера 

				for(new i; i < house_int_count; i++)
				{
					if(interior_info[i][int_klass] != GetPVarInt(playerid, "SelectedInt_add")-1) continue;
					
					if(GetPVarInt(playerid, "SelectedInt") < i)
					{
						SetPlayerInterior(playerid,interior_info[i][int_int]);
						SetPlayerVirtualWorld(playerid,999+playerid);
						SetPlayerPos(playerid,interior_info[i][int_x],interior_info[i][int_y],interior_info[i][int_z]);
						ShowMenuForPlayer(buy_interior_menu,playerid);	
						SetPVarInt(playerid, "SelectedInt", i);
						return 1;
					}
				}
				for(new i; i < house_int_count; i++)
				{
					if(interior_info[i][int_klass] == GetPVarInt(playerid, "SelectedInt_add")-1)
					{
						SetPlayerInterior(playerid,interior_info[i][int_int]);
						SetPlayerVirtualWorld(playerid,999+playerid);
						SetPlayerPos(playerid,interior_info[i][int_x],interior_info[i][int_y],interior_info[i][int_z]);
						ShowMenuForPlayer(buy_interior_menu,playerid);
						SetPVarInt(playerid, "SelectedInt", i);
						return 1;
					}
				}
	
			}

		}
		else if(row == 1)// done
		{
			if(GetPVarInt(playerid, "smena_inta"))
			{
				new int_str[250];
				format(int_str, sizeof int_str, "{ffffff}Желаете сменить ваш интерьер на этот?\n\nЦена: %d вирт", 100000*(HouseInfo[pData[playerid][pPHouseKey]][hKlass]+1));
				ShowPlayerDialog(playerid,6702,DIALOG_STYLE_MSGBOX, "Смена интерьера",int_str, "Оплатить", "Отмена");
				return 1;
			}
			HouseInfo[TotalHouse][hInt] = GetPVarInt(playerid, "SelectedInt");
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerPos(playerid,HouseInfo[TotalHouse][hEntrancex],HouseInfo[TotalHouse][hEntrancey],HouseInfo[TotalHouse][hEntrancez]);
			SetPVarInt(playerid, "add_house_step", 2);
			SendClientMessage(playerid, -1, "Введите /addhouse для установки координат машины (гаража)");
			return 1;
		}
		else if(row == 2)// exit
		{
			if(GetPVarInt(playerid, "smena_inta"))
			{
				new int = HouseInfo[pData[playerid][pPHouseKey]][hInt];

				SetPlayerInterior(playerid,interior_info[int][int_int]);
				SetPlayerPos(playerid,interior_info[int][int_x],interior_info[int][int_y],interior_info[int][int_z]);
				SetPlayerVirtualWorld(playerid, pData[playerid][pPHouseKey]+50);

				DeletePVar(playerid, "SelectedInt");
				DeletePVar(playerid, "SelectedInt_add");
				DeletePVar(playerid, "smena_inta");
				return 1;
			}
		}
	}
	if(GetPlayerMenu(playerid) == ChoseSkin[0])
	{
		switch(row)
		{
		case 0: // next
			{
				switch (SelectCharID[playerid])
				{
				case 1: // Skins LSPD // 21 10 1
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[0][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[0][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[1][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[1][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[2][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[2][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[3][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[3][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[4][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[4][0]; }
						else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[5][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[5][0]; }
						else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[6][0]); SelectCharPlace[playerid] = 8; InviteSkin[playerid] = JoinPed[6][0]; }
						else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, JoinPed[7][0]); SelectCharPlace[playerid] = 9; InviteSkin[playerid] = JoinPed[7][0]; }
						//------------------------------- Доп. скины ----------------------------
						else if(SelectCharPlace[playerid] == 9) { SetPlayerSkin(playerid, JoinPed[110][0]); SelectCharPlace[playerid] = 10; InviteSkin[playerid] = JoinPed[110][0]; }
						else if(SelectCharPlace[playerid] == 10) { SetPlayerSkin(playerid, JoinPed[111][0]); SelectCharPlace[playerid] = 11; InviteSkin[playerid] = JoinPed[111][0]; }
						else if(SelectCharPlace[playerid] == 11) { SetPlayerSkin(playerid, JoinPed[112][0]); SelectCharPlace[playerid] = 12; InviteSkin[playerid] = JoinPed[112][0]; }
						else if(SelectCharPlace[playerid] == 12) { SetPlayerSkin(playerid, JoinPed[113][0]); SelectCharPlace[playerid] = 13; InviteSkin[playerid] = JoinPed[113][0]; }
						
						else if(SelectCharPlace[playerid] == 13) { SetPlayerSkin(playerid, JoinPed[114][0]); SelectCharPlace[playerid] = 14; InviteSkin[playerid] = JoinPed[114][0]; }
						else if(SelectCharPlace[playerid] == 14) { SetPlayerSkin(playerid, JoinPed[115][0]); SelectCharPlace[playerid] = 15; InviteSkin[playerid] = JoinPed[115][0]; }
						else if(SelectCharPlace[playerid] == 15) { SetPlayerSkin(playerid, JoinPed[116][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[116][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 2:
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[8][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[8][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[9][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[9][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[10][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[10][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[11][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[11][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[12][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[12][0]; }
						else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[13][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[13][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 3:
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[91][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[91][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[89][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[89][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 4: // Medics SF
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[16][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[16][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[17][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[17][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[18][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[18][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[19][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[19][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[20][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[20][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 5: // La Cosa Nostra
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[21][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[21][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[22][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[22][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[23][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[23][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[24][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[24][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 6: // Yakuza
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[25][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[25][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[26][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[26][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[27][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[27][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[28][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[28][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 7: // Goverment
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[29][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[29][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[30][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[30][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[31][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[31][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[32][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[32][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[33][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[33][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 8: // Casino Caligula
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 189); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = 189; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[46][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[46][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[47][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[47][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 9: // SF News
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[42][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[42][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[43][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[43][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[44][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[44][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 188); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = 188; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[45][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[45][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 10: // SFPD
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[34][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[34][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[35][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[35][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[36][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[36][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[37][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[37][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[38][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[38][0]; }
						else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[39][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[39][0]; }
						else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[40][0]); SelectCharPlace[playerid] = 8; InviteSkin[playerid] = JoinPed[40][0]; }
						else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, JoinPed[41][0]); SelectCharPlace[playerid] = 9; InviteSkin[playerid] = JoinPed[41][0]; }
						//------------------------------- Доп. скины ----------------------------
						else if(SelectCharPlace[playerid] == 9) { SetPlayerSkin(playerid, JoinPed[110][0]); SelectCharPlace[playerid] = 10; InviteSkin[playerid] = JoinPed[110][0]; }
						else if(SelectCharPlace[playerid] == 10) { SetPlayerSkin(playerid, JoinPed[111][0]); SelectCharPlace[playerid] = 11; InviteSkin[playerid] = JoinPed[111][0]; }
						else if(SelectCharPlace[playerid] == 11) { SetPlayerSkin(playerid, JoinPed[112][0]); SelectCharPlace[playerid] = 12; InviteSkin[playerid] = JoinPed[112][0]; }
						else if(SelectCharPlace[playerid] == 12) { SetPlayerSkin(playerid, JoinPed[113][0]); SelectCharPlace[playerid] = 13; InviteSkin[playerid] = JoinPed[113][0]; }

						else if(SelectCharPlace[playerid] == 13) { SetPlayerSkin(playerid, JoinPed[114][0]); SelectCharPlace[playerid] = 14; InviteSkin[playerid] = JoinPed[114][0]; }
						else if(SelectCharPlace[playerid] == 14) { SetPlayerSkin(playerid, JoinPed[115][0]); SelectCharPlace[playerid] = 15; InviteSkin[playerid] = JoinPed[115][0]; }
						else if(SelectCharPlace[playerid] == 15) { SetPlayerSkin(playerid, JoinPed[116][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[116][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 11: // Instructors
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[48][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[48][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[49][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[49][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[51][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[51][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 12: // Ballas
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[74][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[74][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[75][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[75][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[76][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[76][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 195); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = 195; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 13: // Vagos
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[80][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[80][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[81][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[81][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[82][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[82][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 226); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = 226; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 14: // Russian Mafia
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[60][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[60][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[61][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[61][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[62][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[62][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[63][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[63][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[64][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[64][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 15: // Groove
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[65][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[65][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[66][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[66][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[67][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[67][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[68][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[68][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[69][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[69][0]; }
						else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[70][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[70][0]; }
						else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, 56); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = 56; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 16: // LS News
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[85][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[85][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[86][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[86][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[87][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[87][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 188); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = 188; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[88][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[88][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 17: // Aztek
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[71][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[71][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[72][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[72][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[73][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[73][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 226); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = 226; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 18: // Rifa
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[77][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[77][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[78][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[78][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[79][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[79][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 30); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = 30; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 226); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = 226; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 19: // Army LV
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[91][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[91][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[89][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[89][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 20: // LV News
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[85][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[85][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[86][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[86][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[87][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[87][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 188); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = 188; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[88][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[88][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 21: // LVPD
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[52][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[52][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[53][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[53][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[54][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[54][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[55][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[55][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[56][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[56][0]; }
						else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[57][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[57][0]; }
						else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[58][0]); SelectCharPlace[playerid] = 8; InviteSkin[playerid] = JoinPed[58][0]; }
						else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, JoinPed[59][0]); SelectCharPlace[playerid] = 9; InviteSkin[playerid] = JoinPed[59][0]; }
						//------------------------------- Доп. скины ----------------------------
						else if(SelectCharPlace[playerid] == 9) { SetPlayerSkin(playerid, JoinPed[110][0]); SelectCharPlace[playerid] = 10; InviteSkin[playerid] = JoinPed[110][0]; }
						else if(SelectCharPlace[playerid] == 10) { SetPlayerSkin(playerid, JoinPed[111][0]); SelectCharPlace[playerid] = 11; InviteSkin[playerid] = JoinPed[111][0]; }
						else if(SelectCharPlace[playerid] == 11) { SetPlayerSkin(playerid, JoinPed[112][0]); SelectCharPlace[playerid] = 12; InviteSkin[playerid] = JoinPed[112][0]; }
						else if(SelectCharPlace[playerid] == 12) { SetPlayerSkin(playerid, JoinPed[113][0]); SelectCharPlace[playerid] = 13; InviteSkin[playerid] = JoinPed[113][0]; }

						else if(SelectCharPlace[playerid] == 13) { SetPlayerSkin(playerid, JoinPed[114][0]); SelectCharPlace[playerid] = 14; InviteSkin[playerid] = JoinPed[114][0]; }
						else if(SelectCharPlace[playerid] == 14) { SetPlayerSkin(playerid, JoinPed[115][0]); SelectCharPlace[playerid] = 15; InviteSkin[playerid] = JoinPed[115][0]; }
						else if(SelectCharPlace[playerid] == 15) { SetPlayerSkin(playerid, JoinPed[116][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[116][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 22: // Medics LS
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[16][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[16][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[17][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[17][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[18][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[18][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[19][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[19][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[20][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[20][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 23: // Medics LV
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[16][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[16][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[17][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[17][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[18][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[18][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[19][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[19][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[20][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[20][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 24: // Mongols MC
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[105][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[105][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[106][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[106][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[107][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[107][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[108][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[108][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[109][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[109][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 26: // Warlocks MC
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[105][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[105][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[106][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[106][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[107][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[107][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[108][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[108][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[109][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[109][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 29: // Pagans MC
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[105][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[105][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[106][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[106][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[107][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[107][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[108][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[108][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[109][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[109][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				}
			}
		case 1: //previous
			{
				switch (SelectCharID[playerid])
				{
				case 1: // LSPD
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[0][0]); SelectCharPlace[playerid] = 12; InviteSkin[playerid] = JoinPed[0][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[1][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[1][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[2][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[2][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[3][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[3][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[4][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[4][0]; }
						else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[5][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[5][0]; }
						else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[6][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[6][0]; }
						else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, JoinPed[7][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[7][0]; }
						//------------------------------- Доп. скины ----------------------------
						else if(SelectCharPlace[playerid] == 9) { SetPlayerSkin(playerid, JoinPed[110][0]); SelectCharPlace[playerid] = 8; InviteSkin[playerid] = JoinPed[110][0]; }
						else if(SelectCharPlace[playerid] == 10) { SetPlayerSkin(playerid, JoinPed[111][0]); SelectCharPlace[playerid] = 9; InviteSkin[playerid] = JoinPed[111][0]; }
						else if(SelectCharPlace[playerid] == 11) { SetPlayerSkin(playerid, JoinPed[112][0]); SelectCharPlace[playerid] = 10; InviteSkin[playerid] = JoinPed[112][0]; }
						else if(SelectCharPlace[playerid] == 12) { SetPlayerSkin(playerid, JoinPed[113][0]); SelectCharPlace[playerid] = 11; InviteSkin[playerid] = JoinPed[113][0]; }
						
						else if(SelectCharPlace[playerid] == 13) { SetPlayerSkin(playerid, JoinPed[114][0]); SelectCharPlace[playerid] = 12; InviteSkin[playerid] = JoinPed[114][0]; }
						else if(SelectCharPlace[playerid] == 14) { SetPlayerSkin(playerid, JoinPed[115][0]); SelectCharPlace[playerid] = 13; InviteSkin[playerid] = JoinPed[115][0]; }
						else if(SelectCharPlace[playerid] == 15) { SetPlayerSkin(playerid, JoinPed[116][0]); SelectCharPlace[playerid] = 14; InviteSkin[playerid] = JoinPed[116][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 2: // FBI
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[8][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[8][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[9][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[9][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[10][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[10][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[11][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[11][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[12][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[12][0]; }
						else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[13][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[13][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 3: // Army SF
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[91][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[91][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[89][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[89][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 4: // Medics SF
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[16][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[16][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[17][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[17][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[18][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[18][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[19][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[19][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[20][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[20][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 5: // La Cosa Nostra
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[21][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[21][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[22][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[22][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[23][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[23][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[24][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[24][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 6: // Yakuza
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[25][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[25][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[26][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[26][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[27][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[27][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[28][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[28][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 7: // Goverment
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[29][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[29][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[30][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[30][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[31][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[31][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[32][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[32][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[33][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[33][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 8: // Casino Caligula
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 189); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = 189; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[46][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[46][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[47][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[47][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 9: // SF News
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[42][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[42][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[43][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[43][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[44][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[44][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[45][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[45][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 10: // SFPD
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[34][0]); SelectCharPlace[playerid] = 12; InviteSkin[playerid] = JoinPed[34][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[35][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[35][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[36][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[36][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[37][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[37][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[38][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[38][0]; }
						else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[39][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[39][0]; }
						else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[40][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[40][0]; }
						else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, JoinPed[41][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[41][0]; }
						//-------------- Dop.Skins
						else if(SelectCharPlace[playerid] == 9) { SetPlayerSkin(playerid, JoinPed[110][0]); SelectCharPlace[playerid] = 8; InviteSkin[playerid] = JoinPed[110][0]; }
						else if(SelectCharPlace[playerid] == 10) { SetPlayerSkin(playerid, JoinPed[111][0]); SelectCharPlace[playerid] = 9; InviteSkin[playerid] = JoinPed[111][0]; }
						else if(SelectCharPlace[playerid] == 11) { SetPlayerSkin(playerid, JoinPed[112][0]); SelectCharPlace[playerid] = 10; InviteSkin[playerid] = JoinPed[112][0]; }
						else if(SelectCharPlace[playerid] == 12) { SetPlayerSkin(playerid, JoinPed[113][0]); SelectCharPlace[playerid] = 11; InviteSkin[playerid] = JoinPed[113][0]; }
						
						else if(SelectCharPlace[playerid] == 13) { SetPlayerSkin(playerid, JoinPed[114][0]); SelectCharPlace[playerid] = 12; InviteSkin[playerid] = JoinPed[114][0]; }
						else if(SelectCharPlace[playerid] == 14) { SetPlayerSkin(playerid, JoinPed[115][0]); SelectCharPlace[playerid] = 13; InviteSkin[playerid] = JoinPed[115][0]; }
						else if(SelectCharPlace[playerid] == 15) { SetPlayerSkin(playerid, JoinPed[116][0]); SelectCharPlace[playerid] = 14; InviteSkin[playerid] = JoinPed[116][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 11: // Instructors
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[48][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[48][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[49][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[49][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[51][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[51][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 12: // Ballas
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[74][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[74][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[75][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[75][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[76][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[76][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 195); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = 195; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 13: // Vagos
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[80][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[80][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[81][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[81][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[82][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[82][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 226); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = 226; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 14: // Russian Mafia
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[60][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[60][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[61][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[61][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[62][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[62][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[63][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[63][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[64][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[64][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 15: // Groove
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[65][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[65][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[66][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[66][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[67][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[67][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[68][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[68][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[69][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[69][0]; }
						else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[70][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[70][0]; }
						else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, 56); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = 56; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 16: // LS News
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[85][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[85][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[86][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[86][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[87][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[87][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[88][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[88][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 17: // Aztek
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[71][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[71][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[72][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[72][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[73][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[73][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 226); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = 226; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 18: // Rifa
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[77][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[77][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[78][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[78][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[79][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[79][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 30); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = 30; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 226); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = 226; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 19: // Army LV
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[91][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[91][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[89][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[89][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 20: // LV News
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[85][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[85][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[86][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[86][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[87][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[87][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[88][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[88][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 21: // LVPD
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[52][0]); SelectCharPlace[playerid] = 12; InviteSkin[playerid] = JoinPed[52][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[53][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[53][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[54][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[54][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[55][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[55][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[56][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[56][0]; }
						else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[57][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[57][0]; }
						else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[58][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[58][0]; }
						else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, JoinPed[59][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[59][0]; }

						else if(SelectCharPlace[playerid] == 9) { SetPlayerSkin(playerid, JoinPed[110][0]); SelectCharPlace[playerid] = 8; InviteSkin[playerid] = JoinPed[110][0]; }
						else if(SelectCharPlace[playerid] == 10) { SetPlayerSkin(playerid, JoinPed[111][0]); SelectCharPlace[playerid] = 9; InviteSkin[playerid] = JoinPed[111][0]; }
						else if(SelectCharPlace[playerid] == 11) { SetPlayerSkin(playerid, JoinPed[112][0]); SelectCharPlace[playerid] = 10; InviteSkin[playerid] = JoinPed[112][0]; }
						else if(SelectCharPlace[playerid] == 12) { SetPlayerSkin(playerid, JoinPed[113][0]); SelectCharPlace[playerid] = 11; InviteSkin[playerid] = JoinPed[113][0]; }
						
						else if(SelectCharPlace[playerid] == 13) { SetPlayerSkin(playerid, JoinPed[114][0]); SelectCharPlace[playerid] = 12; InviteSkin[playerid] = JoinPed[114][0]; }
						else if(SelectCharPlace[playerid] == 14) { SetPlayerSkin(playerid, JoinPed[115][0]); SelectCharPlace[playerid] = 13; InviteSkin[playerid] = JoinPed[115][0]; }
						else if(SelectCharPlace[playerid] == 15) { SetPlayerSkin(playerid, JoinPed[116][0]); SelectCharPlace[playerid] = 14; InviteSkin[playerid] = JoinPed[116][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 22: // Medics LS
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[16][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[16][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[17][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[17][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[18][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[18][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[19][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[19][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[20][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[20][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 23: // Medics LV
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[16][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[16][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[17][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[17][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[18][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[18][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[19][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[19][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[20][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[20][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 24: // Mongols MC
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[105][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[105][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[106][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[106][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[107][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[107][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[108][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[108][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[109][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[109][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 26: // Warlocks MC
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[105][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[105][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[106][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[106][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[107][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[107][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[108][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[108][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[109][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[109][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 29: // Pagans MC
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[105][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[105][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[106][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[106][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[107][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[107][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[108][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[108][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[109][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[109][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				}
			}
		case 2:
			{
				pData[playerid][pModel] = InviteSkin[playerid];
				SetAccountInfo(playerid, pData[playerid][pModel], "pModel");
				forma[playerid] = 0;
				switch(zips[playerid])
				{
				case false: SetPlayerVirtualWorld(playerid, 2);
				case true: SetPlayerVirtualWorld(playerid, 1);
				}
				SelectCharPlace[playerid] = 0;
				SelectCharID[playerid] = 0;
				SelectChar[playerid] = 0;
				PicCP[playerid] = 0;
				//=====
				switch(zips[playerid])
				{
				case false: SetPlayerVirtualWorld(playerid, 2);
				case true: SetPlayerVirtualWorld(playerid, 1);
				}
				TogglePlayerControllable(playerid, 1);
				SetPlayerPos(playerid,221.7944,-8.4229,1002.2109);
				SetPlayerFacingAngle(playerid,273.5792);
				SetPlayerInterior(playerid,5);
				SetCameraBehindPlayer(playerid);
			}
		}
	}
	else if(GetPlayerMenu(playerid) == ChoseSkin[1])
	{
		switch(row)
		{
		case 0: //previous
			{
				switch (SelectCharID[playerid])
				{
				case 1: // LSPD
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[0][0]); SelectCharPlace[playerid] = 12; InviteSkin[playerid] = JoinPed[0][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[1][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[1][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[2][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[2][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[3][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[3][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[4][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[4][0]; }
						else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[5][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[5][0]; }
						else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[6][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[6][0]; }
						else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, JoinPed[7][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[7][0]; }
						//------------------------------- Доп. скины ----------------------------
						else if(SelectCharPlace[playerid] == 9) { SetPlayerSkin(playerid, JoinPed[110][0]); SelectCharPlace[playerid] = 8; InviteSkin[playerid] = JoinPed[110][0]; }
						else if(SelectCharPlace[playerid] == 10) { SetPlayerSkin(playerid, JoinPed[111][0]); SelectCharPlace[playerid] = 9; InviteSkin[playerid] = JoinPed[111][0]; }
						else if(SelectCharPlace[playerid] == 11) { SetPlayerSkin(playerid, JoinPed[112][0]); SelectCharPlace[playerid] = 10; InviteSkin[playerid] = JoinPed[112][0]; }
						else if(SelectCharPlace[playerid] == 12) { SetPlayerSkin(playerid, JoinPed[113][0]); SelectCharPlace[playerid] = 11; InviteSkin[playerid] = JoinPed[113][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 2: // FBI
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[8][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[8][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[9][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[9][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[10][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[10][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[11][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[11][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[12][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[12][0]; }
						else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[13][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[13][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 3: // Army SF
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[91][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[91][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[89][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[89][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 4: // Medics SF
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[16][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[16][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[17][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[17][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[18][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[18][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[19][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[19][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[20][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[20][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 5: // La Cosa Nostra
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[21][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[21][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[22][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[22][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[23][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[23][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[24][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[24][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 6: // Yakuza
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[25][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[25][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[26][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[26][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[27][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[27][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[28][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[28][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 7: // Goverment
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[29][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[29][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[30][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[30][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[31][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[31][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[32][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[32][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[33][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[33][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 8: // Casino Caligula
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 189); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = 189; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[46][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[46][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[47][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[47][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 9: // SF News
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[42][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[42][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[43][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[43][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[44][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[44][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[45][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[45][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 10: // SFPD
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[34][0]); SelectCharPlace[playerid] = 12; InviteSkin[playerid] = JoinPed[34][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[35][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[35][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[36][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[36][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[37][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[37][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[38][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[38][0]; }
						else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[39][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[39][0]; }
						else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[40][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[40][0]; }
						else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, JoinPed[41][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[41][0]; }
						//------------------------------- Доп. скины ----------------------------
						else if(SelectCharPlace[playerid] == 9) { SetPlayerSkin(playerid, JoinPed[110][0]); SelectCharPlace[playerid] = 8; InviteSkin[playerid] = JoinPed[110][0]; }
						else if(SelectCharPlace[playerid] == 10) { SetPlayerSkin(playerid, JoinPed[111][0]); SelectCharPlace[playerid] = 9; InviteSkin[playerid] = JoinPed[111][0]; }
						else if(SelectCharPlace[playerid] == 11) { SetPlayerSkin(playerid, JoinPed[112][0]); SelectCharPlace[playerid] = 10; InviteSkin[playerid] = JoinPed[112][0]; }
						else if(SelectCharPlace[playerid] == 12) { SetPlayerSkin(playerid, JoinPed[113][0]); SelectCharPlace[playerid] = 11; InviteSkin[playerid] = JoinPed[113][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 11: // Instructors
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[48][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[48][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[49][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[49][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[51][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[51][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 12: // Ballas
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[74][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[74][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[75][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[75][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[76][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[76][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 195); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = 195; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 13: // Vagos
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[80][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[80][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[81][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[81][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[82][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[82][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 226); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = 226; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 14: // Russian Mafia
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[60][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[60][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[61][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[61][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[62][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[62][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[63][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[63][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[64][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[64][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 15: // Groove
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[65][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[65][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[66][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[66][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[67][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[67][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[68][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[68][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[69][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[69][0]; }
						else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[70][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[70][0]; }
						else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, 56); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = 56; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 16: // LS News
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[85][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[85][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[86][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[86][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[87][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[87][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[88][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[88][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 17: // Aztek
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[71][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[71][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[72][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[72][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[73][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[73][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 226); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = 226; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 18: // Rifa
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[77][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[77][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[78][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[78][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[79][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[79][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 30); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = 30; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 226); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = 226; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 19: // Army LV
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[91][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[91][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[89][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[89][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 20: // LV News
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[85][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[85][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[86][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[86][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[87][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[87][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[88][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[88][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 21: // LVPD
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[52][0]); SelectCharPlace[playerid] = 12; InviteSkin[playerid] = JoinPed[52][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[53][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[53][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[54][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[54][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[55][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[55][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[56][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[56][0]; }
						else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[57][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[57][0]; }
						else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[58][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[58][0]; }
						else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, JoinPed[59][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[59][0]; }
						//------------------------------- Доп. скины ----------------------------
						else if(SelectCharPlace[playerid] == 9) { SetPlayerSkin(playerid, JoinPed[110][0]); SelectCharPlace[playerid] = 8; InviteSkin[playerid] = JoinPed[110][0]; }
						else if(SelectCharPlace[playerid] == 10) { SetPlayerSkin(playerid, JoinPed[111][0]); SelectCharPlace[playerid] = 9; InviteSkin[playerid] = JoinPed[111][0]; }
						else if(SelectCharPlace[playerid] == 11) { SetPlayerSkin(playerid, JoinPed[112][0]); SelectCharPlace[playerid] = 10; InviteSkin[playerid] = JoinPed[112][0]; }
						else if(SelectCharPlace[playerid] == 12) { SetPlayerSkin(playerid, JoinPed[113][0]); SelectCharPlace[playerid] = 11; InviteSkin[playerid] = JoinPed[113][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 22: // Medics LS
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[16][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[16][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[17][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[17][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[18][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[18][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[19][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[19][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[20][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[20][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 23: // Medics LV
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[16][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[16][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[17][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[17][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[18][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[18][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[19][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[19][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[20][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[20][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 24: // Mongols MC
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[105][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[105][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[106][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[106][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[107][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[107][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[108][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[108][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[109][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[109][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 26: // Warlocks MC
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[105][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[105][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[106][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[106][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[107][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[107][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[108][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[108][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[109][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[109][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				case 29: // Pagans MC
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[105][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[105][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[106][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[106][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[107][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[107][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[108][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[108][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[109][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[109][0]; }
						ShowMenuForPlayer(ChoseSkin[1],playerid);
					}
				}
			}
		case 1: // next
			{
				switch (SelectCharID[playerid])
				{
				case 1:
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[0][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[0][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[1][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[1][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[2][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[2][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[3][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[3][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[4][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[4][0]; }
						else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[5][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[5][0]; }
						else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[6][0]); SelectCharPlace[playerid] = 8; InviteSkin[playerid] = JoinPed[6][0]; }
						else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, JoinPed[7][0]); SelectCharPlace[playerid] = 9; InviteSkin[playerid] = JoinPed[7][0]; }
						//------------------------------- Доп. скины ----------------------------
						else if(SelectCharPlace[playerid] == 9) { SetPlayerSkin(playerid, JoinPed[110][0]); SelectCharPlace[playerid] = 10; InviteSkin[playerid] = JoinPed[110][0]; }
						else if(SelectCharPlace[playerid] == 10) { SetPlayerSkin(playerid, JoinPed[111][0]); SelectCharPlace[playerid] = 11; InviteSkin[playerid] = JoinPed[111][0]; }
						else if(SelectCharPlace[playerid] == 11) { SetPlayerSkin(playerid, JoinPed[112][0]); SelectCharPlace[playerid] = 12; InviteSkin[playerid] = JoinPed[112][0]; }
						else if(SelectCharPlace[playerid] == 12) { SetPlayerSkin(playerid, JoinPed[113][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[113][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 2:
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[8][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[8][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[9][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[9][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[10][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[10][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[11][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[11][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[12][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[12][0]; }
						else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[13][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[13][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 3:
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[91][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[91][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[89][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[89][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 4: // Medics SF
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[16][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[16][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[17][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[17][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[18][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[18][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[19][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[19][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[20][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[20][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 5: // La Cosa Nostra
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[21][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[21][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[22][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[22][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[23][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[23][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[24][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[24][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 6: // Yakuza
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[25][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[25][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[26][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[26][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[27][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[27][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[28][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[28][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 7: // Goverment
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[29][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[29][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[30][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[30][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[31][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[31][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[32][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[32][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[33][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[33][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 8: // Casino Caligula
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 189); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = 189; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[46][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[46][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[47][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[47][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 9: // SF News
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[42][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[42][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[43][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[43][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[44][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[44][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 188); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = 188; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[45][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[45][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 10: // SFPD
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[34][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[34][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[35][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[35][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[36][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[36][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[37][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[37][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[38][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[38][0]; }
						else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[39][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[39][0]; }
						else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[40][0]); SelectCharPlace[playerid] = 8; InviteSkin[playerid] = JoinPed[40][0]; }
						else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, JoinPed[41][0]); SelectCharPlace[playerid] = 9; InviteSkin[playerid] = JoinPed[41][0]; }
						//------------------------------- Доп. скины ----------------------------
						else if(SelectCharPlace[playerid] == 9) { SetPlayerSkin(playerid, JoinPed[110][0]); SelectCharPlace[playerid] = 10; InviteSkin[playerid] = JoinPed[110][0]; }
						else if(SelectCharPlace[playerid] == 10) { SetPlayerSkin(playerid, JoinPed[111][0]); SelectCharPlace[playerid] = 11; InviteSkin[playerid] = JoinPed[111][0]; }
						else if(SelectCharPlace[playerid] == 11) { SetPlayerSkin(playerid, JoinPed[112][0]); SelectCharPlace[playerid] = 12; InviteSkin[playerid] = JoinPed[112][0]; }
						else if(SelectCharPlace[playerid] == 12) { SetPlayerSkin(playerid, JoinPed[113][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[113][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 11: // Instructors
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[48][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[48][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[49][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[49][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[51][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[51][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 12: // Ballas
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[74][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[74][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[75][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[75][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[76][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[76][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 195); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = 195; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 13: // Vagos
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[80][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[80][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[81][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[81][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[82][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[82][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 226); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = 226; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 14: // Russian Mafia
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[60][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[60][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[61][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[61][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[62][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[62][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[63][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[63][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[64][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[64][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 15: // Groove
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[65][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[65][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[66][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[66][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[67][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[67][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[68][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[68][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[69][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[69][0]; }
						else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[70][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[70][0]; }
						else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, 56); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = 56; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 16: // LS News
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[85][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[85][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[86][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[86][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[87][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[87][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 188); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = 188; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[88][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[88][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 17: // Aztek
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[71][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[71][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[72][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[72][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[73][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[73][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 226); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = 226; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 18: // Rifa
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[77][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[77][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[78][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[78][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[79][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[79][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 30); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = 30; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 226); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = 226; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 19: // Army LV
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[91][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[91][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[89][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[89][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 20: // LV News
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[85][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[85][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[86][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[86][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[87][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[87][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 188); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = 188; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[88][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[88][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 21: // LVPD
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[52][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[52][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[53][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[53][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[54][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[54][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[55][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[55][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[56][0]); SelectCharPlace[playerid] = 6; InviteSkin[playerid] = JoinPed[56][0]; }
						else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[57][0]); SelectCharPlace[playerid] = 7; InviteSkin[playerid] = JoinPed[57][0]; }
						else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[58][0]); SelectCharPlace[playerid] = 8; InviteSkin[playerid] = JoinPed[58][0]; }
						else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, JoinPed[59][0]); SelectCharPlace[playerid] = 9; InviteSkin[playerid] = JoinPed[59][0]; }
						//------------------------------- Доп. скины ----------------------------
						else if(SelectCharPlace[playerid] == 9) { SetPlayerSkin(playerid, JoinPed[110][0]); SelectCharPlace[playerid] = 10; InviteSkin[playerid] = JoinPed[110][0]; }
						else if(SelectCharPlace[playerid] == 10) { SetPlayerSkin(playerid, JoinPed[111][0]); SelectCharPlace[playerid] = 11; InviteSkin[playerid] = JoinPed[111][0]; }
						else if(SelectCharPlace[playerid] == 11) { SetPlayerSkin(playerid, JoinPed[112][0]); SelectCharPlace[playerid] = 12; InviteSkin[playerid] = JoinPed[112][0]; }
						else if(SelectCharPlace[playerid] == 12) { SetPlayerSkin(playerid, JoinPed[113][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[113][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 22: // Medics LS
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[16][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[16][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[17][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[17][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[18][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[18][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[19][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[19][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[20][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[20][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 23: // Medics LV
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[16][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[16][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[17][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[17][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[18][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[18][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[19][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[19][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[20][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[20][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 24: // Mongols MC
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[105][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[105][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[106][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[106][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[107][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[107][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[108][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[108][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[109][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[109][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 26: // Warlocks MC
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[105][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[105][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[106][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[106][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[107][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[107][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[108][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[108][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[109][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[109][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				case 29: // Pagans MC
					{
						if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[105][0]); SelectCharPlace[playerid] = 2; InviteSkin[playerid] = JoinPed[105][0]; }
						else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[106][0]); SelectCharPlace[playerid] = 3; InviteSkin[playerid] = JoinPed[106][0]; }
						else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[107][0]); SelectCharPlace[playerid] = 4; InviteSkin[playerid] = JoinPed[107][0]; }
						else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[108][0]); SelectCharPlace[playerid] = 5; InviteSkin[playerid] = JoinPed[108][0]; }
						else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[109][0]); SelectCharPlace[playerid] = 1; InviteSkin[playerid] = JoinPed[109][0]; }
						ShowMenuForPlayer(ChoseSkin[0],playerid);
					}
				}
			}
		case 2:
			{
				pData[playerid][pModel] = InviteSkin[playerid];
				SetAccountInfo(playerid, pData[playerid][pModel], "pModel");
				forma[playerid] = 0;
				switch(zips[playerid])
				{
				case false: SetPlayerVirtualWorld(playerid, 2);
				case true: SetPlayerVirtualWorld(playerid, 1);
				}
				SelectCharPlace[playerid] = 0;
				SelectCharID[playerid] = 0;
				SelectChar[playerid] = 0;
				PicCP[playerid] = 0;
				//=====
				switch(zips[playerid])
				{
				case false: SetPlayerVirtualWorld(playerid, 2);
				case true: SetPlayerVirtualWorld(playerid, 1);
				}
				TogglePlayerControllable(playerid, 1);
				SetPlayerPos(playerid,221.7944,-8.4229,1002.2109);
				SetPlayerFacingAngle(playerid,273.5792);
				SetPlayerInterior(playerid,5);
				SetCameraBehindPlayer(playerid);
			}
		}
	}
	if(GetPlayerMenu(playerid) == ClothesBuy)
	{
		switch(row)
		{
		case 0: //Если нажал назад то...
			{
				if(pData[playerid][pSex] == 0)//Если парень то...
				{
					if(ChangeSkin[playerid] == 0)ChangeSkin[playerid] = sizeof(SkinMen)-1;
					else ChangeSkin[playerid]--;
					SetPlayerSkin(playerid,SkinMen[ChangeSkin[playerid]][0]);//Одеваем скин
					switch(booston)
					{
					case 0:format(string, 127,"~n~~n~~n~~n~~n~~n~~g~COST: ~w~%i",SkinMen[ChangeSkin[playerid]][1]);// Выводим цену на екран
					default:format(string, 127,"~n~~n~~n~~n~~n~~n~~g~COST: ~w~%i",SkinMen[ChangeSkin[playerid]][1]-SkinMen[ChangeSkin[playerid]][1]*20/100);// Выводим цену на екран
					}
				}
				else//Если девушка то...
				{
					if(ChangeSkin[playerid] == 0)ChangeSkin[playerid] = sizeof(SkinMale)-1;
					else ChangeSkin[playerid]--;
					SetPlayerSkin(playerid,SkinMale[ChangeSkin[playerid]][0]);//Одеваем скин
					switch(booston)
					{
					case 0:	format(string, 127,"~n~~n~~n~~n~~n~~n~~g~COST: ~w~%i",SkinMale[ChangeSkin[playerid]][1]);//?Выводим цену на екран
					default: format(string, 127,"~n~~n~~n~~n~~n~~n~~g~COST: ~w~%i",SkinMale[ChangeSkin[playerid]][1]-SkinMale[ChangeSkin[playerid]][1]*20/100);//?Выводим цену на екран
					}
				}
				if(!IsValidMenu(ClothesBuy))
				{
					ClothesBuy = CreateMenu("Clothes", 1, 50.0, 160.0, 110.0);
					SetMenuColumnHeader(ClothesBuy, 0, "Choose Skin");
					AddMenuItem(ClothesBuy, 0, "<< Previous");
					AddMenuItem(ClothesBuy, 0, "Next >>");
					AddMenuItem(ClothesBuy, 0, "Buy");
					AddMenuItem(ClothesBuy, 0, "Exit");
				}
				GameTextForPlayer(playerid, string, 2000, 3);
				ShowMenuForPlayer(ClothesBuy, playerid);//Выводим меню дальше
			}
		case 1://Если нажал вперед то...
			{
				if(pData[playerid][pSex] == 0)
				{
					if(ChangeSkin[playerid]	== sizeof(SkinMen)-1) ChangeSkin[playerid] = 0;
					else ChangeSkin[playerid]++;
					SetPlayerSkin(playerid,SkinMen[ChangeSkin[playerid]][0]);// Одеваем скин
					switch(booston)
					{
					case 0:format(string, 127,"~n~~n~~n~~n~~n~~n~~g~COST: ~w~%i",SkinMen[ChangeSkin[playerid]][1]);// Выводим цену на екран
					default:format(string, 127,"~n~~n~~n~~n~~n~~n~~g~COST: ~w~%i",SkinMen[ChangeSkin[playerid]][1]-SkinMen[ChangeSkin[playerid]][1]*20/100);// Выводим цену на екран
					}
				}
				else //Если женщина то...
				{
					if(ChangeSkin[playerid] == sizeof(SkinMale)-1)ChangeSkin[playerid] = 0;
					else ChangeSkin[playerid]++;//Прибавляем переменную
					SetPlayerSkin(playerid,SkinMale[ChangeSkin[playerid]][0]);//Одеваем скин
					switch(booston)
					{
					case 0:	format(string, 127,"~n~~n~~n~~n~~n~~n~~g~COST: ~w~%i",SkinMale[ChangeSkin[playerid]][1]);//?Выводим цену на екран
					default: format(string, 127,"~n~~n~~n~~n~~n~~n~~g~COST: ~w~%i",SkinMale[ChangeSkin[playerid]][1]-SkinMale[ChangeSkin[playerid]][1]*20/100);//?Выводим цену на екран
					}
				}
				GameTextForPlayer(playerid, string, 2000, 3);
				ShowMenuForPlayer(BuyClothes[0], playerid);//Выводим меню дальше
			}
		case 2://Если нажал купить то...
			{
				format(YCMDstr, 88, "{FFFFFF}Ваш скин {FFEE00}[ID: %i] {FFFFFF}будет заменен на {FFEE00}[ID: %i]",pData[playerid][pChar][0], GetPlayerSkin(playerid));
				return ShowPlayerDialog(playerid,14012,0, "Предупреждение", YCMDstr, "Купить", "Отмена");
			}
		case 3://если нажал Exit
			{
				switch(zips[playerid])
				{
				case false: SetPlayerVirtualWorld(playerid, 2);
				case true: SetPlayerVirtualWorld(playerid, 1);
				}
				SetPlayerSkin(playerid,pData[playerid][pChar][0]);//Меняем скин на тот который был
				TogglePlayerControllable(playerid, 1);//Размораживаем
				SetPlayerPos(playerid,221.7944,-8.4229,1002.2109);//тпкаем обратно в амгаз
				SetPlayerFacingAngle(playerid,273.5792);//Bla bla
				SetPlayerInterior(playerid,5);//Даём инт. магазина
				SetCameraBehindPlayer(playerid);//Включаем управление камерой
			}
		}
		return true;
	}
	if(GetPlayerMenu(playerid) == BuyClothes[0])
	{
		switch(row)
		{
		case 0:
			{
				if(pData[playerid][pSex] == 0)
				{
					if(ChangeSkin[playerid]	== sizeof(SkinMen)-1) ChangeSkin[playerid] = 0;
					else ChangeSkin[playerid]++;
					SetPlayerSkin(playerid,SkinMen[ChangeSkin[playerid]][0]);// Одеваем скин
					switch(booston)
					{
					case 0:format(string, 127,"~n~~n~~n~~n~~n~~n~~g~COST: ~w~%i",SkinMen[ChangeSkin[playerid]][1]);// Выводим цену на екран
					default:format(string, 127,"~n~~n~~n~~n~~n~~n~~g~COST: ~w~%i",SkinMen[ChangeSkin[playerid]][1]-SkinMen[ChangeSkin[playerid]][1]*20/100);// Выводим цену на екран
					}
				}
				else //Если женщина то...
				{
					if(ChangeSkin[playerid] == sizeof(SkinMale)-1)ChangeSkin[playerid] = 0;
					else ChangeSkin[playerid]++;//Прибавляем переменную
					SetPlayerSkin(playerid,SkinMale[ChangeSkin[playerid]][0]);//Одеваем скин
					switch(booston)
					{
					case 0:	format(string, 127,"~n~~n~~n~~n~~n~~n~~g~COST: ~w~%i",SkinMale[ChangeSkin[playerid]][1]);//?Выводим цену на екран
					default: format(string, 127,"~n~~n~~n~~n~~n~~n~~g~COST: ~w~%i",SkinMale[ChangeSkin[playerid]][1]-SkinMale[ChangeSkin[playerid]][1]*20/100);//?Выводим цену на екран
					}
				}
				GameTextForPlayer(playerid, string, 2000, 3);
				ShowMenuForPlayer(BuyClothes[0], playerid);//Выводим меню дальше
			}
		case 1://Если нажал назад то...
			{
				if(pData[playerid][pSex] == 0)//Если парень то...
				{
					if(ChangeSkin[playerid] == 0)ChangeSkin[playerid] = sizeof(SkinMen)-1;
					else ChangeSkin[playerid]--;
					SetPlayerSkin(playerid,SkinMen[ChangeSkin[playerid]][0]);//Одеваем скин
					switch(booston)
					{
					case 0:format(string, 127,"~n~~n~~n~~n~~n~~n~~g~COST: ~w~%i",SkinMen[ChangeSkin[playerid]][1]);// Выводим цену на екран
					default:format(string, 127,"~n~~n~~n~~n~~n~~n~~g~COST: ~w~%i",SkinMen[ChangeSkin[playerid]][1]-SkinMen[ChangeSkin[playerid]][1]*20/100);// Выводим цену на екран
					}
				}
				else//Если девушка то...
				{
					if(ChangeSkin[playerid] == 0)ChangeSkin[playerid] = sizeof(SkinMale)-1;
					else ChangeSkin[playerid]--;
					SetPlayerSkin(playerid,SkinMale[ChangeSkin[playerid]][0]);//Одеваем скин
					switch(booston)
					{
					case 0:	format(string, 127,"~n~~n~~n~~n~~n~~n~~g~COST: ~w~%i",SkinMale[ChangeSkin[playerid]][1]);//?Выводим цену на екран
					default: format(string, 127,"~n~~n~~n~~n~~n~~n~~g~COST: ~w~%i",SkinMale[ChangeSkin[playerid]][1]-SkinMale[ChangeSkin[playerid]][1]*20/100);//?Выводим цену на екран
					}
				}
				if(!IsValidMenu(ClothesBuy))
				{
					ClothesBuy = CreateMenu("Clothes", 1, 50.0, 160.0, 110.0);
					SetMenuColumnHeader(ClothesBuy, 0, "Choose Skin");
					AddMenuItem(ClothesBuy, 0, "<< Previous");
					AddMenuItem(ClothesBuy, 0, "Next >>");
					AddMenuItem(ClothesBuy, 0, "Buy");
					AddMenuItem(ClothesBuy, 0, "Exit");
				}
				GameTextForPlayer(playerid, string, 2000, 3);
				ShowMenuForPlayer(ClothesBuy, playerid);//Выводим меню дальше
			}
		case 2://Если нажал купить то...
			{
				format(YCMDstr, 88, "{FFFFFF}Ваш скин {FFEE00}[ID: %i] {FFFFFF}будет заменен на {FFEE00}[ID: %i]",pData[playerid][pChar][0], GetPlayerSkin(playerid));
				return ShowPlayerDialog(playerid,14012,0, "Предупреждение", YCMDstr, "Купить", "Отмена");
			}
		case 3://если нажал Exit
			{
				switch(zips[playerid])
				{
				case false: SetPlayerVirtualWorld(playerid, 2);
				case true: SetPlayerVirtualWorld(playerid, 1);
				}
				SetPlayerSkin(playerid,pData[playerid][pChar][0]);//Меняем скин на тот который был
				TogglePlayerControllable(playerid, 1);//Размораживаем
				SetPlayerPos(playerid,221.7944,-8.4229,1002.2109);//тпкаем обратно в амгаз
				SetPlayerFacingAngle(playerid,273.5792);//Bla bla
				SetPlayerInterior(playerid,5);//Даём инт. магазина
				SetCameraBehindPlayer(playerid);//Включаем управление камерой
			}
		}
	}
	else if(GetPlayerMenu(playerid) == headmenu[0]) //туту
	{
		if(0 <= row <= 4)
		{
			enter_acs[playerid] = row+1;
			ChangeSkin[playerid] = row == 0 ? (0) : (row == 1 ? (16) : (row == 2 ? (26) : (row == 3 ? (41) : (71))));

			new skin = GetPlayerSkin(playerid);
			if(row == 0)
			{
				if SkinHead[skin][0] == 0.0 *then
				{
					enter_acs[playerid] = 0;
					ShowMenuForPlayer(headmenu[0], playerid);
					return SCM(playerid,COLOR_GREY," Недоступно для данного скина");
				}
				RemovePlayerAttachedObject(playerid, 0);
				SetPlayerAttachedObject(playerid, 0,Acs_Info[ChangeSkin[playerid]][aObjID], 2, SkinHead[skin][0], SkinHead[skin][1], SkinHead[skin][2], SkinHead[skin][3],SkinHead[skin][4], SkinHead[skin][5]);
			}
			else if(row == 1)
			{
				if SkinCaps[skin][0] == 0.0 *then
				{
					enter_acs[playerid] = 0;
					ShowMenuForPlayer(headmenu[0], playerid);
					return SCM(playerid,COLOR_GREY," Недоступно для данного скина");
				}
				RemovePlayerAttachedObject(playerid, 0);
				SetPlayerAttachedObject(playerid, 0,Acs_Info[ChangeSkin[playerid]][aObjID], 2, SkinCaps[skin][0], SkinCaps[skin][1], SkinCaps[skin][2], SkinCaps[skin][3],SkinCaps[skin][4], SkinCaps[skin][5]);
			}

			else if(row == 2)
			{
				RemovePlayerAttachedObject(playerid, 1);
				SetPlayerAttachedObject(playerid, 1,Acs_Info[ChangeSkin[playerid]][aObjID], 5, Clock_Massive[skin][0], Clock_Massive[skin][1],Clock_Massive[skin][2], Clock_Massive[skin][3], Clock_Massive[skin][4], Clock_Massive[skin][5], Clock_Massive[skin][6], Clock_Massive[skin][7], Clock_Massive[skin][8]);
			}
			else if(row == 3)
			{
				RemovePlayerAttachedObject(playerid, 2);
				SetPlayerAttachedObject(playerid,2,Acs_Info[ChangeSkin[playerid]][aObjID],2,_skinGlasses[skin][0], _skinGlasses[skin][1], _skinGlasses[skin][2], _skinGlasses[skin][3], _skinGlasses[skin][4], _skinGlasses[skin][5]);
			}
			else if(row == 4)
			{
				RemovePlayerAttachedObject(playerid, 3);
				SetPlayerAttachedObject(playerid, 3, Acs_Info[ChangeSkin[playerid]][aObjID], 2, BandSkin[skin][0], BandSkin[skin][1], BandSkin[skin][2], BandSkin[skin][3],BandSkin[skin][4], BandSkin[skin][5], 1.000000, 1.000000, 1.000000);
			}
			ShowMenuForPlayer(headmenu[1], playerid);
			format(format_string, 128,"~n~~n~~n~~n~~n~~n~~r~COST: ~w~%i",Acs_Info[ChangeSkin[playerid]][aPrice]);//?Выводим цену на екран
			GameTextForPlayer(playerid, format_string, 2000, 3);

		}
		else
		{
			SCM(playerid, COLOR_BLUE, " Пункт в разработке. Ожидайте...");
			ShowMenuForPlayer(headmenu[0], playerid);
		}
	}
	else if(GetPlayerMenu(playerid) == headmenu[1])
	{

		switch(row)
		{
		case 0:
			{
				if(enter_acs[playerid] == 1)
				{
					ChangeSkin[playerid] = ChangeSkin[playerid] == 15 ?  (0) : (ChangeSkin[playerid]+1);

					new skin = GetPlayerSkin(playerid);

					RemovePlayerAttachedObject(playerid, 0);
					SetPlayerAttachedObject(playerid, 0,Acs_Info[ChangeSkin[playerid]][aObjID], 2, SkinHead[skin][0], SkinHead[skin][1], SkinHead[skin][2], SkinHead[skin][3],SkinHead[skin][4], SkinHead[skin][5]);
				}
				else if(enter_acs[playerid] == 2)
				{
					ChangeSkin[playerid] = ChangeSkin[playerid] == 25 ?  (16) : (ChangeSkin[playerid]+1);

					new skin = GetPlayerSkin(playerid);

					RemovePlayerAttachedObject(playerid, 0);
					SetPlayerAttachedObject(playerid, 0,Acs_Info[ChangeSkin[playerid]][aObjID], 2, SkinCaps[skin][0], SkinCaps[skin][1], SkinCaps[skin][2], SkinCaps[skin][3],SkinCaps[skin][4], SkinCaps[skin][5]);
				}
				else if(enter_acs[playerid] == 3)
				{
					ChangeSkin[playerid] = ChangeSkin[playerid] == 40 ?  (26) : (ChangeSkin[playerid]+1);

					new skin = GetPlayerSkin(playerid);

					RemovePlayerAttachedObject(playerid, 1);
					SetPlayerAttachedObject(playerid, 1,Acs_Info[ChangeSkin[playerid]][aObjID], 5, Clock_Massive[skin][0], Clock_Massive[skin][1],Clock_Massive[skin][2], Clock_Massive[skin][3], Clock_Massive[skin][4], Clock_Massive[skin][5], Clock_Massive[skin][6], Clock_Massive[skin][7], Clock_Massive[skin][8]);
				}
				else if(enter_acs[playerid] == 4)
				{
					ChangeSkin[playerid] = ChangeSkin[playerid] == 70 ?  (41) : (ChangeSkin[playerid]+1);

					new skin = GetPlayerSkin(playerid);

					RemovePlayerAttachedObject(playerid, 2);
					SetPlayerAttachedObject(playerid,2,Acs_Info[ChangeSkin[playerid]][aObjID],2,_skinGlasses[skin][0], _skinGlasses[skin][1], _skinGlasses[skin][2], _skinGlasses[skin][3], _skinGlasses[skin][4], _skinGlasses[skin][5]);
				}
				else if(enter_acs[playerid] == 5)
				{
					ChangeSkin[playerid] = ChangeSkin[playerid] == 80 ?  (71) : (ChangeSkin[playerid]+1);

					new skin = GetPlayerSkin(playerid);

					RemovePlayerAttachedObject(playerid, 3);
					SetPlayerAttachedObject(playerid, 3, Acs_Info[ChangeSkin[playerid]][aObjID], 2, BandSkin[skin][0], BandSkin[skin][1], BandSkin[skin][2], BandSkin[skin][3],BandSkin[skin][4], BandSkin[skin][5], 1.000000, 1.000000, 1.000000);
				}
			}
		case 1:
			{
				if(enter_acs[playerid] == 1)
				{
					ChangeSkin[playerid] = ChangeSkin[playerid] == 0 ?  (15) : (ChangeSkin[playerid]-1);

					new skin = GetPlayerSkin(playerid);

					RemovePlayerAttachedObject(playerid, 0);
					SetPlayerAttachedObject(playerid, 0,Acs_Info[ChangeSkin[playerid]][aObjID], 2, SkinHead[skin][0], SkinHead[skin][1], SkinHead[skin][2], SkinHead[skin][3],SkinHead[skin][4], SkinHead[skin][5]);
				}
				else if(enter_acs[playerid] == 2)
				{
					ChangeSkin[playerid] = ChangeSkin[playerid] == 16 ?  (25) : (ChangeSkin[playerid]-1);

					new skin = GetPlayerSkin(playerid);

					RemovePlayerAttachedObject(playerid, 0);
					SetPlayerAttachedObject(playerid, 0,Acs_Info[ChangeSkin[playerid]][aObjID], 2, SkinHead[skin][0], SkinHead[skin][1], SkinHead[skin][2], SkinHead[skin][3],SkinHead[skin][4], SkinHead[skin][5]);
				}
				else if(enter_acs[playerid] == 3)
				{
					ChangeSkin[playerid] = ChangeSkin[playerid] == 26 ?  (40) : (ChangeSkin[playerid]-1);

					new skin = GetPlayerSkin(playerid);

					RemovePlayerAttachedObject(playerid, 1);
					SetPlayerAttachedObject(playerid, 1,Acs_Info[ChangeSkin[playerid]][aObjID], 5, Clock_Massive[skin][0], Clock_Massive[skin][1],Clock_Massive[skin][2], Clock_Massive[skin][3], Clock_Massive[skin][4], Clock_Massive[skin][5], Clock_Massive[skin][6], Clock_Massive[skin][7], Clock_Massive[skin][8]);
				}
				else if(enter_acs[playerid] == 4)
				{
					ChangeSkin[playerid] = ChangeSkin[playerid] == 41 ?  (70) : (ChangeSkin[playerid]-1);

					new skin = GetPlayerSkin(playerid);

					RemovePlayerAttachedObject(playerid, 2);
					SetPlayerAttachedObject(playerid,2,Acs_Info[ChangeSkin[playerid]][aObjID],2,_skinGlasses[skin][0], _skinGlasses[skin][1], _skinGlasses[skin][2], _skinGlasses[skin][3], _skinGlasses[skin][4], _skinGlasses[skin][5]);
				}
				else if(enter_acs[playerid] == 5)
				{
					ChangeSkin[playerid] = ChangeSkin[playerid] == 71 ?  (80) : (ChangeSkin[playerid]-1);

					new skin = GetPlayerSkin(playerid);

					RemovePlayerAttachedObject(playerid, 3);
					SetPlayerAttachedObject(playerid, 3, Acs_Info[ChangeSkin[playerid]][aObjID], 2, BandSkin[skin][0], BandSkin[skin][1], BandSkin[skin][2], BandSkin[skin][3],BandSkin[skin][4], BandSkin[skin][5], 1.000000, 1.000000, 1.000000);
				}
			}
		default:
			{
				if(pData[playerid][pCash] < Acs_Info[ChangeSkin[playerid]][aPrice]) SCM(playerid, COLOR_DRED, " [!]{FFFFFF}  Недостаточно средств");
				else
				{
					format(format_string, sizeof format_string, "SELECT `ObjectID` FROM `"TABLE_ACS"` WHERE `Owned` = '%s' AND `ObjectID` = '%i'",pData[playerid][pName],Acs_Info[ChangeSkin[playerid]][aID]);
					mysql_tquery(DATABASE,format_string,"BuyObject","i",playerid);
				}
			}
		}
		ShowMenuForPlayer(headmenu[1], playerid);
		format(format_string, 128,"~n~~n~~n~~n~~n~~n~~r~COST: ~w~%i",Acs_Info[ChangeSkin[playerid]][aPrice]);//?Выводим цену на екран
		GameTextForPlayer(playerid, format_string, 2000, 3);
	}
	return true;
}
forward BuyObject(playerid);
public BuyObject(playerid)
{
	if(cache_num_rows())
	{
		SCM(playerid, COLOR_DRED, " [!]{FFFFFF} У Вас уже присутствует данный предмет");
	}
	else
	{
		format(format_string, sizeof format_string, "[!]{FFFFFF} Вы успешно приобрели %s за %i",Acs_Info[ChangeSkin[playerid]][aName],Acs_Info[ChangeSkin[playerid]][aPrice]);
		SCM(playerid, COLOR_YELLOW, format_string);

		format(format_string, sizeof format_string, "INSERT INTO `"TABLE_ACS"` (`Owned`, `ObjectID`, `Price`) VALUES ('%s', '%i', '%i')",pData[playerid][pName], Acs_Info[ChangeSkin[playerid]][aID], Acs_Info[ChangeSkin[playerid]][aPrice]);
		mysql_query(DATABASE,format_string);

		pData[playerid][pCash] -= Acs_Info[ChangeSkin[playerid]][aPrice];
	}
	return true;
}

forward ChangeStatus(playerid, listitem);
public ChangeStatus(playerid, listitem)
{
	new objid;
	cache_get_value_name_int(listitem, "ObjectID", objid);
	new maxs,mins,skin = GetPlayerSkin(playerid);
	if(0 <= objid <= 25)
	{
		mins = 0;
		maxs = 25;
		RemovePlayerAttachedObject(playerid, 0);
	}
	else if(26 <= objid <= 40)
	{
		mins = 26;
		maxs = 40;
		RemovePlayerAttachedObject(playerid, 1);
	}
	else if(41 <= objid <= 70)
	{
		mins = 41;
		maxs = 70;
		RemovePlayerAttachedObject(playerid, 2);
	}
	else
	{
		mins = 71;
		maxs = 80;
		RemovePlayerAttachedObject(playerid, 3);
	}
	format(format_string,sizeof format_string,"UPDATE `"TABLE_ACS"` SET `Status` = '0' WHERE `Owned` = '%s' AND (`ObjectID` >= %i AND `ObjectID` <= %i)",pData[playerid][pName],mins,maxs);
	mysql_query(DATABASE,format_string);
	new skinStatus;
	cache_get_value_name_int(listitem, "Status", skinStatus);
	if(skinStatus) format(format_string,sizeof format_string,"UPDATE `"TABLE_ACS"` SET `Status` = '0' WHERE `Owned` = '%s' AND `ObjectID` = '%i'",pData[playerid][pName],objid);
	else
	{
		if(0 <= objid <= 15)
		{
			if SkinHead[skin][0] == 0.0 *then return SCM(playerid,-1,"» {FFFFFF}Недоступно для данного скина");
			SetPlayerAttachedObject(playerid, 0, Acs_Info[objid][aObjID], 2, SkinHead[skin][0], SkinHead[skin][1], SkinHead[skin][2], SkinHead[skin][3],SkinHead[skin][4], SkinHead[skin][5]);
		}
		else if(16 <= objid <= 25)
		{
			if SkinCaps[skin][0] == 0.0 *then return SCM(playerid,-1,"» {FFFFFF}Недоступно для данного скина");
			SetPlayerAttachedObject(playerid, 0,Acs_Info[objid][aObjID], 2, SkinCaps[skin][0], SkinCaps[skin][1], SkinCaps[skin][2], SkinCaps[skin][3],SkinCaps[skin][4], SkinCaps[skin][5]);
		}
		else if(26 <= objid <= 40) SetPlayerAttachedObject(playerid, 1,Acs_Info[objid][aObjID], 5, Clock_Massive[skin][0], Clock_Massive[skin][1],Clock_Massive[skin][2], Clock_Massive[skin][3], Clock_Massive[skin][4], Clock_Massive[skin][5], Clock_Massive[skin][6], Clock_Massive[skin][7], Clock_Massive[skin][8]);
		else if(41 <= objid <= 70) SetPlayerAttachedObject(playerid,2,Acs_Info[objid][aObjID],2,_skinGlasses[skin][0], _skinGlasses[skin][1], _skinGlasses[skin][2], _skinGlasses[skin][3], _skinGlasses[skin][4], _skinGlasses[skin][5]); //else if(41 <= objid <= 70)
		else if(71 <= objid <= 80) SetPlayerAttachedObject(playerid, 3, Acs_Info[objid][aObjID], 2, BandSkin[skin][0], BandSkin[skin][1], BandSkin[skin][2], BandSkin[skin][3],BandSkin[skin][4], BandSkin[skin][5], 1.000000, 1.000000, 1.000000);

		format(format_string,sizeof format_string,"UPDATE `"TABLE_ACS"` SET `Status` = '1' WHERE `Owned` = '%s' AND `ObjectID` = '%i'",pData[playerid][pName],objid);
	}
	mysql_query(DATABASE,format_string);
	return true;
}
forward ShowObject(playerid);
public ShowObject(playerid)
{
	new rows = cache_num_rows();
	if(rows)
	{
		new szQuery[1024];
		szQuery[0] = EOS;
		strcat(szQuery,"{FFFFFF}Аксессуар\t{FFFFFF}Статус\n",sizeof szQuery);
		for(new i; i < rows; i++)
		{
			new obj_id, obj_status;
			cache_get_value_name_int(i,"ObjectID", obj_id);
			cache_get_value_name_int(i,"Status", obj_status);
			
			strcat(szQuery,Acs_Info[obj_id][aName],sizeof szQuery);
			strcat(szQuery,"\t",sizeof szQuery);
			strcat(szQuery,obj_status ? ("{2BB627}Одет{FFFFFF}") : ("{BA2323}Снят{FFFFFF}"),sizeof szQuery);
			strcat(szQuery,"\n",sizeof szQuery);
		}
		ShowPlayerDialog(playerid, 10418, DIALOG_STYLE_TABLIST_HEADERS, !"Аксессуары",szQuery, !"Выбрать", !"Назад");
	}
	else SCM(playerid, COLOR_GREY, " У Вас отсутствуют аксессуары");
	return true;
}

forward CheckStatus(playerid,skin);
public CheckStatus(playerid,skin)
{
	new rows = cache_num_rows();
	if(rows)
	{
		for(new i; i < rows; i++)
		{
			new objid;
			cache_get_value_name_int(i,"ObjectID", objid);
			if(0 <= objid <= 15)
			{
				if SkinHead[skin][0] == 0.0 *then continue;
				SetPlayerAttachedObject(playerid, 0, Acs_Info[objid][aObjID], 2, SkinHead[skin][0], SkinHead[skin][1], SkinHead[skin][2], SkinHead[skin][3],SkinHead[skin][4], SkinHead[skin][5]);
			}
			else if(16 <= objid <= 25)
			{
				if SkinCaps[skin][0] == 0.0 *then continue;
				SetPlayerAttachedObject(playerid, 0,Acs_Info[objid][aObjID], 2, SkinCaps[skin][0], SkinCaps[skin][1], SkinCaps[skin][2], SkinCaps[skin][3],SkinCaps[skin][4], SkinCaps[skin][5]);
			}
			else if(26 <= objid <= 40) SetPlayerAttachedObject(playerid, 1,Acs_Info[objid][aObjID], 5, Clock_Massive[skin][0], Clock_Massive[skin][1],Clock_Massive[skin][2], Clock_Massive[skin][3], Clock_Massive[skin][4], Clock_Massive[skin][5], Clock_Massive[skin][6], Clock_Massive[skin][7], Clock_Massive[skin][8]);
			else if(41 <= objid <= 70) SetPlayerAttachedObject(playerid,2,Acs_Info[objid][aObjID],2,_skinGlasses[skin][0], _skinGlasses[skin][1], _skinGlasses[skin][2], _skinGlasses[skin][3], _skinGlasses[skin][4], _skinGlasses[skin][5]); //else if(41 <= objid <= 70)
			else if(71 <= objid <= 80) SetPlayerAttachedObject(playerid, 3, Acs_Info[objid][aObjID], 2, BandSkin[skin][0], BandSkin[skin][1], BandSkin[skin][2], BandSkin[skin][3],BandSkin[skin][4], BandSkin[skin][5], 1.000000, 1.000000, 1.000000);
		}
	}
	return true;
}
public OnPlayerExitedMenu(playerid)
{
	if(IsValidMenu(GetPlayerMenu(playerid)))
	{
		if(enter_acs[playerid] == -1)
		{
			ShowMenuForPlayer(GetPlayerMenu(playerid), playerid);
			TogglePlayerControllable(playerid,0);
		}
		else
		{
			if(enter_acs[playerid] == 0)
			{
				enter_acs[playerid] = -1;

				SetPlayerVirtualWorld(playerid, zips[playerid] ? (1) : (2));


				TogglePlayerControllable(playerid, true);//Размораживаем
				SetPlayerPos(playerid,210.8786,-4.7447,1001.2109);//тпкаем обратно в амгаз
				SetPlayerFacingAngle(playerid,259.8159);//Bla bla
				SetPlayerInterior(playerid,5);//Даём инт. магазина
				SetCameraBehindPlayer(playerid);//Включаем управление камерой
			}
			else
			{
				if(1 <= enter_acs[playerid] <= 2) RemovePlayerAttachedObject(playerid, 0);
				else if(enter_acs[playerid] == 3) RemovePlayerAttachedObject(playerid, 1);
				else if(enter_acs[playerid] == 4) RemovePlayerAttachedObject(playerid, 2);
				else RemovePlayerAttachedObject(playerid, 3);

				enter_acs[playerid] = 0;
				ShowMenuForPlayer(headmenu[0], playerid);

			}
		}
	}
	return true;
}


stock GetVehicleRotation(vehicleid,&Float:x,&Float:y,&Float:z) {
	new Float:quat_w,Float:quat_x,Float:quat_y,Float:quat_z;
	GetVehicleRotationQuat(vehicleid,quat_w,quat_x,quat_y,quat_z);
	x = atan2(2*((quat_x*quat_y)+(quat_w+quat_z)),(quat_w*quat_w)+(quat_x*quat_x)-(quat_y*quat_y)-(quat_z*quat_z));
	y = atan2(2*((quat_y*quat_z)+(quat_w*quat_x)),(quat_w*quat_w)-(quat_x*quat_x)-(quat_y*quat_y)+(quat_z*quat_z));
	z = asin(-2*((quat_x*quat_z)+(quat_w*quat_y)));
	return true;
}
public OnPlayerStateChange(playerid, newstate, oldstate)
{
	pData[playerid][pState] = newstate;
	new caridi = GetPlayerVehicleID(playerid);
	
	if(oldstate == PLAYER_STATE_ONFOOT && newstate == PLAYER_STATE_DRIVER) // садится за руль
	{
	    car_data[caridi][Driver] = playerid;
	}
	else if(oldstate == PLAYER_STATE_DRIVER) // выходит из тачки
	{
		
 		last_vehicle_health[playerid] = -1;
 		Hidespeedometer(playerid, 1);
 		
	}
	
	if(SpecID[playerid] != INVALID_PLAYER_ID)
	{
		if(Spectate[SpecID[playerid]] == 1 && SpecAd[SpecID[playerid]] == playerid)
		{
			StartSpectate(SpecID[playerid],playerid);
		}
	}
	
	if(oldstate == PLAYER_STATE_DRIVER)
	{
		if(gcontract[playerid] >= 1 && Meh3d[job_car[playerid]] != Text3D:INVALID_3DTEXT_ID) DestroyDynamic3DTextLabel(Meh3d[job_car[playerid]]);
		
		if(GetPVarInt(playerid, "TypeBus"))
		{
			DestroyDynamic3DTextLabel(JobText3D[playerid]);
		//	taxi_duty[playerid] = -1;
		}

	}
	
	if(newstate == PLAYER_STATE_ONFOOT)
	{

		if(GetPVarInt(playerid,"farm_status") == 3 || GetPVarInt(playerid,"farm_status") == 5) DisablePlayerRaceCheckpoint(playerid), DeletePVar(playerid,"farm_status");
		if(GetPVarInt(playerid,"load_mats"))
		{
			DisablePlayerCheckpoint(playerid);
			DeletePVar(playerid,"load_mats");
		}
		if(GetPVarInt(playerid, "TypeBus") > 0)
		{
			SCM(playerid, COLOR_LIGHTRED, " У вас есть 40 секунд, чтобы вернуться в автобус");
			SetPVarInt(playerid, "BusTime", 40);
		}
		if(race_info[1] > 1 && race_state[playerid] > 0 && GetPVarInt(playerid,"gonkaid") != 32)
		{
			SetPlayerInterior(playerid,3);
			SetPlayerPos(playerid,831.7769,6.8750,1004.1797);
			SetPlayerFacingAngle(playerid,108.1610);
			
			DestroyVehicleEX(RaceInfo[race_state[playerid]][rCar]);
			race_state[playerid] = -1;
			
			SCM(playerid,COLOR_LIGHTRED,"Вы были дисквалифицированы!");
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
	{
	    if(car_data[caridi][TypeCar] == TYPE_TAXI)
		{ // начинаем рабочий день таксиста
		    if(pData[playerid][pJob] != 4)
			{
	 			SCM(playerid,COLOR_GREY," Вы не таксист");
	 			RemovePlayerFromVehicle(playerid);
	 			return 1;
			}
			else {
		    	car_data[caridi][JobText] = Create3DTextLabel("« Бесплатное такси »", 0xFFFF00FF, 0.0, 0.0, 1.5, 30.0, -1, 0);
		    	Attach3DTextLabelToVehicle(car_data[caridi][JobText], caridi, 0.0, 0.0, 1.5);
		    	inTaxi[playerid] = -1;
			}
		}
		
		new tacha = GetPlayerVehicleID(playerid);
		if(!IsAPlane(tacha) && !IsABoat(tacha) && !IsABike(tacha) && AutoSaloon[playerid] != true)
		{
			if(pData[playerid][pDrivingSkill] == 0) pData[playerid][pDrivingSkill] = 1;
			GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
			SetPlayerArmedWeapon(playerid,0);
			Showspeedometer(playerid);
		}
	}
	if(oldstate == PLAYER_STATE_DRIVER)
	{
		if(GetPVarInt(playerid,"job_auto_seat")) DeletePVar(playerid,"job_auto_seat");

	}
	if(newstate == PLAYER_STATE_DRIVER)
	{
		if(gcontract[playerid] >= 1 && GetPlayerVehicleID(playerid) == job_car[playerid])
		{
			format(cString, 52, "<< 300 литров. Цена: %i вирт >>", cenabenza[playerid]);
			Meh3d[GetPlayerVehicleID(playerid)] = CreateDynamic3DTextLabel(cString, COLOR_REDD, 0.0, 0.0, 1.5, 30.0, INVALID_PLAYER_ID, GetPlayerVehicleID(playerid));
			//Meh3d[GetPlayerVehicleID(playerid)] = Create3DTextLabel(cString, COLOR_REDD, 9999.0, 9999.0, 9999.0, 30.0,0,1);
			//Attach3DTextLabelToVehicle(Meh3d[GetPlayerVehicleID(playerid)], GetPlayerVehicleID(playerid), 0, 0, 1.5);
		}
		if(GetPVarInt(playerid,"job_auto") && pData[playerid][pJob] == 65)
		{
			if(GetVehicleModel(caridi) == GetPVarInt(playerid,"job_auto"))
			{
				if(vehicleforeach(caridi) == -1) return true;
				if(GetPVarInt(playerid,"PlayerInGarage")) return SCM(playerid,COLOR_GREY," Автомобили, находящиеся в гараже нельзя угонять!");
				SetPVarInt(playerid,"job_auto_seat",caridi);
				new rand = random(sizeof(acarsd));
				SCM(playerid, COLOR_BLUE, " [SMS]: Это то что нам нужно! Гони её на склад!");
				if(GetPVarInt(playerid,"randa") == -1) SetPlayerCheckpoint(playerid,acarsd[rand][0],acarsd[rand][1],acarsd[rand][2],6);
				else SetPlayerCheckpoint(playerid,acarsd[GetPVarInt(playerid,"randa")][0],acarsd[GetPVarInt(playerid,"randa")][1],acarsd[GetPVarInt(playerid,"randa")][2],6);
				pData[playerid][pLimitAutoUgon] = 600;
				SetPVarInt(playerid,"randa",rand);
				if(gz_autorob[playerid] != -1)
				{
					GangZoneDestroy(gz_autorob[playerid]);
					printf("GangZoneDestroy [Robbing GZ] [ID: %i] for playerid: %i",gz_autorob[playerid],playerid);
					gz_autorob[playerid] = -1;
				}
			}
		}
		if(GetVehicleModel(caridi) == 481 || GetVehicleModel(caridi) == 509 || GetVehicleModel(caridi) == 510)
		{
			GetVehicleParamsEx(caridi,engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(caridi,true,lights,alarm,doors,bonnet,boot,objective);
		}
		else
		{
			GetVehicleParamsEx(caridi,engine,lights,alarm,doors,bonnet,boot,objective);
			if(!engine && pData[playerid][SalonCar] != caridi)
			{
				SCM(playerid,COLOR_GREEN, " {00AB06}Чтобы завести двигатель нажмите клавишу {FFFFFF}\"2\"{00AB06} или введите команду {FFFFFF}\"/en\"");
			}
		}
	}
	if(newstate == PLAYER_STATE_PASSENGER)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		new vDriver = car_data[vehicleid][Driver];
		
		if(vDriver != INVALID_PLAYER_ID) // если в тачке есть водитель
		{
        	PlayAudioStreamForPlayer(playerid, radioOnline[SelectOnlineRadio[vDriver]][0][0]);
        
			if(car_data[vehicleid][TypeCar] == TYPE_TAXI) // садится в такси
			{
				inTaxi[playerid] = vDriver;
 				new taxiSTR[123];
				format(taxiSTR, sizeof taxiSTR, " Пассажир %s сел в ваше Такси. Довезите его и государство заплатит вам",pData[playerid][pName]);
				SCM(vDriver, COLOR_BLUE, taxiSTR);
				ShowPlayerDialog(playerid,5532,DIALOG_STYLE_LIST," ","{FFFFFF}1. Выбрать пункт назначение в GPS \n2. Установить метку на карте \n3. Договориться с таксистом напрямую ", "Далее", "Отмена");
			}
		}
	}
	if(oldstate == PLAYER_STATE_PASSENGER && newstate == PLAYER_STATE_ONFOOT) // выходит из такси
	{
 		new Taxist = inTaxi[playerid];
		if(Taxist != INVALID_PLAYER_ID && pData[playerid][pIp] != pData[Taxist][pIp])
		{
			SCM(Taxist, COLOR_BLUE, " Пассажир вышел из вашего Такси. Деньги будут зачислены во время зарплаты");

			pData[Taxist][pPayCheck] += (200+random(200))+pData[playerid][job_skill][job_taxi];
			SetAccountInfo(Taxist, pData[Taxist][pPayCheck], "pPayCheck");
			give_job_exp(playerid, job_taxi, 6+random(5));
			ShowPlayerDialog(playerid, 1203, DIALOG_STYLE_MSGBOX, "Такси", "Как вас обслужили?", "Хорошо", "Плохо");
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
	{
		new newcar = GetPlayerVehicleID(playerid);
		if(IsAGunsCar(newcar))
		{
			format(string, 60, " Материалов: %i/10000", MatHaul[newcar-gunscar[0]]);
			SCM(playerid, TEAM_GROVE_COLOR, string);
			SCM(playerid, COLOR_WHITE, " Введите: /ConveyingArms (/carm)");
		}
		for(new i = 1; i <= TOTALFARM; i++)
		{
			if(newcar >= FarmInfo[i][fSeed_Car][0] && newcar <= FarmInfo[i][fSeed_Car][1])
			{
				if(GetPVarInt(playerid,"farm_rank") <= 1 || GetPVarInt(playerid,"farm_id") != i) return RemovePlayerFromVehicle(playerid),SCM(playerid, COLOR_GREY, " Вам недоступен данный транспорт");
				if(Farmcar_works[newcar]) ShowPlayerDialog(playerid,1345,DIALOG_STYLE_MSGBOX, " ","{00C8FF}Вы желаете завершить сбор урожая?", "Да", "Нет"),SendMes(playerid, TEAM_GROVE_COLOR,"{00AB06}Урожая в машине: %d / 1000",Farmcar_prods[newcar]);
				else ShowPlayerDialog(playerid,1345,DIALOG_STYLE_MSGBOX, " ","{25BB00}Вы желаете начать сбор урожая?", "Да", "Нет"),SendMes(playerid, TEAM_GROVE_COLOR,"{00AB06}Урожая в машине: %d / 1000",Farmcar_prods[newcar]);
			}
			else if(newcar == FarmInfo[i][fCombine])
			{
				if(GetPVarInt(playerid,"farm_rank") <= 1 || GetPVarInt(playerid,"farm_id") != i) return RemovePlayerFromVehicle(playerid),SCM(playerid, COLOR_GREY, " Вам недоступен данный транспорт");
				new idx = GetPVarInt(playerid,"farm_id");
				if(FarmInfo[idx][fGrain_Sown] > 0) return RemovePlayerFromVehicle(playerid),SCM(playerid, COLOR_GREY, " На поле ещё есть урожай");
				if(FarmInfo[idx][fGrain] < 5000) return RemovePlayerFromVehicle(playerid),SCM(playerid, COLOR_GREY, " На складе фермы недостаточно зерна");
				SetPVarInt(playerid,"farm_status",5);
				DeletePVar(playerid,"farm_combine");
				switch(GetPVarInt(playerid,"farm_id"))
				{
				case 1: SetPlayerRaceCheckpoint(playerid,0,Farmcombine_coord_one[GetPVarInt(playerid,"farm_combine")][0],Farmcar_coord_one[GetPVarInt(playerid,"farm_combine")][1],Farmcar_coord_one[GetPVarInt(playerid,"farm_combine")][2],Farmcombine_coord_one[GetPVarInt(playerid,"farm_combine")+1][0],Farmcar_coord_one[GetPVarInt(playerid,"farm_combine")+1][1],Farmcar_coord_one[GetPVarInt(playerid,"farm_combine")+1][2],5.0);
				case 2: SetPlayerRaceCheckpoint(playerid,0,Farmcombine_coord_two[GetPVarInt(playerid,"farm_combine")][0],Farmcar_coord_two[GetPVarInt(playerid,"farm_combine")][1],Farmcar_coord_two[GetPVarInt(playerid,"farm_combine")][2],Farmcombine_coord_two[GetPVarInt(playerid,"farm_combine")+1][0],Farmcar_coord_two[GetPVarInt(playerid,"farm_combine")+1][1],Farmcar_coord_two[GetPVarInt(playerid,"farm_combine")+1][2],5.0);
				case 3: SetPlayerRaceCheckpoint(playerid,0,Farmcombine_coord_three[GetPVarInt(playerid,"farm_combine")][0],Farmcar_coord_three[GetPVarInt(playerid,"farm_combine")][1],Farmcar_coord_three[GetPVarInt(playerid,"farm_combine")][2],Farmcombine_coord_three[GetPVarInt(playerid,"farm_combine")+1][0],Farmcar_coord_three[GetPVarInt(playerid,"farm_combine")+1][1],Farmcar_coord_three[GetPVarInt(playerid,"farm_combine")+1][2],5.0);
				case 4: SetPlayerRaceCheckpoint(playerid,0,Farmcombine_coord_four[GetPVarInt(playerid,"farm_combine")][0],Farmcar_coord_four[GetPVarInt(playerid,"farm_combine")][1],Farmcar_coord_four[GetPVarInt(playerid,"farm_combine")][2],Farmcombine_coord_four[GetPVarInt(playerid,"farm_combine")+1][0],Farmcar_coord_four[GetPVarInt(playerid,"farm_combine")+1][1],Farmcar_coord_four[GetPVarInt(playerid,"farm_combine")+1][2],5.0);
				case 5: SetPlayerRaceCheckpoint(playerid,0,Farmcombine_coord_five[GetPVarInt(playerid,"farm_combine")][0],Farmcar_coord_five[GetPVarInt(playerid,"farm_combine")][1],Farmcar_coord_five[GetPVarInt(playerid,"farm_combine")][2],Farmcombine_coord_five[GetPVarInt(playerid,"farm_combine")+1][0],Farmcar_coord_five[GetPVarInt(playerid,"farm_combine")+1][1],Farmcar_coord_five[GetPVarInt(playerid,"farm_combine")+1][2],5.0);
				}
			}
		}
		if(newcar == mavlic)
		{
			if (GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 11 || TakingLesson[playerid] == 1) { }
			else
			{
				SCM(playerid,COLOR_GREY, " Вы не школьный инструктор!");
				RemovePlayerFromVehicle(playerid);
			}
		}
		if(newcar >= liccar[0] && newcar <= liccar[9])
		{
			if (GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 11 || TakingLesson[playerid] == 1 ) { }
			else
			{
				SCM(playerid,COLOR_GREY, " Вы не школьный инструктор!");
				RemovePlayerFromVehicle(playerid);
			}
		}
		if(newcar >= liccar[0] && newcar <= liccar[9])
		{
			if(!PlayerLicenses(playerid, LICENSES_GET, LIC_DRIVER) && TakingLesson[playerid] == 1)
			{
				LessonStat[playerid]++;
				pLessonCar[playerid] = CHECKPOINT_1;
				SetPlayerRaceCheckpoint(playerid,0,-2056.8748,-97.6126,32.9113,-2047.1299,-82.7046,32.9072,5.0);
				SCM(playerid, 0x6495EDFF, " Используйте гудок для поднятия шлагбаума");
				SCM(playerid, 0x6495EDFF, " Чтобы прервать экзамен /endlesson");
			}
		}
		if(newcar >= armycarsf[11] && newcar <= armycarsf[13])
		{
			if(pData[playerid][pMember] == 3)
			{
				SCM(playerid, COLOR_GREEN, " Учебный вертолет армии San Fierro");
			}
		}
		if(newcar >= rentcarvip[0] && newcar <= rentcarvip[8])
		{
			if(job_car[playerid] != newcar)
			{
				ShowPlayerDialog(playerid,9125,DIALOG_STYLE_MSGBOX, " ", "<< Автосалон Лос Сантос >>\nЦена аренды: 10 000\nВы хотите взять автомобиль на прокат?", "Да", "Нет");
				TogglePlayerControllable(playerid, 0);
			}
		}
		if(newcar >= rentcarsf[0] && newcar <= rentcarsf[6])
		{
			if(job_car[playerid] != newcar)
			{
				ShowPlayerDialog(playerid,9126,DIALOG_STYLE_MSGBOX, " ", "<< Автосалон Сан Фиерро >>\nЦена аренды: 1500\nВы хотите взять автомобиль на прокат?", "Да", "Нет");
				TogglePlayerControllable(playerid, 0);
			}
		}
		if(newcar >= rentcarls[0] && newcar <= rentcarls[8])
		{
			if(job_car[playerid] != newcar)
			{
				ShowPlayerDialog(playerid,9126,DIALOG_STYLE_MSGBOX, " ", "<< Автосалон Лос Сантос >>\nЦена аренды: 1500\nВы хотите взять автомобиль на прокат?", "Да", "Нет");
				TogglePlayerControllable(playerid, 0);
			}
		}
		if(newcar >= rentcarlv[0] && newcar <= rentcarlv[17])
		{
			if(job_car[playerid] != newcar)
			{
				ShowPlayerDialog(playerid,9126,DIALOG_STYLE_MSGBOX, " ", "<< Автосалон Лас Вентурас >>\nЦена аренды: 1500\nВы хотите взять автомобиль на прокат?", "Да", "Нет");
				TogglePlayerControllable(playerid, 0);
			}
		}
		new car = GetPlayerVehicleID(playerid);
		if(car >= tanker_train[4] && car <= tanker_train[5])
		{
			if(pData[playerid][pJob] != 99) return RemovePlayerFromVehicle(playerid),TogglePlayerControllable(playerid, 1),SCM(playerid, COLOR_WHITE, " Вы не Дальнобойщик!");
			if(job_car[playerid] != car)
			{
				TogglePlayerControllable(playerid, 0);
				ShowPlayerDialog(playerid,32000,0, "{9ACD32}Аренда грузовика", "{FFFFFF}Вы хотите арендовать грузовик за 15000?", "Да", "Нет");
			}
		}
		if(car >= tanker_train[2] && car <= tanker_train[3])
		{
			if(pData[playerid][pJob] != 99) return RemovePlayerFromVehicle(playerid),TogglePlayerControllable(playerid, 1),SCM(playerid, COLOR_WHITE, " Вы не Дальнобойщик!");
			if(job_car[playerid] != car)
			{
				TogglePlayerControllable(playerid, 0);
				ShowPlayerDialog(playerid,32000,0, "{9ACD32}Аренда грузовика", "{FFFFFF}Вы хотите арендовать грузовик за 10000?", "Да", "Нет");
			}
		}
		if(car >= taxi_park_car[0] && car <= taxi_park_car[5])
		{

			new park_id, park_price, park_str[100];
			if(car >= taxi_park_car[0] && car <= taxi_park_car[1]) park_id = 2;
			else if(car >= taxi_park_car[2] && car <= taxi_park_car[3]) park_id = 1;
			else if(car >= taxi_park_car[4] && car <= taxi_park_car[5]) park_id = 0;

			if(GetVehicleModel(car) == 420) park_price = 1;
			if(GetVehicleModel(car) == 507) park_price = 2;
			if(GetVehicleModel(car) == 405) park_price = 3;
			if(GetVehicleModel(car) == 560) park_price = 4;
			
			TogglePlayerControllable(playerid, 0);
			format(park_str, sizeof park_str, "Хотите взять эту машину в аренду за %d вирт?",g_tInfo[park_id][e_iPrice]*park_price);
			ShowPlayerDialog(playerid,32001,0, "{9ACD32}Аренда такси", park_str, "Да", "Нет");

		}
		if(car >= tanker_train[0] && car <= tanker_train[1])
		{
			if(pData[playerid][pJob] != 99)
			{
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
				SCM(playerid, COLOR_WHITE, " Вы не Дальнобойщик!");
				return 1;
			} 
			if(job_car[playerid] != car)
			{
				TogglePlayerControllable(playerid, 0);
				ShowPlayerDialog(playerid,32000,0, "{9ACD32}Аренда грузовика", "{FFFFFF}Вы хотите арендовать грузовик за 5000?", "Да", "Нет");
			}
		}
		if(car >= tanker_train[6] && car <= tanker_train[7])
		{
			if(pData[playerid][pJob] != 99) return RemovePlayerFromVehicle(playerid),TogglePlayerControllable(playerid, 1),SCM(playerid, COLOR_WHITE, " Вы не Дальнобойщик!");
			if(job_car[playerid] != car)
			{
				ShowPlayerDialog(playerid,32000,0, "{9ACD32}Аренда грузовика", "{FFFFFF}Вы хотите арендовать грузовик за 20000?", "Да", "Нет");
				TogglePlayerControllable(playerid, 0);
			}
		}
		if(newcar >= hotdogcar[0] && newcar <= hotdogcar[1])
		{
			if(pData[playerid][pJob] != 3)
			{
				SCM(playerid, COLOR_GREY, " Вы не продавец ХотДогов! (( /gps >> [0] Важное >> [0] Мэрия ))");
				RemovePlayerFromVehicle(playerid);
				return true;
			}
			if(GetPVarInt(playerid, "rentcar_job") == GetPlayerVehicleID(playerid)) SCM(playerid,COLOR_GREEN,"Заключите контракт с закусочной, для торговли едой. (( Подъедьте к закусочной и  Введите: /hcontract ))");
			else
			{
				TogglePlayerControllable(playerid, 0);
				ShowPlayerDialog(playerid,9128,DIALOG_STYLE_MSGBOX, " ", "Стоимость аренды этого автомобиля 500 вирт\n\nВы хотите взять автомобиль на прокат?", "Да", "Нет");
			}
		}
		if(newcar >= rentfly[0] && newcar <= rentfly[8])
		{
			if(job_car[playerid] != newcar)
			{
				ShowPlayerDialog(playerid,9127,DIALOG_STYLE_MSGBOX, " ", "<< Авиапарк >>\nЦена аренды: 10000\nВы хотите взять вертолет на прокат?", "Да", "Нет");
				TogglePlayerControllable(playerid, 0);
			}
		}
		if(newcar >= admincar[0] && newcar <= admincar[5])
		{
			if(pData[playerid][pAdmin] == 0)
			{
				SCM(playerid, COLOR_GREY, " Хочешь на 8 лет за угон сесть?");
				RemovePlayerFromVehicle(playerid);
				return true;
			}
		}
		if((newcar >= buscar[0] && newcar <= buscar[1]) || (newcar >= buscar[2] && newcar <= buscar[3]) || (newcar >= buscar[4] && newcar <= buscar[5]) || (newcar >= buscar[6] && newcar <= buscar[7]))
		{
			if(pData[playerid][pJob] != 1)
			{
				SCM(playerid, COLOR_GREY, " Вы не водитель автобуса!");
				RemovePlayerFromVehicle(playerid);
				return true;
			}
			if(GetPVarInt(playerid, "BusTime") > 0 && GetPVarInt(playerid, "rentcar_job") == GetPlayerVehicleID(playerid))
			{
				new i = pPressed[playerid], type = GetPVarInt(playerid, "TypeBus"),name[64];
				switch(type)
				{
				case 1: name = "ВнутриГородской ЛС";
				case 2: name = "ВнутриГородской СФ";
				case 3: name = "ВнутриГородской ЛВ";
				case 4: name = "АвтоВокзал LS << >> Автошкола SF";
				case 5: name = "АвтоВокзал LS << >> АвтоВокзал LV";
				case 6: name = "АвтоВокзал LS << >> Заводы";
				}
				if(type == 1) SetPlayerRaceCheckpoint(playerid,0,BusCityLS[i][0],BusCityLS[i][1],BusCityLS[i][2],BusCityLS[i][3],BusCityLS[i][4],BusCityLS[i][5],7.0);
				if(type == 2) SetPlayerRaceCheckpoint(playerid,0,BusCitySF[i][0],BusCitySF[i][1],BusCitySF[i][2],BusCitySF[i][3],BusCitySF[i][4],BusCitySF[i][5],7.0);
				if(type == 3) SetPlayerRaceCheckpoint(playerid,0,BusCityLV[i][0],BusCityLV[i][1],BusCityLV[i][2],BusCityLV[i][3],BusCityLV[i][4],BusCityLV[i][5],7.0);
				if(type == 4) SetPlayerRaceCheckpoint(playerid,0,BusSchool[i][0],BusSchool[i][1],BusSchool[i][2],BusSchool[i][3],BusSchool[i][4],BusSchool[i][5],7.0);
				if(type == 5) SetPlayerRaceCheckpoint(playerid,0,BusLSLV[i][0],BusLSLV[i][1],BusLSLV[i][2],BusLSLV[i][3],BusLSLV[i][4],BusLSLV[i][5],5.0);
				if(type == 6) SetPlayerRaceCheckpoint(playerid,0,BusLSZavodi[i][0],BusLSZavodi[i][1],BusLSZavodi[i][2],BusLSZavodi[i][3],BusLSZavodi[i][4],BusLSZavodi[i][5],5.0);
				DeletePVar(playerid, "BusTime");
			}
			if(GetPVarInt(playerid, "rentcar_job") == GetPlayerVehicleID(playerid)) { }
			else
			{
				ShowPlayerDialog(playerid,9128,DIALOG_STYLE_MSGBOX, " ", "Цена аренды: 500 вирт\nВы хотите арендовать у нас автобус?", "Да", "Нет");
				TogglePlayerControllable(playerid, 0);
			}
		}
		if(IsABoat(newcar))
		{
			if(!PlayerLicenses(playerid, LICENSES_GET, LIC_BOAT))
			{
				SCM(playerid, COLOR_WHITE, " У вас нет лицензии на водный транспорт! (/gps - Автошкола )");
				RemovePlayerFromVehicle(playerid);
			}
		}
		if(IsAPlane(newcar))
		{
			if(!PlayerLicenses(playerid, LICENSES_GET, LIC_HELICOPTER))
			{
				if(TakingLesson[playerid] == 1) { }
				else
				{
					SCM(playerid, COLOR_WHITE, " У вас нет лицензии на воздушный транспорт! (/gps - Автошкола )");
					RemovePlayerFromVehicle(playerid);
				}
			}
		}
		if(CarLic(newcar))
		{
			if(!PlayerLicenses(playerid, LICENSES_GET, LIC_DRIVER))
			{
				if(TakingLesson[playerid] != 1)
				{
					SCM(playerid, COLOR_WHITE, " У вас нет водительских прав! (( /gps >> [0] Важное >> [2] Автошкола ))");
					RemovePlayerFromVehicle(playerid);
				}
			}
		}
		if(newcar >= lsnewscar[0] && newcar <= lsnewscar[5])
		{
			if(GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 16) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Вы не работник LS News!");
				RemovePlayerFromVehicle(playerid);
			}
		}
		if(newcar >= lvpdcar[0] && newcar <= lvpdcar[17])
		{
			if(GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 21) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Вы не состоите в LVPD!");
				RemovePlayerFromVehicle(playerid);
			}
		}
		if(newcar >= hamccar[0] && newcar <= hamccar[9])
		{
			if(pData[playerid][pMember] != 24) return SCM(playerid, COLOR_GREY, " Вы не состоите в Mongols MC!"),RemovePlayerFromVehicle(playerid);
		}
		if(newcar == hamccar[10])
		{
			if(pData[playerid][pMember] != 24) return SCM(playerid, COLOR_GREY, " Вы не состоите в Mongols MC!"),RemovePlayerFromVehicle(playerid);
			format(string, 128, " Материалов в фургоне: %i / 5000", bFuri[newcar-hamccar[10]][bHells][0]);
			SCM(playerid, TEAM_GROVE_COLOR, string);
			format(string, 128, " Бензина в фургоне: %i / 2000", bFuri[newcar-hamccar[10]][bHells][2]);
			SCM(playerid, TEAM_GROVE_COLOR, string);
			format(string, 128, " Товаров в фургоне: %i / 200", bFuri[newcar-hamccar[10]][bHells][1]);
			SCM(playerid, TEAM_GROVE_COLOR, string);
		}
		if(newcar >= wmccar[0] && newcar <= wmccar[9])
		{
			if(pData[playerid][pMember] != 26) return SCM(playerid, COLOR_GREY, " Вы не состоите в Warlocks MC!"),RemovePlayerFromVehicle(playerid);
		}
		if(newcar == wmccar[10])
		{
			if(pData[playerid][pMember] != 26) return SCM(playerid, COLOR_GREY, " Вы не состоите в Warlocks MC!"),RemovePlayerFromVehicle(playerid);
			format(string, 128, " Материалов в фургоне: %i / 5000", bFuri[newcar-wmccar[10]][bWarlocks][0]);
			SCM(playerid, TEAM_GROVE_COLOR, string);
			format(string, 128, " Бензина в фургоне: %i литров / 2000", bFuri[newcar-wmccar[10]][bWarlocks][2]);
			SCM(playerid, TEAM_GROVE_COLOR, string);
			format(string, 128, " Товаров в фургоне: %i / 200", bFuri[newcar-wmccar[10]][bWarlocks][1]);
			SCM(playerid, TEAM_GROVE_COLOR, string);
		}
		if(newcar >= pmccar[0] && newcar <= pmccar[9])
		{
			if(pData[playerid][pMember] != 29) return SCM(playerid, COLOR_GREY, " Вы не состоите в Pagans MC!"),RemovePlayerFromVehicle(playerid);
		}
		if(newcar == pmccar[10])
		{
			if(pData[playerid][pMember] != 29) return SCM(playerid, COLOR_GREY, " Вы не состоите в Pagans MC!"),RemovePlayerFromVehicle(playerid);
			SendMes(playerid, TEAM_GROVE_COLOR, " Материалов в фургоне: %i / 5000",bFuri[newcar-pmccar[10]][bPagans][0]);
			SendMes(playerid, TEAM_GROVE_COLOR, " Бензина в фургоне: %i / 2000",bFuri[newcar-pmccar[10]][bPagans][2]);
			SendMes(playerid, TEAM_GROVE_COLOR, " Товаров в фургоне: %i / 200",bFuri[newcar-pmccar[10]][bPagans][1]);
		}
		if(newcar >= ruscar[0] && newcar <= ruscar[14])
		{
			if(pData[playerid][pLeader] == 14 || pData[playerid][pMember] == 14) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Вы не член Русской мафии!");
				RemovePlayerFromVehicle(playerid);
			}
		}
		if(newcar >= lvnewscar[0] && newcar <= lvnewscar[5])
		{
			if(GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 20) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Вы не работник LV News!");
				RemovePlayerFromVehicle(playerid);
			}
		}
		if(newcar >= lcncar[0] && newcar <= lcncar[13])
		{
			if(pData[playerid][pLeader] == 5 || pData[playerid][pMember] == 5) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Вы не член La Cosa Nostra!");
				RemovePlayerFromVehicle(playerid);
			}
		}
		if(newcar >= yakcar[0] && newcar <= yakcar[12])
		{
			if(pData[playerid][pLeader] == 6 || pData[playerid][pMember] == 6) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Вы не член Yakuza!");
				RemovePlayerFromVehicle(playerid);
			}
		}
		if(newcar >= cnncar[0] && newcar <= cnncar[4] || newcar == cnnmav)
		{
			if(GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 9) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Вы не член SF News!");
				RemovePlayerFromVehicle(playerid);
			}
		}
		if(newcar >= comptruck[0] && newcar <= comptruck[1])
		{
			if(pData[playerid][pJob] == 5 && !GetPVarInt(playerid,"Fraction_Duty"))
			{
				if(GetPVarInt(playerid,"rentcar_job") != newcar) ShowPlayerDialog(playerid,9128,DIALOG_STYLE_MSGBOX, " ", "Стоимость аренды этого автомобиля 500 вирт\n\nВы хотите взять автомобиль на прокат?", "Да", "Нет");
				else
				{
					if(car_pickup[newcar] > 0) {
						format(YCMDstr, 124, "{FFFFFF}Загружено: {0C9599}%i\n{FFFFFF}Общая стоимость: {0C9599}%i\n\n{B41010}Вы желаете завершить загрузку зерна?", car_grain[GetPlayerVehicleID(playerid)][0]-car_grain[GetPlayerVehicleID(playerid)][2], (car_grain[GetPlayerVehicleID(playerid)][0]-car_grain[GetPlayerVehicleID(playerid)][2])*ZernBuy);
						ShowPlayerDialog(playerid,1346,DIALOG_STYLE_MSGBOX, " ", YCMDstr, "Да", "Нет"); }
					else
					{
						SendMes(playerid,TEAM_GROVE_COLOR,"Зерна в машине: %i / 1000",car_grain[GetPlayerVehicleID(playerid)][0]);
						SendMes(playerid,TEAM_GROVE_COLOR,"Урожая в машине: %i / 1000",car_prods[GetPlayerVehicleID(playerid)][0]);
						SendMes(playerid,TEAM_GROVE_COLOR,"Наркотиков в машине: %i / 1000",car_prods[GetPlayerVehicleID(playerid)][1]);
					}
				}
				//SCM(playerid, COLOR_WHITE, " Для загрузки продуктов,  Введите: /load ");
			}
			else
			{
				SCM(playerid, COLOR_GREY, " Вы не развозчик продуктов!");
				RemovePlayerFromVehicle(playerid);
			}
		}
		if(newcar >= comptruck[2] && newcar <= comptruck[3])
		{
			if(pData[playerid][pJob] != 5) return SCM(playerid,COLOR_GREY," Вы не развозчик продуктов!"), RemovePlayerFromVehicle(playerid);
			if(GetPVarInt(playerid,"rentcar_job") != newcar) ShowPlayerDialog(playerid,9128,DIALOG_STYLE_MSGBOX, " ", "Стоимость аренды этого автомобиля 500 вирт\n\nВы хотите взять автомобиль на прокат?", "Да", "Нет");
		}
		if(newcar >= comptruck[4] && newcar <= comptruck[5])
		{
			if(pData[playerid][pJob] != 5) return SCM(playerid,COLOR_GREY," Вы не развозчик продуктов!"), RemovePlayerFromVehicle(playerid);
			if(GetPVarInt(playerid,"rentcar_job") != newcar) ShowPlayerDialog(playerid,9128,DIALOG_STYLE_MSGBOX, " ", "Стоимость аренды этого автомобиля 500 вирт\n\nВы хотите взять автомобиль на прокат?", "Да", "Нет");
		}
		if(newcar >= comptruck[6] && newcar <= comptruck[7])
		{
			if(pData[playerid][pPSkill] < 4) return SCM(playerid,COLOR_WHITE," Автомобиль доступен с 4 уровня развозчика"), RemovePlayerFromVehicle(playerid);
			if(pData[playerid][pJob] != 5) return SCM(playerid,COLOR_GREY," Вы не развозчик продуктов!"), RemovePlayerFromVehicle(playerid);
			if(GetPVarInt(playerid,"rentcar_job") != newcar) ShowPlayerDialog(playerid,9128,DIALOG_STYLE_MSGBOX, " ", "Стоимость аренды этого автомобиля 500 вирт\n\nВы хотите взять автомобиль на прокат?", "Да", "Нет");
		}
		if(newcar >= comptruck[8] && newcar <= comptruck[9])
		{
			if(pData[playerid][pPSkill] < 8) return SCM(playerid,COLOR_WHITE," Автомобиль доступен с 8 уровня развозчика"), RemovePlayerFromVehicle(playerid);
			if(pData[playerid][pJob] != 5) return SCM(playerid,COLOR_GREY," Вы не развозчик продуктов!"), RemovePlayerFromVehicle(playerid);
			if(GetPVarInt(playerid,"rentcar_job") != newcar) ShowPlayerDialog(playerid,9128,DIALOG_STYLE_MSGBOX, " ", "Стоимость аренды этого автомобиля 500 вирт\n\nВы хотите взять автомобиль на прокат?", "Да", "Нет");
		}
		if(newcar >= govcar[0] && newcar <= govcar[7])
		{
			if(GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 7) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Вы не член Правительства!");
				RemovePlayerFromVehicle(playerid);
			}
		}
		if(newcar >= g_szGangBoats[0] && newcar <= g_szGangBoats[4])
		{
			if(newcar == g_szGangBoats[4] && pData[playerid][pMember] != 12) return SCM(playerid, COLOR_GREY, " Вы не член The Ballas Gang!"), RemovePlayerFromVehicle(playerid);
			if(newcar == g_szGangBoats[1] && pData[playerid][pMember] != 17) return SCM(playerid, COLOR_GREY, " Вы не член Varios Los Aztecas Gang!"), RemovePlayerFromVehicle(playerid);
			if(newcar == g_szGangBoats[2] && pData[playerid][pMember] != 13) return SCM(playerid, COLOR_GREY, " Вы не член Los Santos Vagos Gang!"), RemovePlayerFromVehicle(playerid);
			if(newcar == g_szGangBoats[3] && pData[playerid][pMember] != 15) return SCM(playerid, COLOR_GREY, " Вы не член Grove Street Gang!"), RemovePlayerFromVehicle(playerid);
			if(newcar == g_szGangBoats[0] && pData[playerid][pMember] != 18) return SCM(playerid, COLOR_GREY, " Вы не член The Rifa Gang!"), RemovePlayerFromVehicle(playerid);
			SendMes(playerid,TEAM_GROVE_COLOR,"Материалов: %i/%i", g_szGangBoatStat[newcar-g_szGangBoats[0]][e_iMaterials], MAX_BOAT_MATERIALS);

			if(g_szGangBoatStat[newcar][e_bLoading] == E_MATERIALS_EMPTY)
				SetPlayerRaceCheckpoint(playerid, 1, 2865.9685, -2354.4233, 2.8009, 2865.9685, -2354.4233, 2.8009, 10.5);
			else if( g_szGangBoatStat[newcar][e_bLoading] ==  E_MATERIALS_LOADING )
			{
				ShowPlayerDialog(playerid, 1357+10000, DIALOG_STYLE_MSGBOX, " ", "{00C8FF}Вы желаете завершить загрузку материалов?", "Да", "Нет");
			}
			//SCM(playerid, TEAM_GROVE_COLOR, "Чтобы начать загрузку материалов введите: {FFFFFF}/gloading");

		}
		if(newcar >= matsfura[0] && newcar <= matsfura[4])
		{
			if(newcar == matsfura[0] && pData[playerid][pMember] != 12) return SCM(playerid, COLOR_GREY, " Вы не член The Ballas Gang!"), RemovePlayerFromVehicle(playerid);
			if(newcar == matsfura[1] && pData[playerid][pMember] != 17) return SCM(playerid, COLOR_GREY, " Вы не член Varios Los Aztecas Gang!"), RemovePlayerFromVehicle(playerid);
			if(newcar == matsfura[2] && pData[playerid][pMember] != 13) return SCM(playerid, COLOR_GREY, " Вы не член Los Santos Vagos Gang!"), RemovePlayerFromVehicle(playerid);
			if(newcar == matsfura[3] && pData[playerid][pMember] != 15) return SCM(playerid, COLOR_GREY, " Вы не член Grove Street Gang!"), RemovePlayerFromVehicle(playerid);
			if(newcar == matsfura[4] && pData[playerid][pMember] != 18) return SCM(playerid, COLOR_GREY, " Вы не член The Rifa Gang!"), RemovePlayerFromVehicle(playerid);
			SendMes(playerid,TEAM_GROVE_COLOR,"Материалов: %i/3000",MatsGang[newcar-matsfura[0]]);
		}
		if(newcar >= fbicar[0] && newcar <= fbicar[16])
		{
			if(GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 2) { }
			else
			{
				SCM(playerid, COLOR_GRAD1, " Вы не Агент ФБР");
				RemovePlayerFromVehicle(playerid);
			}
		}
		if(newcar >= sapdcar[0] && newcar <= sapdcar[19])
		{
			if(GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 1) { }
			else
			{
				SCM(playerid, COLOR_GRAD1, " Вы не состоите в LSPD!");
				RemovePlayerFromVehicle(playerid);
			}
		}
		if(newcar >= medicsls[0] && newcar <= medicsls[5])
		{
			if(GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 22) { }
			else
			{
				SCM(playerid, COLOR_GRAD1, " Вы не медик!");
				RemovePlayerFromVehicle(playerid);
			}
		}
		if(newcar >= medicsls1[0] && newcar <= medicsls1[5])
		{
			if(GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 22) { }
			else
			{
				SCM(playerid, COLOR_GRAD1, " Вы не медик!");
				RemovePlayerFromVehicle(playerid);
			}
		}
		if(newcar >= medicslv[0] && newcar <= medicslv[8])
		{
			if(GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 22) { }
			else
			{
				SCM(playerid, COLOR_GRAD1, " Вы не медик!");
				RemovePlayerFromVehicle(playerid);
			}
		}
		if(newcar >= medicssf[0] && newcar <= medicssf[20])
		{
			if(GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 22) { }
			else
			{
				SCM(playerid, COLOR_GRAD1, " Вы не медик!");
				RemovePlayerFromVehicle(playerid);
			}
		}
		if(newcar >= mehanik[0] && newcar <= mehanik[12])
		{
			if(pData[playerid][pJob] == 2 && !GetPVarInt(playerid,"Fraction_Duty"))
			{
				if(GetPVarInt(playerid,"rentcar_job") != newcar)
				{
					ShowPlayerDialog(playerid,9128,DIALOG_STYLE_MSGBOX, " ", "<< Автопарк >>\nЦена аренды: 500\nВы хотите взять автомобиль на прокат?", "Да", "Нет");
				}
			}
			else
			{
				SCM(playerid, COLOR_WHITE, " Вы не механик! (( /gps >> [0] Важное >> [0] Мэрия ))");
				RemovePlayerFromVehicle(playerid);
			}
		}
		if(newcar >= sfpdcar[0] && newcar <= sfpdcar[20])
		{
			if(GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 10) { }
			else
			{
				SCM(playerid, COLOR_GRAD1, " Вы не состоите в SFPD!");
				RemovePlayerFromVehicle(playerid);
			}
		}
		if(newcar >= ballascar[0] && newcar <= ballascar[6])
		{
			if(pData[playerid][pLeader] == 12 || pData[playerid][pMember] == 12) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Вы не член The Ballas Gang!");
				RemovePlayerFromVehicle(playerid);
			}
		}
		if(newcar >= grovecar[0] && newcar <= grovecar[6])
		{
			if(pData[playerid][pLeader] == 15 || pData[playerid][pMember] == 15) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Вы не член Grove Street Gang!");
				RemovePlayerFromVehicle(playerid);
			}
		}
		if(newcar >= coronoscar[0] && newcar <= coronoscar[6])
		{
			if(pData[playerid][pLeader] == 17 || pData[playerid][pMember] == 17) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Вы не член Varios Los Aztecas Gang!");
				RemovePlayerFromVehicle(playerid);
			}
		}
		if(newcar >= vagoscar[0] && newcar <= vagoscar[6])
		{
			if(pData[playerid][pLeader] == 13 || pData[playerid][pMember] == 13) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Вы не член Los Santos Vagos Gang!");
				RemovePlayerFromVehicle(playerid);
			}
		}
		if(newcar >= rifacar[0] && newcar <= rifacar[6])
		{
			if(pData[playerid][pLeader] == 18 || pData[playerid][pMember] == 18) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Вы не член The Rifa Gang!");
				RemovePlayerFromVehicle(playerid);
			}
		}
		if(newcar >= gunscar[0] && newcar <= gunscar[5])
		{
			if (GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 19 || proverkaforma[playerid] == 1) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Вы не солдат Зоны 51!");
				RemovePlayerFromVehicle(playerid);
			}
		}
		if(newcar >= lsacar[0] && newcar <= lsacar[15])
		{
			if(GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 3 || GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 19 || proverkaforma[playerid] == 1) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Вы не Армеец!");
				RemovePlayerFromVehicle(playerid);
			}
		}
		if(newcar == lsacarvert[0])
		{
			if(proverkaforma[playerid] == 1|| GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 3 || GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 19 || proverkaforma[playerid] == 1) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Вы не Армеец!");
				RemovePlayerFromVehicle(playerid);
			}
			if(load_mats_lsa >= 30000)
			{
				SCM(playerid, COLOR_GREY,"Вертолёт загружен");
				SCM(playerid, COLOR_WHITE, " Доставьте материалы в LSA");
				SetPVarInt(playerid,"load_mats",4);
				DisablePlayerCheckpoint(playerid);
				SetPlayerCheckpoint(playerid,-1469.0442,1489.7952,8.2578,10);
				return true;
			}
			SetPlayerCheckpoint(playerid,-1467.2990,1489.6672,10.2395,14.0);
			SCM(playerid,COLOR_WHITE, " Отправляйтесь на корабль, для загрузки Оружия");
			SetPVarInt(playerid,"load_mats",3);
		}
		if(newcar >= armycarsf[0] && newcar <= armycarsf[23])
		{
			if(GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 3 || proverkaforma[playerid] == 1) { }
			else
			{
				SCM(playerid, COLOR_GRAD1, " Вы не солдат Армии SF!");
				RemovePlayerFromVehicle(playerid);
			}
		}
		if(newcar >= armycarsf[24] && newcar <= armycarsf[28])
		{
			if(GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 3 || proverkaforma[playerid] == 1) { }
			else
			{
				SCM(playerid, COLOR_GREY, " Вы не солдат Армии SF!");
				RemovePlayerFromVehicle(playerid);
			}
			if(GetVehicleModel(newcar) == 548)
			{
				if(load_mats[GetPlayerVehicleID(playerid)-armycarsf[24]] >= 30000)
				{
					SCM(playerid, COLOR_GREY, " Вертолёт загружен");
					SCM(playerid, COLOR_WHITE, " Доставьте материалы на Зону 51");
					SetPVarInt(playerid,"load_mats",2);
					DisablePlayerCheckpoint(playerid);
					return SetPlayerCheckpoint(playerid,334.5107,1994.6956,17.6406,10);
				}
				SetPlayerCheckpoint(playerid,-1467.2990,1489.6672,10.2395,14.0);
				SCM(playerid,COLOR_WHITE, " Отправляйтесь на корабль, для загрузки Оружия");
				SetPVarInt(playerid,"load_mats",1);
			}
		}
		if(newcar >= armcar[0] && newcar <= armcar[33])
		{
			if(GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 19 || proverkaforma[playerid] == 1) { }
			else
			{
				SCM(playerid, COLOR_GRAD1, " Вы не cолдат зоны 51!");
				RemovePlayerFromVehicle(playerid);
			}
		}
	}
	return true;
}
stock LockCar(playerid,carid)
{
	if(pData[playerid][pState] == PLAYER_STATE_DRIVER)
	{
		if(!IsAPlane(carid) && !IsABoat(carid) && !IsABike(carid) && AutoSaloon[playerid] != true)
		{
			//PlayerTextDrawColor(playerid,StatusShow[playerid], -16776961);
		//	PlayerTextDrawSetString(playerid,StatusShow[playerid],"Lock");
		//	PlayerTextDrawShow(playerid,StatusShow[playerid]);
		}
	}
	GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
	return SetVehicleParamsEx(carid,engine,lights,alarm,true,bonnet,boot,objective);
}
public OnPlayerExitVehicle(playerid, vehicleid)
{
    if(inTaxi[playerid] == -1)inTaxi[playerid] = INVALID_PLAYER_ID;

    if(car_data[vehicleid][Driver] == playerid) { // если из машины выходит водитель
		car_data[vehicleid][Driver] 		= INVALID_PLAYER_ID;

		if(car_data[vehicleid][JobText] != Text3D:INVALID_3DTEXT_ID)
		{ // если есть 3д на тачке
		    Delete3DTextLabel(car_data[vehicleid][JobText]);
		    car_data[vehicleid][JobText]   = Text3D:INVALID_3DTEXT_ID;
		}
	}
	if OnPlayerEther[playerid] > 0 *then
	{
		SendClientMessage(playerid, COLOR_WHITE, "Вы вышли из прямого эфира");
		OnPlayerEther[playerid] = 0;
	}
	return true;
}
public OnPlayerRequestClass(playerid, classid)
{
	if(pData[playerid][pLogin] == true)
	{
		SCM(playerid, COLOR_WHITE, " Сменить скин можно в магазинах 'Victim'. (( Используйте: /gps >> [3] Магазины ))");
		return SpawnPlayer(playerid);
	}
	GetPlayerName(playerid, pData[playerid][pName], MAX_PLAYER_NAME);
	pData[playerid][pLogin] = false;
	SetSpawnInfo(playerid,0,78,1156.4028,-1769.8971,16.5938,358.4433,0,0,0,0,0,0);
	ResetNew(playerid);
	LoadRecon(playerid);
	CreateTextDraws(playerid);
	
	
	SetPlayerInterior(playerid, 0);
	SCM(playerid, 0xfdd835FF, " Добро пожаловать на "FullServName"");
	SetPlayerFacingAngle(playerid, 179.5547);
	SetPlayerCameraPos(playerid, -1826.819336, 1074.619995, 191.185898);
	SetPlayerCameraLookAt(playerid, -1826.819336, 1070.619995, 191.185898);
	//	SetPlayerCameraPos(playerid, -2068.860107, 1063.500000, 370.769989);
	//	SetPlayerCameraLookAt(playerid, -1752.900024, 707.469971, 125.239998);
	TogglePlayerControllable(playerid, 0);

	new queri[156];
	mysql_format(DATABASE, queri, sizeof queri, "SELECT `Name`,`pKey` FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%e' LIMIT 1",pData[playerid][pName]);
	mysql_tquery(DATABASE,queri,"mysql_auth_player","i",playerid);

	return true;
}
publics: mysql_auth_player(playerid)
{
	new account_count;
	cache_get_row_count(account_count);
	cache_get_value_name(0, "pKey", pData[playerid][pKey]);

	if(account_count)
	{
		show_auth_dialog(playerid);	
	}
	else
	{
		new ip[16];
		new szQuery[225+24];
		GetPlayerIp(playerid,ip,16);
		mysql_format(DATABASE, szQuery, sizeof szQuery, "SELECT * FROM `"TABLE_BANIP"` WHERE `IP` = '%s'", ip);
		mysql_tquery(DATABASE,szQuery,"OnMySQL_QUERY","iis",4,playerid,"");

		format(szQuery, sizeof szQuery, "{B4B5B7}______________________________________\n\n Добро пожаловать на сервер "NameServer"{B4B5B7}\n       Регистрация нового персонажа\n\nЛогин: {BFC0C2}%s{B4B5B7}\nВведите пароль:\n______________________________________",pData[playerid][pName]);
		ShowPlayerDialog(playerid,2,DIALOG_STYLE_INPUT, "Регистрация",szQuery, "Готово", "Отмена");
	}
	RemoveObjectsForPlayer(playerid);
}
publics:  mysql_check_ban(playerid)
{
	new account_count;
	cache_get_row_count(account_count);
	if(account_count)
	{
		new ban;
		cache_get_value_name_int(0, "Unban", ban);
		new year, month, day,hour,minute,second;

		timestamp_to_date(ban, year, month, day, hour, minute, second);

		format(YCMDstr, sizeof(YCMDstr), "{D95A41}Этот аккаунт заблокирован\nДата разбана: %02i/%02i/%02i в %02i:%02i\nВведите \"/q\" чтобы выйти\n",day,month,year,hour,minute);
		ShowPlayerDialog(playerid,78,0,"{c22000}Внимание",YCMDstr,"Закрыть","");
		return L_Kick(playerid,37);
	}
	new szQuery[128];
	mysql_format(DATABASE,szQuery,128,"SELECT * FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%e'",pData[playerid][pName]);
	mysql_tquery(DATABASE,szQuery,"mysql_load_account","i",playerid);
	return 1;
}
stock show_auth_dialog(playerid)
{
	new auth_str[512];
	format(auth_str,sizeof auth_str, "{B4B5B7}______________________________________\n\n Добро пожаловать на сервер "NameServer"{B4B5B7}\n       Этот аккаунт зарегистрирован\n\nЛогин: {BFC0C2}%s{B4B5B7}\nВведите пароль:\n______________________________________", Name(playerid));
	ShowPlayerDialog(playerid,1,DIALOG_STYLE_PASSWORD, "Авторизация",auth_str, "Войти", "Отмена");
}
stock SetPlayerWantedLevelEx(playerid, WantedLevel)
{
	pData[playerid][pWantedLevel] += WantedLevel;
	if(pData[playerid][pWantedLevel] > 6 ) pData[playerid][pWantedLevel] = 6;
	if(pData[playerid][pWantedLevel] < 0 ) pData[playerid][pWantedLevel] = 0;
	SetPlayerWantedLevel(playerid, pData[playerid][pWantedLevel] );
	SetAccountInfo(playerid, pData[playerid][pWantedLevel], "pWantedLevel");
	return 1;
}
stock SetPlayerCriminal(playerid, const killerid[], const reason[])
{
	pData[playerid][pCrimes]++;
	SetAccountInfo(playerid, pData[playerid][pCrimes], "pCrimes");
	strmid(PlayerCrime[playerid][pVictim], killerid, 0, strlen(killerid), 50);
	strmid(PlayerCrime[playerid][pAccusedof], reason, 0, strlen(reason), 50);

	format(string,128," Вы совершили преступление: [%s]. Сообщает: %s.",reason, killerid);
	SCM(playerid,COLOR_LIGHTRED,string);
	format(string,128," Ваш уровень розыска: %i", pData[playerid][pWantedLevel]);
	SCM(playerid,COLOR_YELLOW,string);
	foreach(new i: Player)
	{
		if(IsACop(i) || IsAFbi(i))
		{
			format(string, 144, " [Wanted %i: %s] [Сообщает: %s] [%s]",pData[playerid][pWantedLevel],pData[playerid][pName],killerid,reason);
			SCM(i, 0xFFC80100,string);
		}
	}
	return true;
}
stock SetKeyLostInfo(playerid)
{
	foreach(new i: Player)
	{
		if(pData[i][pMember] == 1 ||pData[i][pLeader] == 1 || pData[i][pMember] == 10 ||pData[i][pLeader] == 10 || pData[i][pMember] == 2 ||pData[i][pLeader] == 2 || pData[i][pMember] == 21 || pData[i][pLeader] == 21)
		{
			if(!GetPVarInt(i,"Fraction_Duty")) return true;
			format(string, 144, " Полицейский %s потерял ключи от камеры",Name(playerid));
			SCM(i, 0xFFC80100,string);
		}
	}
	return true;
}
stock GetWeaponSlot(weaponid)
{
	new slot;
	switch(weaponid)
	{
	case 0,1: slot = 0;
	case 2..9: slot = 1;
	case 22..24: slot = 2;
	case 25..27: slot = 3;
	case 28,29,32: slot = 4;
	case 30,31: slot = 5;
	case 33,34: slot = 6;
	case 35..38: slot = 7;
	case 16..18,39: slot = 8;
	case 41..43: slot = 9;
	case 10..15: slot = 10;
	case 44..46: slot = 11;
	case 40: slot = 12;
	default: slot = -1;
	}
	return slot;
}

public OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat, Float:new_x, Float:new_y, Float:new_z,  Float:vel_x, Float:vel_y, Float:vel_z)
{
	
	return true;
}

stock UpdateFresh()
{

	foreach(new i: Player)
	{
		UpdatePlayer(i);

		if(usemats[i] > 0 || GetPVarInt(i, !#_dGetMaterials))
		{
            if(!FallAnimation(i))continue;
			if(!GetPVarInt(i, !#_dGetMaterials))
			{
				if(usemats[i] == 1) armmatsf += 250;
				if(usemats[i] == 2) lsamatbi += 250;
				if(usemats[i] == 3) armmatbi += 250;
				usemats[i] = 0;
			}
			
			if(GetPVarInt(i, !#_dGetMaterials) == 0xFF)
				lsamatbi += MAX_MATERIALS_GET;


			DeletePVar(i, !#_dGetMaterials);

			RemovePlayerAttachedObject(i, 1);
			SCM(i, COLOR_REDD,"  Вы уронили ящик");
			SetPlayerSpecialAction (i, SPECIAL_ACTION_NONE);
		}


	}

}
stock CheckTrailer(playerid)
{
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 514 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 515 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 403) return true;
	if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)) && trailer_on[playerid] == 0 && GetPlayerVehicleSeat(playerid) == 0 && loaded_type[playerid] != 0) // если  прицеп есть
	{
		trailer_on[playerid] = 1; // Прицеп прицеплен к фуре
	}
	else if(!IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)) && trailer_on[playerid] == 1 && GetPlayerVehicleSeat(playerid) == 0 && loaded_type[playerid] != 0) // Если прицеп отцепился
	{
		pData[playerid][pDgruz] -= 3;
		SCM(playerid, 0xFF6347AA, "Вы потеряли часть груза");
		trailer_on[playerid] = 0;
		if(pData[playerid][pDgruz] < 0) pData[playerid][pDgruz] = 1;
	}
	return true;
}

stock UpdatePlayer(playerid)
{
    new vehicleid = GetPlayerVehicleID(playerid);
    
    GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
    
	if(speed_update[playerid] != -1) // обновление спидометра
	{
	    if(ServSecond % 2 ) // раз в две секунды
		{
			if(AntiCheatGetVehicleHealth(vehicleid) <= 500) {
				PlayerTextDrawColor(playerid, RepairIcon[playerid], -741092488);
			    PlayerTextDrawShow		(playerid, RepairIcon[playerid]);
			}
		    if(car_data[vehicleid][fuell] <= 0 && engine)
			{
				car_data[vehicleid][fuell]  = 0;
				SetVehicleParamsEx(vehicleid,false,false,alarm,doors,bonnet,boot,objective);
				GameTextForPlayer(playerid,"~r~FUEL HAS ENDED", 5000, 3);
				SCM(playerid, COLOR_GREEN, " {00A86B}Используйте телефон {FFFFFF}(( /call )) {00A86B}чтобы вызвать механика / таксиста");
				SCM(playerid, COLOR_GREEN, " {00A86B}Если у вас есть канистра с бензином, введите {FFFFFF}(( /fillcar ))");
			}
            new fuel_str[6];
			format(fuel_str, sizeof(fuel_str), "%.0fL", car_data[vehicleid][fuell]);
			PlayerTextDrawSetString(playerid,FuellString[playerid],fuel_str);
	
		    PlayerTextDrawColor(playerid, RemenIcon[playerid], -16776961);
		    PlayerTextDrawShow		(playerid, RemenIcon[playerid]);
		}
		else
		{
		    PlayerTextDrawColor(playerid, RepairIcon[playerid], 16711720);
		    PlayerTextDrawShow		(playerid, RepairIcon[playerid]);

		    PlayerTextDrawColor(playerid, RemenIcon[playerid], 1296911656);
		    PlayerTextDrawShow		(playerid, RemenIcon[playerid]);
		}
	}
	// ===== задержка что б не провисала игра при быстром переключении радио
	if(GetPVarInt(playerid, "anti_lag_radio") == 2)
	{
		SetPVarInt(playerid, "anti_lag_radio", 1);
	}
	else if(GetPVarInt(playerid, "anti_lag_radio") == 1)
	{
		        
		if(SelectOnlineRadio[playerid] == -1)
		{
			GameTextForPlayer(playerid, "~w~Radio: OFF", 5000, 6);
			StopAudioStreamForPlayer(playerid);
		}
		else
		{
			new RadioStr[25];
		    format(RadioStr, sizeof RadioStr, "~w~%s", radioOnline[SelectOnlineRadio[playerid]][1][0]);
		    GameTextForPlayer(playerid, RadioStr, 5000, 6);
			PlayAudioStreamForPlayer(playerid, radioOnline[SelectOnlineRadio[playerid]][0][0]);
		}
		DeletePVar(playerid, "anti_lag_radio");
	}
	
	
	if(pData[playerid][pLogin])
	{
		if(!(pData[playerid][pSetUI] & SHOW_HP))
		{
			new szHp[4];
			new Float:health;
			GetPlayerHealth(playerid, health);

			format(szHp, sizeof szHp, "%.0f", health);
			PlayerTextDrawSetString(playerid, gHealthText[playerid], szHp);
			//PlayerTextDrawShow(playerid, gHealthText[playerid]);
		}
		if(!(pData[playerid][pSetUI] & SHOW_ARMOR))
		{
			new szHp[4];
			new Float:arm;
			GetPlayerArmour(playerid, Float:arm);
			if(arm > 0)
			{
				format(szHp, sizeof szHp, "%.0f", arm);
				PlayerTextDrawSetString(playerid, gArmorText[playerid], szHp);
			}
			else {
				PlayerTextDrawHide(playerid, gArmorText[playerid]);
			}
		}
	    if(CarUnLockForPlayer[playerid]) // нельзя залезть в чужую тачку
	    {
	        CarUnLockForPlayer[playerid] --;
	        if(CarUnLockForPlayer[playerid] == 0) {
	            SetVehicleParamsForPlayer(GetPVarInt(playerid,"VehLock"), playerid, 0, 0);
	            DeletePVar(playerid,"VehLock");
	        }
	    }
	    
		new carid = GetPlayerVehicleID(playerid);
		if(GetPVarInt(playerid,"BoneStol")) SelectTextDraw(playerid,0x33AAFFFF);
		if(GetPVarInt(playerid, "SelectAvto") != -1) SelectTextDraw(playerid,0x0080FFFF);
		if(GetRoulet(playerid) && RouletStol[playerid] == 0 && !GetPVarInt(playerid,"CasinoRank")) GameTextForPlayer(playerid,"~g~PRESS ENTER",1300,4);
		if(!GetPVarInt(playerid,"BoneStol") && IsPlayerNearBone(playerid) != -1) GameTextForPlayer(playerid,"~g~PRESS ENTER",1300,4);
		
		GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
		new Keys,ud;
		new up,dn;
		GetPlayerKeys(playerid,Keys,up,dn);
		if(GetPVarInt(playerid, "in_anti_dm_zone") && !IsAArm(playerid) && !IsACop(playerid) && !IsAMayor(playerid) && !IsAFbi(playerid) && pData[playerid][pAdmin] < 1)
		{
			if(GetPlayerWeapon(playerid) > 1) SetPlayerArmedWeapon(playerid,0);
		}
		if(Spectate[playerid] && ud == KEY_DOWN && !LastReconClick[playerid][0])
		{
			PlayerPlaySound(playerid, 1083, 0.0, 0.0, 0.0);
			LastReconClick[playerid][0] = ud;
			if(ReconSelectSub[playerid] == INVALID_TEXT_DRAW)
			{
				DisableEnableReconButton(playerid, ReconSelect[playerid], 0);
				if(ReconSelect[playerid] >= 15)
				{
					ReconSelect[playerid] = 7;
					DisableEnableReconButton(playerid, ReconSelect[playerid], 1);
				}
				else
				{
					ReconSelect[playerid]++;
					DisableEnableReconButton(playerid, ReconSelect[playerid], 1);
				}
			}
			else
			{
				DisableEnableReconButton(playerid, ReconSelectSub[playerid], 0);
				if(ReconSelectSub[playerid] >= ReconBounds[playerid][1])
				{
					ReconSelectSub[playerid] = ReconBounds[playerid][0];
					DisableEnableReconButton(playerid, ReconSelectSub[playerid], 1);
				}
				else
				{
					ReconSelectSub[playerid]++;
					DisableEnableReconButton(playerid, ReconSelectSub[playerid], 1);
				}
			}
		}
		if(Spectate[playerid] && SpecAd[playerid] != INVALID_PLAYER_ID) PlayerTextDrawShow(playerid, ReconPlayer[34]);
		
		
		if(GetPVarInt(playerid,"ProdEmpty"))
		{
			if(FallAnimation(playerid))
			{
				SCM(playerid, COLOR_LIGHTRED, " Вы уронили ящик");
				DisablePlayerCheckpoint(playerid);
				ApplyAnimation(playerid,"GANGS","hndshkba",4.1,0,1,1,0,1,1);
				DeletePVar(playerid,"ProdEmpty");
				RemovePlayerAttachedObject(playerid, 1);
				SetPlayerSpecialAction (playerid, SPECIAL_ACTION_NONE);
			}
		}
		
        AntiCheatGetPos(playerid,AntiAFK[playerid][3],AntiAFK[playerid][4],AntiAFK[playerid][5]);

		if(AntiAFK[playerid][0] == AntiAFK[playerid][3] && AntiAFK[playerid][1] == AntiAFK[playerid][4] && AntiAFK[playerid][2] == AntiAFK[playerid][5])
		{
			PlayerAFKtime[playerid] ++;
			if(PlayerAFKtime[playerid] == 840 && pData[playerid][pAdmin] < 2)
			{
				SCM(playerid,COLOR_LIGHTRED, " Вы были отсоеденены от сервера! (AFK)");
			 	L_Kick(playerid,16);
			}
		}
		else
		{
			PlayerAFKtime[playerid] = 0;
			AntiAFK[playerid][0] = AntiAFK[playerid][3];
			AntiAFK[playerid][1] = AntiAFK[playerid][4];
			AntiAFK[playerid][2] = AntiAFK[playerid][5];
		}

	    if(pData[playerid][pLimitAutoUgon] > 0) pData[playerid][pLimitAutoUgon] --;
	    
		if(pData[playerid][pJailTime] > 0) // зона
		{
			pData[playerid][pJailTime]--;
			if(pData[playerid][pJailTime] == 0)
			{
				if(pData[playerid][pMestoJail] == 1) SetPlayerPos(playerid,1553.4962,-1675.2714,16.1953);
				if(pData[playerid][pMestoJail] == 2) SetPlayerPos(playerid,-1607.1873,721.3649,12.2721);
				if(pData[playerid][pMestoJail] == 3) SetPlayerPos(playerid,2334.8467,2454.9456,14.9688);
				if(pData[playerid][pMestoJail] == 4) SetPlayerPos(playerid, 86.9821,1181.0541,18.6641);
				
				pData[playerid][pJailTime] 		= 0;
				PlayerCuffed[playerid] 			= 0;
				pData[playerid][pMestoJail] 	= 0;
	
				SetPlayerWantedLevelEx(playerid, -6);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerInterior(playerid, 	0);
				
				GameTextForPlayer(playerid,"~g~Freedom", 5000, 1);
				SCM(playerid, COLOR_GREEN, " Вы заплатили свой долг обществу");
				
				strmid(pData[playerid][pBlackList],"None",0,15,15);
				SetAccountInfo(playerid,pData[playerid][pBlackList],"pBlackList");
			}
		}
		
		if(pData[playerid][pPHouseKey] != 0 && PlayerToPoint(6,playerid,HouseInfo[pData[playerid][pPHouseKey]][hCarx], HouseInfo[pData[playerid][pPHouseKey]][hCary], HouseInfo[pData[playerid][pPHouseKey]][hCarz]) && IsPlayerInVehicle(playerid, house_car[playerid])) GameTextForPlayer(playerid,"~g~PRESS ~k~~VEHICLE_HORN~ / Y",1300,4);
		if(GetPVarInt(playerid,"g_Flood") > 0) SetPVarInt(playerid,"g_Flood",GetPVarInt(playerid,"g_Flood")-1);
		if(GetPVarInt(playerid,"h_stall") && !IsPlayerInRangeOfPoint(playerid, 5, StallInfo[GetPVarInt(playerid,"h_stall")][stPos][0], StallInfo[GetPVarInt(playerid,"h_stall")][stPos][1], StallInfo[GetPVarInt(playerid,"h_stall")][stPos][2]))
		{
			UpdateDynamic3DTextLabelText(StallInfo[GetPVarInt(playerid,"h_stall")][stText], 0xFF8C37FF,"Не работает");
			DeletePVar(playerid,"h_stall");
			SetPlayerSkin(playerid,pData[playerid][pChar][0]);
		}
		if(GetPVarInt(playerid,"Pursiut"))
		{
			if(GetDistanceBetweenPlayerss(playerid,GetPVarInt(playerid,"Pursiut")-1) > 250)
			{
				DeletePVar(playerid,"Pursiut");
				DeletePVar(playerid,"Partner");
				SCM(playerid,-1,"Патрулирование закончено, преступник скрылся!");
				DisablePlayerCheckpoint(playerid);
			}
			else if(GetPlayerVehicleID(GetPVarInt(playerid,"Partner")-1) != GetPlayerVehicleID(playerid))
			{
				DeletePVar(playerid,"Pursiut");
				DeletePVar(playerid,"Partner");
				SCM(playerid,-1,"Патрулирование закончено, напарник покинул машину!");
				DisablePlayerCheckpoint(playerid);
			}
			else
			{
				new Float:pos[3];
				AntiCheatGetPos(GetPVarInt(playerid,"Pursiut")-1,pos[0],pos[1],pos[2]);
				SetPlayerCheckpoint(playerid, pos[0],pos[1],pos[2], 4.0);
			}
		}
		if(GetPVarInt(playerid,"floodwarn") > 0) SetPVarInt(playerid,"floodwarn",GetPVarInt(playerid,"floodwarn")-1);
		if(pData[playerid][pNarcoLomka] == 2) { new ttt = random(2); if(ttt == 1) { ApplyAnimation(playerid, "CRACK", "crckdeth1", 4.0, 0, 0, 1, 1, 1); } else { ApplyAnimation(playerid, "CRACK", "crckdeth3", 4.0, 0, 0, 1, 1, 1); } }
		if(Spectate[playerid] && SpecAd[playerid] != INVALID_PLAYER_ID)
		{
			//***********************************************
			new thewarns = 0;
			new sid = SpecAd[playerid];
			if(pData[sid][pWarns] == 0) thewarns = 0;
			if(pData[sid][pWarns] != 0 && pData[sid][pWarns] != 0) thewarns = thewarns-pData[sid][pWarns];
			if(pData[sid][pWarns] != 0 && pData[sid][pWarns] == 0) thewarns = pData[sid][pWarns];
			new weaponid = GetPlayerWeapon(SpecAd[playerid]);
			//EngineStatus(GetPlayerVehicleID(SpecAd[playerid])
			//new sobtest[20];
			//format(sobtest,sizeof(sobtest),"~n~%s / %s",(ACCCheck[SpecAd[playerid]] == 10 ? ("On"):("Off")),(pData[SpecAd[playerid]][Rassa] == 16 ? ("On"):("Off")));
			new Float:health = AntiCheatGetVehicleHealth(vehicleid) ;
			
			new Float:aermor;
			GetPlayerArmour(SpecAd[playerid],aermor);
			//			new afktext[7];
			

			new Float:onepercent = NumberShot[SpecAd[playerid]]/100;
			new percentshot = floatround(onepercent)*NumberShotTarget[SpecAd[playerid]];

			new Float:tonepercent = TimeNumberShot[SpecAd[playerid]]/100;
			new tpercentshot = floatround(tonepercent)*TimeNumberShotTarget[SpecAd[playerid]];
			new httpquery[250];
			if(IsPlayerInAFK(SpecAd[playerid]))
			{
				format(httpquery, sizeof(httpquery), "%s~n~ID: %i  ~r~AFK",Name(SpecAd[playerid]),SpecAd[playerid]);
				PlayerTextDrawSetString(playerid, ReconPlayer[6],httpquery);
			}
			else
			{
				format(httpquery, sizeof(httpquery), "%s~n~ID: %i",Name(SpecAd[playerid]),SpecAd[playerid]);
				PlayerTextDrawSetString(playerid, ReconPlayer[6],httpquery);
			}
			/*new sobtest[20];
				format(sobtest,sizeof(sobtest),"~n~%s / %s",(ACCCheck[SpecAd[playerid]] == 10 ? ("On"):("Off")),(pData[SpecAd[playerid]][Rassa] == 16 ? ("On"):("Off")));*/
			new e_status[25];
			if(pData[SpecAd[playerid]][pState] == PLAYER_STATE_DRIVER) GetVehicleParamsEx(GetPlayerVehicleID(SpecAd[playerid]), engine, lights, alarm, doors, bonnet, boot, objective);
			if(pData[SpecAd[playerid]][pState] != PLAYER_STATE_DRIVER) e_status = "-";
			else if(engine) e_status = "On";
			else e_status = "Off";
			new maxspeed = 0;
			new Float:health2;
			GetPlayerHealth(playerid, health2);
			if(IsPlayerInAnyVehicle(SpecAd[playerid])) maxspeed = MaxSpeedCar[GetVehicleModel(GetPlayerVehicleID(SpecAd[playerid]))-400];
			//format(sobtest,sizeof(sobtest),"~n~%s / %s",(ACCCheck[SpecAd[playerid]] == 10 ? ("On"):("Off")),(pData[SpecAd[playerid]][Rassa] == 16 ? ("On"):("Off")));
			format(httpquery, sizeof(httpquery), "~n~%i : %.0f / %i~n~%i~n~%.0f~n~%.0f~n~%.0f~n~%i / %i~n~%i~n~%i : %i~n~%i / %i : %i%%~n~%i / %i : %i%%~n~%i : %i~n~%s",
			pData[SpecAd[playerid]][pLevel], pData[SpecAd[playerid]][pExp], (pData[SpecAd[playerid]][pLevel]+1)*4, thewarns, aermor,
			health2,health,SpeedVehicle(SpecAd[playerid]), maxspeed,GetPlayerPing(SpecAd[playerid]),
			WeaponInfo[playerid][wAmmo][GetWeaponSlot(weaponid)],WeaponInfo[playerid][wWeapon][GetWeaponSlot(weaponid)],NumberShot[SpecAd[playerid]],NumberShotTarget[SpecAd[playerid]],percentshot,
			TimeNumberShot[SpecAd[playerid]],TimeNumberShotTarget[SpecAd[playerid]],tpercentshot,gettime() - pData[playerid][pAFK], 1000, e_status);
			
			
			PlayerTextDrawSetString(playerid, ReconPlayer[5],httpquery);
			//format(strr1, sizeof(strr1), "%s~n~(%i)  %s~n~~n~~r~]Armour: ~w~%.0f~n~~g~]Hp: ~w~%.0f~n~~g~]CarHp: ~w~%.0f~n~~r~]Money: ~w~%i~n~~b~]Ammo: ~w~%i~n~~p~]Warns: ~w~%i~n~~y~]Ping: ~w~%i~n~~b~]Speed: ~w~%i",getName(SpecAd[playerid]),SpecAd[playerid],afktext,aermor,hppp,health,pData[SpecAd[playerid]][Cash],tttgtg,thewarns,GetPlayerPing(SpecAd[playerid]),SpeedVehicle(SpecAd[playerid]));
			//PlayerTextDrawSetString(playerid, NikPlayer,strr1);
		}
		if(GetPVarInt(playerid, "w_time") < gettime() && GetPVarInt(playerid,"w_id") && GetPVarInt(playerid,"InWorkshop") == -1
				&& strcmp(WorkshopList[0][GetPVarInt(playerid,"w_id")][wlName],pData[playerid][pName],true) == 0 && strlen(WorkshopList[0][GetPVarInt(playerid,"w_id")][wlName]))
		{
			new x = GetPVarInt(playerid,"w_id");
			for(new x_ = 0; x_ < 9; x_++)
			{
				WorkshopList[x_][x][wlID] = WorkshopList[x_+1][x][wlID];
				strmid(WorkshopList[x_][x][wlName],WorkshopList[x_+1][x][wlName],0,strlen(WorkshopList[x_+1][x][wlName]), MAX_PLAYER_NAME);
				WorkshopList[x_+1][x][wlID] = -1;
				strmid(WorkshopList[x_+1][x][wlName],"", 0, strlen(""), 5);
			}
			if(WorkshopList[0][x][wlID] != -1 && strlen(WorkshopList[0][x][wlName]))
			{
				SCM(WorkshopList[0][x][wlID],0x6BB3FFAA," Подошла ваша очередь. У вас есть 2 минуты что бы прибыть к гаражу!");
				SetPVarInt(WorkshopList[0][x][wlID],"w_time", gettime() + 120);
				SetPlayerCheckpoint(WorkshopList[0][x][wlID],WorkshopInfo[x][wMenu][0],WorkshopInfo[x][wMenu][1],WorkshopInfo[x][wMenu][2], 10.0);
			}
			DisablePlayerCheckpoint(playerid);
			DeletePVar(playerid,"w_time");
			DeletePVar(playerid,"w_id");
		}
		
		if(GetPVarInt(playerid,"AntiBunny") > 0) SetPVarInt(playerid,"AntiBunny",GetPVarInt(playerid,"AntiBunny")-1);
		if(GetPVarInt(playerid,"job_auto_time"))
		{
			SetPVarInt(playerid,"job_auto_time",GetPVarInt(playerid,"job_auto_time")-1);
			if(!GetPVarInt(playerid,"job_auto_check")) format(YCMDstr,10,"~r~%s",Convert(GetPVarInt(playerid,"job_auto_time")));
			else format(YCMDstr,10,"~g~BREAK");
			GameTextForPlayer(playerid, YCMDstr, 2000, 6);
			if(GetPVarInt(playerid,"job_auto_time") == 1)
			{
				SCM(playerid, COLOR_BLUE, " [SMS]: Ты нас разочаровал! Миссия провалена");
				if(caroff[GetPVarInt(playerid,"job_auto_seat")] == true) DestroyVehicleEX(GetPVarInt(playerid,"job_auto_seat"));
				else SetVehicleToRespawn(GetPVarInt(playerid,"job_auto_seat"));
				caroff[GetPVarInt(playerid,"job_auto_seat")] =false;
				DeletePVar(playerid,"job_auto");
				DeletePVar(playerid,"job_auto_seat");
				DeletePVar(playerid,"job_auto_time");
				SetPVarInt(playerid,"randa",-1);
				if(gz_autorob[playerid] != -1)
				{
					GangZoneDestroy(gz_autorob[playerid]);
					printf("GangZoneDestroy [Robbing GZ] [ID: %i] for playerid: %i",gz_autorob[playerid],playerid);
					gz_autorob[playerid] = -1;
				}
			}
		}
		if(GetPVarInt(playerid,"FloodAques") > 0) SetPVarInt(playerid,"FloodAques",GetPVarInt(playerid,"FloodAques")-1);
		if(sms_timer[playerid] > 0) sms_timer[playerid]--;
		CheckTrailer(playerid);
		if(GetPVarInt(playerid,"fish_ready") == 3 && GetPVarInt(playerid,"fish_began") && GetPVarInt(playerid,"fish_time") < gettime())
		{
			ApplyAnimation(playerid,"SWORD","sword_IDLE",50.0,0,1,1,1,1);
			if(Sonar[IsAtFishPlace(playerid)] > 0) SetPVarInt(playerid,"fish_chanse",random(20));
			if(IsABoat(playerid)) SetPVarInt(playerid,"fish_chanse",random(10));
			if(GetPVarInt(playerid,"fish_chanse") == 0) GameTextForPlayer(playerid,"~g~~n~!", 5000, 6), SetPVarInt(playerid,"fish_time", gettime() + random(5) + 2);
			else if(GetPVarInt(playerid,"fish_chanse") == 1) GameTextForPlayer(playerid,"~n~~n~~y~!", 5000, 6), SetPVarInt(playerid,"fish_time", gettime() + random(5) + 2);
			else if(GetPVarInt(playerid,"fish_chanse") == 2) GameTextForPlayer(playerid,"~n~~n~~r~~n~!", 5000, 6), SetPVarInt(playerid,"fish_time", gettime() + random(3) + 2);
			else GameTextForPlayer(playerid,"~b~!",11000,6);
		}
		if(startaddiction[playerid] == 1 && pData[playerid][pAddiction] > 2000 && pData[playerid][pNarcoLomka] == 1)
		{
			if(PaintReg{playerid} != 2 && pData[playerid][pDuelIDP] == -1)
			{
				SCM(playerid, COLOR_RED, "~~~~~~~~~~~~ У Вас началась ломка ~~~~~~~~~~~~");
				SCM(playerid, COLOR_WHITE, "(( Принять наркотик: /usedrugs   ||   Вызвать скорую помощь: /call ))");
				pData[playerid][pNarcoLomka] = 2;
				SetAccountInfo(playerid, pData[playerid][pNarcoLomka], "pNarcoLomka");
			}
		}
		if(GetPVarInt(playerid,"TimerBaseHack") > 0) SetPVarInt(playerid,"TimerBaseHack",GetPVarInt(playerid,"TimerBaseHack")-1);
		if(pData[playerid][pDrivingSkill] > 1 && pData[playerid][pState] == PLAYER_STATE_DRIVER && !IsANoLimiter(GetPlayerVehicleID(playerid)))
		{
			pData[playerid][pDrivingSkill]--;
			SetAccountInfo(playerid, pData[playerid][pDrivingSkill], "pDrivingSkill");
			switch(pData[playerid][pDrivingSkill])
			{
			case 1: SCM(playerid, COLOR_GREEN, " Ваш навык вождения повышен. (( Нажмите клавишу \"CTRL\" для выключения ограничителя скорости ))"),accept_car_damage[playerid] = 0;
			case 300,600,900,1200: SCM(playerid, COLOR_GREEN, " Ваш навык вождения повышен."),accept_car_damage[playerid] = 0;
			}
		}
		if(pData[playerid][pDrivingSkill] > 0 && pData[playerid][pState] == PLAYER_STATE_DRIVER && !IsANoLimiter(GetPlayerVehicleID(playerid)))
		{
			if(!IsACop(playerid) && !IsAFbi(playerid))
			{
				new Float:veh[3];
				AntiCheatGetVehicleVelocity(GetPlayerVehicleID(playerid),veh[0],veh[1],veh[2]);
				switch(pData[playerid][pDrivingSkill])
				{
				case 1..300: if(SpeedVehicle(playerid) > 50) setVehicleSpeed(GetPlayerVehicleID(playerid),50);
				case 301..600: if(SpeedVehicle(playerid) > 45) setVehicleSpeed(GetPlayerVehicleID(playerid),45);
				case 601..900: if(SpeedVehicle(playerid) > 40) setVehicleSpeed(GetPlayerVehicleID(playerid),40);
				case 901..1200: if(SpeedVehicle(playerid) > 35) setVehicleSpeed(GetPlayerVehicleID(playerid),35);
				}
			}
		}
		if(CellTime[playerid] > 0)
		{
			if (CellTime[playerid] == cchargetime)
			{
				CellTime[playerid] = 1;
				if(Mobile[Mobile[playerid]] == playerid) pData[playerid][pMobile] = pData[playerid][pMobile]+callcost;
				CellTime[playerid] = CellTime[playerid] +1;
				if (Mobile[Mobile[playerid]] == 9999 && CellTime[playerid] == 5)
				{
					if(IsPlayerConnected(Mobile[playerid]))
					{
						format(string, 90, " У %s звонит мобильник",Name(Mobile[playerid]));
						ProxDetector(30.0, Mobile[playerid], string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
			}
			if(CellTime[playerid] == 0 && pData[playerid][pMobile] > 0)
			{
				format(string, 64, "~w~Phone~n~~r~%i", pData[playerid][pMobile]);
				GameTextForPlayer(playerid, string, 5000, 1);
			}
		}
	
		if(MinusPercent[playerid] > 0) MinusPercent[playerid] --;
		if(GetPVarInt(playerid, "BusTime") > 0)
		{
			SetPVarInt(playerid, "BusTime", GetPVarInt(playerid, "BusTime") - 1);
			format(string,10,"~r~%i",GetPVarInt(playerid, "BusTime"));
			GameTextForPlayer(playerid, string, 2000, 6);
			if(GetPVarInt(playerid, "BusTime") == 0)
			{
				if(GetPVarInt(playerid,"BusRepairMoney") > GetPVarInt(playerid, "BusMoney")) SetPVarInt(playerid,"BusRepairMoney",pData[playerid][pPayCheck]);
				format(cString, sizeof(cString), " Рабочий день завершен. Вами заработано: %i вирт. За ремонт: -%i вирт", GetPVarInt(playerid, "BusMoney"), GetPVarInt(playerid,"BusRepairMoney"));
				SCM(playerid, 0x00B978FF, cString);
				SCM(playerid, COLOR_WHITE, " Деньги будут перечислены на счет во время зарплаты");
				SetVehicleToRespawn(GetPVarInt(playerid, "rentcar_job"));
				DestroyDynamic3DTextLabel(JobText3D[playerid]);
				DisablePlayerRaceCheckpoint(playerid);
				pData[playerid][pPayCheck] -= GetPVarInt(playerid,"BusRepairMoney");
				DeletePVar(playerid, "BusTime");
				DeletePVar(playerid, "TypeBus");
				DeletePVar(playerid, "BusStop");
				DeletePVar(playerid, "BusMoney");
				DeletePVar(playerid, "BusRepairMoney");
				DeletePVar(playerid, "rentcar_job");
				pPressed[playerid] = -1;
			}
		}
		if(GetPVarInt(playerid, "TimeBus") > 0)
		{
			SetPVarInt(playerid, "TimeBus", GetPVarInt(playerid, "TimeBus") - 1);
			format(string,32,"~r~%i",GetPVarInt(playerid, "TimeBus"));
			GameTextForPlayer(playerid, string, 2000, 6);
			if(GetPVarInt(playerid, "TimeBus") == 0)
			{
				DeletePVar(playerid, "TimeBus");
				new type = GetPVarInt(playerid, "TypeBus"), p = pPressed[playerid];
				SetPVarInt(playerid, "BusStop", 1);
				if(type == 1) SetPlayerRaceCheckpoint(playerid,0,BusCityLS[p][0],BusCityLS[p][1],BusCityLS[p][2],BusCityLS[p][3],BusCityLS[p][4],BusCityLS[p][5],5.0);
				if(type == 2) SetPlayerRaceCheckpoint(playerid,0,BusCitySF[p][0],BusCitySF[p][1],BusCitySF[p][2],BusCitySF[p][3],BusCitySF[p][4],BusCitySF[p][5],5.0);
				if(type == 3) SetPlayerRaceCheckpoint(playerid,0,BusCityLV[p][0],BusCityLV[p][1],BusCityLV[p][2],BusCityLV[p][3],BusCityLV[p][4],BusCityLV[p][5],5.0);
				if(type == 4) SetPlayerRaceCheckpoint(playerid,0,BusSchool[p][0],BusSchool[p][1],BusSchool[p][2],BusSchool[p][3],BusSchool[p][4],BusSchool[p][5],5.0);
				if(type == 5) SetPlayerRaceCheckpoint(playerid,0,BusLSLV[p][0],BusLSLV[p][1],BusLSLV[p][2],BusLSLV[p][3],BusLSLV[p][4],BusLSLV[p][5],5.0);
				if(type == 6) SetPlayerRaceCheckpoint(playerid,0,BusLSZavodi[p][0],BusLSZavodi[p][1],BusLSZavodi[p][2],BusLSZavodi[p][3],BusLSZavodi[p][4],BusLSZavodi[p][5],5.0);
			}
		}
		
		if(pData[playerid][pMuted] > 0) { // мут
	 		pData[playerid][pMuted] --;
			if(!pData[playerid][pMuted])
				SCM(playerid,COLOR_LIGHTRED, " Вам включили чат. Пожалуйста соблюдайте правила");
		}
		if(PlayerTazeTime[playerid] >= 1) PlayerTazeTime[playerid] += 1;
		if(PlayerTazeTime[playerid] >= 10) PlayerTazeTime[playerid] = 0, TogglePlayerControllable(playerid, 1);
		if(TieTime[playerid] > 0) TieTime[playerid]--;
		if(PlayerCuffed[playerid] == 1)
		{
		    SendMes(playerid,-1,"PlayerCuffed[playerid] = %d",PlayerCuffed[playerid]);
			if(PlayerCuffedTime[playerid] <= 0)
			{
				TogglePlayerControllable(playerid, 1);
				PlayerCuffed[playerid] = 0;
				PlayerCuffedTime[playerid] = 0;
				PlayerTazeTime[playerid] = 1;
				ClearAnim(playerid);
			}
   			else PlayerCuffedTime[playerid] --;
		}
		if(PlayerCuffed[playerid] == 2)
		{
			if(PlayerCuffedTime[playerid] <= 0)
			{
				TogglePlayerControllable(playerid, 1);
				PlayerCuffed[playerid] = 0;
				PlayerCuffedTime[playerid] = 0;
			}
			else PlayerCuffedTime[playerid] -= 1;
		}
		if(ServMinute == 10 && ServSecond == 0) startaddiction[playerid] = 1;
	}
	return true;
}
stock prorab_word()
{
	new fraza[120];
	new word = random(5);
	switch(word)
	{
		case 0:fraza= "Адванс обновы быстрее выпускает чем ты этот мешок тащишь!";
		case 1:fraza= "Давай поторапливайся, я сегодня еще домой собираюсь попасть!";
		case 2:fraza= "Похоже кто-то сегодня без зарплаты!";
		case 3:fraza= "Как же мне задолбало на вас орать!";
		case 4:fraza= "Мешки таскать - не в самп играть, давай тяни быстрее!";
		case 5:fraza= "Давай аккуратней,не дрова несёшь! Хотя... Кто его знает что в этих мешках..";
	}
	return fraza;
}
publics: Fresh()
{
	//       банкоматы
	timeATM ++;
	if(timeATM == 7){
		for(new Text3D:atmm = atm_text[0];atmm<atm_text[1];atmm++)UpdateDynamic3DTextLabelText(atmm, 0x33AAFFAA, "Введите: ''/atm''");
	}
	else if(timeATM == 14){
		for(new Text3D:atmm = atm_text[0];atmm<atm_text[1];atmm++)UpdateDynamic3DTextLabelText(atmm, 0x33AA33AA, "Нажмите: ''ENTER''");
		timeATM = 0;
	}
	// команда дневального лва
	if(army_actor_time)
	{
		army_actor_time --;
		if(!army_actor_time)
		{
			ClearActorAnimations(army_actor);
			DestroyDynamic3DTextLabel(army_actor_text);
			army_actor_text = Text3D:INVALID_3DTEXT_ID;
		}
	}
	// орущий прораб
	loader_actor_text_time --;
	if(!loader_actor_text_time)
	{
		loader_actor_text[1] = CreateDynamic3DTextLabel(prorab_word(), 0x6495EDFF, 2181.7244,-2252.5786,14.7734+1.2, 30.0);
		loader_actor_time[1] = 15;
		loader_actor_text_time = 600;
	}
	if(loader_actor_time[1])
	{
		loader_actor_time[1] --;
		if(!loader_actor_time[1])
		{
			DestroyDynamic3DTextLabel(loader_actor_text[1]);
			loader_actor_text[1] = Text3D:INVALID_3DTEXT_ID;
		}
	}
	if(loader_actor_time[0])
	{
		loader_actor_time[0] --;
		if(!loader_actor_time[0])
		{
			DestroyDynamic3DTextLabel(loader_actor_text[0]);
			loader_actor_text[0] = Text3D:INVALID_3DTEXT_ID;
		}
	}
	
	gettime(ServHour, ServMinute, ServSecond);
	
	if(ServSecond == 0) // время на спидометре
	{
		new strDateSpeed[25];
		format(strDateSpeed,sizeof strDateSpeed,"%02i %s, %d~n~%02i:%02i",ServerDay, ServerNameMonth,ServerYear,ServHour, ServMinute);
		TextDrawSetString(SpeedTime,strDateSpeed);
	}
	
	if(restart_time > 0)
	{
		restart_time--;
		if(restart_time == 1) GameModeExitFunc();
	}
	if(ServHour == 05 && ServMinute == 02 && ServSecond == 00)
	{
	    for(new t = 1; t <= 15; t++)SendClientMessageToAll(COLOR_RED, "");
		SendClientMessageToAll(COLOR_RED, "_______________=======[Внимание! Рестарт сервера через 1 минуту]=======_______________");
	}
	if(ServHour == 05 && ServMinute == 03 && ServSecond == 00)
	{
		restart_time = 60;
		new szQuery[52];
		//rr = 1;
		mysql_format(DATABASE, szQuery, sizeof(szQuery), "UPDATE `"TABLE_ACCOUNTS"` SET `pLimitPay` = '0'");
		mysql_tquery(DATABASE,szQuery);
		mysql_format(DATABASE, szQuery, sizeof(szQuery), "UPDATE `"TABLE_ACCOUNTS"` SET `pLimitSellCar` = '0'");
		mysql_tquery(DATABASE,szQuery);
		mysql_format(DATABASE, szQuery, sizeof (szQuery), "UPDATE `"TABLE_ACCOUNTS"` SET `pLimitAutoUgon` = '0'");
		mysql_tquery(DATABASE,szQuery);
		SaveOthers(); // Сохранение others
		for(new i = 1; i <= TOTALCASINO; i++) SaveMySQL(1,i);
		for(new i = 1; i <= TOTALSHOPS; i++) SaveMySQL(3,i);
		for(new i = 1; i <= TotalBizz; i++) SaveMySQL(4,i);

		for(new i = 1; i <= TOTALFARM; i++) SaveMySQL(9,i);
		foreach(new i: Player)
		{
			//if(pData[i][pLogin]) SaveMySQL(2, i), SaveMySQL(10, i);
			GameTextForPlayer(i,"~r~RESTART", 1000, 0);
			ShowPlayerDialog(i,556,DIALOG_STYLE_MSGBOX,"{D95A41}Рестарт сервера","{D95A41}В данный момент проходит рестарт сервера\nПерезайдите через минуту","ENTER","");
			L_Kick(i,17);
		}
		for(new i = 0; i<TotalHouse; i++)
		{
			SaveMySQL(5,i);
		}
	}
	for(new i;i<MAX_BONE;i++)
	{
		if(BoneInfo[i][GameStart] > 0)
		{
			BoneInfo[i][GameStart] --;
			foreach(new g: Player)
			{
				if(GetPVarInt(g,"BoneStol")-1 == i && (GetPVarInt(g,"BoneStol_") || BoneInfo[i][Crupie] == g))
				{
					if(BoneInfo[i][GameStart] == 0 && GetPVarInt(g,"BoneStol_") == 1) SetPVarInt(g,"BoneStol_",random(11) + 2), UpdateBone(i);
					else if(BoneInfo[i][GameStart] > 0)
					{
						if(BoneInfo[i][bBank] < 1000 || BoneInfo[i][Bet] < 1000) BoneInfo[i][bBank] = g*1000,UpdateBone(i);
						format(YCMDstr,18,"~g~%i",BoneInfo[i][GameStart]);
						GameTextForPlayer(g,YCMDstr,1200,6);
					}
				}
			}
			if(BoneInfo[i][GameStart] == 0) return ShowItog(i);
		}
	}

	GetMoney();
	if(paint_info[0] > 0) GetPaintball();
	if(race_info[0] > 0) GetRace();
	if(WarStart > 0) WarStart--;
	for(new x = 1;x <= TotalBizz; x++)
	{
		if(BizzInfo[x][bCapture] != 0)
		{
			for(new i = 0; i < 20; i++)
			{
				if(MFrakCD[i] > 1)
				{
					MFrakCD[i] --;
					if(MFrakCD[i] == 600) SendFamilyMessage(i,0x114D71AA, "У вас осталось 10 минут на подготовку!");
					else if(MFrakCD[i] == 120)
					{
						if(i == BizzInfo[x][bCapture])
						{
							format(string,176,"У вас есть 2 минуты, чтобы решить с %s, чей будет бизнес: %s",GetMafiaName(BizzInfo[x][bMafia]),BizzInfo[x][bMessage]); // Форматируем сообщение
							SendFamilyMessage(i,COLOR_RED,string);
						}
						else if(i == BizzInfo[x][bMafia])
						{
							format(string,176,"У вас есть 2 минуты, чтобы решить с %s, чей будет бизнес: %s",GetMafiaName(BizzInfo[x][bCapture]),BizzInfo[x][bMessage]); // Форматируем сообщение
							SendFamilyMessage(i,COLOR_RED,string);
						}
					}
				}
			}
		}
	}

	if(war > 0) war -=1;
	if (ServMinute == 00 && ServSecond == 00)
	{
		format(string, 90, " Сейчас времени %i:00 часов",ServHour);
		BroadCast(COLOR_WHITE,string);
		PayDay();
		SaveOthers();
		for(new i = 1; i < MAX_PLAYERS; i++) Sonar[i] = random(2000);
		SetWorldTime(ServHour);
	}
	if(paint_info[1] == 0)
	{
		if(ServHour == 16 && ServMinute == 10  || ServHour == 13 && ServMinute == 10  || ServHour == 14 && ServMinute == 10  || ServHour == 22 && ServMinute == 10 || ServHour == 01 && ServMinute == 30 || ServHour == 03 && ServMinute == 15 )
		{
			SendClientMessageToAll(0xFFAAFFAA," Внимание! Начало пейнтболла через 5 минут. Место проведения военный завод К.А.С.С");
			paint_info[0] = 300;
			paint_info[1] = 1;
		}
	}
	if(race_info[1] == 0)
	{
		if(ServHour == 12 && ServMinute == 10  || ServHour == 18 && ServMinute == 10  || ServHour == 21 && ServMinute == 10  || ServHour == 15 && ServMinute == 10 || ServHour == 23 && ServMinute == 10 )
		{
			SendClientMessageToAll(0xB9B900AA," Внимание! Начало гонок через 5 минут. Трасса: Аэропорт Лос Сантос. Регистрация у въезда");
			race_info[0] = 300;
			race_info[1] = 1;
		}
	}
	return true;
} 
stock LeaderList(playerid)
{
	ShowPlayerDialog(playerid,22813,DIALOG_STYLE_MSGBOX, "fID","[0] Гражданский\n[1] LSPD\n[2] FBI\n[3] ARMY SF\n[4] NONE\n[5] LCN\n[6] YAKUZA\n[7] MAYOR\n[8] NONE\n[9] SFN\n[10] SFPD\n[11] INSTRUCTOR\n[12] BALLAS\n[13] VAGOS\n[14] RUS MAFIA\n[15] GROVE\n[16] LSN\n[17] AZTEC\n[18] RIFA\n[19] LVA\n[20] LVN\n[21] LVPD\n[22] MEDIC", "Готово", "");
}
stock kShowStats(playerid,targetid)
{
	new tempstring[100];
	new httpquery[2500];
	format(httpquery, sizeof(httpquery),"");
	new stringersqw[30],stringersqx[35],teampstringds[30],teampstringd[30],teampstring[70];
	format(stringersqw,sizeof(stringersqw),"Имя:\t\t\t\t%s\n\n",Name(targetid));
	strcat(httpquery,stringersqw);

	format(stringersqx,sizeof(stringersqx),"Уровень:\t\t\t%d\n",pData[targetid][pLevel]);
	strcat(httpquery,stringersqx);
	new nxtlevlel = pData[targetid][pLevel]+1;
	new expert = nxtlevlel*4;
	format(teampstringds,sizeof(teampstringds),"Exp:\t\t\t\t%.0f/%d\n",pData[targetid][pExp],expert);
	strcat(httpquery,teampstringds);

	format(teampstringd,sizeof(teampstringd),"Деньги:\t\t\t%d",pData[targetid][pCash]);
	strcat(httpquery,teampstringd);

	format(teampstring,sizeof(teampstring),"\nВарнов:\t\t\t%d",pData[targetid][pWarns]);
	strcat(httpquery,teampstring);

	if(pData[targetid][OffWarns] && pData[targetid][pWarns])
	{
		new strisaq[35];
		format(strisaq,sizeof(strisaq),"\nВарн до: %s",date("%dd/%mm/%yyyy  %hh:%ii",pData[targetid][OffWarns]));
		strcat(httpquery,strisaq);
	}

	new qdqwdsds[35],tempstringessrd[35],tempstringessr[35],tempstringesr[35];
	new tempstringe[35],tempstrings[35],tempstringq[35],tempstringqs[35],tempstringer[35];
	format(qdqwdsds,sizeof(qdqwdsds),"\nЗаконопослушность:\t\t%d\n",pData[targetid][pZakonp]);
	strcat(httpquery,qdqwdsds);

	format(tempstringessr,sizeof(tempstringessr),"Преступлений:\t\t%d\n",pData[targetid][pCrimes]);
	strcat(httpquery,tempstringessr);

	format(tempstringesr,sizeof(tempstringesr),"Арестов:\t\t\t%d\n",pData[targetid][pArrested]);
	strcat(httpquery,tempstringesr);

	format(tempstringer,sizeof(tempstringer),"Уровень розыска:\t\t%d\n",pData[targetid][pWantedLevel]);
	strcat(httpquery,tempstringer);

	format(tempstringqs,sizeof(tempstringqs),"Дата регистрации:\t\t%s\n",pData[targetid][pDataReg]);
	strcat(httpquery,tempstringqs);

	format(tempstringq,sizeof(tempstringq),"Зависимость:\t\t\t%d\n",pData[targetid][pAddiction]);
	strcat(httpquery,tempstringq);

	format(tempstringe,sizeof(tempstringe),"Наркотики:\t\t\t%d\n",pData[targetid][pDrugs]);
	strcat(httpquery,tempstringe);

	format(tempstrings,sizeof(tempstrings),"Материалы:\t\t\t%d\n",pData[targetid][pMats]);
	strcat(httpquery,tempstrings);

	format(tempstringessrd,sizeof(tempstringessrd),"Рыбы поймано:\t\t\t%.2f кг\n",pData[targetid][pFishes]);
	strcat(httpquery,tempstringessrd);

	new tempisoo[70];
	switch(pData[targetid][pMember])
	{
	case 0: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tНет\n");
	case 1: strcat(httpquery,"Организиция:\t\t\tLSPD\n");
	case 2: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tFBI\n");
	case 3: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tArmy SF\n");
	case 4: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tМедики SF\n");
	case 5: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tLa Cosa Nostra\n");
	case 6: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tYakuza\n");
	case 7: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tМэрия\n");
	case 8: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tCasino\n");
	case 9: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tSF News\n");
	case 10: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tSFPD\n");
	case 11: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tИнструкторы\n");
	case 12: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tBallas Gang\n");
	case 13: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tVagos Gang\n");
	case 14: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tРусская Мафия\n");
	case 15: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tGrove Street\n");
	case 16: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tLS News\n");
	case 17: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tAztecas Gang\n");
	case 18: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tRifa Gang\n");
	case 19: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tArmy LV\n");
	case 20: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tLV News\n");
	case 21: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tLVPD\n");
	case 24: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tMongols MC\n");
	case 26: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tWarlocks MC\n");
	case 29: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tPagans MC\n");
	case 22: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tМедики LS\n");
	case 33: format(tempisoo,sizeof(tempisoo),"Организиция:\t\t\tМедики ЛВ\n");
	}
	strcat(httpquery,tempisoo);

	switch(pData[targetid][pMember])
	{
	case 0: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\t-\n");
	case 1,10,21:
		{
			switch(pData[targetid][pRank])
			{
			case 1: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tКадет\n");
			case 2: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tОфицер\n");
			case 3: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tМл.Сержант\n");
			case 4: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tСержант\n");
			case 5: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tПрапорщик\n");
			case 6: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tСт.Прапорщик\n");
			case 7: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tМл.Лейтенант\n");
			case 8: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tЛейтенант\n");
			case 9: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tСт.Лейтенант\n");
			case 10: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tКапитан\n");
			case 11: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tМайор\n");
			case 12: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tПодполковник\n");
			case 13: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tПолковник\n");
			case 14: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tШериф\n");

			}
		}
	case 3,19:
		{
			switch(pData[targetid][pRank])
			{
			case 1: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tРядовой\n");
			case 2: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tЕфрейтор\n");
			case 3: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tМл.Сержант\n");
			case 4: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tСержант\n");
			case 5: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tСт.Сержант\n");
			case 6: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tСтаршина\n");
			case 7: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tПрапорщик\n");
			case 8: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tМл.Лейтенант\n");
			case 9: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tЛейтенант\n");
			case 10: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tСт.Лейтенант\n");
			case 11: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tКапитан\n");
			case 12: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tМайор\n");
			case 13: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tПодполковник\n");
			case 14: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tПолковник\n");
			case 15: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tГенерал\n");
			}
		}
	case 9,16,20:
		{
			switch(pData[targetid][pRank])
			{
			case 1: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tСтажер\n");
			case 2: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tЗвукооператор\n");
			case 3: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tЗвукорежиссер\n");
			case 4: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tРепортер\n");
			case 5: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tВедущий\n");
			case 6: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tРедактор\n");
			case 7: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tГл.Редактор\n");
			case 8: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tТех.Директор\n");
			case 9: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tПрограммный Директор\n");
			case 10: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tГен.Директор\n");
			}
		}
	case 7:
		{
			switch(pData[targetid][pRank])
			{
			case 1: format(tempstring, sizeof(tempstring), "Должность:\t\t\t\tСекретарь\n");
			case 2: format(tempstring, sizeof(tempstring), "Должность:\t\t\t\tАдвокат\n");
			case 3: format(tempstring, sizeof(tempstring), "Должность:\t\t\t\tОхранник\n");
			case 4: format(tempstring, sizeof(tempstring), "Должность:\t\t\t\tНач.Охранны\n");
			case 5: format(tempstring, sizeof(tempstring), "Должность:\t\t\t\tЗам.Мэра\n");
			case 6: format(tempstring, sizeof(tempstring), "Должность:\t\t\t\tМэр\n");
			}
		}
	case 11:
		{
			switch(pData[targetid][pRank])
			{
			case 1: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tСтажер\n");
			case 2: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tКонсультант\n");
			case 3: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tЭкзаменатор\n");
			case 4: format(tempstring,sizeof(tempstring),"Должность:\t\tМл.Инструктор\n");
			case 5: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tИнструктор\n");
			case 6: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tКоординатор\n");
			case 7: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tМл.Менеджер\n");
			case 8: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tСт.Менеджер\n");
			case 9: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tДиректор\n");
			case 10: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tУправляющий\n");
			}
		}
	case 2:
		{
			switch(pData[targetid][pRank])
			{
			case 1: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tСтажер\n");
			case 2: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tДежурный\n");
			case 3: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tМладший Агент\n");
			case 4: format(tempstring,sizeof(tempstring),"Должность:\t\tАгент отдела ГНК\n");
			case 5: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tАгент отдела CID\n");
			case 6: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tГлава отдела ГНК\n");
			case 7: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tГлава отдела CID\n");
			case 8: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tИнспектор FBI\n");
			case 9: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tЗам. Директора\n");
			case 10: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tДиректор\n");
			}
		}
	case 15:
		{
			switch(pData[targetid][pRank])
			{
			case 1: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tПлейя\n");
			case 2: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tХастла\n");
			case 3: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tКилла\n");
			case 4: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tЮонг Г\n");
			case 5: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tГангста\n");
			case 6: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tО.Г\n");
			case 7: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tМобста\n");
			case 8: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tДе Кинг\n");
			case 9: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tЛегенд\n");
			case 10: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tМэд Дог\n");
			}
		}
	case 12:
		{
			switch(pData[targetid][pRank])
			{
			case 1: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tБлайд\n");
			case 2: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tБастер\n");
			case 3: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tКрекер\n");
			case 4: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tГун бро\n");
			case 5: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tАп бро\n");
			case 6: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tГангстер\n");
			case 7: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tФедерал блок\n");
			case 8: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tФолкс\n");
			case 9: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tРайч нигга\n");
			case 10: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tБиг Вилли\n");
			}
		}
	case 17:
		{
			switch(pData[targetid][pRank])
			{
			case 1: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tГринго\n");
			case 2: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tНовато\n");
			case 3: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tЕстимадо\n");
			case 4: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tАмиго\n");
			case 5: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tЕрмано\n");
			case 6: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tСолдато\n");
			case 7: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tБандито\n");
			case 8: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tАджунто\n");
			case 9: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tЕмпинадо\n");
			case 10: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tПадре\n");
			}
		}
	case 13:
		{
			switch(pData[targetid][pRank])
			{
			case 1: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tНовато\n");
			case 2: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tОрдинарио\n");
			case 3: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tЛокал\n");
			case 4: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tВерификадо\n");
			case 5: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tБандито\n");
			case 6: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tV.E.G.\n");
			case 7: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tАссесино\n");
			case 8: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tЛидер V.E.G.\n");
			case 9: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tПадрино\n");
			case 10: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tПадре\n");
			}
		}
	case 18:
		{
			switch(pData[targetid][pRank])
			{
			case 1: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tПерро\n");
			case 2: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tТирадор\n");
			case 3: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tГеттор\n");
			case 4: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tЛас Геррас\n");
			case 5: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tМирандо\n");
			case 6: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tСабио\n");
			case 7: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tИнвасор\n");
			case 8: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tТесорреро\n");
			case 9: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tНестро\n");
			case 10: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tПадре\n");
			}
		}
	case 5:
		{
			switch(pData[targetid][pRank])
			{
			case 1: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tНовичок\n");
			case 2: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tАссосиато\n");
			case 3: format(tempstring,sizeof(tempstring),"Должность:\t\tСомбаттенте\n");
			case 4: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tСолдато\n");
			case 5: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tБоец\n");
			case 6: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tСото-капо\n");
			case 7: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tКапо\n");
			case 8: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tМладший Босс\n");
			case 9: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tКоньсельери\n");
			case 10: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tДон\n");
			}
		}
	case 4,22,33:
		{
			switch(pData[targetid][pRank])
			{
			case 1: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tИнтерн\n");
			case 2: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tСанитар\n");
			case 3:
				{
					if(pData[targetid][pSex] == 0) format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tМед.Брат\n");
					else format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tМед.Сестра\n");
				}
			case 4: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tВрач\n");
			case 5: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tПедиатр\n");
			case 6: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tХирург\n");
			case 7: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tТерапевт\n");
			case 8: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tПсихолог\n");
			case 9: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tЗам.Глав.Врача\n");
			case 10: format(tempstring,sizeof(tempstring),"Должность:\t\t\t\tГлав.Врач\n");
			}
		}
	}
	strcat(httpquery,tempstring);

	switch(pData[targetid][pJob])
	{
	case 0: format(tempstring,sizeof(tempstring),"Работа:\t\t\tБезработный\n");
	case 1: format(tempstring,sizeof(tempstring),"Работа:\t\t\tВодитель автобуса\n");
	case 2: format(tempstring,sizeof(tempstring),"Работа:\t\t\tМеханик\n");
	case 3: format(tempstring,sizeof(tempstring),"Работа:\t\t\tПродавец хотдогов\n");
	case 4: format(tempstring,sizeof(tempstring),"Работа:\t\t\tТаксист\n");
	case 5: format(tempstring,sizeof(tempstring),"Работа:\t\t\tРазвозчик продуктов\n");
	case 6: format(tempstring,sizeof(tempstring),"Работа:\t\t\tТренер\n");
	case 8: format(tempstring,sizeof(tempstring),"Работа:\t\t\tИнкассатор\n");
	case 9: format(tempstring,sizeof(tempstring),"Работа:\t\t\tПрораб\n");
	case 99: format(tempstring,sizeof(tempstring),"Работа:\t\t\tДальнобойщик\n");
	}
	strcat(httpquery,tempstring);

	switch(pData[targetid][pDonateRank])
	{
	case 0:
		{
			switch(pData[targetid][pLevel])
			{
			case 1: format(tempstring,sizeof(tempstring),"Статус:\t\t\t\tНовичок\n");
			case 2,3: format(tempstring,sizeof(tempstring),"Статус:\t\t\t\tОсвоившийся\n");
			case 4,5: format(tempstring,sizeof(tempstring),"Статус:\t\t\t\tОсвоившийся\n");
			case 10: format(tempstring,sizeof(tempstring),"Статус:\t\t\t\tПостоянный игрок\n");
			case 6,7,8,9: format(tempstring,sizeof(tempstring),"Статус:\t\t\t\tОсвоившийся\n");
			default: format(tempstring,sizeof(tempstring),"Статус:\t\t\t\tДед\n");
			}
		}
	case 1: format(tempstring,sizeof(tempstring),"Статус:\t\t\t\tBRONZE VIP\n");
	case 2: format(tempstring,sizeof(tempstring),"Статус:\t\t\t\tSILVER VIP\n");
	case 3: format(tempstring,sizeof(tempstring),"Статус:\t\t\t\tGOLD VIP\n");
	}
	strcat(httpquery,tempstring);

	format(tempstring,sizeof(tempstring),"Жена/Муж:\t\t\t%s\n",pData[targetid][pMarriedTo]);
	strcat(httpquery,tempstring);

	if(pData[targetid][pSex]==0)format(tempstring,sizeof(tempstring),"Пол:\t\t\t\tМужчина\n");
	else format(tempstring,sizeof(tempstring),"Пол:\t\t\t\tЖенщина\n");
	strcat(httpquery,tempstring);


	if(pData[playerid][pAdmin] >= 2)
	{
		format(tempstring,sizeof(tempstring),"\n\nБанк:\t\t\t\t%d\n",pData[targetid][pBank]);
		strcat(httpquery,tempstring);
		format(tempstring,sizeof(tempstring),"Дом:\t\t\t\t%d\n",pData[targetid][pPHouseKey]);
		strcat(httpquery,tempstring);
		format(tempstring,sizeof(tempstring),"Бизнес:\t\t\t%d\n",pData[targetid][pPBizzKey]);
		strcat(httpquery,tempstring);
		format(tempstring,sizeof(tempstring),"Квартира:\t\t\t%d\n",pData[targetid][pKvartiraKey]);
		strcat(httpquery,tempstring);
		format(tempstring,sizeof(tempstring),"Скин:\t\t\t\t%d\n",pData[targetid][pChar]);
		strcat(httpquery,tempstring);
		format(tempstring,sizeof(tempstring),"СкинФр:\t\t\t%d\n",pData[targetid][pModel]);
		strcat(httpquery,tempstring);

	}
	ShowPlayerDialog(playerid,9999,0,"Статистика персонажа",httpquery,"Готово","");
	return true;
}
stock ShowStats(playerid,targetid)
{
	if(!IsPlayerConnected(playerid) || !IsPlayerConnected(targetid)) return true;
	new jtext[20], drank[20];
	switch(pData[targetid][pJob])
	{
	case 1: jtext = "Водитель автобуса"; case 2: jtext = "Механик"; case 3: jtext = "Продавец хотдогов";
	case 4: jtext = "Таксист"; case 5: jtext = "Развозчик продуктов"; case 6: jtext = "Тренер";
	case 8: jtext = "Инкассатор"; case 9: jtext = "Прораб"; case 99: jtext = "Дальнобойщик";
	default: jtext = "Безработный";
	}
	switch(pData[targetid][pLevel])
	{
	case 1: drank = "Новичок";
	case 2..9: drank = "Освоившийся";
	case 10..15: drank = "Постоянный игрок";
	default: drank = "Дед";
	}
	switch(pData[targetid][pDonateRank])
	{
	case 1: drank = "Start VIP";
	case 2: drank = "Gold VIP";
	case 3: drank = "Ultima VIP";
	}
	new str[128];
	string = "";
	format(str,128,"Имя:\t\t\t\t%s",pData[targetid][pName]), strcat(string,str);
	format(str,128,"\n\nУровень:\t\t\t%i",pData[targetid][pLevel]), strcat(string,str);
	format(str,128,"\nExp:\t\t\t\t%.0f/%i",pData[targetid][pExp], (pData[targetid][pLevel]+1)*4), strcat(string,str);
	format(str,128,"\nДеньги:\t\t\t%i",pData[targetid][pCash]), strcat(string,str);
	format(str,128,"\nТелефон:\t\t\t%i",pData[targetid][pPnumber]), strcat(string,str);
	if(pData[targetid][punWarns] > Now())
	{
		format(str,128,"\nВарнов:\t\t\t%i",pData[targetid][pWarns]), strcat(string,str);
		new year, month, day,hour,minute,second;
		timestamp_to_date(pData[targetid][punWarns],year,month,day,hour,minute,second);
		format(str,128,"\nВарн до:\t\t\t%02i/%02i/%02i %02i:%02i",day,month,year,hour,minute), strcat(string,str);
	}
	else strcat(string,"\nВарнов:\t\t\t0");
	format(str,128,"\nЗаконопослушность:\t\t%i",pData[targetid][pZakonp]), strcat(string,str);
	format(str,128,"\nПреступлений:\t\t%i",pData[targetid][pCrimes]), strcat(string,str);
	format(str,128,"\nАрестов:\t\t\t%i",pData[targetid][pArrested]), strcat(string,str);
	format(str,128,"\nУровень розыска:\t\t%i",pData[targetid][pWantedLevel]), strcat(string,str);
	format(str,128,"\nДата регистрации:\t\t%s",pData[targetid][pDataReg]), strcat(string,str);
	format(str,128,"\nЗависимость:\t\t\t%i",pData[targetid][pAddiction]), strcat(string,str);
	format(str,128,"\nНаркотики:\t\t\t%i",pData[targetid][pDrugs]), strcat(string,str);
	format(str,128,"\nМатериалы:\t\t\t%i",pData[targetid][pMats]), strcat(string,str);
	format(str,128,"\nРыб поймано:\t\t\t%.1f кг",pData[targetid][pFishes]), strcat(string,str);
	format(str,128,"\nОрганизация:\t\t\t%s",GetFraction(pData[targetid][pMember])), strcat(string,str);
	format(str,128,"\nРанг:\t\t\t\t%s",GetRank(targetid)), strcat(string,str);
	format(str,128,"\nРабота:\t\t\t%s",jtext), strcat(string,str);
	format(str,128,"\nСтатус:\t\t\t\t%s",drank), strcat(string,str);
	format(str,128,"\nЖена/Муж:\t\t\t%s",pData[targetid][pMarriedTo]), strcat(string,str);
	format(str,128,"\nПол:\t\t\t\t%s",(pData[targetid][pSex] == 0)?("Мужчина") : ("Женщина")), strcat(string,str);
	return ShowPlayerDialog(playerid,10004,DIALOG_STYLE_MSGBOX, "Статистика персонажа",string, "Готово", "");
}
stock CheckQuest(playerid)
{
	switch(pData[playerid][pQuestL])
	{
	case 1: // Выбранная сюжетная линия "Гость"
		{
			if(pData[playerid][pQuestL] == 1 && pData[playerid][pQuest] == 1 && pData[playerid][pQuestP] >= 15) // Если перетащено 15 мешков
			{
				PlayerPlaySound(playerid, 4201, 0.0, 0.0, 0);
				ShowPlayerDialog(playerid,11230,DIALOG_STYLE_MSGBOX,"Задание","Это снова Джанк,вижу тебе нужны права.\nУ меня есть знакомые в Автошколе,они помогут тебе сдать совершенно бесплатно.\nЧтобы добраться до Автошколы,воспользуйся Автобусом или Такси.\n{DDCD70}Задача: Пройдите автосдачу на права(Не покупая права у инструктора!)\n{17B757}Награда: Бесплатная сдача на права"
				,"Готово","");
				GameTextForPlayer(playerid, "~g~+1000$", 2000, 1);
				pData[playerid][pCash] += 1000;
				pData[playerid][pQuest] = 2;
				pData[playerid][pQuestP] = 0;
				pData[playerid][pQuestPF] = 0;
				SCM(playerid,COLOR_WHITE," {108491}Задание выполнено");
			}
			else if(pData[playerid][pQuestL] == 1 && pData[playerid][pQuest] == 2) // Если сдал на права
			{
				GameTextForPlayer(playerid, "~r~-$0", 5000, 1);
				LessonStat[playerid] = 0;
				LessonCar[playerid] = 1;
				TakingLesson[playerid] = 1;
				SetPlayerRaceCheckpoint(playerid, 1, -2077.2729,-92.4760,34.1641,-2077.2729,-92.4760,35.1641, 6.0);
				return true;
			}
			else if(pData[playerid][pQuestL] == 1 && pData[playerid][pQuest] == 3 && pData[playerid][pQuestP] >= 30) // Если собрано 30 кустов
			{
				PlayerPlaySound(playerid, 4201, 0.0, 0.0, 0);
				ShowPlayerDialog(playerid,13374,DIALOG_STYLE_MSGBOX,"Задание","Теперь у тебя есть права и деньги. Пора бы приодеться\nВ каждом городе есть магазин одежды. Доедь до него и купи что-нибудь приличное.\nИ не забывай использовать gps\n{DDCD70}Задача: Купить любой скин\n{17B757}Награда: 1000 вирт"
				,"Готово","");
				GameTextForPlayer(playerid, "~g~+2000$", 2000, 1);
				pData[playerid][pCash] += 2000;
				pData[playerid][pQuest] = 4;
				pData[playerid][pQuestP] = 0;
				pData[playerid][pQuestPF] = 0;
				SCM(playerid,COLOR_WHITE," {108491}Задание выполнено");
			}
			else if(pData[playerid][pQuestL] == 1 && pData[playerid][pQuest] == 4) // Если куплен новый скин
			{
				PlayerPlaySound(playerid, 4201, 0.0, 0.0, 0);
				ShowPlayerDialog(playerid,13375,DIALOG_STYLE_MSGBOX,"Задание","Теперь ты можешь поехать в Мэрию и получить там паспорт\n{DDCD70}Задача: Войти в мэрию\n{17B757}Награда: 2 уровень,4000 вирт"
				,"Готово","");
				GameTextForPlayer(playerid, "~g~+1000$", 2000, 1);
				pData[playerid][pCash] += 1000;
				pData[playerid][pQuest] = 5;
				pData[playerid][pQuestP] = 0;
				pData[playerid][pQuestPF] = 0;
				SCM(playerid,COLOR_WHITE," {108491}Задание выполнено");
			}
			else if(pData[playerid][pQuestL] == 1 && pData[playerid][pQuest] == 5) // Если вошел в мэрию
			{
				PlayerPlaySound(playerid, 4201, 0.0, 0.0, 0);
				ShowPlayerDialog(playerid,13376,DIALOG_STYLE_MSGBOX,"Задание","Поздравляем\nСюжетная линия ''Гость'' пройдена!"
				,"Готово","");
				GameTextForPlayer(playerid, "~g~+4000$", 2000, 1);
				pData[playerid][pCash] += 4000;
				if(pData[playerid][pLevel] == 1)
				{
					SCM(playerid, COLOR_LIGHTGREEN, " Поздравляем! Ваш лвл повысился");
					pData[playerid][pLevel] = 2;
					pData[playerid][pExp] = 0;
				}
				pData[playerid][pQuestL] = 0;
				pData[playerid][pQuest] = 0;
				pData[playerid][pQuestF] = 0;
				pData[playerid][pQuestP] = 0;
				pData[playerid][pQuestPF] = 0;
				SCM(playerid,COLOR_WHITE," {108491}Задание выполнено");
				DollahScoreUpdate(playerid);
			}
		}
	}
	return true;
}
stock QuestStats(playerid,targetid)
{
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new gaatext[64];
		switch(pData[targetid][pQuestL])
		{
		case 0: gaatext ="Нет";
		case 1: gaatext ="Гость";
		case 2: gaatext ="Трудоголик";
		}
		new aatext[256];
		switch(pData[targetid][pQuestL])
		{
		case 0: aatext = "{E39C0E}[Завершенные линии]\n\t{FBB431}Гость\n\t{7F7E7B}Трудоголик\n\t{7F7E7B}Тестирование\n\t{7F7E7B}Тестирование\n\t{7F7E7B}Тестирование\n\t{7F7E7B}Тестирование\n\t{7F7E7B}Тестирование\n\t{7F7E7B}Тестирование\n\t{7F7E7B}Тестирование\n\t{7F7E7B}Тестирование";
		case 1: aatext = "{E39C0E}[Завершенные линии]\n\t{7F7E7B}Гость\n\t{7F7E7B}Трудоголик\n\t{7F7E7B}Тестирование\n\t{7F7E7B}Тестирование\n\t{7F7E7B}Тестирование\n\t{7F7E7B}Тестирование\n\t{7F7E7B}Тестирование\n\t{7F7E7B}Тестирование\n\t{7F7E7B}Тестирование\n\t{7F7E7B}Тестирование";
		}
		new Quest = pData[targetid][pQuest];
		new QuestP = pData[targetid][pQuestP];
		new QuestF = pData[targetid][pQuestF];
		new QuestPF = pData[targetid][pQuestPF];
		new coordsstring[1200];
		new msg[] = "{E09A18}===============================\n\t{FFFFFF}Имя: {FBB431}%s\n{E09A18}===============================\n\n{E39C0E}[Выполняется]\n\t{FFFFFF}С.линия: {FBB431}%s\n\t{FFFFFF}Квест: {FBB431}%d / %d\n\t{FFFFFF}Прогресс: {FBB431}%d / %d\n\n%s\n{E09A18}===============================";
		format(coordsstring, 1000, msg, Name(targetid),gaatext,Quest,QuestF,QuestP,QuestPF,aatext);
		ShowPlayerDialog(playerid,10005,DIALOG_STYLE_MSGBOX, "Статистика",coordsstring, "Готово", "");
	}
	return true;
}
stock NewShowStats(playerid,targetid)
{
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new atext[32], ttext[21];
		new jtext[20];
		new drank[8];
		switch(pData[targetid][pSex])
		{
		case 0: atext = "Мужчина";
		case 1: atext = "Женщина";
		}
		switch(pData[targetid][pMember])
		{
		case 1: ttext = "LSPD";
		case 2: ttext = "ФБР";
		case 3: ttext = "Армия СФ";
		case 5: ttext = "LCN";
		case 6: ttext = "Yakuza";
		case 7: ttext = "Мэрия";
		case 9: ttext = "SF News";
		case 10: ttext = "SFPD";
		case 11: ttext = "Автошкола";
		case 12: ttext = "Ballas Gang";
		case 13: ttext = "Vagos Gang";
		case 14: ttext = "Русская Мафия";
		case 15: ttext = "Grove Street";
		case 16: ttext = "LS News";
		case 17: ttext = "Aztecas Gang";
		case 18: ttext = "Rifa Gang";
		case 19: ttext = "Армия ЛВ";
		case 20: ttext = "LV News";
		case 21: ttext = "LVPD";
		case 24: ttext = "Mongols MC";
		case 26: ttext = "Warlocks MC";
		case 29: ttext = "Pagans MC";
		case 22: ttext = "Medic";
		default: ttext = "Нет";
		}
		switch(pData[targetid][pJob])
		{
		case 1: jtext = "Водитель автобуса";
		case 2: jtext = "Механик";
		case 3: jtext = "Продавец хотдогов";
		case 4: jtext = "Таксист";
		case 5: jtext = "Развозчик продуктов";
		case 6: jtext = "Тренер";
		case 8: jtext = "Инкассатор";
		case 9: jtext = "Прораб";
		case 99: jtext = "Дальнобойщик";
		default: jtext = "Безработный";
		}
		switch(pData[targetid][pDonateRank])
		{
		case 0: drank = "Нет";
		case 1: drank = "BRONZE";
		case 2: drank = "SILVER";
		case 3: drank = "GOLD";
		}
		new level = pData[targetid][pLevel];
		new Float:exp = pData[targetid][pExp];
		new nxtlevel = pData[targetid][pLevel]+1;
		new expamount = nxtlevel*levelexp;
		new pnumber = pData[targetid][pPnumber];
		new warns = pData[targetid][pWarns];
		new zakon = pData[targetid][pZakonp];
		new addiction = pData[targetid][pAddiction];
		new crimes = pData[targetid][pCrimes];
		new arrests = pData[targetid][pArrested];
		new coordsstring[1200];
		new msg[] = "[0] Имя:\t\t\t%s\n[1] Уровень:\t\t\t%i\n[2] Exp:\t\t\t\t%f/%i\n[3] VIP:\t\t\t\t%s\n[4] Пол:\t\t\t%s\n[5] Организация:\t\t%s\n[6] Ранг:\t\t\t%s\n[7] Работа:\t\t\t%s\n[8] Жена/Муж:\t\t\t%s\n[9] Телефон:\t\t\t%i\n[10] Дата регистрации:\t%s\n[11] Законопослушность:\t%i\n[12] Преступлений:\t\t%i\n[13] Арестов:\t\t\t%i\n[15] Зависимость:\t\t%i\n[16] Варнов:\t\t\t%i";
		format(coordsstring, 1000, msg, Name(targetid),level,exp,expamount,drank,atext,ttext,GetRank(targetid),jtext,pData[targetid][pMarriedTo],pnumber,pData[targetid][pDataReg],zakon,crimes,arrests,addiction,warns);
		ShowPlayerDialog(playerid,10004,DIALOG_STYLE_LIST, "Статистика персонажа",coordsstring, "Выбрать", "Назад");
	}
	return true;
}
publics: SetPlayerToTeamColor(playerid)
{
	if(!GetPVarInt(playerid, !#_pDetachColor))
	{
		switch(pData[playerid][pMember])
		{
			case 1: SetPlayerColor(playerid, 0x110CE7FF);
			case 2: SetPlayerColor(playerid, 0x313131AA);
			case 3: SetPlayerColor(playerid, 0x51964DFF);
			case 4: SetPlayerColor(playerid, 0x954F4FFF);
			case 5: SetPlayerColor(playerid, 0xDDA701FF);
			case 6: SetPlayerColor(playerid, COLOR_REDD);
			case 7: SetPlayerColor(playerid, 0x114D71FF);
			case 8: SetPlayerColor(playerid, 0xB313E7FF);
			case 9: SetPlayerColor(playerid, 0x56FB4EFF);
			case 10: SetPlayerColor(playerid, 0x110CE7FF);
			case 11: SetPlayerColor(playerid, 0x139BECFF);
			case 12: SetPlayerColor(playerid, 0xB313E7FF);
			case 13: SetPlayerColor(playerid, 0xFFDE24FF);
			case 14: SetPlayerColor(playerid, COLOR_GRAD1);
			case 15: SetPlayerColor(playerid, 0x009F00AA);
			case 16: SetPlayerColor(playerid, 0x758C9DFF);
			case 17: SetPlayerColor(playerid, TEAM_AZTECAS_COLOR);
			case 18: SetPlayerColor(playerid, 0x2A9170FF);
			case 19: SetPlayerColor(playerid, 0x51964DFF);
			case 20: SetPlayerColor(playerid, 0xE6284EFF);
			case 21: SetPlayerColor(playerid, 0x110CE7FF);
			case 22: SetPlayerColor(playerid, 0x954F4FFF);
			case 24: SetPlayerColor(playerid, 0xde682cFF);
			case 26: SetPlayerColor(playerid, 0x8c0010FF);
			case 29: SetPlayerColor(playerid, 0x3e3185ff);
			default: SetPlayerColor(playerid, TEAM_HIT_COLOR);
		}
	}
	else 
		SetPlayerColor(playerid, g_szColorsTable[GetPVarInt(playerid, !#_pDetachColor)-1]);
}
publics: GameModeExitFunc()
{
	SendRconCommand("gmx");
	GameModeExit();
}
public OnGameModeExit()
{
	mysql_close(DATABASE);
	return true;
}
stock LoadObject()
{
	CreateDynamicObject(19379,-1904.19,277.68,41.64,0.0000000,0.0000000,-90.0900000); //sf покраска

	//-------------- Триггеры -----------------
	triggers[0] = CreateDynamicSphere(-2029.5741,-90.7248,94.4108,1.5,1,3,-1);
	triggers[1] = CreateDynamicSphere(359.8704,184.7093,1008.3128,1.5,0,3,-1);
	triggers[2] = CreateDynamicSphere(1160.1086,-1769.9122,16.5938,1.0); // помощь на бомжатне

	CreateTrigger(-2029.5741,-90.7248,94.4108-1.6,0xDD4fc3f7,-1,3); // autoschool
	CreateTrigger(359.8704,184.7093,1006.6128, 0xFF4caf50); // mary Z position -1.77
	CreateTrigger(1160.4419,-1770.0039,16.5938-1.2,0xFF4fc3f7);  // помощь на бомжатне
	CreateDynamic3DTextLabel("Помощь по игре", 0x0097a780, 1160.4419,-1770.0039,16.5938, 15);

	pravila_pick = create_pickup(1239,1160.3424,-1771.7059,16.5938);
	CreateDynamic3DTextLabel("Правила сервера", 0xffd54f80, 1160.3424,-1771.7059,16.5938, 15);

	CreateDynamic3DTextLabel("Устройство на работу", 0x388e3c91, 2122.3296,-2274.5320,20.4894, 15); // табличка на грузчиках

	work_loader[0] = CreateDynamicSphere(2122.3296,-2274.5320,21.4894,1.5); // устройство на работу грузчика
	work_loader[1] = CreateDynamicSphere(2224.7681,-2276.9041,14.7647,2.0); // где брать мешок
	work_loader[2] = CreateDynamicSphere(2172.8481,-2255.4209,13.3043,2.0); // куда нести мешок
	CreateDynamicObject(2924, 2120.23169, -2274.45508, 20.87340, 0.00000, -1.00000, -44.00000); // двери на грузчиках
	//-------------- Триггеры -----------------
	CreateDynamicObject(19375, 487.86032, -1735.24438, 15.28290,   0.00000, 0.00000, -98.02002);
	CreateDynamicObject(19375, 1843.35425, -1854.93701, 10.37142,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19375, 1042.64954, -1025.81384, 30.47056,   0.00000, 0.00000, -90.23997);
	CreateDynamicObject(19375, 1026.93445, -1029.23767, 30.57440,   0.00000, 0.00000, 89.52000);
	CreateDynamicObject(19375, 2386.28101, 1043.47778, 12.00083,   0.00000, 0.00000, -90.35997);
	CreateDynamicObject(19375, -1935.98901, 238.63142, 32.16383,   0.00000, 0.00000, -90.48000);
	CreateDynamicObject(19375, -2716.06567, 216.67769, 2.83182,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19375, 2071.53809, -1831.58606, 12.15108,   0.00000, 0.00000, 0.00000);

}

stock CreateSpeedForPlayer(playerid) 
{

	FuellString[playerid] = CreatePlayerTextDraw(playerid, 614.000000, 421.000000, "150L");
	PlayerTextDrawFont(playerid, FuellString[playerid], 1);
	PlayerTextDrawLetterSize(playerid, FuellString[playerid], 0.208333, 0.999998);
	PlayerTextDrawTextSize(playerid, FuellString[playerid], 637.000000, 482.500000);
	PlayerTextDrawSetOutline(playerid, FuellString[playerid], 1);
	PlayerTextDrawSetShadow(playerid, FuellString[playerid], 0);
	PlayerTextDrawAlignment(playerid, FuellString[playerid], 2);
	PlayerTextDrawColor(playerid, FuellString[playerid], -1094795521);
	PlayerTextDrawBackgroundColor(playerid, FuellString[playerid], 57);
	PlayerTextDrawBoxColor(playerid, FuellString[playerid], 50);
	PlayerTextDrawUseBox(playerid, FuellString[playerid], 0);
	PlayerTextDrawSetProportional(playerid, FuellString[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, FuellString[playerid], 0);

	DoorIcon[playerid] = CreatePlayerTextDraw(playerid, 565.000000, 421.000000, "HUD:radar_maddog");
	PlayerTextDrawFont(playerid, DoorIcon[playerid], 4);
	PlayerTextDrawLetterSize(playerid, DoorIcon[playerid], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, DoorIcon[playerid], 7.000000, 7.000000);
	PlayerTextDrawSetOutline(playerid, DoorIcon[playerid], 1);
	PlayerTextDrawSetShadow(playerid, DoorIcon[playerid], 0);
	PlayerTextDrawAlignment(playerid, DoorIcon[playerid], 1);
	PlayerTextDrawColor(playerid, DoorIcon[playerid], 100);
	PlayerTextDrawBackgroundColor(playerid, DoorIcon[playerid], 16711935);
	PlayerTextDrawBoxColor(playerid, DoorIcon[playerid], 50);
	PlayerTextDrawUseBox(playerid, DoorIcon[playerid], 1);
	PlayerTextDrawSetProportional(playerid, DoorIcon[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, DoorIcon[playerid], 0);

	KmSpeed[playerid] = CreatePlayerTextDraw(playerid, 515.000000, 389.000000, "0 km/h");
	PlayerTextDrawFont(playerid, KmSpeed[playerid], 2);
	PlayerTextDrawLetterSize(playerid, KmSpeed[playerid], 0.291664, 1.299999);
	PlayerTextDrawTextSize(playerid, KmSpeed[playerid], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, KmSpeed[playerid], 0);
	PlayerTextDrawSetShadow(playerid, KmSpeed[playerid], 0);
	PlayerTextDrawAlignment(playerid, KmSpeed[playerid], 2);
	PlayerTextDrawColor(playerid, KmSpeed[playerid], -741092353);
	PlayerTextDrawBackgroundColor(playerid, KmSpeed[playerid], 255);
	PlayerTextDrawBoxColor(playerid, KmSpeed[playerid], 50);
	PlayerTextDrawUseBox(playerid, KmSpeed[playerid], 0);
	PlayerTextDrawSetProportional(playerid, KmSpeed[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, KmSpeed[playerid], 0);

	LightIcon[playerid] = CreatePlayerTextDraw(playerid, 531.000000, 421.000000, "HUD:radar_light");
	PlayerTextDrawFont(playerid, LightIcon[playerid], 4);
	PlayerTextDrawLetterSize(playerid, LightIcon[playerid], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, LightIcon[playerid], 9.000000, 10.000000);
	PlayerTextDrawSetOutline(playerid, LightIcon[playerid], 1);
	PlayerTextDrawSetShadow(playerid, LightIcon[playerid], 0);
	PlayerTextDrawAlignment(playerid, LightIcon[playerid], 1);
	PlayerTextDrawColor(playerid, LightIcon[playerid], 100);
	PlayerTextDrawBackgroundColor(playerid, LightIcon[playerid], 255);
	PlayerTextDrawBoxColor(playerid, LightIcon[playerid], 1296911666);
	PlayerTextDrawUseBox(playerid, LightIcon[playerid], 1);
	PlayerTextDrawSetProportional(playerid, LightIcon[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, LightIcon[playerid], 0);

	RemenIcon[playerid] = CreatePlayerTextDraw(playerid, 541.000000, 422.000000, "HUD:radar_gangn");
	PlayerTextDrawFont(playerid, RemenIcon[playerid], 4);
	PlayerTextDrawLetterSize(playerid, RemenIcon[playerid], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, RemenIcon[playerid], 8.500000, 7.000000);
	PlayerTextDrawSetOutline(playerid, RemenIcon[playerid], 1);
	PlayerTextDrawSetShadow(playerid, RemenIcon[playerid], 0);
	PlayerTextDrawAlignment(playerid, RemenIcon[playerid], 1);
	PlayerTextDrawColor(playerid, RemenIcon[playerid], 100);
	PlayerTextDrawBackgroundColor(playerid, RemenIcon[playerid], 255);
	PlayerTextDrawBoxColor(playerid, RemenIcon[playerid], 50);
	PlayerTextDrawUseBox(playerid, RemenIcon[playerid], 1);
	PlayerTextDrawSetProportional(playerid, RemenIcon[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, RemenIcon[playerid], 0);

	RepairIcon[playerid] = CreatePlayerTextDraw(playerid, 553.000000, 421.000000, "HUD:radar_modgarage");
	PlayerTextDrawFont(playerid, RepairIcon[playerid], 4);
	PlayerTextDrawLetterSize(playerid, RepairIcon[playerid], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, RepairIcon[playerid], 7.500000, 8.000000);
	PlayerTextDrawSetOutline(playerid, RepairIcon[playerid], 1);
	PlayerTextDrawSetShadow(playerid, RepairIcon[playerid], 0);
	PlayerTextDrawAlignment(playerid, RepairIcon[playerid], 1);
	PlayerTextDrawColor(playerid, RepairIcon[playerid], 100);
	PlayerTextDrawBackgroundColor(playerid, RepairIcon[playerid], 16711935);
	PlayerTextDrawBoxColor(playerid, RepairIcon[playerid], 50);
	PlayerTextDrawUseBox(playerid, RepairIcon[playerid], 1);
	PlayerTextDrawSetProportional(playerid, RepairIcon[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, RepairIcon[playerid], 0);

	SpeedRadio[playerid] = CreatePlayerTextDraw(playerid, 538.000000, 406.000000, "Radio: 181 Beat");
	PlayerTextDrawFont(playerid, SpeedRadio[playerid], 2);
	PlayerTextDrawLetterSize(playerid, SpeedRadio[playerid], 0.137492, 0.849995);
	PlayerTextDrawTextSize(playerid, SpeedRadio[playerid], 1076.000000, 1108.000000);
	PlayerTextDrawSetOutline(playerid, SpeedRadio[playerid], 1);
	PlayerTextDrawSetShadow(playerid, SpeedRadio[playerid], 0);
	PlayerTextDrawAlignment(playerid, SpeedRadio[playerid], 1);
	PlayerTextDrawColor(playerid, SpeedRadio[playerid], -1094795521);
	PlayerTextDrawBackgroundColor(playerid, SpeedRadio[playerid], 41);
	PlayerTextDrawBoxColor(playerid, SpeedRadio[playerid], 50);
	PlayerTextDrawUseBox(playerid, SpeedRadio[playerid], 0);
	PlayerTextDrawSetProportional(playerid, SpeedRadio[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, SpeedRadio[playerid], 0);

}

stock UpdatePlayerHunger(playerid, hunger)
{
    pData[playerid][pSatiety] += hunger;
    if(pData[playerid][pSatiety] > 100) pData[playerid][pSatiety] = 100;
    if(pData[playerid][pSatiety] < 0) pData[playerid][pSatiety] = 0;

	PlayerTextDrawTextSize(playerid,gHungerText3[playerid], 549.2 + pData[playerid][pSatiety]*56.0/100, 0.000000);
	PlayerTextDrawShow(playerid,gHungerText3[playerid]);

	new HungerStr[4];
	format(HungerStr, sizeof(HungerStr), "%d", pData[playerid][pSatiety]);
	PlayerTextDrawSetString(playerid,gHungerText4[playerid],HungerStr);
}

stock CreateSpeedTextDraw() // создание спидометра
{
    speedBOX = TextDrawCreate(632.000000, 374.000000, "_");
	TextDrawFont(speedBOX, 1);
	TextDrawLetterSize(speedBOX, 0.641665, 6.550002);
	TextDrawTextSize(speedBOX, 486.500000, 22.000000);
	TextDrawSetOutline(speedBOX, 1);
	TextDrawSetShadow(speedBOX, 0);
	TextDrawAlignment(speedBOX, 1);
	TextDrawColor(speedBOX, 50);
	TextDrawBackgroundColor(speedBOX, 255);
	TextDrawBoxColor(speedBOX, 70);
	TextDrawUseBox(speedBOX, 1);
	TextDrawSetProportional(speedBOX, 0);
	TextDrawSetSelectable(speedBOX, 0);

	ogrankrug = TextDrawCreate(483.000000, 366.000000, "LD_BEAT:chit");
	TextDrawFont(ogrankrug, 4);
	TextDrawLetterSize(ogrankrug, 0.600000, 2.000000);
	TextDrawTextSize(ogrankrug, 61.500000, 76.500000);
	TextDrawSetOutline(ogrankrug, 2);
	TextDrawSetShadow(ogrankrug, 0);
	TextDrawAlignment(ogrankrug, 1);
	TextDrawColor(ogrankrug, -1962934017);
	TextDrawBackgroundColor(ogrankrug, 255);
	TextDrawBoxColor(ogrankrug, 50);
	TextDrawUseBox(ogrankrug, 1);
	TextDrawSetProportional(ogrankrug, 1);
	TextDrawSetSelectable(ogrankrug, 0);

	ogrankrugBlack = TextDrawCreate(483.000000, 367.000000, "LD_BEAT:chit");
	TextDrawFont(ogrankrugBlack, 4);
	TextDrawLetterSize(ogrankrugBlack, 0.600000, 2.000000);
	TextDrawTextSize(ogrankrugBlack, 61.500000, 74.500000);
	TextDrawSetOutline(ogrankrugBlack, 2);
	TextDrawSetShadow(ogrankrugBlack, 0);
	TextDrawAlignment(ogrankrugBlack, 1);
	TextDrawColor(ogrankrugBlack, 168430335);
	TextDrawBackgroundColor(ogrankrugBlack, 255);
	TextDrawBoxColor(ogrankrugBlack, 50);
	TextDrawUseBox(ogrankrugBlack, 0);
	TextDrawSetProportional(ogrankrugBlack, 1);
	TextDrawSetSelectable(ogrankrugBlack, 0);

	temp_string = TextDrawCreate(617.000000, 377.000000, "+25");
	TextDrawFont(temp_string, 1);
	TextDrawLetterSize(temp_string, 0.145833, 1.000000);
	TextDrawTextSize(temp_string, 400.000000, 17.000000);
	TextDrawSetOutline(temp_string, 1);
	TextDrawSetShadow(temp_string, 0);
	TextDrawAlignment(temp_string, 3);
	TextDrawColor(temp_string, -1094795521);
	TextDrawBackgroundColor(temp_string, 25);
	TextDrawBoxColor(temp_string, 50);
	TextDrawUseBox(temp_string, 0);
	TextDrawSetProportional(temp_string, 1);
	TextDrawSetSelectable(temp_string, 0);

	temp_icon = TextDrawCreate(619.000000, 379.000000, "°");
	TextDrawFont(temp_icon, 0);
	TextDrawLetterSize(temp_icon, 0.087499, 0.449999);
	TextDrawTextSize(temp_icon, 400.000000, 17.000000);
	TextDrawSetOutline(temp_icon, 1);
	TextDrawSetShadow(temp_icon, 0);
	TextDrawAlignment(temp_icon, 1);
	TextDrawColor(temp_icon, -1094795521);
	TextDrawBackgroundColor(temp_icon, 25);
	TextDrawBoxColor(temp_icon, 50);
	TextDrawUseBox(temp_icon, 0);
	TextDrawSetProportional(temp_icon, 1);
	TextDrawSetSelectable(temp_icon, 0);

	temp_icon2 = TextDrawCreate(622.000000, 377.000000, "C");
	TextDrawFont(temp_icon2, 1);
	TextDrawLetterSize(temp_icon2, 0.233333, 1.149999);
	TextDrawTextSize(temp_icon2, 400.000000, 17.000000);
	TextDrawSetOutline(temp_icon2, 1);
	TextDrawSetShadow(temp_icon2, 0);
	TextDrawAlignment(temp_icon2, 1);
	TextDrawColor(temp_icon2, -1094795521);
	TextDrawBackgroundColor(temp_icon2, 25);
	TextDrawBoxColor(temp_icon2, 50);
	TextDrawUseBox(temp_icon2, 0);
	TextDrawSetProportional(temp_icon2, 1);
	TextDrawSetSelectable(temp_icon2, 0);

	SpeedTime = TextDrawCreate(568.000000, 379.000000, "21 febryary, 2019 ~n~15:59");
	TextDrawFont(SpeedTime, 1);
	TextDrawLetterSize(SpeedTime, 0.183330, 0.899995);
	TextDrawTextSize(SpeedTime, 525.000000, 198.500000);
	TextDrawSetOutline(SpeedTime, 1);
	TextDrawSetShadow(SpeedTime, 0);
	TextDrawAlignment(SpeedTime, 2);
	TextDrawColor(SpeedTime, -1094795521);
	TextDrawBackgroundColor(SpeedTime, 50);
	TextDrawBoxColor(SpeedTime, 50);
	TextDrawUseBox(SpeedTime, 0);
	TextDrawSetProportional(SpeedTime, 1);
	TextDrawSetSelectable(SpeedTime, 0);
}
public OnPlayerEnterDynamicCP(playerid, checkpointid)
{
	return 1;
}
stock ServerTime()
{
    getdate(ServerYear, ServerMonth, ServerDay);
    ServerNameMonth = NameMonth(ServerMonth);
}
stock CreateHungerTextDraw()
{
    gHungerText1 = TextDrawCreate(577.000000, 58.000000, "_");
	TextDrawFont(gHungerText1, 1);
	TextDrawLetterSize(gHungerText1, 0.533333, 0.449997);
	TextDrawTextSize(gHungerText1, 282.500000, 58.000000);
	TextDrawSetOutline(gHungerText1, 1);
	TextDrawSetShadow(gHungerText1, 0);
	TextDrawAlignment(gHungerText1, 2);
	TextDrawColor(gHungerText1, -1);
	TextDrawBackgroundColor(gHungerText1, 255);
	TextDrawBoxColor(gHungerText1, 255);
	TextDrawUseBox(gHungerText1, 1);
	TextDrawSetProportional(gHungerText1, 1);
	TextDrawSetSelectable(gHungerText1, 0);

	gHungerText2 = TextDrawCreate(577.000000, 60.000000, "_");
	TextDrawFont(gHungerText2, 1);
	TextDrawLetterSize(gHungerText2, 0.587499, 0.049996);
	TextDrawTextSize(gHungerText2, 184.000000, 55.500000);
	TextDrawSetOutline(gHungerText2, 1);
	TextDrawSetShadow(gHungerText2, 0);
	TextDrawAlignment(gHungerText2, 2);
	TextDrawColor(gHungerText2, 16777215);
	TextDrawBackgroundColor(gHungerText2, 255);
	TextDrawBoxColor(gHungerText2, 0x689f38FF);
	TextDrawUseBox(gHungerText2, 1);
	TextDrawSetProportional(gHungerText2, 1);
	TextDrawSetSelectable(gHungerText2, 0);
}
publics: kvartiri_load()
{
	new r;
	cache_get_row_count(r);
	if(!r) return printf("[Загрузка ...] Данные из kvartiri не получены!");

	for(new x = 0; x < r; x++)
	{
		cache_get_value_name_int 	(x, "mysql_id", 	kvart_info[x][mysql_id]);


		cache_get_value_name_int 	(x, "k_number", 	kvart_info[x][k_number]);
		cache_get_value_name_int 	(x, "k_padik", 		kvart_info[x][k_padik]);
		cache_get_value_name_int 	(x, "k_floor", 		kvart_info[x][k_floor]);
		cache_get_value_name_int 	(x, "k_int", 		kvart_info[x][k_int]);
		cache_get_value_name 		(x, "k_owner", 		kvart_info[x][k_owner]);
		cache_get_value_name_bool 	(x, "k_lock", 		kvart_info[x][k_lock]);
		cache_get_value_name_int 	(x, "k_heal", 		kvart_info[x][k_heal]);
		cache_get_value_name_int 	(x, "k_price", 		kvart_info[x][k_price]);

		for(new gg = 0; gg< total_podeezd; gg++)
		{
			if(podeezd_info[gg][mysql_id] == kvart_info[x][k_padik])
			{
				kvart_info[x][k_padik] = gg;
				break;
			}
		}

		new padik_int = podeezd_info[kvart_info[x][k_padik]][p_hint];
		new k = kvart_info[x][k_number];
		new str_kvart[250];
		format(str_kvart, sizeof str_kvart,"{0076FC}Комната #%i\nПродается: %i вирт\nЧтобы войти, нажмите клавишу 'ENTER'",total_kvart,100);
		kvart_info[x][dtext] = CreateDynamic3DTextLabel(str_kvart,0x0076FCFF,kvar_pos[padik_int][k][0],kvar_pos[padik_int][k][1],kvar_pos[padik_int][k][2]+1,3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,podeezd_info[kvart_info[x][k_padik]][p_word]+kvart_info[x][k_floor]);
		kvart_info[x][k_area] = CreateDynamicSphere(kvar_pos[padik_int][k][0],kvar_pos[padik_int][k][1],kvar_pos[padik_int][k][2], 1.5, podeezd_info[kvart_info[x][k_padik]][p_word]+kvart_info[x][k_floor]);

	 	Streamer_SetIntData(STREAMER_TYPE_AREA, kvart_info[x][k_area], E_STREAMER_EXTRA_ID, x); // кастомные данные привязанные к сфере (ид квартиры)
		total_kvart ++ ;

	}

	printf("[Загрузка ...] Данные из kvartiri получены! (%i шт.)",total_kvart);
	return 1;
}
publics: podeezd_load()
{
	new r;
	cache_get_row_count(r);
	if(!r) return printf("[Загрузка ...] Данные из podeezd не получены!");

	for(new x = 0; x < r; x++)
	{
		cache_get_value_name_int 	(x, "mysql_id", 	podeezd_info[x][mysql_id]);
		cache_get_value_name_float 	(x, "hEntrancex", 	podeezd_info[x][hEntrancex]);
		cache_get_value_name_float 	(x, "hEntrancey", 	podeezd_info[x][hEntrancey]);
		cache_get_value_name_float 	(x, "hEntrancez", 	podeezd_info[x][hEntrancez]);
		
		cache_get_value_name_float 	(x, "hCarx", 		podeezd_info[x][hCarx]);
		cache_get_value_name_float 	(x, "hCary", 		podeezd_info[x][hCary]);
		cache_get_value_name_float 	(x, "hCarz", 		podeezd_info[x][hCarz]);
		cache_get_value_name_float 	(x, "hCarc", 		podeezd_info[x][hCarc]);

		cache_get_value_name_int 	(x, "floors", 		podeezd_info[x][p_floors]);
		cache_get_value_name_int 	(x, "hInt", 		podeezd_info[x][p_hint]);
		cache_get_value_name_int 	(x, "word", 		podeezd_info[x][p_word]);
			
		new padik_str[123];
		format(padik_str, sizeof padik_str,"Многоквартирный дом\nНомер подъезда: %i",total_podeezd);
		CreateDynamic3DTextLabel(padik_str,0x0076FCFF,podeezd_info[x][hEntrancex], podeezd_info[x][hEntrancey], podeezd_info[x][hEntrancez]+1,5.0);	
	 	
	 	podeezd_info[x][p_area] = CreateDynamicSphere(podeezd_info[x][hEntrancex], podeezd_info[x][hEntrancey], podeezd_info[x][hEntrancez], 2, 0,0);
	 	Streamer_SetIntData(STREAMER_TYPE_AREA, podeezd_info[x][p_area], E_STREAMER_EXTRA_ID, x); // кастомные данные привязанные к сфере (ид падика)
	 	
	 	CreateDynamicPickup(1318, 1, podeezd_info[x][hEntrancex], podeezd_info[x][hEntrancey], podeezd_info[x][hEntrancez]);

		total_podeezd++;

	}

	printf("[Загрузка ...] Данные из podeezd получены! (%i шт.)",total_podeezd);
	return 1;
}
publics: house_load()
{
	new r;
	cache_get_row_count(r);
	if(!r) return printf("[Загрузка ...] Данные из House не получены!");

	for(new i; i < house_int_count; i++)
	{
		gHintStoreArea[i] = CreateDynamicSphere(gHintStore[i][0], gHintStore[i][1], gHintStore[i][2], 2.0);
		gHintSafeArea [i] = CreateDynamicSphere(gHintSafe[i] [0], gHintSafe[i] [1], gHintSafe[i] [2], 2.0);
		gHintFreezArea[i] = CreateDynamicSphere(gHintFreez[i][0], gHintFreez[i][1], gHintFreez[i][2], 2.0);
		CreateDynamic3DTextLabel("Чтобы выйти, нажмите клавишу '~k~~VEHICLE_ENTER_EXIT~'\nКупить/продать, нажмите клавишу 'ALT'",0x0076FCFF,interior_info[i][int_x],interior_info[i][int_y],interior_info[i][int_z]+1,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1);
	}
	for(new x = 0; x < r; x++)
	{
		cache_get_value_name_int 	(x, "hID", 			HouseInfo[x][hID]);
		cache_get_value_name_float 	(x, "hEntrancex", 	HouseInfo[x][hEntrancex]);
		cache_get_value_name_float 	(x, "hEntrancey", 	HouseInfo[x][hEntrancey]);
		cache_get_value_name_float 	(x, "hEntrancez", 	HouseInfo[x][hEntrancez]);
		
		cache_get_value_name_float 	(x, "hCarx", 		HouseInfo[x][hCarx]);
		cache_get_value_name_float 	(x, "hCary", 		HouseInfo[x][hCary]);
		cache_get_value_name_float 	(x, "hCarz", 		HouseInfo[x][hCarz]);
		cache_get_value_name_float 	(x, "hCarc", 		HouseInfo[x][hCarc]);
		
		cache_get_value_name 		(x, "hOwner", 		HouseInfo[x][hOwner]);

		cache_get_value_name_int 	(x, "hValue", 		HouseInfo[x][hValue]);
		cache_get_value_name_int 	(x, "hHel", 		HouseInfo[x][hHel]);
		cache_get_value_name_int 	(x, "hInt", 		HouseInfo[x][hInt]);
		cache_get_value_name_bool 	(x, "hLock", 		HouseInfo[x][hLock]);
		cache_get_value_name_int 	(x, "hKlass", 		HouseInfo[x][hKlass]);
		cache_get_value_name_int 	(x, "hTakings", 	HouseInfo[x][hTakings]);
		cache_get_value_name_int 	(x, "h_improve", 	HouseInfo[x][h_improve]);

		
		cache_get_value_name 		(x, "hSafes", 		HouseInfo[x][hSafes]);

				
		sscanf(HouseInfo[x][hSafes], "p<,>a<i>[11]",HouseInfo[x][hSafe]);

		if(!strcmp(HouseInfo[x][hOwner],"None",true))// нет хозяина
		{
			HouseInfo[x][hPickup] = CreateDynamicPickup(1273, 1, HouseInfo[x][hEntrancex], HouseInfo[x][hEntrancey], HouseInfo[x][hEntrancez]);
			HouseInfo[x][hMIcon] = CreateDynamicMapIcon(HouseInfo[x][hEntrancex], HouseInfo[x][hEntrancey], HouseInfo[x][hEntrancez], 31, COLOR_WHITE, 0, -1, -1,150);
		}
		else
		{
			HouseInfo[x][hPickup] = CreateDynamicPickup(1272, 1, HouseInfo[x][hEntrancex], HouseInfo[x][hEntrancey], HouseInfo[x][hEntrancez]);
			HouseInfo[x][hMIcon] = CreateDynamicMapIcon(HouseInfo[x][hEntrancex], HouseInfo[x][hEntrancey], HouseInfo[x][hEntrancez], 32, COLOR_WHITE, 0, -1, -1,150);
		}
	 	HouseInfo[x][h_area] = CreateDynamicSphere(HouseInfo[x][hEntrancex], HouseInfo[x][hEntrancey], HouseInfo[x][hEntrancez], 2, 0,0);
	 	Streamer_SetIntData(STREAMER_TYPE_AREA, HouseInfo[x][h_area], E_STREAMER_EXTRA_ID, x); // кастомные данные привязанные к сфере (ид дома)
	 	
		new int = HouseInfo[x][hInt];
		if(HouseInfo[x][h_improve] & h_improve_freez)
			CreateDynamicObject(2141,gHintFreez[int][0],gHintFreez[int][1],gHintFreez[int][2],0,0,gHintFreez[int][3],x+50);
		if(HouseInfo[x][h_improve] & h_improve_safe)
			CreateDynamicObject(2332,gHintSafe[int][0],gHintSafe[int][1],gHintSafe[int][2],0,0,gHintSafe[int][3],x+50); //Сейф
		if(HouseInfo[x][h_improve] & h_improve_store)
			CreateDynamicObject(2708,gHintStore[int][0],gHintStore[int][1],gHintStore[int][2],0,0,gHintStore[int][3],x+50);
		TotalHouse++;

	}

	printf("[Загрузка ...] Данные из House получены! (%i шт.)",TotalHouse);
	return 1;
}
stock create_pickup(p_modelid, Float:p_x, Float:p_y, Float:p_z, p_worldid = -1, p_interiorid = -1, p_playerid = -1)
{
	CreateDynamicPickup(p_modelid, 1, p_x,p_y,p_z,p_worldid,p_interiorid,p_playerid);
	return CreateDynamicSphere(p_x,p_y,p_z, 1.5, p_worldid,p_interiorid,p_playerid);
}
stock load_pickups()
{
	padik_exit = create_pickup(1318,2265.8804,1647.5188,1084.2344);


	garagexit[0] = CreateDynamicSphere(1378.3014,-23.0678,1000.9258,-1,8);
	CreateDynamicPickup(1318,23,1378.3014,-23.0678,1000.9258,-1,8);// 


	garagexit[1] = CreateDynamicSphere(1402.4092,-27.7798,1000.9203,-1,6);
	CreateDynamicPickup(1318,23,1402.4092,-27.7798,1000.9203,-1,6);//

	garagexit[2] = CreateDynamicSphere(1395.4806,-28.6327,1000.9128,-1,7);
	CreateDynamicPickup(1318,23,1395.4806,-28.6327,1000.9128,-1,7);//

	garagexit[3] = CreateDynamicSphere(1379.5923,-21.5990,1000.9251,-1,5);
	CreateDynamicPickup(1318,23,1379.5923,-21.5990,1000.9251,-1,5);//
	//
	CreateDynamicPickup(1239,23,-1027.4069,-593.4584,32.0126); //prodpick
	CreateDynamicPickup(1239,23,-514.4622,-543.0626,25.5234);
	//

	RouletCloakroom[0] = create_pickup(1275,1963.7473,1063.2229,994.4688,-1);// Four Dragons
	RouletCloakroom[1] = create_pickup(1275,2150.5393,1603.1434,1006.1802,-1); // Caligula
	//
	skills[0] = create_pickup(1318,306.3997,-159.1386,999.5938,-1); // Входы для прокачки скиллов
	skills[1] = create_pickup(1318,305.6985,-159.1157,999.5938,-1); // Выход :)
	ammonac[0] = create_pickup(1318,1368.9360,-1279.7216,13.5469);//
	ammonac[1] = create_pickup(1318,285.4752,-41.7966,1001.5156);//
	ammonac[2] = create_pickup(1318,-2625.8296,208.2379,4.8125);//
	ammonac[3] = create_pickup(1318,285.9187,-86.7644,1001.5229);//
	ammonac[4] = create_pickup(1318,2159.5449,943.2165,10.8203);//
	ammonac[5] = create_pickup(1318,315.8831,-143.6591,999.6016);//
	
	style_pickup_clothes = create_pickup(1314,765.3245,10.8755,1000.7281,2); // метка бой
	
	style_pickup_queue = CreateDynamicSphere(223.850204,1931.512207,17.640600,0.8);
	
	auctionpic[0] = create_pickup(19134,359.0123,161.2824,1008.3828); // Аукцион в мэрии
	

	auctionpic[1] = create_pickup(19134,358.7350,168.4931,1008.3828); // Аукцион в мэрии
	

	sudepic[0] = create_pickup(1318,-2766.5515,375.5145,6.3347); // Вход в зал
	sudepic[1] = create_pickup(1318,-2781.4600,379.7657,2004.4155,2); // Выход в зал
	monitoring = create_pickup(1239,358.7610,165.3077,1008.3828);
	pickcars[0] = create_pickup(19134,acarsd[0][0],acarsd[0][1],acarsd[0][2]);// Выдача мопеда автоугонщикам.
	pickcars[1] = create_pickup(19134,acarsd[1][0],acarsd[1][1],acarsd[1][2]);// Выдача мопеда автоугонщикам.
	pickcars[2] = create_pickup(19134,acarsd[2][0],acarsd[2][1],acarsd[2][2]);// Выдача мопеда автоугонщикам.
	pickcars[3] = create_pickup(19134,2515.4497,-1465.3451,23.9989);// Выдача мопеда автоугонщикам.
	pickcars[4] = create_pickup(1239,2494.1060,-1464.7142,24.0255);// Работа автоугонщика.
	caligula[0] = create_pickup(19132,2233.9912,1714.6836,1012.3828,-1);// Выход Caligula
	caligula[2] = create_pickup(19132,2196.9653,1677.1547,12.3672);// Вход Caligula
	dragons[0] = create_pickup(19132,2019.07,1017.6940,996.8750,-1);// Выход 4'Dragons
	dragons[1] = create_pickup(19132,2019.3192,1007.7440,10.8203);// Вход 4'Dragons
	//===========================[ГРИБЫ]========================================
	mushroom[0] = CreateDynamicPickup(1603, 2, -332.3008,-1987.6200,26.1051); //
	CreateDynamicPickup(1603, 2, -375.2895,-2004.4412,28.4262); //
	CreateDynamicPickup(1603, 2, -420.7345,-1962.1367,20.7989); //
	CreateDynamicPickup(1603, 2, -370.9467,-2049.1355,28.5462); //
	CreateDynamicPickup(1603, 2, -448.5980,-2072.9041,80.6654); //
	CreateDynamicPickup(1603, 2, -490.3048,-2121.0930,89.5054); //
	CreateDynamicPickup(1603, 2, -515.2039,-2223.6245,42.7538); //
	CreateDynamicPickup(1603, 2, -556.2787,-2223.5444,34.8664); //
	CreateDynamicPickup(1603, 2, -653.4810,-2185.8540,14.6571); //
	CreateDynamicPickup(1603, 2, -697.4235,-2144.5728,24.7645); //
	CreateDynamicPickup(1603, 2, -913.5545,-2281.5803,45.6804); //
	CreateDynamicPickup(1603, 2, -924.2963,-2392.5601,63.9710); //
	CreateDynamicPickup(1603, 2, -921.2469,-2419.2676,73.1529); //
	CreateDynamicPickup(1603, 2, -928.6000,-2452.7974,90.8816); //
	CreateDynamicPickup(1603, 2, -1092.1782,-2576.2622,77.2730); //
	CreateDynamicPickup(1603, 2, -1114.4218,-2326.8787,44.7146); //
	CreateDynamicPickup(1603, 2, -1095.8896,-2317.7642,51.1427); //
	CreateDynamicPickup(1603, 2, -1036.0745,-2331.6079,60.0633); //
	CreateDynamicPickup(1603, 2, -1823.0471,-2169.1082,77.6051); //
	CreateDynamicPickup(1603, 2, -1745.4077,-2018.1677,74.5071); //
	CreateDynamicPickup(1603, 2, -1943.8130,-2144.5457,76.9309); //
	CreateDynamicPickup(1603, 2, -1955.9766,-2162.8020,75.9688); //
	CreateDynamicPickup(1603, 2, -1685.1254,-2385.9275,99.3290); //
	CreateDynamicPickup(1603, 2, -1643.7135,-2411.9897,95.7691); //
	CreateDynamicPickup(1603, 2, -1551.1573,-2505.1743,90.8708); //
	CreateDynamicPickup(1603, 2, -1465.4910,-2556.2893,63.7663); //
	CreateDynamicPickup(1603, 2, -1435.4855,-2544.3879,60.4281); //
	CreateDynamicPickup(1603, 2, -1401.0656,-2548.1582,55.9067); //
	CreateDynamicPickup(1603, 2, -1347.5752,-2507.9780,37.0068); //
	CreateDynamicPickup(1603, 2, -1328.0197,-2467.7183,27.8259); //
	CreateDynamicPickup(1603, 2, -1290.3135,-2479.8984,16.9108); //
	CreateDynamicPickup(1603, 2, -1277.4055,-2498.1367,11.4951); //
	CreateDynamicPickup(1603, 2, -568.3260,-2276.3220,27.5938);
	CreateDynamicPickup(1603, 2, -653.1019,-2255.4465,23.3936);
	CreateDynamicPickup(1603, 2, -614.5738,-2398.0959,28.0911);
	CreateDynamicPickup(1603, 2, -620.2932,-2477.4644,52.8450);
	CreateDynamicPickup(1603, 2, -673.6429,-2562.6052,58.4840);
	CreateDynamicPickup(1603, 2, -797.0350,-2611.4380,85.9543);
	CreateDynamicPickup(1603, 2, -814.8298,-2713.2485,90.4954);
	CreateDynamicPickup(1603, 2, -900.3575,-2635.6716,96.5351);
	CreateDynamicPickup(1603, 2, -908.8201,-2450.1675,86.1361);
	CreateDynamicPickup(1603, 2, -564.7324,-2000.7518,48.2172);
	CreateDynamicPickup(1603, 2, -514.0831,-1990.8127,46.7821);
	CreateDynamicPickup(1603, 2, -386.3437,-1968.6517,25.7109);
	CreateDynamicPickup(1603, 2, -285.8642,-2063.6074,34.5075);
	CreateDynamicPickup(1603, 2, -1735.6969,-2501.1594,10.1409);
	CreateDynamicPickup(1603, 2, -1840.7139,-2382.2207,29.1400);
	CreateDynamicPickup(1603, 2, -1906.1353,-2212.6089,77.4492);
	CreateDynamicPickup(1603, 2, -1874.5731,-1969.2981,87.2874);
	CreateDynamicPickup(1603, 2, -1739.6145,-1950.4650,98.8599);
	CreateDynamicPickup(1603, 2, -1613.4684,-1867.4391,86.1701);
	CreateDynamicPickup(1603, 2, -1868.5590,-1894.4634,88.9713);
	mushroom[1] = CreateDynamicPickup(1603, 2, -2005.6901,-1937.4910,77.0140);
	//========================================[ГРИБЫ]========================================
	medicss[0] = 	create_pickup(1318,-2664.7141,639.9803,14.4531); // Медики SF Вход
	medicss[1] = 	create_pickup(1318,387.8577,-59.8890,1076.4708,3); // Медики SF Выход
	medicss[2] = 	create_pickup(1318,1172.0767,-1323.3440,15.4030); // Медики LS Вход
	medicss[3] = 	create_pickup(1318,387.8577,-59.8890,1076.4708,4); // Медики LS Выход
	medicss[4] = 	create_pickup(1318,1607.2877,1815.2422,10.8203); // Медики LV Вход
	medicss[5] = 	create_pickup(1318,387.8577,-59.8890,1076.4708,5); // Медики LV Выход
	medicss[6] = 	create_pickup(1318,-318.7594,1048.2352,20.3403,0); // Медики FC вход
	medicss[7] = 	create_pickup(1318,387.8577,-59.8890,1076.4708,6); // Медики LV Выход
	sportzal[0] = 	create_pickup(1318,2097.9495,2494.1621,14.8390); // Спортзал LV Вход
	sportzal[1] = 	create_pickup(1318,772.4290,-5.0806,1000.7289,2); // Спортзал LV Выход
	rabota1 = 		create_pickup(1239,2230.4875,-2211.9368,13.5469); // Грузчики инфо
	
	serdce[0] = 		create_pickup(1240,1160.2810,-1767.7679,16.5938); // Сердце Спавн ls
	serdce[1] = 		create_pickup(1240,1753.4606,-1916.4948,13.5698); // Сердце Автовокзал
	serdce[2] = 		create_pickup(1240,-2053.3713,-114.0886,1035.2432,1); // Сердце Автошкола
	serdce[3] = 		create_pickup(1240,359.0540,179.0581,1008.3828); // Сердце Мэрия

	FormaFracPic[0] = 	create_pickup(1275,255.1582,78.4345,1003.6406);
	FormaFracPic[1] = 	create_pickup(1275,-2460.4744,509.1963,1039.1265,130);
	FormaFracPic[2] = 	create_pickup(1275,-1344.0225,490.3044,11.2027);
	FormaFracPic[3] = 	create_pickup(1275,374.0956,-53.1722,1076.4708,3);
	FormaFracPic[4] = 	create_pickup(1275,364.2415,197.5021,1014.1875);
	FormaFracPic[6] = 	create_pickup(1275,220.2224,111.7548,1010.2118);

	FormaFracPic[7] = create_pickup(1275, -2033.9169, -69.4022, 94.4108, 1); // Автошкола
	//FormaFracPic[8] = CreateDynamicPickup(1275, 23, 1639.8848,-1638.5664,101.0859,1);
	FormaFracPic[9] = create_pickup(1275, 2531.7825,-1318.9847,2166.6021);
	//FormaFracPic[10] = CreateDynamicPickup(1275, 23, 2632.5681,1209.4713,41.0859,3);
	FormaFracPic[11] = create_pickup(1275, 230.0150,179.6712,1003.0313,122);
	FormaFracPic[12] = create_pickup(1275, 374.0956,-53.1722,1076.4708,4);
	FormaFracPic[13] = create_pickup(1275, 374.0956,-53.1722,1076.4708,5);
	FormaFracPic[14] = create_pickup(1275, 374.0956,-53.1722,1076.4708,6);
	

	gunarm[0] = 	create_pickup(353,2520.8699,-1312.7131,2166.6021); // Оружие Армии
	gunarm[1] = 	create_pickup(353,311.9774,-165.2273,999.6010,3); // Оружие Армии
	lsamat = 		create_pickup(1239,2729.3267,-2451.5051,17.5937);
	lsaammo = 		create_pickup(353,2744.2744,-2453.7742,13.8623);
	skinshop[0] = 	create_pickup(1275,206.0302,-3.5463,1001.2109,1); // Магагазин Одежды
	skinshop[1] = 	create_pickup(1275,205.9253,-12.9991,1001.2178,1); // Магагазин Одежды
	skinshop[2] = 	create_pickup(1275,206.0302,-3.5463,1001.2109,2); // Магагазин Одежды
	skinshop[3] = 	create_pickup(1275,205.9253,-12.9991,1001.2178,2); // Магагазин Одежды

	Army 	= GangZoneCreate(-49.979476, 1695.982177, 414.020507, 2175.982177);
	SFa 	= GangZoneCreate(-1544.892, 270.5747, -1232.015, 558.5571);
	LSport 	= GangZoneCreate(2581.279, -2593.79, 2862.689, -2305.605);

	mast[0] = create_pickup(1318,613.4505,3.7427,1000.9219); // Мастеркая LV
	mast[1] = create_pickup(1318,613.4505,3.7427,1000.9219,1); // Мастеркая SF
	mast[2] = create_pickup(1318,613.4505,3.7427,1000.9219,2); // Мастеркая LS

	
	//============================ Инфо дальнобойщики ==========================
	CreateDynamicPickup(1239,23,-1731.4509,118.9413,3.5547);
	CreateDynamicPickup(1239,23,2601.7222,-2226.5867,13.3732);
	CreateDynamicPickup(1239,23,256.4736,1414.5182,10.7075);
	CreateDynamicPickup(1239,23,-1046.7723,-670.7208,32.3516);
	CreateDynamicPickup(1239,23,608.7718,847.8765,-43.1532);
	CreateDynamicPickup(1239,23,-1978.6846,-2434.8274,30.6250);
	CreateDynamicPickup(1239,23,-1873.0896,-1720.2430,21.7500);
	CreateDynamicPickup(1239,23,323.0342,1118.5804,1083.8828);
	//==========================================================================
	format(string,32, "{33AA33}Склад армии ЛВ: {FFFFFF}%i", armmatbi);
	LvaLable = CreateDynamic3DTextLabel(string, 0xFFFF00AA, -1325.0364,492.7100,28.5057,15.0);
	CreateDynamic3DTextLabel("{218065}~~~~~~~~~~~~~~~~~~~~\nСклад топлива\n{FFFFFF}''/ProdMenu''\n{218065}~~~~~~~~~~~~~~~~~~~~",COLOR_WHITE,-1027.4069,-593.4584,32.0126+0.4,25.0);
	CreateDynamic3DTextLabel("{218065}~~~~~~~~~~~~~~~~~~~~\nСклад еды и товаров\n{FFFFFF}''/ProdMenu''\n{218065}~~~~~~~~~~~~~~~~~~~~",COLOR_WHITE,-514.4622,-543.0626,25.5234+0.4,25.0);
	format(string,128, "Разгрузка урожая\nСтоимость урожая %i вирт",UrojSell);
	CreateDynamic3DTextLabel(string,0xFF9900FF,1630.0807,2323.3582,10.8203,25.0);
	CreateDynamic3DTextLabel("________________",0xFF9900FF,1630.0807,2323.3582,10.8203,25.0);
	format(string,128, "Разгрузка наркотиков\nСтоимость 1 гр. %i вирт",NarkSell);
	CreateDynamic3DTextLabel(string,0xFF9900FF,2178.3220,-1660.2120,14.9782,25.0);
	CreateDynamic3DTextLabel("____________________",0xFF9900FF,2178.3220,-1660.2120,14.9782,25.0);
	new rand1 = random(2)+1;
	new rand2 = random(2)+1;
	new rand3 = random(2)+1;
	
	UrojSell = 33+rand2;
	NarkSell = 33+rand3;
	ZernBuy = 3+rand1;

	format(YCMDstr,128, "Загрузка зерна\nСтоимость зерна %i вирт\n{FFFFFF}Посигнальте и шлагбаум поднимется\nили введите /prodopen",ZernBuy);
	CreateDynamic3DTextLabel(YCMDstr,0xFF9900AA,2203.7983,-2251.9731,14.0000,15.0);
	CreateDynamic3DTextLabel("_______________",0xFF9900AA,2203.7983,-2251.9731,14.0000,15.0);
	//================================= 3D тексты ==============================
	CreateDynamic3DTextLabel("Чтобы воспользоваться лифтом, посигнальте",0xFF8000FF,-2441.0435,527.9462,29.9149,15.0);
	CreateDynamic3DTextLabel("Чтобы воспользоваться лифтом, посигнальте",0xFF8000FF,-2505.4043,529.6075,491.9152,15.0);
	CreateDynamic3DTextLabel("МЭРИЯ",0x6495EDFF,1481.1272,-1771.6830,19.2000,10.0);
	CreateDynamic3DTextLabel("_________________\nАвто сдача\nна права\n_________________",0x66bb6aFF,-2029.5741,-90.7248,94.4108,10.0,-1,-1,0,-1,3); // Автошкола
	CreateDynamic3DTextLabel(" < Приём на работу > ",0xFFFF00FF,359.8466,184.7337,1009.0000,10.0);
	CreateDynamic3DTextLabel("{33AA33}~~~~~~~~~~~~~~~~~\nКупить наркотики:\n{FFFFFF}\"/get drugs\"\n{33AA33}~~~~~~~~~~~~~~~~~",COLOR_WHITE,323.0342,1118.5804,1083.8828,10.0);
	CreateDynamic3DTextLabel("~~~~~~~~~~~~~~~\nРегистрация\nна Гонку\n~~~~~~~~~~~~~~~",TEAM_GROVE_COLOR,822.3992,2.7049,1004.1797,10.0);
	CreateDynamic3DTextLabel("Точка наблюдения\n/camera",COLOR_WHITE,212.2816,1812.2374,21.8672,10.0);
	CreateDynamic3DTextLabel("CAR SHOP\nclass: Nope",COLOR_REDD,562.4449,-1291.9125,17.2482,7.0);
	CreateDynamic3DTextLabel("CAR SHOP\nclass: C&D",COLOR_REDD,-1952.2794,297.8026,35.4688,7.0);
	CreateDynamic3DTextLabel("CAR SHOP\nclass: A&B",COLOR_REDD,2200.8857,1394.2892,11.0625,7.0);
	CreateDynamic3DTextLabel("CAR SHOP\nclass: A&B",COLOR_REDD,-1657.7015,1210.2267,7.2500,7.0);
	//========================== Пикапы входы/выходы ===========================

	// ------------------------- кража матов 
	chekmatlva[0] = CreateDynamicPickup(1239,2,223.8502,1931.5122,17.6406); 
	CreateDynamicPickup(1239,2,212.4375,1835.0928,17.6406); 
	CreateDynamicPickup(1239,2,155.8935,1903.3306,18.6603); 
	CreateDynamicPickup(1239,2,137.4635,1880.8014,17.8359); 
	CreateDynamicPickup(1239,2,117.9774,1869.8710,17.8359); 
	CreateDynamicPickup(1239,2,112.7323,1875.2440,17.8359); 
	CreateDynamicPickup(1239,2,153.5131,1845.9530,17.6406); 
	CreateDynamicPickup(1239,2,171.9801,1834.7606,17.6406); 
	CreateDynamicPickup(1239,2,176.9783,1841.3126,17.6406); 
	chekmatlva[1]= CreateDynamicPickup(1239,2,233.3041,1842.0875,17.6406); 

	chekmats[0] = CreateDynamicPickup(1239,2,-1294.7273,490.1304,11.1953); // Пикап 1
	chekmats[1] = CreateDynamicPickup(1239,2,-1400.6083,491.5404,11.1953); // Пикап 2

	lift = 		create_pickup(1318,1147.8197,-1318.0120,13.6500); // пикап4
	kauta = 	create_pickup(1318,-1345.5260,492.3939,18.2344); // пикап5
	kauta2 = 	create_pickup(1318,-1329.1328,489.7521,24.7138,5); // пикап6
	lift2 = 	create_pickup(1318,1161.4158,-1330.1571,31.4939); // пикап10
	lift3 = 	create_pickup(1318,-2705.7395,640.1631,14.4531);
	cerkva = 	create_pickup(1318,-1989.8993,1117.8569,54.4688);
	cerkva2 = 	create_pickup(1318,-1938.0405,1118.8585,1332.7010,1);
	wmcvhod = 	create_pickup(1318,662.8604,1716.4194,7.1875);
	vmcvqhod = 	create_pickup(1318,786.6252,-456.8894,1428.1820,52);
	vmcvhod = 	create_pickup(1318,681.6075,-473.3458,16.5363);

	rmspawn[1] = 	create_pickup(1318, 1286.7781,-838.8546,1085.6328,4); // ?????
	lcnspawn[0] = 	create_pickup(1318, 1530.2140,751.0493,11.0234);//????
	lcnspawn[1] = 	create_pickup(1318, 1260.6464,-785.3956,1091.9063,4); // ?????
	wmcvqhod = 		create_pickup(1318,	786.6252,-456.8894,1428.1820,998);
	pmcvhod = 		create_pickup(1318,	-255.1498,2603.4138,62.8582);
	pmcvqhod = 		create_pickup(1318,	786.6252,-456.8894,1428.1820,8);
	lift4 = 		create_pickup(1318,	-2713.6804,631.2424,34.4028);
	lift5 = 		create_pickup(1318,	1599.6707,1815.2407,10.8203);
	lift6 = 		create_pickup(1318,	1608.3033,1786.1414,30.4688);

	ash =  create_pickup(1318,-2026.5331,-102.0650,35.1641); 		// Автошкола вход с улицы в инту (главный)
	ash2 = create_pickup(1318,-2040.5718,-82.4419,94.4108, 1);	// Автошкола выход с инты на улицу (главный)
	ash3 = create_pickup(1318,-2029.7572,-120.5181,35.1692);		// Автошкола вход с улицы в инту (площадка)
	ash4 = create_pickup(1318,-2051.0273,-123.3986,1035.2432, 1);  // Автошкола выход с улицы в инту (площадка)


	nikname = 		create_pickup(19134,359.1942,181.4973,1008.3828); // ????? ?????
	nikname2 = 		create_pickup(19134,-1970.5245,1112.0775,1333.0092,1); // ????? ?????
	derbyrace[0] = 	create_pickup(19134, -2159.0461,640.3610,1052.3817); // пикап регистрации дерби
	derbyrace[1] = 	create_pickup(1318, -2109.9355,-443.3014,38.7344); // вход в дерби
	derbyrace[2] = 	create_pickup(1318, -2170.3154,635.4061,1052.3750); // выход
	paints[0] = 	create_pickup(353, 294.8574,-38.2151,1001.5156, 1);
	paints[1] = 	create_pickup(1318, 2595.8364,2790.6592,10.8203);
	paints[2] = 	create_pickup(1318, 285.5204,-41.8050,1001.5156, 1);
	arace = 		create_pickup(19134, 822.3992,2.7049,1004.1797); // Регистрация на гонку
	carpick[0] = 	create_pickup(19133, 562.4449,-1291.9125,17.2482, 0); // Автосалон 1 Вход
	carpick[1] = 	create_pickup(19133, -1952.2794,297.8026,35.4688, 0); // Автосалон 2 Вход
	carpick[2] = 	create_pickup(19133, 2200.8857,1394.2892,11.0625, 0); // Автосалон 3 Вход
	racee[0] = 		create_pickup(1318,1956.7323,-2183.6260,13.5469); // Гонка вход
	racee[1] = 		create_pickup(1318,834.6671,7.2752,1004.1870); // Гонка выход
	victim2[0] = 	create_pickup(1318,461.7025,-1500.7941,31.0454); // Магазин Одежды Вход
	victim2[1] = 	create_pickup(1318,227.5632,-8.0904,1002.2109,2); // Магазин Одежды Выход
	zip[0] = 		create_pickup(1318,-1694.1870,951.2703,24.8906); // Магазин ZIPSF Вход
	zip[1] = 		create_pickup(1318,227.5632,-8.0904,1002.2109,1); // Магазин ZIPSF Выход
	pdd = 			create_pickup(1239,-2027.0913,-83.0639,94.4108,1); // Пикап ПДД

	buygunzakon[0] = create_pickup(353,311.5954,-165.3113,999.6010,130); //gun FBI
	buygunzakon[1] = create_pickup(353,311.9774,-165.2273,999.6010,5); //gun Police
	buygunzakon[2] = create_pickup(353,311.9774,-165.2273,999.6010,1); //gun Police
	buygunzakon[3] = create_pickup(353,302.5668,-127.6718,1004.0625,15); //gun Police

	lspd[0] = 	create_pickup(1318,1555.1332,-1675.7180,16.1953);//Lspd вход
	lspd[1] = 	create_pickup(1318,246.7096,62.8786,1003.6406);//Lspd выход
	lspd[4] = 	create_pickup(1318,316.6778,-170.0422,999.5938,5);//Lspd вых из аммо
	lspd[2] = 	create_pickup(1318,1524.486938,-1677.990844,6.218750);//Lspd Вход
	lspd[5] = 	create_pickup(1318,1568.6144,-1689.9901,6.2188);//Lspd Вход из гаража
	lspd[3] = 	create_pickup(1318,246.4416,87.6784,1003.6406);//Lspd выход в гараже
	sf[4]  = 	create_pickup(1318,-1606.4298,672.0637,-4.9063);//Lspd выход в гараже
	sf[0]  = 	create_pickup(1318,316.3047,-170.2971,999.5938,1);//Lspd выход в гараже
	sf[1]  = 	create_pickup(1318,213.9762,120.8990,999.0156);//Lspd выход в гараже
	sf[2] = 	create_pickup(1318,-1594.2096,716.1803,-4.9063);//sfpd
	sf[3] = 	create_pickup(1318,246.4636,107.2969,1003.2188);//сфпд
	sf[5] = 	create_pickup(1318,-1605.5883,710.2720,13.8672);//сфпд

	lvpdpic[0] = create_pickup(1318,2297.1138,2451.4346,10.8203);//lvpd вход с гаража
	lvpdpic[1] = create_pickup(1318,238.7510,138.6254,1003.0234,122);//lvpd вход в гараж
	lvpdpic[2] = create_pickup(1318,2337.1335,2459.3105,14.9742);//Центральный вход
	lvpdpic[3] = create_pickup(1318,288.8456,166.9235,1007.1719,122);//Центральный выход
	lvpdpic[4] = create_pickup(1318,2297.1165,2468.6892,10.8203);//lvpd оружие вход
	lvpdpic[5] = create_pickup(1318,299.9460,-141.8767,1004.0625,15);//lvpd оружие выход
	lvpdpic[6] = create_pickup(1318,2278.3835,2458.0950,38.6837);//крыша

	rmpic[0] = 	create_pickup(1318,1298.7498,-797.0133,1084.0078,1);
	rmpic[1] = 	create_pickup(1318,937.0892,1733.2124,8.8516);
	rmpic2[0] = create_pickup(1318,1260.6467,-785.4053,1091.9063,1);
	rmpic2[1] = create_pickup(1318,960.3885,1782.6185,8.8516);
	rmpick[0] = create_pickup(1318,1286.8062,-838.8555,1085.6328,1);
	rmpick[1] = create_pickup(1318,960.4630,1683.9728,8.8516);

	yakexit[0] = create_pickup(1318,1298.7498,-797.0133,1084.0078);
	yakexit[1] = create_pickup(1318,1456.1324,2773.4790,10.8203);

	fbi[1] = create_pickup(1318,-2457.5247,516.5969,1039.1265,130); //Вход
	fbi[0] = create_pickup(1318,-2456.1270,503.7910,30.0781); //Выход
	fbi[2] = create_pickup(1318,-2457.0042,520.4381,492.1730); //Вход Крыша
	fbi[3] = create_pickup(1318,-2454.8435,513.2433,45.5625); //Выход Крыша
	fbi[4] = create_pickup(1318,-2477.2483,537.0764,1039.1265,130); //Выход Крыша
	fbi[5] = create_pickup(1318,-2443.0410,494.4877,492.1183); //Выход Крыша

	addictionexit = 	create_pickup(1318,318.6952,1114.5037,1083.8828);
	addictionenter =  	create_pickup(1318,2166.0068,-1671.3362,15.0734);

	armijavhod = 	create_pickup(1318,140.0735,1939.5984,19.2991);
	armijavihod = 	create_pickup(1318,153.8659,1944.3601,20.0000);

	marenter[0] = 	create_pickup(1318,1481.1272,-1771.6830,18.7958);// Мэрия
	marenter[1]  = 	create_pickup(1318,1413.2067,-1790.5966,15.4356);// Чёрный Вход мэрия
	marenter[2]  = 	create_pickup(1318,368.4227,194.0684,1008.3828);// Чёрный Выход мэрия
}

stock actors_load()
{
	new loader_actor = CreateActor(27, 2181.7244,-2252.5786,14.7734,224.1906); // прораб на мешка ( устройство на работу)
	ApplyActorAnimation(loader_actor, "SMOKING", "M_smklean_loop", 4.1, 1, 0, 0, 1, 1);

	loader_actor = CreateActor(27, 2121.7354,-2274.2668,20.6719, 181); // прораб на мешках (кричащий)
	ApplyActorAnimation(loader_actor, "PED", "SEAT_down",4.1, 0, 0, 1, 1, 1);

	army_actor = CreateActor(287, 2531.4487,-1305.2017,2166.6021,95.0); // дневальный лва

	new bank_actor = CreateActor(150, 1543.2639,-1223.1469,1388.3552,90.0); // актеры в банке на кассе ls
	ApplyActorAnimation(bank_actor, "PED", "SEAT_down",4.1, 0, 1, 1, 1, 1);
	SetActorVirtualWorld(bank_actor, 36);
	bank_actor = CreateActor(150, 1543.2281,-1225.5332,1388.3552,90.0); // актеры в банке на кассе ls
	ApplyActorAnimation(bank_actor, "PED", "SEAT_down",4.1, 0, 1, 1, 1, 1);
	SetActorVirtualWorld(bank_actor, 36);
	bank_actor = CreateActor(150, 1543.2281,-1227.7133,1388.3552,90.0); // актеры в банке на кассе ls
	ApplyActorAnimation(bank_actor, "PED", "SEAT_down",4.1, 0, 1, 1, 1, 1);
	SetActorVirtualWorld(bank_actor, 36);

	// колеса фортуны 4 дракона
	
	FortuneActor[0] = CreateActor(11, 1939.2841,989.3802,992.4609,0.0);
	SetActorVirtualWorld(FortuneActor[0], 1);
	FortuneActor[1] = CreateActor(11, 1937.8488,985.1844,992.4745,90.0);
	SetActorVirtualWorld(FortuneActor[1], 1);
	FortuneActor[2] = CreateActor(11, 1943.4309,987.9624,992.4688,274.9825);
	SetActorVirtualWorld(FortuneActor[2], 1);
}

stock load_atm()
{
	for(new aa = 0; aa < sizeof atm_cords; aa++)
	{
		if(aa == 0) 
		{
			atm_text[0] = CreateDynamic3DTextLabel("Нажмите: ''ENTER''",0x33AA33AA, atm_cords[aa][0], atm_cords[aa][1],atm_cords[aa][2]+1,5.0);
			atm_area[0] = CreateDynamicSphere(atm_cords[aa][0], atm_cords[aa][1],atm_cords[aa][2], 2.0);
		}
		else if(aa == sizeof(atm_cords)-1) 
		{
			atm_text[1] = CreateDynamic3DTextLabel("Нажмите: ''ENTER''",0x33AA33AA, atm_cords[aa][0], atm_cords[aa][1],atm_cords[aa][2]+1,5.0);
			atm_area[1] = CreateDynamicSphere(atm_cords[aa][0], atm_cords[aa][1],atm_cords[aa][2], 2.0);
		}
		else
		{
			CreateDynamic3DTextLabel("Нажмите: ''ENTER''",0x33AA33AA, atm_cords[aa][0], atm_cords[aa][1],atm_cords[aa][2]+1,5.0);
			CreateDynamicSphere(atm_cords[aa][0], atm_cords[aa][1],atm_cords[aa][2], 2.0);
		}
		
		CreateDynamicObject(2754, atm_cords[aa][0], atm_cords[aa][1],atm_cords[aa][2], 0.0, 0.0, atm_cords[aa][3]);
	}
	
}

public OnGameModeInit()
{	
	Streamer_SetVisibleItems(STREAMER_TYPE_OBJECT, 1000);
	actors_load();
	load_house_interior_info();

    CreateDynamicObject(1895, 1943.20886, 986.55798, 992.89868, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1895, 1940.68750, 989.17188, 992.88281, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1895, 1938.02686, 986.62500, 992.88281, 360.00000, 0.00000, 270.00000);
	
	Fortune[0] = CreateDynamicSphere(1944.9143,986.5558,992.4688, 3.0);
	Fortune[1] = CreateDynamicSphere(1940.6801,990.7109,992.4609, 3.0);
	Fortune[2] = CreateDynamicSphere(1936.5737,986.4600,992.4745, 3.0);
	
	WheelTimer[0] = -1;
	WheelTimer[1] = -1;
	WheelTimer[2] = -1;
	////////////////////////
	load_atm();
	Load_Anti_DM_Zone();
	load_pickups();
    ServerTime();
    CreateSpeedTextDraw();
    CreateHungerTextDraw();
	SetTimer("FuelUpdate", 25000, true);
	SetTimer("GzCheck", 1000,true);
	
	SetTimer("HPCheck", 30000, true);
	
	Iter_Init(OnPlayersStream);
	SetGravity(0.010); 
	Streamer_SetTickRate(40);
	
	restart_time = 0;
	pickonline = -1;
	
	initLogoTextDraw();
	map_init_fbr();
	mapInitAutoSchool();
	mapInitLSPD();
	mapInitLSa();
	mapInitGarageA();
	mapInitGarageB();
	mapInitGarageC();
	mapInitGarageS();
	mapInitBank();
	map_init_house_1();

	vehiclesInitLSa();
	

	new _objectid = mapGetGateAutoSchool();
    gServerGates[eAutoSchoolGates] = gatesCreate(_objectid);

    g_szLSAMat[0] = CreateDynamicPickup(1239, 23, 2880.6606,-2411.6357,3.8383, 0);
 	g_szLSAMat[1] = CreateDynamicPickup(1239, 23, 2860.9043,-2394.8667,3.8383, 0);


	// Разбан аккаунтов
	mysql_tquery(DATABASE,"SELECT * FROM `"TABLE_BAN"`","OnMySQL_QUERY","iis",26,-1,"");

	CreateDynamicObject(1497, 2529.41504, -1292.39221, 1030.41199,   0.00000, 0.00000, 270.00000);//двери (разбитое окно оставил не закрытым)
	CreateDynamicObject(1497, 2529.42603, -1295.40405, 1030.41199,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1497, 2565.59717, -1303.40295, 1030.41199,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1497, 2565.57007, -1300.39294, 1030.41199,   0.00000, 0.00000, 270.00000);


	CreateDynamicObject(19444, -1377.29065, 493.65869, 7.33160,   0.00000, 0.00000, 0.00000); //закрыл дыру в стене авианосца, визуально не видно
	CreateDynamicObject(19444, -1377.29065, 492.71869, 7.33160,   0.00000, 0.00000, 0.00000);

	CreateDynamicMapIcon(2057.5391,-1897.2125,13.5538, 60, COLOR_WHITE, 0, 0, -1,100); // дуэль
	for(new i; i < 20; i++) MatchInfo[i][mPlayer_1] = MatchInfo[i][mPrice] = MatchInfo[i][mID] = -1;
	for(new i; i < MAX_VEHICLES; i++)
	{
	//	VehicleDriver[i] = INVALID_PLAYER_ID;
		pDWindow[i] = 0b1111;
	}
	SetNameTagDrawDistance(20.0);
	LoadObject();
	resoluted_farm[0] = 1, resoluted_farm[1] = 1, resoluted_farm[2] = 1, resoluted_farm[3] = 1, resoluted_farm[4] = 1;
	resoluted_workshop[0] = 1, resoluted_workshop[1] = 1, resoluted_workshop[2] = 1;
	SetGameModeText(""Mode"");
	
	SetSVarInt("LoadMode", gettime()+10);
	if(GetMaxPlayers() > 1000) return SendRconCommand("exit");
	for(new i = 1; i<MAX_PLAYERS; i++) Sonar[i] = random(2000);

	new strings[256];
	format(strings, sizeof(strings), "Порт СФ\nНефть: %d\nУголь: %d\nДерево: %d",Sellbenz[1],Sellugol[1],Sellderevo[1]);
	Doki[1] = Create3DTextLabel(strings, 0xFFFF00FF,-1731.4509,118.9413,3.5547,20.0,0,1);
	format(strings, sizeof(strings), "Порт ЛС\nНефть: %d\nУголь: %d\nДерево: %d",Sellbenz[0],Sellugol[0],Sellderevo[0]);
	Doki[0] = Create3DTextLabel(strings, 0xFFFF00FF,2601.7222,-2226.5867,13.3732,20.0,0,1);
	format(strings, sizeof(strings), "Нефтезавод №1\nЦена за тонну: %d",Benzbuy[0]);
	GasZavod[0] = Create3DTextLabel(strings, 0xFFFF00FF,256.4736,1414.5182,10.7075,20.0,0,1);
	format(strings, sizeof(strings), "Нефтезавод №2\nЦена за тонну: %d",Benzbuy[1]);
	GasZavod[1] = Create3DTextLabel(strings, 0xFFFF00FF,-1046.7723,-670.7208,32.3516,20.0,0,1);
	format(strings, sizeof(strings), "Склад угля №1\nЦена за тонну: %d",ugolbuy[0]);
	Sklad[0] = Create3DTextLabel(strings, 0xFFFF00FF,608.7718,847.8765,-43.1532,20.0,0,1);
	format(strings, sizeof(strings), "Лесопилка №1\nЦена за тонну: %d",Buyderevo[0]);
	Derevobuy[0] = Create3DTextLabel(strings, 0xFFFF00FF,-449.3336,-65.9115,59.4158,20.0,0,1);
	format(strings, sizeof(strings), "Лесопилка №2\nЦена за тонну: %d",Buyderevo[1]);
	Derevobuy[1] = Create3DTextLabel(strings, 0xFFFF00FF,-1978.6846,-2434.8274,30.6250,20.0,0,1);
	format(strings, sizeof(strings), "Склад угля №2\nЦена за тонну: %d",ugolbuy[1]);
	Sklad[1] = Create3DTextLabel(strings, 0xFFFF00FF,-1873.0896,-1720.2430,21.7500,20.0,0,1);
	//********************************************************************************************************
	Bone[0] = TextDrawCreate(595.147888, 142.666656, "usebox");
	TextDrawLetterSize(Bone[0], 0.000000, 18.155559);
	TextDrawTextSize(Bone[0], 519.464111, 0.000000);
	TextDrawAlignment(Bone[0], 1);
	TextDrawColor(Bone[0], 0);
	TextDrawUseBox(Bone[0], true);
	TextDrawBoxColor(Bone[0], 1128481664);
	TextDrawSetShadow(Bone[0], 0);
	TextDrawSetOutline(Bone[0], 0);
	TextDrawBackgroundColor(Bone[0], -1751672960);
	TextDrawFont(Bone[0], 0);

	Bone[1] = TextDrawCreate(557.540405, 251.999969, "SET_BET");
	TextDrawLetterSize(Bone[1], 0.429852, 1.360828);
	TextDrawTextSize(Bone[1], 8.721603, 61.250003);
	TextDrawAlignment(Bone[1], 2);
	TextDrawColor(Bone[1], -1347440641);
	TextDrawUseBox(Bone[1], true);
	TextDrawBoxColor(Bone[1], 555819408);
	TextDrawSetShadow(Bone[1], 0);
	TextDrawSetOutline(Bone[1], 1);
	TextDrawBackgroundColor(Bone[1], 51);
	TextDrawFont(Bone[1], 3);
	TextDrawSetProportional(Bone[1], 1);
	TextDrawSetSelectable(Bone[1], true);

	Bone[2] = TextDrawCreate(557.540710, 270.666656, "DICE");
	TextDrawLetterSize(Bone[2], 0.429852, 1.360828);
	TextDrawTextSize(Bone[2], 8.721603, 61.250003);
	TextDrawAlignment(Bone[2], 2);
	TextDrawColor(Bone[2], -1347440641);
	TextDrawUseBox(Bone[2], true);
	TextDrawBoxColor(Bone[2], 555819392);
	TextDrawSetShadow(Bone[2], 0);
	TextDrawSetOutline(Bone[2], 1);
	TextDrawBackgroundColor(Bone[2], 51);
	TextDrawFont(Bone[2], 3);
	TextDrawSetProportional(Bone[2], 1);
	TextDrawSetSelectable(Bone[2], true);

	Bone[3] = TextDrawCreate(557.540283, 289.333312, "EXIT");
	TextDrawLetterSize(Bone[3], 0.429852, 1.360828);
	TextDrawTextSize(Bone[3], 8.721603, 61.250003);
	TextDrawAlignment(Bone[3], 2);
	TextDrawColor(Bone[3], -1347440641);
	TextDrawUseBox(Bone[3], true);
	TextDrawBoxColor(Bone[3], 555819392);
	TextDrawSetShadow(Bone[3], 0);
	TextDrawSetOutline(Bone[3], 1);
	TextDrawBackgroundColor(Bone[3], 51);
	TextDrawFont(Bone[3], 3);
	TextDrawSetProportional(Bone[3], 1);
	TextDrawSetSelectable(Bone[3], true);

	bizz_td[0] = TextDrawCreate(240.666809, 271.288665, "PRESS");
	TextDrawLetterSize(bizz_td[0], 0.616999, 2.765630);
	TextDrawAlignment(bizz_td[0], 1);
	TextDrawColor(bizz_td[0], -1);
	TextDrawSetShadow(bizz_td[0], 0);
	TextDrawSetOutline(bizz_td[0], 1);
	TextDrawBackgroundColor(bizz_td[0], 51);
	TextDrawFont(bizz_td[0], 2);
	TextDrawSetProportional(bizz_td[0], 1);

	bizz_td[1] = TextDrawCreate(331.333374, 271.288787, "ENTER");
	TextDrawLetterSize(bizz_td[1], 0.633666, 2.674368);
	TextDrawAlignment(bizz_td[1], 1);
	TextDrawColor(bizz_td[1], 0x20B220AA);
	TextDrawSetShadow(bizz_td[1], 0);
	TextDrawSetOutline(bizz_td[1], 1);
	TextDrawBackgroundColor(bizz_td[1], 51);
	TextDrawFont(bizz_td[1], 2);
	TextDrawSetProportional(bizz_td[1], 1);
	//
	for(new i; i < MAX_BONE; i++)
	{
		CreateDynamicObject(1824,BoneCoor[i][0],BoneCoor[i][1],BoneCoor[i][2],0,0,BoneCoor[i][3]);
		BoneInfo[i][Crupie] = INVALID_PLAYER_ID;
		for(new idx= 0; idx < 5; idx++) BoneInfo[i][Gamer][idx] = INVALID_PLAYER_ID;
		BoneInfo[i][GameStart] = 0;
	}
	for(new i = 0; i < MAX_ROULET; i++) RouletKrupie[i] = INVALID_PLAYER_ID;
	ShowNameTags(1);
	SetNameTagDrawDistance(30.0);
	EnableStuntBonusForAll(0);
	DisableInteriorEnterExits();
	new tmphour, tmpminute, tmpsecond;
	gettime(tmphour, tmpminute, tmpsecond);
	SetWorldTime(tmphour);
	licgate = CreateDynamicObject(968,-2074.50000000,-94.90000153,35.00000000,0.00000000,90.00000000,90.00000000);
	gruzgate = CreateDynamicObject(968,2203.8630371094,-2252.1179199219,13.5,0.00000000,270.00000000,316.00000000);

	//=============================Nautosalon==================================
	//AutoSalon
	AutoShopText[0] = TextDrawCreate(527.000000, 230.000000, "<<");
	TextDrawLetterSize(AutoShopText[0], 0.220000, 1.199999);

	AutoShopText[1] = TextDrawCreate(581.000000, 230.000000, ">>");
	TextDrawLetterSize(AutoShopText[1], 0.220000, 1.199999);

	AutoShopText[2] = TextDrawCreate(581.000000, 271.000000, ">");
	TextDrawLetterSize(AutoShopText[2], 0.220000, 0.599999);

	AutoShopText[3] = TextDrawCreate(581.000000, 281.000000, ">");
	TextDrawLetterSize(AutoShopText[3], 0.220000, 0.599999);

	AutoShopText[4] = TextDrawCreate(527.000000, 281.000000, "<");
	TextDrawLetterSize(AutoShopText[4], 0.220000, 0.599999);

	AutoShopText[5] = TextDrawCreate(527.000000, 271.000000, "<");
	TextDrawLetterSize(AutoShopText[5], 0.220000, 0.599999);

	for(new s; s < 6; s++)
	{
		TextDrawTextSize(AutoShopText[s], 10.10, 40.40);
		TextDrawAlignment(AutoShopText[s], 2);
		TextDrawBackgroundColor(AutoShopText[s], 255);
		TextDrawFont(AutoShopText[s], 2);
		TextDrawColor(AutoShopText[s], -1);
		TextDrawSetProportional(AutoShopText[s], 1);
		TextDrawSetShadow(AutoShopText[s], 1);
		TextDrawUseBox(AutoShopText[s], 1);
		TextDrawBoxColor(AutoShopText[s], 555819392);
		TextDrawSetSelectable(AutoShopText[s],true);
	}

	AutoShopText[6] = TextDrawCreate(556.000000, 311.000000, "BUY");
	TextDrawLetterSize(AutoShopText[6], 0.450000, 0.899999);
	TextDrawBoxColor(AutoShopText[6], 144);
	TextDrawTextSize(AutoShopText[6], 10.10, 56.56);
	TextDrawSetSelectable(AutoShopText[6], 1);

	AutoShopText[7] = TextDrawCreate(556.000000, 331.000000, "EXIT");
	TextDrawLetterSize(AutoShopText[7], 0.450000, 0.899999);
	TextDrawBoxColor(AutoShopText[7], 144);
	TextDrawTextSize(AutoShopText[7], 10.10, 56.56);
	TextDrawSetSelectable(AutoShopText[7],true);

	AutoShopText[8] = TextDrawCreate(554.000000, 161.000000, "_");// фон
	TextDrawLetterSize(AutoShopText[8], 0.500000, 22.200017);
	TextDrawSetProportional(AutoShopText[8], 1);
	TextDrawBoxColor(AutoShopText[8], 1128481664);
	TextDrawTextSize(AutoShopText[8], 0.000000, 105.000000);

	for(new e = 6; e < 9; e++)
	{
		TextDrawAlignment(AutoShopText[e], 2);
		TextDrawBackgroundColor(AutoShopText[e], 255);
		TextDrawFont(AutoShopText[e], 1);
		TextDrawColor(AutoShopText[e], -1);
		TextDrawSetProportional(AutoShopText[e], 1);
		TextDrawSetShadow(AutoShopText[e], 1);
		TextDrawUseBox(AutoShopText[e], 1);
	}

	AutoShopText[9] = TextDrawCreate(522.000000, 211.000000, "SELECT CAR");
	AutoShopText[10] = TextDrawCreate(537.000000, 251.000000, "COLOR");
	AutoShopText[11] = TextDrawCreate(541.000000, 165.000000, "INFO");

	for(new r = 9; r < 12; r++)
	{
		TextDrawBackgroundColor(AutoShopText[r], 255);
		TextDrawFont(AutoShopText[r], 2);
		TextDrawSetOutline(AutoShopText[r], 0);
		TextDrawSetShadow(AutoShopText[r], 0);
		TextDrawLetterSize(AutoShopText[r], 0.260000, 1.300000);
		TextDrawColor(AutoShopText[r], -2016477185);
		TextDrawSetProportional(AutoShopText[r], 1);
	}
	// ============================= ACTORS ==============================
	ActorsRob[0] = CreateActor(179, 296.8526,-82.5276,1001.5156,358.8242);
	SetActorVirtualWorld(ActorsRob[0], 0);
	SetActorHealth(ActorsRob[0], 255);

	ActorsRob[1] = CreateActor(179, 295.4810,-40.2167,1001.5156,2.2428);
	SetActorVirtualWorld(ActorsRob[1], 0);
	SetActorHealth(ActorsRob[1], 255);

	ActorsRob[2] = CreateActor(179, 316.1089,-133.7254,999.6016,91.0626);
	SetActorVirtualWorld(ActorsRob[2], 0);
	SetActorHealth(ActorsRob[2], 255);

	ActorsRob[3] = CreateActor(30, 204.8515,-8.1603,1001.2109,268.4108); // ls victim
	SetActorVirtualWorld(ActorsRob[3], 2);
	SetActorHealth(ActorsRob[3], 255);

	ActorsRob[4] = CreateActor(30, 204.8515,-8.1603,1001.2109,268.4108); // sf victim
	SetActorVirtualWorld(ActorsRob[4], 1);
	SetActorHealth(ActorsRob[4], 255);

	ActorsRob[5] = CreateActor(274, 354.0420,-49.3791,1076.4642,268.4257); // LV MEDICS
	SetActorVirtualWorld(ActorsRob[5], 5);
	SetActorHealth(ActorsRob[5], 255);

	ActorsRob[6] = CreateActor(274, 354.0420,-49.3791,1076.4642,268.4257); // SF MEDICS
	SetActorVirtualWorld(ActorsRob[6], 3);
	SetActorHealth(ActorsRob[6], 255);

	ActorsRob[7] = CreateActor(274, 354.0420,-49.3791,1076.4642,268.4257); // LS MEDICS
	SetActorVirtualWorld(ActorsRob[7], 4);
	SetActorHealth(ActorsRob[7], 255);

	for(new i = 0; i < 8; i++) SetActorInvulnerable(ActorsRob[i], true);
	//=============================AutoSalon===================================
	DRAP = TextDrawCreate(510.0, 120.0, "~n~~n~\t~b~[]select~n~\t\t\t~g~next: ~w~q ~n~\t\t\t~g~last: ~w~e~n~~n~\t~b~[]select color ~n~\t\t\t~g~next: ~w~num4 ~n~\t\t\t~g~last: ~w~num6~n~~n~\t~b~[]other ~n~\t\t\t~g~switch color: ~w~space~n~~n~\t\t\t~g~accept: ~w~return ~n~\t\t\t~r~cancel: ~w~c ~n~");
	TextDrawFont(DRAP, 2);
	TextDrawLetterSize(DRAP, 0.20,0.80);
	TextDrawColor(DRAP, -1);
	TextDrawSetShadow(DRAP, 1);
	TextDrawBackgroundColor(DRAP, 0x00000044);
	TextDrawSetOutline(DRAP, 0);
	TextDrawSetProportional(DRAP, 3);
	TextDrawAlignment(DRAP, 1);
	TextDrawUseBox(DRAP, 1);
	TextDrawBoxColor(DRAP, COLOR_BOX);
	

	testactor = CreateActor(73, 2057.6011,-1897.2515,13.5538,171.0681);
	SetActorInvulnerable(testactor, true);
	SetActorVirtualWorld(testactor, 0);
	
	
	new actor = CreateActor(76, 362.7939,171.4518,1025.7891,188.0356);
	SetActorInvulnerable(actor, true);
	SetActorVirtualWorld(actor, 0);
	
	//CreateDynamicSphere(Float:x, Float:y, Float:z, Float:size, worldid = -1, interiorid = -1, playerid = -1, priority = 0)
	bankarea[0] = CreateDynamicSphere(1540.7825,-1223.1622,1388.3552, 1.0);
	bankarea[1] = CreateDynamicSphere(1540.7828,-1225.5525,1388.3552, 1.0);
	bankarea[2] = CreateDynamicSphere(1540.7831,-1227.8401,1388.3552, 1.0);

	duelpickup = CreateDynamicSphere(2057.5391,-1897.2125,13.5538,1.0,0,0,-1);
	orgpickup = CreateDynamicSphere(362.7939,171.4518,1025.7891,1.5,0,3,-1);
	
	CreateDynamicPickup(19134, 23, 363.6462,154.5916,1025.7965, 0, 3, -1); // на улице
	votepick = CreateDynamicSphere(363.6462,154.5916,1025.7965,0.8,0,3,-1);
	
	CreateDynamicPickup(1318, 23, 193.3684,1931.5427,17.6406, 0, 0, -1); // на улице
	pickuparmy[0] = CreateDynamicSphere(193.3684,1931.5427,17.6406,0.8,0,0,-1);
	
	CreateDynamicPickup(1318, 23, 2522.9231,-1306.2876,2166.6021, 0, 1, -1); // в здании
	pickuparmy[1] = CreateDynamicSphere(2522.9231,-1306.2876,2166.6021,0.8,0,1,-1);
	
	CreateDynamicPickup(1318, 23, 1658.5476,-1691.3774,15.6094, 0, 0, -1); // на улице
	lcnls[0] = CreateDynamicSphere(1658.5476,-1691.3774,15.6094,0.8,0,0,-1);
	
	CreateDynamicPickup(1318, 23, 1440.8402,-1069.4869,1717.9871, 1, 1, -1); // в здании
	lcnls[1] = CreateDynamicSphere(1440.8402,-1069.4869,1717.9871,0.8,1,1,-1);
	
	CreateDynamicPickup(1318, 23, -2059.5225,457.8317,35.1719, 0, 0, -1); // на улице
	lcnsf[0] = CreateDynamicSphere(-2059.5225,457.8317,35.1719,0.8,0,0,-1);
	CreateDynamicPickup(1318, 23, 1440.8402,-1069.4869,1717.9871, 2, 1, -1); // в здании
	lcnsf[1] = CreateDynamicSphere(1440.8402,-1069.4869,1717.9871,0.8,2,1,-1);
	CreateDynamicPickup(1318, 23, -2054.2947,456.5092,139.6406, 2, 1, -1); // крыша
	lcnsf[2] = CreateDynamicSphere(-2054.2947,456.5092,139.6406,0.8,2,1,-1);
	
	CreateDynamicPickup(1318, 23, 2648.9773,1185.3628,10.8203, 0, 0, -1); // на улице
	lcnlv[0] = CreateDynamicSphere(2648.9773,1185.3628,10.8203,0.8,0,0,-1);
	
	CreateDynamicPickup(1318, 23, 1440.8402,-1069.4869,1717.9871, 3, 1, -1); // в здании
	lcnlv[1] = CreateDynamicSphere(1440.8402,-1069.4869,1717.9871,0.8,3,1,-1);
	
	CreateDynamicPickup(1318, 23, 1455.1879,750.9943,11.0234, 0, 0, -1);
	lcnpick[0] = CreateDynamicSphere(1455.1879,750.9943,11.0234,0.8,0,0,-1);
	
	CreateDynamicPickup(1318, 23, 1298.8829,-796.7081,1084.0078, 2, 5, -1);
	lcnpick[1] = CreateDynamicSphere(1298.8829,-796.7081,1084.0078,0.8,2,5,-1); //вв инт пикап в инте
	
	CreateDynamicPickup(18955, 23, 208.7445,-3.5261,1001.2178, -1, -1, -1);
	dresspick = CreateDynamicSphere(208.7445,-3.5261,1001.2178,0.8,-1,-1,-1);
	
	
	CreateDynamicPickup(1275, 23, 1452.7290,-1094.1639,1717.9871, -1, 1, -1);
	FormaFracPic[5] = CreateDynamicSphere(1452.7290,-1094.1639,1717.9871,0.8,-1,1,-1);
	
	CreateDynamicPickup(1239, 23, 775.8078,-465.3459,1428.1820, -1, 1, -1);
	bBar = CreateDynamicSphere(775.8078,-465.3459,1428.1820,0.8,-1, 1, -1);
	

	maria = CreateDynamicPickup(1318,23,1438.0618,-1790.1196,33.4297);
	marexit = create_pickup(1318,390.1618,173.8988,1008.3828);// Выход из мэрии
	bankpic[0] = create_pickup(1318,1411.5237,-1699.5793,13.5395);//Банк вход
	bankpic[1] = create_pickup(1318,1521.1271,-1225.5195,1388.3552);//Банк выход
	//banksf = CreateDynamicPickup(1318,23,-2172.0627,252.1688,35.3385);//Банк SF выход
	ballasvhod[0] = CreateDynamicPickup(1318,23,607.4389,-151.6315,1093.2379,34);//Ballas на улицу
	ballasvhod[1] = CreateDynamicPickup(1318,23,2650.6992,-2021.8175,14.1766);//Ballas в интерьр
	rifa[0] = CreateDynamicPickup(1318,23,291.6397,-141.2479,1161.2759,63);//Рифа вход на улицу
	rifa[1] = CreateDynamicPickup(1318,23,2185.8225,-1815.2219,13.5469);//Рифа вход
	vagospic[0] = CreateDynamicPickup(1318,23,2770.7471,-1628.7227,12.1775);//Vagos вход
	vagospic[1] = CreateDynamicPickup(1318,23,2809.6873,-1603.2987,-36.9231,75);//Vagos выход
	aztecpic[0] = CreateDynamicPickup(1318,23,1667.52,-2106.94,14.07);//Aztec вход
	aztecpic[1] = CreateDynamicPickup(1318,23,1581.2748,-1592.7151,394.4919,36);//Aztec выход
	grooveexit = CreateDynamicPickup(1318,23,2495.7993,-1692.4044,1014.7422,1);//grove spawn выход
	grooveenter = CreateDynamicPickup(1318,23,2495.3271,-1690.9893,14.7656);//Дом грув
	zona = CreateDynamicPickup(1318,23,279.2340,1833.1393,18.0874);//стрелка2
	zonaa = CreateDynamicPickup(1318,23,291.8918,1833.7253,18.1027);//стрелка3
	sklad[0] = CreateDynamicPickup(1318,23,340.5722,1949.2020,22.0172);//стрелка4
	sklad[1] = CreateDynamicPickup(1318,23,316.3806,-170.2857,999.5938);//стрелка5
	sklad[2] = CreateDynamicPickup(1318,23,316.3806,-170.2857,999.5938,3);//стрелка6
	sklad[3] = CreateDynamicPickup(1318,23,-1373.0463,498.9842,11.1953);//стрелка7
	skladfbi = CreateDynamicPickup(1318,23,-2472.9717,511.4288,1039.1265,130);//стрелка7
	skladfbi2 = CreateDynamicPickup(1318,23,316.4419,-170.2977,999.5938,130);//стрелка7
	gunpicpaint[0] = CreateDynamicPickup(349,23,2547.0986,2828.4377,14.2559,10);//shot
	gunpicpaint[1] = CreateDynamicPickup(348,23,2590.0403,2820.9597,10.8203,10);//deagle
	gunpicpaint[2] = CreateDynamicPickup(353,23,2567.6379,2830.7859,20.6061,10);//smg
	gunpicpaint[3] = CreateDynamicPickup(356,23,2585.1606,2810.1277,19.9922,10);//m4
	gunpicpaint[4] = CreateDynamicPickup(355,23,2593.8831,2825.5127,19.9922,10);//ak
	rob = CreateDynamicPickup(1239, 23, 2755.9060,-2515.5491,13.6397, -1);
	//Руб
	//==========================================================================
	CreateVehicles();

	//==========================================================================
	ShowPlayerMarkers(PLAYER_MARKERS_MODE_STREAMED);
	LimitPlayerMarkerRadius(30.0);
	ManualVehicleEngineAndLights();
	AllowInteriorWeapons(1);
	//==========================================================================
	//==========================================================================
	for(new i = 0; i < sizeof(CreatedCars); i++) CreatedCars[i] = 0;
	//==========================================================================
	for(new i = 0; i <= sizeof(Peds)-1; i++) AddPlayerClass(Peds[i][0],1958.3783,1343.1572,1100.3746,269.1425,-1,-1,-1,-1,-1,-1);
	//============================ Иконки на карте =============================
	CreateDynamicMapIcon(2492.3135,-1461.1936,24.0216, 42, COLOR_WHITE, 0, -1, -1, 400.0);//Работа автоугонщика.
	CreateDynamicMapIcon(-2.9803,-363.4466,5.4297,51,0); // Развозчики
	CreateDynamicMapIcon(472.4380,-1515.5332,40.5726,45,0); // Victim LS
	CreateDynamicMapIcon(-1696.9604,948.3770,24.8906,45,0); // Victim SF
	CreateDynamicMapIcon(542.1437,-1272.3624,51.3059,55,0); // AutoSalone LS
	CreateDynamicMapIcon(-1948.4501,278.1562,68.9698,55,0); // AutoSalone SF
	CreateDynamicMapIcon(2200.9758,1394.2899,11.0625,55,0); // AutoSalone LV
	CreateDynamicMapIcon(2196.9663,1677.1544,12.3672,25,0); // Сasino Caligula
	CreateDynamicMapIcon(2019.3177,1007.7430,10.8203,43,0); // Сasino 4 Dragons
	CreateDynamicMapIcon(1481.2144,-1756.5200,17.5313,56,0); // Goverment
	CreateDynamicMapIcon(1552.8314,-1675.9022,16.1953,30,0); // Police LS
	CreateDynamicMapIcon(-1605.4998,710.2729,13.8672,30,0); // Police SF
	CreateDynamicMapIcon(2340.2075,2459.0200,14.9688,30,0); // Police LV
	CreateDynamicMapIcon(1173.6215,-1323.2500,15.1953,22,0); // Medics LS
	CreateDynamicMapIcon(-2664.6611,637.9663,14.4531,22,0); // Medics SF
	CreateDynamicMapIcon(1607.1716,1817.0586,10.8203,22,0); // Medics LV

	CreateDynamicMapIcon(1414.0972,-1701.0652,13.5395,52,0); // Bank LS
	CreateDynamicMapIcon(-2172.0627,252.1688,35.3385,52,0); // Bank SF

	CreateDynamicMapIcon(-2026.9664,-100.3766,35.1641,36,0); // Autoschool
	CreateDynamicMapIcon(1365.6863,-1279.8872,13.5469,6,0); // Ammo LS
	CreateDynamicMapIcon(-2626.6384,210.3960,4.5971,6,0); // Ammo SF
	CreateDynamicMapIcon(2159.5449,943.2165,10.8203,6,0); // Ammo LV
	CreateDynamicMapIcon(2228.5789,-1721.7820,13.5654,54,0); // Спортзал LS
	CreateDynamicMapIcon(-2270.6406,-155.9734,35.3203,54,0); // Спортзал SF
	CreateDynamicMapIcon(1961.8124,-2189.2671,13.5469,53,0); // Race
	//============================= Zone 51 ====================================
	CreateDynamicMapIcon(212.2816,1812.2374,21.8672,56,0); // Точка наблюдения
	
	
	//==========================================================================
	for(new Vehicles = 0; Vehicles < MAX_VEHICLES; Vehicles++) {
		Farmcar_pickup[Vehicles] = 0;
	 	car_pickup[Vehicles] = 0;
	 	SetVehicleNumberPlate(Vehicles, ""NameServer"");
	  	SetVehicleParamsEx(Vehicles,false,false,false,false,false,false,false);
	  	car_data[Vehicles][Owner] = INVALID_PLAYER_ID;
	}
	//==========================================================================
	buy_interior_menu = CreateMenu("Shop", 1, 50.0, 200.0, 70.0);
//	SetMenuColumnHeader(buy_interior_menu, 0, "Choose interior");
	AddMenuItem(buy_interior_menu, 0, "Next >>");
	AddMenuItem(buy_interior_menu, 0, "Buy");
	AddMenuItem(buy_interior_menu, 0, "Exit");

	BuyClothes[0] = CreateMenu("Clothes", 1, 50.0, 160.0, 110.0);
	SetMenuColumnHeader(BuyClothes[0], 0, "Choose Skin");
	AddMenuItem(BuyClothes[0], 0, "Next >>");
	AddMenuItem(BuyClothes[0], 0, "<< Previous");
	AddMenuItem(BuyClothes[0], 0, "Buy");
	AddMenuItem(BuyClothes[0], 0, "Exit");

	ClothesBuy = CreateMenu("Clothes", 1, 50.0, 160.0, 110.0);
	SetMenuColumnHeader(ClothesBuy, 0, "Choose Skin");
	AddMenuItem(ClothesBuy, 0, "<< Previous");
	AddMenuItem(ClothesBuy, 0, "Next >>");
	AddMenuItem(ClothesBuy, 0, "Buy");
	AddMenuItem(ClothesBuy, 0, "Exit");

	ChoseSkin[0] = CreateMenu("Victim", 1, 50.0, 160.0, 110.0);
	SetMenuColumnHeader(ChoseSkin[0], 0, "Choose Skin");
	AddMenuItem(ChoseSkin[0], 0, ">> Next");
	AddMenuItem(ChoseSkin[0], 0, "<< Previous");
	AddMenuItem(ChoseSkin[0], 0, "Done");

	ChoseSkin[1] = CreateMenu("Victim", 1, 50.0, 160.0, 110.0);
	SetMenuColumnHeader(ChoseSkin[1], 0, "Choose Skin");
	AddMenuItem(ChoseSkin[1], 0, "<< Previous");
	AddMenuItem(ChoseSkin[1], 0, ">> Next");
	AddMenuItem(ChoseSkin[1], 0, "Done");
	
	headmenu[0] = CreateMenu("Victim", 1, 50.0, 160.0, 90.0);
	SetMenuColumnHeader(headmenu[0], 0, "~g~Accessories");
	AddMenuItem(headmenu[0], 0, "Hats");
	AddMenuItem(headmenu[0], 0, "Caps");
	AddMenuItem(headmenu[0], 0, "Clock");
	AddMenuItem(headmenu[0], 0, "Glasses");
	AddMenuItem(headmenu[0], 0, "Bandans");
	AddMenuItem(headmenu[0], 0, "Berets");
	AddMenuItem(headmenu[0], 0, "Headdress");
	AddMenuItem(headmenu[0], 0, "Helmets");
	AddMenuItem(headmenu[0], 0, "Masks");
	

	headmenu[1] = CreateMenu("Victim", 1, 50.0, 160.0, 90.0);
	SetMenuColumnHeader(headmenu[0], 0, "~g~Accessories");
	AddMenuItem(headmenu[1], 0, "Next >>");
	AddMenuItem(headmenu[1], 0, "<< Back");
	AddMenuItem(headmenu[1], 0, "Buy");

	/////////////// MySQL загрузка мода ///////////////
	//mysql_log();
	DATABASE = mysql_connect("localhost", "H39605", "hesoyam228123", "EVEBASE39605");
//	DATABASE = mysql_connect("localhost", "root", "noxe", ""); //myarena
	
	mysql_log(ALL);

    mysql_set_charset("cp1251", DATABASE);
	mysql_query(DATABASE, "SET NAMES cp1251");
	mysql_query(DATABASE, "SET SESSION character_set_server='utf8';");


	mysql_stat(string); 
	print(string);
	mysql_tquery(DATABASE,"SELECT * FROM `"TABLE_HOUSE"`","house_load");
	mysql_tquery(DATABASE,"SELECT * FROM `podeezdi`","podeezd_load");
	mysql_tquery(DATABASE,"SELECT * FROM `kvartiri`","kvartiri_load");

	mysql_tquery(DATABASE,"SELECT * FROM `"TABLE_BIZZ"`","OnMySQL_QUERY","iis",6,-1,"");
	mysql_tquery(DATABASE,"SELECT * FROM `"TABLE_WORKSHOPS"`","OnMySQL_QUERY","iis",7,-1,"");
	// Бонусы
	mysql_tquery(DATABASE,"SELECT * FROM `boost`","OnMySQL_QUERY","iis",34,-1,"");
	//===========
	mysql_tquery(DATABASE,"SELECT * FROM `"TABLE_CASINO"`","OnMySQL_QUERY","iis",10,-1,"");
	mysql_tquery(DATABASE,"SELECT * FROM `"TABLE_OTHERS"`","OnMySQL_QUERY","iis",0,-1,"");
	mysql_tquery(DATABASE,"SELECT * FROM `"TABLE_FARM"`","OnMySQL_QUERY","iis",28,-1,"");
	mysql_tquery(DATABASE,"SELECT * FROM `"TABLE_STALL"`","OnMySQL_QUERY","iis",31,-1,"");
	mysql_tquery(DATABASE,"SELECT * FROM `"TABLE_GANGZONE"`","OnMySQL_QUERY","iis",32,-1,"");
	mysql_tquery(DATABASE,"SELECT * FROM `"TABLE_TAXI"`","OnMySQL_QUERY","iis",55,-1,"");
	return true;
}
stock CreateVehicles()
{
	/////////////////////////// таксиииииииии
	
	taxi_park_car[0] = CreateVehicle_R(560,1084.6000000,-1775.7000000,13.1990200,270.0000000,6,6,600); //Sultan
	CreateVehicle_R(560,1084.6000000,-1769.6000000,13.1990200,270.0000000,6,6,600); //Sultan
	CreateVehicle_R(560,1084.6000000,-1763.8000000,13.1990200,270.0000000,6,6,600); //Sultan
	CreateVehicle_R(560,1084.6000000,-1758.0000000,13.1990200,270.0000000,6,6,600); //Sultan

	CreateVehicle_R(507,1077.1000000,-1758.0000000,13.3000000,90.0000000,6,6,600); //Elegant
	CreateVehicle_R(507,1077.1000000,-1763.8000000,13.3000000,90.0000000,6,6,600); //Elegant
	CreateVehicle_R(507,1077.1000000,-1769.6000000,13.3000000,90.0000000,6,6,600); //Elegant
	CreateVehicle_R(507,1077.1000000,-1775.7000000,13.3000000,90.0000000,6,6,600); //Elegant
	CreateVehicle_R(405,1099.2000000,-1758.0000000,13.4000000,90.0000000,6,6,600); //Sentinel
	CreateVehicle_R(405,1099.2000000,-1763.8000000,13.4000000,90.0000000,6,6,600); //Sentinel
	CreateVehicle_R(405,1099.2000000,-1769.6000000,13.4000000,90.0000000,6,6,600); //Sentinel
	CreateVehicle_R(405,1099.2000000,-1775.7000000,13.4000000,90.0000000,6,6,600); //Sentinel
	CreateVehicle_R(420,1062.7000000,-1775.6000000,13.1009900,270.0000000,6,6,600); //Taxi
	CreateVehicle_R(420,1062.7000000,-1769.8000000,13.1009900,270.0000000,6,6,600); //Taxi
	CreateVehicle_R(420,1062.7000000,-1763.6000000,13.1009900,270.0000000,6,6,600); //Taxi
	CreateVehicle_R(420,1062.7000000,-1757.6000000,13.1009900,270.0000000,6,6,600); //Taxi
	CreateVehicle_R(420,1062.7000000,-1752.1000000,13.1000000,270.0000000,6,6,600); //Taxi
	CreateVehicle_R(420,1062.7000000,-1746.1000000,13.1000000,270.0000000,6,6,600); //Taxi
	taxi_park_car[1] = CreateVehicle_R(420,1062.7000000,-1740.1000000,13.1000000,270.0000000,6,6,600); //Taxi
	//=========== [sf taxi]
	taxi_park_car[2] = CreateVehicle_R(420,-2266.0000000,216.6000100,35.0000000,90.0000000,6,6,600); //Taxi
	CreateVehicle_R(420,-2266.0000000,212.3999900,35.0000000,90.0000000,6,6,600); //Taxi
	CreateVehicle_R(507,-2266.0000000,208.7000000,35.1858700,90.0000000,6,6,600); //Elegant
	CreateVehicle_R(507,-2266.0000000,204.5000000,35.2000000,90.0000000,6,6,600); //Elegant
	CreateVehicle_R(405,-2266.0000000,200.6000100,35.2000000,90.0000000,6,6,600); //Sentinel
	CreateVehicle_R(405,-2266.0000000,196.7000000,35.2000000,90.0000000,6,6,600); //Sentinel
	CreateVehicle_R(560,-2266.0000000,192.3000000,35.0000000,90.0000000,6,6,600); //Sultan
	taxi_park_car[3] = CreateVehicle_R(560,-2266.0000000,188.8000000,35.0000000,90.0000000,6,6,600); //Sultan
	//============[lv taxi]
	taxi_park_car[4] = CreateVehicle_R(420,2474.3000000,1356.9000000,10.7000000,180.0000000,6,6,600); //Taxi
	CreateVehicle_R(420,2467.8000000,1356.9000000,10.7000000,180.0000000,6,6,600); //Taxi
	CreateVehicle_R(420,2461.5000000,1356.9000000,10.7000000,180.0000000,6,6,600); //Taxi
	CreateVehicle_R(420,2455.5000000,1356.9000000,10.7000000,180.0000000,6,6,600); //Taxi
	CreateVehicle_R(507,2452.0000000,1346.2998000,10.8000000,0.0000000,6,6,600); //Elegant
	CreateVehicle_R(507,2464.9004000,1346.2998000,10.8000000,0.0000000,6,6,600); //Elegant
	CreateVehicle_R(507,2458.4004000,1346.2998000,10.8000000,0.0000000,6,6,600); //Elegant
	CreateVehicle_R(405,2441.3999000,1355.0000000,10.8000000,270.0000000,6,6,600); //Sentinel
	CreateVehicle_R(405,2441.3999000,1348.3000000,10.8000000,270.0000000,6,6,600); //Sentinel
	CreateVehicle_R(405,2441.3999000,1341.8000000,10.8000000,270.0000000,6,6,600); //Sentinel
	CreateVehicle_R(405,2441.3999000,1335.8000000,10.8000000,270.0000000,6,6,600); //Sentinel
	CreateVehicle_R(560,2452.0000000,1336.0000000,10.6000000,180.0000000,6,6,600); //Sultan
	CreateVehicle_R(560,2458.4004000,1336.0000000,10.6000000,180.0000000,6,6,600); //Sultan
	taxi_park_car[5] = CreateVehicle_R(560,2464.9004000,1336.0000000,10.6000000,180.0000000,6,6,600); //Sultan

	for(new i = taxi_park_car[0]; i < taxi_park_car[5]; i++)
	{
		new tmp_obj_car;
		if(GetVehicleModel(i) != 420) tmp_obj_car = CreateDynamicObject(19308,0,0,0,0,0,0);
		car_data[i][TypeCar] = TYPE_TAXI;
		if(GetVehicleModel(i) == 507) AttachDynamicObjectToVehicle(tmp_obj_car, i, 0.000000, -0.578735, 0.895532, -0.800000, 0.000000, 0.000000); 
		if(GetVehicleModel(i) == 405) AttachDynamicObjectToVehicle(tmp_obj_car, i, 0.000000, -0.429321, 0.842995, -0.700000, 0.000000, 0.000000); 
		if(GetVehicleModel(i) == 560) AttachDynamicObjectToVehicle(tmp_obj_car, i, 0.000000, -0.198364, 0.916622, 0.099999, 0.000000, 0.000000) ; // 560
	}
	/////////////////////////////////////////////////////////////////////////////////


	pizza_faggio[0] = CreateVehicle_R(448,2097.1001000,-1812.7000000,13.1000000,90.0000000,132,4,600); //Pizzaboy
	CreateVehicle_R(448,2097.1001000,-1814.2000000,13.1000000,90.0000000,132,4,600); //Pizzaboy
	CreateVehicle_R(448,2097.1001000,-1815.5000000,13.1000000,90.0000000,132,4,600); //Pizzaboy
	CreateVehicle_R(448,2097.1001000,-1817.2002000,13.1000000,90.0000000,132,4,600); //Pizzaboy
	CreateVehicle_R(448,2097.1001000,-1819.0000000,13.1000000,90.0000000,132,4,600); //Pizzaboy
	pizza_faggio[1] = CreateVehicle_R(448,2097.1001000,-1820.5000000,13.1000000,90.0000000,132,4,600); //Pizzaboy
	//============================== Rent Fly ==================================
	rentfly[0] = CreateVehicle_R(487,313.2175,-1798.6262,4.5554,270.8321,181,181,600); // ls 1
	rentfly[1] = CreateVehicle_R(487,313.4335,-1791.6262,4.5554,270.8321,181,181,600); // ls 2
	rentfly[2] = CreateVehicle_R(487,313.4335,-1805.6262,4.5554,270.8321,181,181,600); // ls 3
	rentfly[3] = CreateVehicle_R(487,-2403.0930,-595.3153,132.6484,123.5169,182,182,600); // sf 1
	rentfly[4] = CreateVehicle_R(487,-2396.0930,-604.3153,132.6484,123.5169,182,182,600); // sf 2
	rentfly[5] = CreateVehicle_R(487,-2409.0930,-589.3153,132.6484,123.5169,182,182,600); // sf 3
	rentfly[6] = CreateVehicle_R(487,988.6429,1110.4434,10.8203,257.6251,197,197,600); // lv 1
	rentfly[7] = CreateVehicle_R(487,988.6429,1090.4434,10.8203,257.6251,197,197,600); // lv 2
	rentfly[8] = CreateVehicle_R(487,988.6429,1130.4434,10.8203,257.6251,197,197,600); // lv 3
	admincar[0] = CreateVehicle_R(446,251.4905,2931.1431,-0.1545,0,0,0,600); //admin house car
	buscar[0] = CreateVehicle_R(437,1277.0209960938,-1795.6282958984,13.64319229126,90,86,86,600);//Автобус (внутригородской ЛС)
	CreateVehicle_R(437,1277.0209960938,-1802.1025390625,13.64319229126,90,86,86,600);//Автобус (внутригородской ЛС)
	CreateVehicle_R(437,1277.0209960938,-1808.5930175781,13.64319229126,90,86,86,600);//Автобус (внутригородской ЛС)
	CreateVehicle_R(437,1277.0209960938,-1814.8427734375,13.64319229126,90,86,86,600);//Автобус (внутригородской ЛС)
	CreateVehicle_R(437,1277.0209960938,-1820.8427734375,13.64319229126,90,86,86,600);//Автобус (внутригородской ЛС)
	CreateVehicle_R(437,1277.0209960938,-1827.0927734375,13.64319229126,90,86,86,600);//Автобус (внутригородской ЛС)
	CreateVehicle_R(437,1239.6343994141,-1817.5446777344,13.672597885132,180,86,86,600);//Автобус (внутригородской ЛС)
	buscar[1] = CreateVehicle_R(437,1277.0209960938,-1833.3366699219,13.64319229126,90,86,86,600);//Автобус (внутригородской ЛС)
	buscar[2] = CreateVehicle_R(437,-1967.0225830078,104.88460540771,27.9375,90,6,6,600);//Автобус (внутригородской Сф)
	CreateVehicle_R(437,-1967.0225830078,99.884094238281,27.9375,90,6,6,600);//Автобус (внутригородской Сф)
	CreateVehicle_R(437,-1967.0225830078,94.33415222168,27.9375,90,6,6,600);//Автобус (внутригородской Сф)
	CreateVehicle_R(437,-1967.0225830078,89.08430480957,27.9375,90,6,6,600);//Автобус (внутригородской Сф)
	buscar[3] = CreateVehicle_R(437,-1967.0225830078,83.085815429688,27.9375,90,6,6,600);//Автобус (внутригородской Сф)
	buscar[4] = CreateVehicle_R(437,2764.0932617188,1293.1108398438,11,180,18,18,600);//Автобус (внутригородской ЛВ)
	CreateVehicle_R(437,2769.3427734375,1293.1108398438,11,180,18,18,600);//Автобус (внутригородской ЛВ)
	CreateVehicle_R(437,2775.0703125,1293.1108398438,11,180,18,18,600);//Автобус (внутригородской ЛВ)
	CreateVehicle_R(437,2780.5703125,1293.1108398438,11,180,18,18,600);//Автобус (внутригородской ЛВ)
	CreateVehicle_R(437,2785.8203125,1293.1108398438,11,180,18,18,600);//Автобус (внутригородской ЛВ)
	CreateVehicle_R(437,2790.8950195313,1293.1108398438,11,180,18,18,600);//Автобус (внутригородской ЛВ)
	buscar[5] = CreateVehicle_R(437,2796.2651367188,1293.1108398438,11,180,18,18,600);//Автобус (внутригородской ЛВ)
	buscar[6] = CreateVehicle_R(431,1675.3450927734,-1129.1733398438,24.15625,90,1,2,600);//Автобус (Меж городской)
	CreateVehicle_R(431,1675.3450927734,-1124.7479248047,24.15625,90,1,2,600);//Автобус (Меж городской)
	CreateVehicle_R(431,1675.3450927734,-1120.4718017578,24.15625,90,1,2,600);//Автобус (Меж городской)
	CreateVehicle_R(431,1675.3450927734,-1115.8715820313,24.15625,90,1,2,600);//Автобус (Меж городской)
	CreateVehicle_R(431,1675.3450927734,-1111.6203613281,24.15625,90,1,2,600);//Автобус (Меж городской)
	CreateVehicle_R(431,1675.2983398438,-1107.0950927734,24.15625,90,1,2,600);//Автобус (Меж городской)
	CreateVehicle_R(431,1675.3450927734,-1102.6440429688,24.15625,90,1,2,600);//Автобус (Меж городской)
	buscar[7] = CreateVehicle_R(431,1675.3450927734,-1098.1450195313,24.15625,90,1,2,600);//Автобус (Меж городской)
	//============================== MEDICS SF =================================
	medicssf[0] = CreateVehicle_R(416,-2667.0894,614.2082,14.6278,181.1619,1,3,600); //
	medicssf[1] = CreateVehicle_R(416,-2662.3877,614.3588,14.6395,178.8490,1,3,600); //
	medicssf[2] = CreateVehicle_R(416,-2657.6091,614.4506,14.6532,179.6371,1,3,600); //
	medicssf[3] = CreateVehicle_R(416,-2652.7881,614.2981,14.6467,179.8118,1,3,600); //
	medicssf[4] = CreateVehicle_R(416,-2644.8718,614.2336,14.5154,180.2280,1,3,600); //
	medicssf[5] = CreateVehicle_R(416,-2639.3708,614.4089,14.5413,180.5666,1,3,600); //
	medicssf[6] = CreateVehicle_R(416,-2633.3655,614.0867,14.5413,179.5042,1,3,600); //
	medicssf[7] = CreateVehicle_R(561,-2654.2410,599.3944,14.2134,179.9998,3,1,600); //
	medicssf[8] = CreateVehicle_R(561,-2658.3591,599.4279,14.2350,179.9999,3,1,600); //
	medicssf[9] = CreateVehicle_R(561,-2662.2312,599.4658,14.2265,179.8246,3,1,600); //
	medicssf[10] = CreateVehicle_R(561,-2666.2554,599.4199,14.2354,175.8854,3,1,600); //
	medicssf[11] = CreateVehicle_R(561,-2670.3159,599.3124,14.2134,179.9998,3,1,600); //
	medicssf[12] = CreateVehicle_R(487,-2728.9033,612.0590,33.4486,90.0014,1,3,600); //
	medicssf[13] = CreateVehicle_R(487,-2728.8518,593.8652,33.4667,90.0064,1,3,600); //
	//----------------- Fort Carson Medics
	medicssf[14] = CreateVehicle_R(416,-305.2468,1036.2025,19.7427,269.7702,1,3,600); //
	medicssf[15] = CreateVehicle_R(416,-305.2034,1032.4257,19.7429,271.1437,1,3,600); //
	medicssf[16] = CreateVehicle_R(416,-305.2198,1027.9818,19.7432,270.6406,1,3,600); //
	medicssf[17] = CreateVehicle_R(416,-305.3309,1023.9189,19.7429,270.5449,1,3,600); //
	medicssf[18] = CreateVehicle_R(416,-305.3280,1019.7915,19.7432,270.1348,1,3,600); //
	medicssf[19] = CreateVehicle_R(416,-305.4116,1015.9862,19.7430,270.3069,1,3,600); //
	medicssf[20] = CreateVehicle_R(416,-305.2804,1011.8800,19.7449,270.8234,1,3,600); //
	//================================ MEDICS LS ===============================
	medicsls[0] = CreateVehicle_R(416,1178.5853,-1338.7312,14.0452,270.0753,1,3,600); //
	medicsls[1] = CreateVehicle_R(416,1178.0670,-1308.9407,14.0320,268.0979,1,3,600); //
	medicsls[2] = CreateVehicle_R(416,1124.3884,-1327.6526,13.5133,359.7627,1,3,600); //
	medicsls[3] = CreateVehicle_R(416,1111.1395,-1328.2522,13.4496,0.2669,1,3,600); //
	medicsls[4] = CreateVehicle_R(416,1097.8245,-1329.0574,13.3941,0.2991,1,3,600); //
	medicsls[5] = CreateVehicle_R(487,1163.2595,-1305.9376,31.7142,357.5895,1,3,600); //
	//================================ MEDICS LV ===============================
	medicslv[0] = CreateVehicle_R(416,1620.1746,1849.0984,10.9770,178.5422,1,3,600); //
	medicslv[1] = CreateVehicle_R(416,1615.7095,1849.0826,10.9204,175.9977,1,3,600); //
	medicslv[2] = CreateVehicle_R(416,1610.7651,1849.1069,10.9895,178.2377,1,3,600); //
	medicslv[3] = CreateVehicle_R(416,1606.3879,1849.2563,10.9216,178.9692,1,3,600); //
	medicslv[4] = CreateVehicle_R(416,1602.1953,1849.0099,10.9086,178.5605,1,3,600); //
	medicslv[5] = CreateVehicle_R(416,1598.0675,1848.9480,10.9138,179.0217,1,3,600); //
	medicslv[6] = CreateVehicle_R(416,1593.6991,1849.0450,11.0052,178.4418,1,3,600); //
	medicslv[7] = CreateVehicle_R(416,1589.5984,1848.9933,11.0115,180.2361,1,3,600); //
	medicslv[8] = CreateVehicle_R(487,1609.5964,1801.7544,30.6336,270.0012,1,3,600); //
	//================================ SFPD ====================================
	sfpdcar[0] = CreateVehicle_R(597,-1600.4171,749.7671,-5.4677,179.9439,1,79,600); // SFPD1
	sfpdcar[1] = CreateVehicle_R(597,-1596.2659,749.7094,-5.4678,179.6262,1,79,600); // SFPD2
	sfpdcar[2] = CreateVehicle_R(597,-1592.2222,749.7622,-5.4724,180.8699,1,79,600); // SFPD3
	sfpdcar[3] = CreateVehicle_R(597,-1588.1238,749.7769,-5.5354,180.4540,1,79,600); // SFPD4
	sfpdcar[4] = CreateVehicle_R(597,-1584.0605,749.8477,-5.5348,179.8274,1,79,600); // SFPD5
	sfpdcar[5] = CreateVehicle_R(597,-1572.8368,730.8800,-5.4520,89.5223,1,79,600); // SFPD6
	sfpdcar[6] = CreateVehicle_R(597,-1572.8754,726.6901,-5.4520,88.7359,1,79,600); // SFPD7
	sfpdcar[7] = CreateVehicle_R(597,-1572.8942,722.3899,-5.5335,89.5058,1,79,600); // SFPD8
	sfpdcar[9] = CreateVehicle_R(597,-1572.9318,718.2077,-5.5258,88.7286,1,79,600); // SFPD9
	sfpdcar[10] = CreateVehicle_R(597,-1572.8405,706.1169,-5.5335,90.3532,1,79,600); // SFPD10
	sfpdcar[11] = CreateVehicle_R(523,-1595.8666,693.0551,-5.6864,178.7736,1,1,600); // SFPD ????1
	sfpdcar[12] = CreateVehicle_R(523,-1599.9996,692.9003,-5.6695,180.3339,1,1,600); // SFPD ????2
	sfpdcar[13] = CreateVehicle_R(523,-1595.9843,676.0793,-5.6692,1.2197,1,1,600); // SFPD ????3
	sfpdcar[14] = CreateVehicle_R(427,-1604.3055,692.7415,-5.0913,178.9770,1,79,600); // SFPD ????????
	sfpdcar[15] = CreateVehicle_R(427,-1608.3080,692.6514,-5.0913,179.9848,1,79,600); // SFPD ????????1
	sfpdcar[16] = CreateVehicle_R(497,-1680.4288,704.8589,30.7916,179.6366,1,79,600);
	sfpdcar[17] = CreateVehicle_R(599,-1632.8447,694.2637,-5.0524,180.3233,1,79,600); //
	sfpdcar[18] = CreateVehicle_R(599,-1628.7356,694.3826,-5.0536,179.2577,1,79,600); //
	sfpdcar[19] = CreateVehicle_R(599,-1624.4974,694.3076,-5.0539,179.8052,1,79,600); //
	sfpdcar[20] = CreateVehicle_R(599,-1620.6982,694.4608,-5.0492,179.9745,1,79,600); //

	//============================== RUSSIAN MAFIA =============================
	ruscar[0] = CreateVehicle_R(487,956.0000000,1753.9000200,8.9000000,230.0000000,0,0,600); // RM Helicopter 0
	ruscar[1] = CreateVehicle_R(409,950.2000100,1714.8000500,8.6000000,180.0000000,0,0,600); // Stretch 0
	ruscar[2] = CreateVehicle_R(580,955.5999800,1706.0999800,8.8000000,270.5000000,0,0,600); // Stafford 0
	ruscar[3] = CreateVehicle_R(580,964.5000000,1706.0999800,8.6000000,270.5000000,0,0,600); // Stafford 1
	ruscar[4] = CreateVehicle_R(579,983.5999800,1720.1999500,8.8000000,90.0000000,0,0,600); // RM HUNTLEY 0
	ruscar[5] = CreateVehicle_R(579,983.5999800,1723.9000200,8.8000000,90.0000000,0,0,600); // RM HUNTLEY 1
	ruscar[6] = CreateVehicle_R(579,983.5999800,1727.5000000,8.8000000,90.0000000,0,0,600); // RM HUNTLEY 2
	ruscar[7] = CreateVehicle_R(579,983.5999800,1731.3000500,8.8000000,90.0000000,0,0,600); // RM HUNTLEY 3
	ruscar[8] = CreateVehicle_R(579,983.5999800,1735.1999500,8.8000000,90.0000000,0,0,600); // RM HUNTLEY 4
	ruscar[9] = CreateVehicle_R(579,983.5999800,1739.0000000,8.7000000,90.0000000,0,0,600); // RM HUNTLEY 5
	ruscar[10] = CreateVehicle_R(579,983.5999800,1742.8000500,8.7000000,90.0000000,0,0,600); // RM HUNTLEY 6
	ruscar[11] = CreateVehicle_R(579,983.5999800,1746.6999500,8.7000000,90.0000000,0,0,600); // RM HUNTLEY 7
	ruscar[12] = CreateVehicle_R(468,967.9000200,1758.6999500,8.4000000,204.0000000,23,23,600); // Sanchez 0
	ruscar[13] = CreateVehicle_R(468,965.5000000,1758.6999500,8.4000000,204.0000000,23,23,600); // Sanchez 1
	ruscar[14] = CreateVehicle_R(468,963.0999800,1758.6999500,8.4000000,204.0000000,23,23,600); // Sanchez 2
	//================================== LCN ===================================
	lcncar[0] =	CreateVehicle_R(487,1430.9761,788.0078,10.9634,179.1432,0,0,600); //
	lcncar[1] =	CreateVehicle_R(445,1499.1096,718.0834,10.6338,76.6296,0,0,600); //
	lcncar[2] =	CreateVehicle_R(409,1488.6741,719.4366,10.6796,88.5935,0,0,600); //
	lcncar[3] =	CreateVehicle_R(445,1477.7354,718.0064,10.6346,104.1920,0,0,600); //
	lcncar[4] =	CreateVehicle_R(445,1413.6323,743.1208,10.6349,269.9980,0,0,600); //
	lcncar[5] =	CreateVehicle_R(445,1413.6346,746.3062,10.6363,269.7026,0,0,600); //
	lcncar[6] =	CreateVehicle_R(445,1413.6475,749.6598,10.6231,269.3087,0,0,600); //
	lcncar[7] =	CreateVehicle_R(445,1413.6196,752.6877,10.7025,271.3052,0,0,600); //
	lcncar[8] =	CreateVehicle_R(445,1413.6320,755.9434,10.6229,269.6909,0,0,600); //
	lcncar[9] =	CreateVehicle_R(445,1413.6421,759.0889,10.6162,269.1068,0,0,600); //
	lcncar[10] = CreateVehicle_R(445,1413.6328,762.2538,10.6351,269.9231,0,0,600); //
	lcncar[11] = CreateVehicle_R(468,1412.8843,768.7118,10.4891,269.9999,228,228,600); //
	lcncar[12] = CreateVehicle_R(468,1412.8843,771.9448,10.4895,269.9999,228,228,600); //
	lcncar[13] = CreateVehicle_R(468,1412.8862,775.1153,10.4976,269.9998,228,228,600); //
	//=================================== SF NEWS ==============================
	cnncar[0] = CreateVehicle_R(582,-2031.1930,459.3309,35.2332,1.0561,1,137,600); // News Van 0
	cnncar[1] = CreateVehicle_R(582,-2022.5162,459.3569,35.2286,359.1067,1,137,600); // News Van 1
	cnncar[2] = CreateVehicle_R(582,-2056.8635,469.9971,35.2334,270.9870,1,137,600); // News Van 2
	cnncar[3] = CreateVehicle_R(582,-2052.0874,478.6587,35.2299,269.6934,1,137,600); // News Van 3
	cnncar[4] = CreateVehicle_R(582,-2051.2991,487.4715,35.2243,269.5258,1,137,600); // News Van 4
	cnnmav = CreateVehicle_R(488,-2055.2781,443.6082,139.7422,270.6632,1,137,600); // CNN maverick
	//============================== Rent VIP ==================================
	rentcarvip[0] = CreateVehicle_R(409,356.7928,-1808.3760,4.3304,0.0249,1,1,600);
	rentcarvip[1] = CreateVehicle_R(409,353.6666,-1808.3795,4.3286,359.6000,0,0,600);
	rentcarvip[2] = CreateVehicle_R(562,350.3633,-1809.7119,4.1475,0.3427,35,1,600);
	rentcarvip[3] = CreateVehicle_R(562,347.1148,-1809.7987,4.1461,359.6031,17,1,600);
	rentcarvip[4] = CreateVehicle_R(560,344.0623,-1809.9899,4.1852,359.4391,9,39,600);
	rentcarvip[5] = CreateVehicle_R(560,340.8721,-1809.6970,4.2492,359.0866,17,1,600);
	rentcarvip[6] = CreateVehicle_R(489,337.3025,-1809.6433,4.5972,0.3293,14,123,600);
	rentcarvip[7] = CreateVehicle_R(489,334.1506,-1809.6102,4.5862,2.4724,120,123,600);
	rentcarvip[8] = CreateVehicle_R(480,330.8929,-1809.3428,4.2702,359.0356,12,12,600);
	//============================== Rent SF ===================================
	rentcarsf[0] = CreateVehicle_R(551,-1991.9255,241.9435,34.9883,298.3905,-1,-1,600); // Rent Car SF 0
	rentcarsf[1] = CreateVehicle_R(526,-1992.3762,246.0848,34.8838,295.0731,-1,-1,600); // Rent Car SF 1
	rentcarsf[2] = CreateVehicle_R(401,-1992.0844,250.5429,34.9218,301.5730,-1,-1,600); // Rent Car SF 2
	rentcarsf[3] = CreateVehicle_R(436,-1991.3379,255.3898,34.9733,298.7093,-1,-1,600); // Rent Car SF 3
	rentcarsf[4] = CreateVehicle_R(540,-1990.4432,260.1355,35.0935,297.0277,-1,-1,600); // Rent Car SF 4
	rentcarsf[5] = CreateVehicle_R(546,-1990.1090,264.9886,34.9433,295.3199,-1,-1,600); // Rent Car SF 5
	rentcarsf[6] = CreateVehicle_R(585,-1989.4005,270.0739,34.7749,286.5439,-1,-1,600); // Rent Car SF 6
	//============================= Rent LS ====================================
	rentcarls[0] = CreateVehicle_R(401,525.5535,-1283.5392,17.0309,249.2930,-1,-1,600); // Rent Car LS 0
	rentcarls[1] = CreateVehicle_R(526,529.7659,-1280.2317,16.9532,245.8029,-1,-1,600); // Rent Car LS 1
	rentcarls[2] = CreateVehicle_R(585,534.1425,-1277.2675,16.8415,246.4638,-1,-1,600); // Rent Car LS 2
	rentcarls[3] = CreateVehicle_R(551,538.4374,-1274.0146,17.0553,248.1329,-1,-1,600); // Rent Car LS 3
	rentcarls[4] = CreateVehicle_R(546,542.0103,-1270.6676,16.8926,244.0262,-1,-1,600); // Rent Car LS 4
	rentcarls[5] = CreateVehicle_R(540,546.1081,-1267.5892,17.1557,244.3047,-1,-1,600); // Rent Car LS 5
	rentcarls[6] = CreateVehicle_R(516,567.4392,-1288.4241,17.1140,50.6030,-1,-1,600); // Rent Car LS 6
	rentcarls[7] = CreateVehicle_R(410,566.5842,-1283.0811,16.9026,57.9391,-1,-1,600); // Rent Car LS 7
	rentcarls[8] = CreateVehicle_R(436,565.1833,-1277.9972,17.0457,60.2207,-1,-1,600); // Rent Car LS 8
	//============================= Rent LV ====================================
	rentcarlv[0] = CreateVehicle_R(401,2148.7632,1398.2522,10.5919,179.3318,-1,-1,600); // Rent Car LV 0
	rentcarlv[1] = CreateVehicle_R(526,2142.2549,1398.5380,10.5895,180.1983,-1,-1,600); // Rent Car LV 1
	rentcarlv[2] = CreateVehicle_R(585,2136.0012,1398.4728,10.4594,179.7632,-1,-1,600); // Rent Car LV 2
	rentcarlv[3] = CreateVehicle_R(551,2129.5227,1398.3572,10.6811,179.9108,-1,-1,600); // Rent Car LV 3
	rentcarlv[4] = CreateVehicle_R(546,2123.1968,1398.0679,10.5173,180.2094,-1,-1,600); // Rent Car LV 4
	rentcarlv[5] = CreateVehicle_R(540,2116.7009,1398.6531,10.7517,180.8054,-1,-1,600); // Rent Car LV 5
	rentcarlv[6] = CreateVehicle_R(516,2110.3887,1398.8379,10.7088,178.9539,-1,-1,600); // Rent Car LV 6
	rentcarlv[7] = CreateVehicle_R(436,2103.8853,1399.1855,10.6324,180.4412,-1,-1,600); // Rent Car LV 7
	rentcarlv[8] = CreateVehicle_R(410,2097.7957,1398.6720,10.4728,180.8700,-1,-1,600); // Rent Car LV 8
	rentcarlv[9] = CreateVehicle_R(410,2148.6797,1408.0872,10.5066,0.9862,-1,-1,600); // Rent Car LV 9
	rentcarlv[10] = CreateVehicle_R(516,2142.3816,1408.8521,10.6997,0.1314,-1,-1,600); // Rent Car LV 10
	rentcarlv[11] = CreateVehicle_R(436,2135.9126,1408.2151,10.6270,0.4270,-1,-1,600); // Rent Car LV 11
	rentcarlv[12] = CreateVehicle_R(540,2129.6021,1408.2108,10.7522,0.6938,-1,-1,600); // Rent Car LV 12
	rentcarlv[13] = CreateVehicle_R(546,2123.1118,1408.6428,10.5633,0.3106,-1,-1,600); // Rent Car LV 13
	rentcarlv[14] = CreateVehicle_R(551,2116.7241,1408.6730,10.6830,359.9039,-1,-1,600); // Rent Car LV 14
	rentcarlv[15] = CreateVehicle_R(585,2110.1846,1407.9718,10.4684,359.9608,-1,-1,600); // Rent Car LV 15
	rentcarlv[16] = CreateVehicle_R(526,2104.1704,1408.4935,10.5844,0.1492,-1,-1,600); // Rent Car LV 16
	rentcarlv[17] = CreateVehicle_R(401,2097.4080,1408.4969,10.5998,0.4172,-1,-1,600); // Rent Car LV 17
	//================================== HOT DOG ===============================
	hotdogcar[0] = CreateVehicle_R(588,-2429.2341,741.4066,34.9217,179.6980,1,1,600); // Hot Dog 0
	CreateVehicle_R(588,-2433.9192,741.2372,34.9212,179.6447,1,1,600); // Hot Dog 1
	CreateVehicle_R(588,-2437.8342,741.0984,34.9189,179.8946,1,1,600); // Hot Dog 2
	CreateVehicle_R(588,-2442.5227,741.0941,34.9182,179.8704,1,1,600); // Hot Dog 3
	CreateVehicle_R(588,-2446.9268,740.9801,34.9242,179.3379,1,1,600); // Hot Dog 4
	CreateVehicle_R(588,-2451.2832,740.9025,34.9189,180.1623,1,1,600); // Hot Dog 5
	CreateVehicle_R(588,-2455.7896,740.9033,34.9215,179.2092,1,1,600); // Hot Dog 6
	CreateVehicle_R(588,-2460.1279,740.7226,34.9204,180.5361,1,1,600); // Hot Dog 7
	hotdogcar[1] = CreateVehicle_R(588,-2464.4287,740.7175,34.9191,180.0000,1,1,600); // Hot Dog 8
	//================================== Mongols MC ======================
	hamccar[0] = CreateVehicle_R(463,694.79998779,-473.20001221,16.00000000,270.00000000,0,0,300); //Freeway
	hamccar[1] = CreateVehicle_R(463,694.90002441,-470.10000610,16.00000000,270.00000000,0,0,300); //Freeway
	hamccar[2] = CreateVehicle_R(463,695.09997559,-466.89999390,16.00000000,270.00000000,0,0,300); //Freeway
	hamccar[3] = CreateVehicle_R(463,695.09997559,-464.00000000,16.00000000,270.00000000,0,0,300); //Freeway
	hamccar[4] = CreateVehicle_R(463,695.00000000,-461.00000000,16.00000000,270.00000000,0,0,300); //Freeway
	hamccar[5] = CreateVehicle_R(463,708.79998779,-473.60000610,16.00000000,90.00000000,0,0,300); //Freeway
	hamccar[6] = CreateVehicle_R(463,708.79998779,-461.29998779,16.00000000,90.00000000,0,0,300); //Freeway
	hamccar[7] = CreateVehicle_R(463,708.70001221,-464.39999390,16.00000000,90.00000000,0,0,300); //Freeway
	hamccar[8] = CreateVehicle_R(463,708.20001221,-467.70001221,16.00000000,90.00000000,0,0,300); //Freeway
	hamccar[9] = CreateVehicle_R(463,708.20001221,-470.70001221,16.00000000,90.00000000,0,0,300); //Freeway
	hamccar[10] = CreateVehicle_R(459,696.09997559,-451.00000000,16.50000000,180.00000000,0,0,300); //Pony
	//=============================== Warlocks MC ==============================
	wmccar[0] = CreateVehicle_R(463,669.59997559,1729.69995117,6.59999990,38.00000000,0,0,300); //Freeway
	wmccar[1] = CreateVehicle_R(463,667.29998779,1728.00000000,6.59999990,37.99621582,0,0,300); //Freeway
	wmccar[2] = CreateVehicle_R(463,665.20001221,1726.09997559,6.59999990,37.99621582,0,0,300); //Freeway
	wmccar[3] = CreateVehicle_R(463,663.29998779,1724.40002441,6.59999990,37.99621582,0,0,300); //Freeway
	wmccar[4] = CreateVehicle_R(463,661.09997559,1722.50000000,6.59999990,37.99621582,0,0,300); //Freeway
	wmccar[5] = CreateVehicle_R(463,659.09997559,1720.80004883,6.59999990,37.99621582,0,0,300); //Freeway
	wmccar[6] = CreateVehicle_R(463,656.90002441,1718.80004883,6.59999990,37.99621582,0,0,300); //Freeway
	wmccar[7] = CreateVehicle_R(463,654.90002441,1717.09997559,6.59999990,37.99621582,0,0,300); //Freeway
	wmccar[8] = CreateVehicle_R(463,652.79998779,1715.50000000,6.59999990,37.99621582,0,0,300); //Freeway
	wmccar[9] = CreateVehicle_R(463,650.50000000,1713.30004883,6.59999990,37.99621582,0,0,300); //Freeway
	wmccar[10] = CreateVehicle_R(459,672.7252,1698.7985,7.0829,130.1172,0,0,300); //Pony
	//================================== Pagans MC =============================
	pmccar[0] = CreateVehicle_R(463,-243.3742,2609.1772,62.2617,182.5239,0,0,300); //Freeway
	pmccar[1] = CreateVehicle_R(463,-240.5210,2609.1772,62.2617,182.5239,0,0,300); //Freeway
	pmccar[2] = CreateVehicle_R(463,-237.4994,2609.1772,62.2617,182.5239,0,0,300); //Freeway
	pmccar[3] = CreateVehicle_R(463,-234.4931,2609.1772,62.2617,182.5239,0,0,300); //Freeway
	pmccar[4] = CreateVehicle_R(463,-231.4994,2609.1772,62.2617,182.5239,0,0,300); //Freeway
	
	pmccar[5] = CreateVehicle_R(463,-231.7858,2594.1550,62.2617,359.6360,0,0,300); //Freeway
	pmccar[6] = CreateVehicle_R(463,-234.8786,2594.1550,62.2617,359.6360,0,0,300); //Freeway
	pmccar[7] = CreateVehicle_R(463,-237.9021,2594.1550,62.2617,359.6360,0,0,300); //Freeway
	pmccar[8] = CreateVehicle_R(463,-240.9503,2594.1550,62.2617,359.6360,0,0,300); //Freeway
	pmccar[9] = CreateVehicle_R(463,-243.6877,2594.1550,62.2617,359.6360,0,0,300); //Freeway
	pmccar[10] = CreateVehicle_R(459,-228.7738,2594.1550,62.2617,359.6360,0,0,600); //Pony
	//================================== LVPD ==================================
	lvpdcar[0] = CreateVehicle_R(598,2269.2258,2477.0840,10.6042,179.1057,0,1,600); // LVPD
	lvpdcar[1] = CreateVehicle_R(598,2273.4949,2477.0679,10.5961,179.0085,0,1,600); // LVPD
	lvpdcar[2] = CreateVehicle_R(598,2278.1843,2477.1934,10.5962,179.3673,0,1,600); // LVPD
	lvpdcar[3] = CreateVehicle_R(598,2282.2451,2477.3362,10.5292,179.3948,0,1,600); // LVPD
	lvpdcar[4] = CreateVehicle_R(598,2282.1619,2459.6157,10.6158,178.8867,0,1,600); // LVPD
	lvpdcar[5] = CreateVehicle_R(598,2278.0164,2459.7112,10.5796,177.9859,0,1,600); // LVPD
	lvpdcar[6] = CreateVehicle_R(598,2273.4856,2459.7346,10.5910,178.3816,0,1,600); // LVPD
	lvpdcar[7] = CreateVehicle_R(598,2269.3425,2459.8813,10.5905,178.1218,0,1,600); // LVPD
	lvpdcar[8] = CreateVehicle_R(523,2269.3962,2444.5583,10.3559,359.5848,0,1,600); // ???? LVPD1
	lvpdcar[9] = CreateVehicle_R(523,2273.6040,2444.5237,10.3846,0.0632,0,1,600); // ???? LVPD2
	lvpdcar[10] = CreateVehicle_R(523,2290.9751,2443.5164,10.3923,1.3853,1,1,600); // ???? LVPD3
	lvpdcar[11] = CreateVehicle_R(427,2282.2295,2444.6199,10.9256,0.8459,0,1,600); // ???????? LVPD
	lvpdcar[12] = CreateVehicle_R(427,2277.7827,2444.5730,10.9150,359.3729,0,1,600); // ???????? LVPD1
	lvpdcar[13] = CreateVehicle_R(497,2308.9045,2451.9192,11.0123,180.0031,0,1,600); //
	lvpdcar[14] = CreateVehicle_R(599,2251.7024,2459.6746,11.0080,179.6917,0,1,600); //
	lvpdcar[15] = CreateVehicle_R(599,2256.3569,2459.7817,11.0083,179.4283,0,1,600); //
	lvpdcar[16] = CreateVehicle_R(599,2260.3220,2459.9070,11.0089,180.4960,0,1,600); //
	lvpdcar[17] = CreateVehicle_R(599,2260.4282,2444.0715,11.0145,0.0001,0,1,600); //
	//================================== LS NEWS ================================
	lsnewscar[0] = CreateVehicle_R(582,1668.2490,-1699.8988,15.6692,113.6156,1,2,600); // LS NEWS VAN 0
	lsnewscar[1] = CreateVehicle_R(582,1668.3706,-1705.5723,15.6659,113.6156,1,2,600); // LS NEWS VAN 1
	lsnewscar[2] = CreateVehicle_R(582,1668.7556,-1711.6621,15.6669,113.6156,1,2,600); // LS NEWS VAN 2
	lsnewscar[3] = CreateVehicle_R(582,1668.5909,-1718.2150,15.6650,113.6156,1,2,600); // LS NEWS VAN 3
	lsnewscar[4] = CreateVehicle_R(582,1667.6899,-1694.3616,15.6655,113.6156,1,2,600); // LS NEWS VAN 4
	lsnewscar[5] = CreateVehicle_R(488,1668.5776,-1718.8680,20.6717,89.5808,1,2,600); // LS NEWS Helicopter 0
	//================================= LV NEWS ================================
	lvnewscar[0] = CreateVehicle_R(488,2647.3130,1214.7228,27.0833,179.9999,1,3,600); // LV NEWS VAN 0
	lvnewscar[1] = CreateVehicle_R(582,2639.1929,1167.8363,10.8775,33.1387,1,3,600); // LV NEWS VAN 1
	lvnewscar[2] = CreateVehicle_R(582,2646.3479,1168.2446,10.8790,34.0851,1,3,600); // LV NEWS VAN 2
	lvnewscar[3] = CreateVehicle_R(582,2653.7300,1169.2220,10.8752,35.7964,1,3,600); // LV NEWS VAN 3
	lvnewscar[4] = CreateVehicle_R(582,2660.8367,1168.9835,10.8743,33.8417,1,3,600); // LV NEWS VAN 4
	lvnewscar[5] = CreateVehicle_R(582,2666.9121,1169.7819,10.8752,34.9291,1,3,600); // LV NEWS Helicopter 0
	//================================ GOVERMENT ===============================
	govcar[0] =	CreateVehicle_R(489,1406.4993,-1808.7230,13.6237,90.0000,0,0,600); //
	govcar[1] =	CreateVehicle_R(489,1406.4812,-1804.7041,13.6248,90.4197,0,0,600); //
	govcar[2] =	CreateVehicle_R(409,1405.6206,-1796.5087,13.4023,359.2020,1,1,600); //
	govcar[3] =	CreateVehicle_R(421,1406.3960,-1785.5636,13.4051,61.1618,1,1,600); //
	govcar[4] = CreateVehicle_R(421,1406.4355,-1780.4050,13.4268,60.8583,1,1,600); //
	govcar[5] = CreateVehicle_R(421,1406.5548,-1775.7395,13.4051,61.4270,1,1,600); //
	govcar[6] = CreateVehicle_R(487,1425.6184,-1778.6748,33.5964,90.0021,1,1,600); //
	govcar[7] = CreateVehicle_R(487,1425.4415,-1801.5649,33.5908,90.0017,1,1,600); //
	//=========================== Дальнобойщики ================================
	//----------------------------------- 1 skill
	tanker_train[0] = CreateVehicle_R(514,2355.2438965,2815.2958984,11.5200005,180.0000000,-1,-1,600); //Tanker
	CreateVehicle_R(514,2362.5358887,2815.1909180,11.5200005,180.0000000,-1,-1,600); //Tanker
	CreateVehicle_R(514,2370.2729492,2815.1311035,11.5200005,180.0000000,-1,-1,600); //Tanker
	CreateVehicle_R(514,2378.2858887,2814.9851074,11.5200005,180.0000000,-1,-1,600); //Tanker
	CreateVehicle_R(514,2385.7670898,2814.8889160,11.5200005,180.0000000,-1,-1,600); //Tanker
	CreateVehicle_R(514,2393.5930176,2814.7819824,11.5200005,180.0000000,-1,-1,600); //Tanker
	CreateVehicle_R(514,2401.4589844,2814.6950684,11.5200005,180.0000000,-1,-1,600); //Tanker
	CreateVehicle_R(514,2409.0659180,2814.7180176,11.5200005,180.0000000,-1,-1,600); //Tanker
	CreateVehicle_R(514,2416.7690430,2814.6411133,11.5200005,180.0000000,-1,-1,600); //Tanker
	CreateVehicle_R(514,2408.2219238,2742.8979492,11.5200005,16.0000000,-1,-1,600); //Tanker
	CreateVehicle_R(514,2403.0568848,2737.5649414,11.5200005,15.9960938,-1,-1,600); //Tanker
	tanker_train[1] = CreateVehicle_R(514,2397.8068848,2731.6760254,11.5200005,15.9960938,-1,-1,600); //Tanker
	//----------------------------------- 5 skill
	tanker_train[2] = CreateVehicle_R(403,2260.9980,2779.8608,11.4380,89.9999,-1,-1,600);
	CreateVehicle_R(403,2260.9980,2770.3906,11.4380,89.9999,-1,-1,600);
	CreateVehicle_R(403,2260.9980,2764.0408,11.4380,89.9999,-1,-1,600);
	CreateVehicle_R(403,2260.9983,2754.5005,11.4380,89.9999,-1,-1,600);
	CreateVehicle_R(403,2260.9988,2747.9705,11.4380,90.0005,-1,-1,600);
	CreateVehicle_R(403,2243.3010254,2765.3940430,11.5200005,270.0000000,-1,-1,600); //Linerunner
	CreateVehicle_R(403,2243.6088867,2758.8530273,11.5200005,270.0000000,-1,-1,600); //Linerunner
	CreateVehicle_R(403,2243.7338867,2751.9790039,11.5200005,270.0000000,-1,-1,600); //Linerunner
	CreateVehicle_R(403,2243.6540527,2745.0300293,11.5200005,270.0000000,-1,-1,600); //Linerunner
	CreateVehicle_R(403,2243.5681152,2738.1430664,11.5200005,270.0000000,-1,-1,600); //Linerunner
	CreateVehicle_R(403,2243.4121094,2730.2670898,11.5200005,270.0000000,-1,-1,600); //Linerunner
	tanker_train[3] = CreateVehicle_R(403,2260.9983,2738.4004,11.4380,89.9999,-1,-1,600);
	//----------------------------------- 15 skill
	tanker_train[4] = CreateVehicle_R(515,2296.0073,2779.9189,11.8265,270.0013,-1,-1,600);
	CreateVehicle_R(515,2296.0146,2770.4751,11.8305,270.2599,-1,-1,600);
	CreateVehicle_R(515,2296.0159,2763.8289,11.8284,270.0019,-1,-1,600);
	CreateVehicle_R(515,2296.0044,2754.3877,11.8305,269.7369,-1,-1,600);
	CreateVehicle_R(515,2296.0159,2747.9287,11.8284,270.0018,-1,-1,600);
	tanker_train[5] = CreateVehicle_R(515,2296.0159,2738.3289,11.8284,270.0019,-1,-1,600);
	//----------------------------------- 25 skill
	tanker_train[6] = CreateVehicle_R(515,2347.0161,2738.2393,11.8725,270.0006,-1,-1,600);
	CreateVehicle_R(515,2347.0161,2747.8691,11.8727,270.0008,-1,-1,600);
	CreateVehicle_R(515,2347.0161,2754.4189,11.8728,270.0009,-1,-1,600);
	CreateVehicle_R(515,2347.0161,2763.9092,11.8726,270.0006,-1,-1,600);
	CreateVehicle_R(515,2347.0159,2770.5994,11.8725,270.0005,-1,-1,600);
	tanker_train[7] = CreateVehicle_R(515,2347.0159,2779.9290,11.8282,270.0015,-1,-1,600);
	//================================= LSA ====================================
	lsacar[0] = CreateVehicle_R(470,2739.5549,-2419.2371,13.6304,270.2878,0,0,600);
	lsacar[1] = CreateVehicle_R(470,2739.5923,-2423.3367,13.6305,270.9906,0,0,600);
	lsacar[2] = CreateVehicle_R(470,2739.6287,-2427.6265,13.6315,271.0866,0,0,600);
	lsacar[3] = CreateVehicle_R(470,2743.4583,-2448.7090,13.6656,270.0050,0,0,600);
	lsacar[4] = CreateVehicle_R(470,2743.4321,-2444.9141,13.6371,270.5514,0,0,600);
	lsacar[5] = CreateVehicle_R(470,2743.3860,-2441.0242,13.6362,270.8676,0,0,600);
	lsacar[6] = CreateVehicle_R(470,2736.8411,-2474.9597,13.6466,270.4148,0,0,600);
	lsacar[7] = CreateVehicle_R(470,2736.8289,-2471.1628,13.6426,269.8400,0,0,600);
	lsacar[8] = CreateVehicle_R(470,2736.8328,-2467.4814,13.6651,269.7310,0,0,600);
	lsacar[9] = CreateVehicle_R(470,2736.8308,-2463.7458,13.6885,269.8215,0,0,600);
	lsacar[10] = CreateVehicle_R(470,2736.8667,-2478.7322,13.6415,270.8732,0,0,600);
	lsacar[11] = CreateVehicle_R(470,2736.7996,-2460.1074,13.6475,269.3318,0,0,600);
	lsacar[12] = CreateVehicle_R(470,2735.5662,-2392.9441,13.6267,140.8576,0,0,600);
	lsacar[13] = CreateVehicle_R(470,2740.5520,-2392.8936,13.6257,142.6246,0,0,600);
	lsacar[14] = CreateVehicle_R(470,2745.5024,-2392.9404,13.6255,142.6646,0,0,600);
	lsacar[15] = CreateVehicle_R(470,2750.4390,-2392.9768,13.6442,143.1559,0,0,600);
	lsacarvert[0] = CreateVehicle_R(548,2773.1833,-2354.5332,15.3227,270.0318,0,0,600);
	//========================== Mechaniks =====================================
	mehanik[0] = CreateVehicle_R(525,1649.8070,-1107.4197,23.7879,270.4307,1,3,600); // Mechanik 0
	mehanik[1] = CreateVehicle_R(525,1649.5594,-1097.9303,23.7825,271.0184,1,3,600); // Mechanik 1
	mehanik[2] = CreateVehicle_R(525,1649.5481,-1088.9520,23.7802,271.2585,1,3,600); // Mechanik 2
	mehanik[3] = CreateVehicle_R(525,1649.4701,-1080.2677,23.7859,269.8732,1,3,600); // Mechanik 3
	mehanik[4] = CreateVehicle_R(525,1630.1318,-1107.5986,23.7810,90.0636,1,3,600); // Mechanik 4
	mehanik[5] = CreateVehicle_R(525,1629.4932,-1098.3491,23.7889,91.1477,1,3,600); // Mechanik 5
	mehanik[6] = CreateVehicle_R(525,1629.3313,-1089.4033,23.7905,89.8329,1,3,600); // Mechanik 6
	mehanik[7] = CreateVehicle_R(525,-70.9419,-1156.6366,1.6491,106.9529,1,3,600); // Mechanik 7
	mehanik[8] = CreateVehicle_R(525,-75.4985,-1153.8265,1.5561,106.9529,1,3,600); // Mechanik 8
	mehanik[9] = CreateVehicle_R(525,-79.4743,-1152.0967,2.1477,106.9529,1,3,600); // Mechanik 9
	mehanik[10] = CreateVehicle_R(525,-81.0021,-1197.2158,2.0621,13.2738,1,3,600); // Mechanik 10
	mehanik[11] = CreateVehicle_R(525,-85.3324,-1197.1295,2.1304,13.2739,1,3,600); // Mechanik 11
	mehanik[12] = CreateVehicle_R(525,-89.2924,-1196.4034,2.1066,13.2739,1,3,600); // Mechanik 12
	//================================= Licensers ==============================
	liccar[0] = CreateVehicle_R(426,-2093.7451,-84.7866,34.9072,180.1719,79,79,30); //Licenzer Car 0
	liccar[1] = CreateVehicle_R(426,-2085.1897,-84.5558,34.9636,180.2919,79,79,30); //Licenzer Car 1
	liccar[2] = CreateVehicle_R(426,-2081.2437,-84.3829,34.9646,180.1252,79,79,30); //Licenzer Car 2
	liccar[3] = CreateVehicle_R(426,-2076.9175,-84.3522,34.9647,180.1982,79,79,30); //Licenzer Car 3
	liccar[4] = CreateVehicle_R(426,-2089.3032,-84.5302,34.9083,181.2357,79,79,30); //Licenzer Car 4
	liccar[5] = CreateVehicle_R(426,-2077.3838,-98.5273,34.9071,359.8672,79,79,30); //Licenzer Car 5
	liccar[6] = CreateVehicle_R(426,-2081.4502,-98.5179,35.1366,359.8672,79,79,30); //Licenzer Car 6
	liccar[7] = CreateVehicle_R(426,-2084.8586,-98.5100,35.1366,359.8672,79,79,30); //Licenzer Car 7
	liccar[8] = CreateVehicle_R(426,-2088.7642,-98.5010,35.8296,359.8672,79,79,30); //Licenzer Car 8
	liccar[9] = CreateVehicle_R(426,-2093.6814,-98.4791,34.8978,359.8516,79,79,30); //Licenzer Car 9
	mavlic = CreateVehicle_R(487,-2027.3175,-111.6481,39.0855,41.9733,79,79,300); //Licenzer Maverick 0
	//=================================== YAKUZA ===============================
	yakcar[0] = CreateVehicle_R(550,1472.7317,2781.6743,10.5586,179.2468,0,0,600); //
	yakcar[1] = CreateVehicle_R(550,1472.8627,2765.2546,10.5585,180.0694,0,0,600); //
	yakcar[2] = CreateVehicle_R(409,1472.7584,2773.2961,10.5105,180.4312,0,0,600); //
	yakcar[3] = CreateVehicle_R(550,1470.1029,2838.6084,10.6390,179.4471,0,0,600); //
	yakcar[4] = CreateVehicle_R(550,1475.1515,2838.7468,10.6389,179.2637,0,0,600); //
	yakcar[5] = CreateVehicle_R(550,1479.8438,2838.8323,10.6400,179.9058,0,0,600); //
	yakcar[6] = CreateVehicle_R(550,1484.7211,2838.8638,10.6381,179.0196,0,0,600); //
	yakcar[7] = CreateVehicle_R(550,1489.6461,2838.8625,10.6393,179.4491,0,0,600); //
	yakcar[8] = CreateVehicle_R(550,1494.1753,2838.9189,10.6378,179.4906,0,0,600); //
	yakcar[9] = CreateVehicle_R(468,1465.4508,2836.5015,10.4858,178.4038,3,3,600); //
	yakcar[10] = CreateVehicle_R(468,1467.5662,2836.6189,10.4838,182.7237,3,3,600); //
	yakcar[11] = CreateVehicle_R(468,1463.2520,2836.5959,10.4848,179.6848,3,3,600); //
	yakcar[12] = CreateVehicle_R(487,1468.7841,2815.5879,11.0306,269.2539,0,0,600); //
	//=================================== LSPD =================================
	sapdcar[0] = CreateVehicle_R(596,1558.8835,-1711.5067,5.6068,0.3988,1,79,600); //
	sapdcar[1] = CreateVehicle_R(596,1570.4464,-1711.2196,5.6172,359.8105,1,79,600); //
	sapdcar[2] = CreateVehicle_R(596,1574.4845,-1711.1295,5.6062,0.0632,1,79,600); //
	sapdcar[3] = CreateVehicle_R(596,1578.7039,-1710.9607,5.6183,0.1892,1,79,600); //
	sapdcar[4] = CreateVehicle_R(596,1583.5175,-1710.8799,5.6194,0.8567,1,79,600); //
	sapdcar[5] = CreateVehicle_R(596,1587.4191,-1710.6022,5.6055,1.0347,1,79,600); //
	sapdcar[6] = CreateVehicle_R(596,1602.3325,-1695.9980,5.5826,89.5316,1,79,600); //
	sapdcar[7] = CreateVehicle_R(596,1602.3185,-1692.0234,5.5823,90.0328,1,79,600); //
	sapdcar[8] = CreateVehicle_R(523,1547.4243,-1676.8906,5.4554,118.1002,0,0,600); //
	sapdcar[9] = CreateVehicle_R(523,1547.2776,-1674.6050,5.4492,121.5288,0,0,600); //
	sapdcar[10] = CreateVehicle_R(523,1547.2515,-1672.1901,5.4507,131.0694,0,0,600); //
	sapdcar[11] = CreateVehicle_R(427,1544.8767,-1655.0233,6.0417,88.8444,1,79,600); //
	sapdcar[12] = CreateVehicle_R(427,1544.9392,-1650.9785,6.0424,90.4988,1,79,600); //
	sapdcar[13] = CreateVehicle_R(596,1602.4934,-1700.4464,5.6102,90.0702,1,79,600); //
	sapdcar[14] = CreateVehicle_R(596,1602.4930,-1704.7719,5.6089,89.9600,1,79,600); //
	sapdcar[15] = CreateVehicle_R(497,1555.1938,-1610.3059,13.5375,88.8620,79,1,600); //
	sapdcar[16] = CreateVehicle_R(599,1546.0828,-1658.8530,6.0850,89.9137,1,79,600); //
	sapdcar[17] = CreateVehicle_R(599,1546.0431,-1662.8765,6.0774,90.0382,1,79,600); //
	sapdcar[18] = CreateVehicle_R(599,1546.0958,-1667.7151,6.0805,90.3761,1,79,600); //
	sapdcar[19] = CreateVehicle_R(599,1528.7410,-1687.9318,6.0795,269.4354,1,79,600); //

	//=================================== FBI ==================================
	fbicar[0] = CreateVehicle_R(521,-2460.8303,544.4739,491.4831,356.6644,0,0,600); // FBI 0
	fbicar[1] = CreateVehicle_R(521,-2456.6072,544.5000,491.5087,357.4489,0,0,600); // FBI 1
	fbicar[2] = CreateVehicle_R(521,-2452.0107,544.5850,491.4843,359.0195,0,0,600); // FBI 2
	fbicar[3] = CreateVehicle_R(415,-2427.6194,535.0439,491.6870,270.0655,0,0,600); // FBI 3
	fbicar[4] = CreateVehicle_R(415,-2427.6179,531.2609,491.6870,269.4856,0,0,600); // FBI 4
	fbicar[5] = CreateVehicle_R(560,-2427.5029,527.1229,491.6203,270.2058,0,0,600); // FBI 5
	fbicar[6] = CreateVehicle_R(560,-2427.5623,522.5583,491.6210,268.0457,0,0,600); // FBI 6
	fbicar[7] = CreateVehicle_R(490,-2452.4856,501.8808,492.0443,0.0370,0,0,600); // FBI 7
	fbicar[8] = CreateVehicle_R(490,-2456.8633,501.9145,492.0413,359.7208,0,0,600); // FBI 8
	fbicar[9] = CreateVehicle_R(490,-2460.9463,501.9058,492.0504,0.0326,0,0,600); // FBI 9
	fbicar[10] = CreateVehicle_R(490,-2465.5835,501.9467,492.0363,0.0356,0,0,600); // FBI 10
	fbicar[11] = CreateVehicle_R(490,-2470.0435,501.8679,492.0440,359.6897,0,0,600); // FBI 11
	fbicar[12] = CreateVehicle_R(490,-2474.6453,502.0532,492.0440,359.8795,0,0,600); // FBI 12
	fbicar[13] = CreateVehicle_R(490,-2414.6000000,531.9000000,30.2000000,248.2500000,0,0,600); // FBI 13
	fbicar[14] = CreateVehicle_R(490,-2416.4000000,528.2000000,30.2000000,240.2470000,0,0,600); // FBI 14
	fbicar[15] = CreateVehicle_R(497,-2467.8000000,521.2000000,51.3000000,180.0000000,0,0,600); // Police Maverick 0
	fbicar[16] = CreateVehicle_R(497,-2483.7000000,521.2000000,51.3000000,180.0000000,0,0,600); // Police Maverick 1
	//================================= Prodz ==================================
	comptruck[0] = CreateVehicle_R(440,0.3180,-378.0624,5.5481,0,-1,-1,900); // Prodz Van 0
	CreateVehicle_R(440,-3.1539,-378.0624,5.5351,0,-1,-1,900); // Prodz Van 1
	CreateVehicle_R(440,-6.4157,-378.0624,5.5351,0,-1,-1,900); // Prodz Van 2
	CreateVehicle_R(440,-9.6830,-378.0624,5.5351,0,-1,-1,900); // Prodz Van 3
	CreateVehicle_R(440,-13.0651,-378.0624,5.5351,0,-1,-1,900); // Prodz Van 4
	CreateVehicle_R(440,-16.4923,-378.0624,5.5351,0,-1,-1,900); // Prodz Van 5
	CreateVehicle_R(440,-19.7941,-378.0624,6.4105,0,-1,-1,900); // Prodz Van 6
	CreateVehicle_R(440,-23.1215,-378.0624,5.5471,0,-1,-1,900); // Prodz Van 7
	CreateVehicle_R(440,-26.4671,-378.0624,5.5368,0,-1,-1,900); // Prodz Van 8
	CreateVehicle_R(440,-29.8291,-378.0624,5.5481,0,-1,-1,900); // Prodz Van 9
	CreateVehicle_R(440,-33.2262,-378.0624,5.5351,0,-1,-1,900); // Prodz Van 10
	CreateVehicle_R(440,-36.5213,-378.0624,5.5351,0,-1,-1,900); // Prodz Van 11
	CreateVehicle_R(440,-39.8221,-378.0624,5.5351,0,-1,-1,900); // Prodz Van 12
	CreateVehicle_R(440,-43.2227,-378.0624,5.5351,0,-1,-1,900); // Prodz Van 13
	CreateVehicle_R(440,-46.5032,-378.0624,5.5351,0,-1,-1,900); // Prodz Van 14
	CreateVehicle_R(440,-49.8268,-378.0624,6.4105,0,-1,-1,900); // Prodz Van 15
	CreateVehicle_R(440,-53.2036,-378.0624,5.5471,0,-1,-1,900); // Prodz Van 16
	CreateVehicle_R(440,-56.5909,-378.0624,5.5368,0,-1,-1,900); // Prodz Van 17
	CreateVehicle_R(440,-59.8732,-378.0624,5.5351,0,-1,-1,900); // Prodz Van 18
	CreateVehicle_R(440,-63.1870,-378.0624,5.5351,0,-1,-1,900); // Prodz Van 19
	CreateVehicle_R(440,-66.4125,-378.0624,6.4105,0,-1,-1,900); // Prodz Van 20
	CreateVehicle_R(440,-69.8054,-378.0624,5.5471,0,-1,-1,900); // Prodz Van 21
	comptruck[1] = CreateVehicle_R(440,-73.2049,-378.0624,5.5368,0,-1,-1,900); // Prodz Van 22

	comptruck[2] = CreateVehicle_R(552,-1003.5901,-638.3428,31.7005,90.1988,158,158,600);
	CreateVehicle_R(552,-1003.5901,-643.4371,31.7005,90.1988,158,158,600);
	CreateVehicle_R(552,-1003.5901,-648.5751,31.7005,90.1988,158,158,600);
	CreateVehicle_R(552,-1003.5901,-653.5906,31.7005,90.1988,158,158,600);
	CreateVehicle_R(552,-1003.5901,-663.8214,31.7005,90.1988,158,158,600);
	CreateVehicle_R(552,-1003.5901,-668.9190,31.7005,90.1988,158,158,600);
	CreateVehicle_R(552,-1003.5901,-673.9647,31.7005,90.1988,158,158,600);
	comptruck[3] = CreateVehicle_R(552,-1003.5901,-679.0637,31.7005,90.1988,158,158,600);
	//==================================================
	comptruck[4] = CreateVehicle_R(456,-564.5070190,-499.7539978,25.7730007,0.0000000,158,158,600); //Yankee
	CreateVehicle_R(456,-572.6339722,-499.5740051,25.7730007,0.0000000,158,158,600); //Yankee
	CreateVehicle_R(456,-580.6370239,-499.4070129,25.7730007,0.0000000,158,158,600); //Yankee
	CreateVehicle_R(456,-513.9760132,-497.6239929,25.7730007,0.0000000,158,158,600); //Yankee
	CreateVehicle_R(456,-506.7680054,-497.7059937,25.7730007,0.0000000,158,158,600); //Yankee
	CreateVehicle_R(456,-525.3140259,-473.6199951,25.7730007,180.0000000,158,158,600); //Yankee
	comptruck[5] = CreateVehicle_R(456,-519.6179810,-473.6579895,25.7730007,180.0000000,158,158,600); //Yankee
	//=================================================
	comptruck[6] = CreateVehicle_R(459,-589.4689941,-472.4060059,25.6630001,180.0000000,158,158,600); //Berkley's RC Van
	CreateVehicle_R(459,-584.4240112,-472.4230042,25.6630001,180.0000000,158,158,600); //Berkley's RC Van
	CreateVehicle_R(459,-579.6480103,-472.4309998,25.6630001,180.0000000,158,158,600); //Berkley's RC Van
	CreateVehicle_R(459,-574.5529785,-472.6730042,25.6630001,180.0000000,158,158,600); //Berkley's RC Van
	CreateVehicle_R(459,-569.5980225,-472.7479858,25.6630001,180.0000000,158,158,600); //Berkley's RC Van
	CreateVehicle_R(459,-564.7299805,-472.7860107,25.6630001,180.0000000,158,158,600); //Berkley's RC Van
	CreateVehicle_R(459,-559.6040039,-472.8989868,25.6630001,180.0000000,158,158,600); //Berkley's RC Van
	CreateVehicle_R(459,-554.5050049,-472.7080078,25.6630001,180.0000000,158,158,600); //Berkley's RC Van
	CreateVehicle_R(459,-549.6040039,-472.6359863,25.6630001,180.0000000,158,158,600); //Berkley's RC Van
	comptruck[7] = CreateVehicle_R(459,-544.3560181,-472.6069946,25.6630001,180.0000000,158,158,600); //Berkley's RC Van
	//=========================================
	comptruck[8] = CreateVehicle_R(455,-550.0939941,-498.9030151,26.0930004,0.0000000,158,158,600); //Flatbed
	CreateVehicle_R(455,-542.8229980,-498.9909973,26.0879993,0.0000000,158,158,600); //Flatbed
	CreateVehicle_R(455,-535.8569946,-499.0629883,26.0879993,0.0000000,158,158,600); //Flatbed
	CreateVehicle_R(455,-494.4660034,-473.4410095,26.0930004,180.0000000,158,158,600); //Flatbed
	CreateVehicle_R(455,-510.3970032,-473.2850037,26.0930004,180.0000000,158,158,600); //Flatbed
	CreateVehicle_R(455,-504.7879944,-473.7000122,26.0930004,180.0000000,158,158,600); //Flatbed
	comptruck[9] = CreateVehicle_R(455,-499.4039917,-473.5020142,26.0930004,180.0000000,158,158,600); //Flatbed

	//============================== Army SFA ==================================
	armycarsf[0] = CreateVehicle_R(470,-1372.8979,456.3182,7.2294,0.0551,43,0,600); //
	armycarsf[1] = CreateVehicle_R(470,-1367.1285,456.2757,7.2231,358.5934,43,0,600); //
	armycarsf[2] = CreateVehicle_R(470,-1361.4867,456.2256,7.2231,0.0238,43,0,600); //
	armycarsf[3] = CreateVehicle_R(470,-1356.2032,456.0864,7.2069,359.3690,43,0,600); //
	armycarsf[4] = CreateVehicle_R(470,-1351.0299,456.0008,7.2096,1.1598,43,0,600); //
	armycarsf[5] = CreateVehicle_R(497,-1419.3746,492.2733,18.3684,319.9491,114,114,600); //
	armycarsf[6] = CreateVehicle_R(497,-1429.5170,492.2914,18.4132,318.3365,114,114,600); //
	armycarsf[7] = CreateVehicle_R(497,-1439.3555,491.4513,18.4119,304.5855,114,114,600); //
	armycarsf[8] = CreateVehicle_R(497,-1288.3950,492.2805,18.3670,319.9007,114,114,600); //
	armycarsf[9] = CreateVehicle_R(497,-1277.4031,492.2775,18.3779,319.9335,114,114,600); //
	armycarsf[10] = CreateVehicle_R(497,-1266.3956,492.2798,18.3594,319.9319,114,114,600); //
	armycarsf[11] = CreateVehicle_R(563,-1412.0380,517.2639,18.9804,269.4886,114,114,600); //
	armycarsf[12] = CreateVehicle_R(563,-1451.4536,508.1552,18.9380,270.4318,16,16,600);
	armycarsf[13] = CreateVehicle_R(563,-1451.6771,496.4147,18.9736,268.8331,16,16,600);
	armycarsf[14] = CreateVehicle_R(430,-1446.0490,495.2742,-0.3646,90.9461,114,114,600); //
	armycarsf[15] = CreateVehicle_R(430,-1439.4580,508.3202,-0.1360,90.6253,114,114,600); //
	armycarsf[16] = CreateVehicle_R(497,-1408.8306,492.0621,18.4459,316.3108,16,16,600); //
	armycarsf[17] = CreateVehicle_R(497,-1298.1520,492.3098,18.4036,319.1992,16,16,600); //
	armycarsf[18] = CreateVehicle_R(500,-1529.4420,428.4619,7.3006,60.6340,104,104,600); // СФа офицерская машина1
	armycarsf[19] = CreateVehicle_R(500,-1529.5054,432.6239,7.2803,62.0111,104,104,600); // СФа офицерская машина2
	armycarsf[20] = CreateVehicle_R(500,-1529.4598,437.0796,7.2786,61.1766,104,104,600); // СФа офицерская машина3
	armycarsf[21] = CreateVehicle_R(470,-1529.9104,444.0081,7.2165,66.3885,43,0,600); // СФа хаммер1
	armycarsf[22] = CreateVehicle_R(470,-1529.9207,449.6951,7.2155,66.2135,43,0,600); // СФа хаммер2
	armycarsf[23] = CreateVehicle_R(470,-1529.4401,456.4871,7.2149,66.2166,43,0,600); // СФа хаммер3
	//
	armycarsf[24] = CreateVehicle_R(548,-1265.3256,441.1673,8.6963,37.6728,1,1,600); //
	armycarsf[25] = CreateVehicle_R(548,-1241.4851,441.2180,8.6613,37.6573,1,1,600); //
	armycarsf[26] = CreateVehicle_R(548,-1545.3065,378.2518,8.8687,59.1481,1,1,600); // маталёт СФа1
	armycarsf[27] = CreateVehicle_R(548,-1543.1077,396.6814,8.6623,60.8959,1,1,600); // маталёт СФа2
	armycarsf[28] = CreateVehicle_R(548,-1544.2885,416.1112,8.7020,58.6729,1,1,600); // маталёт СФа3
	//================================ Aztecas =================================
	coronoscar[0] = CreateVehicle_R(567,1683.5426,-2106.7378,13.4090,222.9584,2,2,300); //
	coronoscar[1] = CreateVehicle_R(567,1688.2424,-2106.2634,13.3694,217.0592,2,2,300); //
	coronoscar[2] = CreateVehicle_R(534,1693.9329,-2106.2261,13.2552,218.1066,2,2,300); //
	coronoscar[3] = CreateVehicle_R(567,1682.8170,-2119.2500,13.4180,324.9712,2,2,300); //
	coronoscar[4] = CreateVehicle_R(567,1688.1665,-2119.5271,13.3934,323.0140,2,2,300); //
	coronoscar[5] = CreateVehicle_R(534,1693.9672,-2119.5586,13.2570,327.8052,2,2,300); //
	coronoscar[6] = CreateVehicle_R(478,1698.8173,-2119.5869,13.5725,328.3069,2,2,300); //
	//================================= Vagos ==================================
	vagoscar[0] = CreateVehicle_R(478,2799.3738,-1601.1837,10.9366,337.5052,6,6,300); //
	vagoscar[1] = CreateVehicle_R(467,2795.9553,-1610.1245,10.7588,340.7462,6,6,300); //
	vagoscar[2] = CreateVehicle_R(474,2788.8394,-1623.8651,10.6340,342.9400,6,6,300); //
	vagoscar[3] = CreateVehicle_R(474,2784.0303,-1623.9258,10.6507,339.3192,6,6,300); //
	vagoscar[4] = CreateVehicle_R(474,2779.0093,-1623.9851,10.7474,339.0358,6,6,300); //
	vagoscar[5] = CreateVehicle_R(467,2771.9956,-1614.9314,10.6763,266.4161,6,6,300); //
	vagoscar[6] = CreateVehicle_R(467,2771.9324,-1606.5508,10.6763,271.6363,6,6,300); //
	//================================== Groove Street =========================
	grovecar[0] = CreateVehicle_R(600,2486.7966,-1680.8181,13.0737,333.6607,86,86,300); //
	grovecar[1] = CreateVehicle_R(600,2491.7046,-1680.7976,13.0737,334.3098,86,86,300); //
	grovecar[2] = CreateVehicle_R(492,2496.9080,-1680.3524,13.0735,335.0397,86,86,300); //
	grovecar[3] = CreateVehicle_R(492,2501.9385,-1679.2141,13.0989,335.7959,86,86,300); //
	grovecar[4] = CreateVehicle_R(478,2510.8867,-1687.7504,13.5679,48.9183,86,86,300); //
	grovecar[5] = CreateVehicle_R(466,2509.4780,-1672.3363,13.1738,344.9109,86,86,300); //
	grovecar[6] = CreateVehicle_R(466,2501.7820,-1655.2679,13.2270,65.6726,86,86,300); //
	//================================= Rifa ===================================
	rifacar[0] = CreateVehicle_R(529,2189.7805,-1808.5282,13.0284,44.9485,12,12,300); //
	rifacar[1] = CreateVehicle_R(529,2189.8374,-1802.9955,13.0298,47.5496,12,12,300); //
	rifacar[2] = CreateVehicle_R(529,2190.1440,-1797.8789,13.0248,50.6026,12,12,300); //
	rifacar[3] = CreateVehicle_R(518,2160.0256,-1791.0026,13.1429,221.5456,12,12,300); //
	rifacar[4] = CreateVehicle_R(518,2166.0771,-1790.7765,13.1544,215.7416,12,12,300); //
	rifacar[5] = CreateVehicle_R(518,2171.5010,-1790.6405,13.1558,210.6204,12,12,300); //
	rifacar[6] = CreateVehicle_R(478,2189.2041,-1779.6462,13.3840,359.1770,12,12,300); //
	//================================== Ballas ================================
	ballascar[0] = CreateVehicle_R(412,2651.8391,-2009.8727,13.3967,315.1838,85,85,300); //
	ballascar[1] = CreateVehicle_R(566,2657.2664,-2009.8159,13.3387,317.1115,85,85,300); //
	ballascar[2] = CreateVehicle_R(566,2663.0969,-2010.3190,13.2869,314.5558,85,85,600); //
	ballascar[3] = CreateVehicle_R(412,2660.5706,-1998.9375,13.3396,271.3958,85,85,300); //
	ballascar[4] = CreateVehicle_R(478,2654.4734,-2032.6144,13.5646,88.3298,85,85,300); //
	ballascar[5] = CreateVehicle_R(516,2657.6587,-2042.5701,13.3732,0.0457,85,85,300); //
	ballascar[6] = CreateVehicle_R(516,2652.5093,-2042.6674,13.4114,0.8379,85,85,300); //
	// Фуры банд
	matsfura[0] = CreateVehicle_R(482,2643.5286,-2034.7474,13.7096,1.4741,85,85,500); //
	matsfura[1] = CreateVehicle_R(482,1663.2980,-2111.2231,13.7082,268.6700,2,2,500); //
	matsfura[2] = CreateVehicle_R(482,2783.9197,-1602.8109,11.0728,272.5069,6,6,500); //
	matsfura[3] = CreateVehicle_R(482,2505.7532,-1694.3616,13.7021,1.8562,86,86,500); //
	matsfura[4] = CreateVehicle_R(482,2189.5154,-1788.6223,13.5916,1.1480,12,12,500); //
	//============================== Zone 51 ===================================
	armcar[0] = CreateVehicle_R(500,221.9194,1855.0072,13.0356,1.6078,77,77,600); // Mesa0
	armcar[1] = CreateVehicle_R(500,217.1713,1854.8744,13.0242,1.6078,77,77,600); // Mesa1
	armcar[2] = CreateVehicle_R(500,212.6617,1854.7483,13.0134,1.6078,77,77,600); // Mesa2
	armcar[3] = CreateVehicle_R(500,203.7943,1862.3488,13.2462,271.1720,77,77,600); // Mesa3
	armcar[4] = CreateVehicle_R(500,203.7240,1866.9736,13.2801,271.3324,77,77,600); // Mesa4
	armcar[5] = CreateVehicle_R(500,203.5927,1872.2008,13.2459,271.1720,77,77,600); // Mesa5
	armcar[6] = CreateVehicle_R(497,144.9689,1950.7150,29.1754,359.9992,44,44,600); // Helicopter1
	armcar[7] = CreateVehicle_R(497,135.1045,1950.7152,29.1515,359.9985,44,44,600); // Helicopter2
	armcar[8] = CreateVehicle_R(470,317.5983,1796.7000,17.6335,359.8372,0,0,600); // Hydra0
	armcar[9] = CreateVehicle_R(470,312.3935,1796.7180,17.6630,359.8343,0,0,600);  // Hydra1
	armcar[10] = CreateVehicle_R(470,307.3818,1796.7289,17.6332,359.8372,0,0,600); // Hydra2
	armcar[11] = CreateVehicle_R(470,301.5827,1796.7452,17.6331,359.8372,0,0,600); // Hydra3
	armcar[12] = CreateVehicle_R(500,172.75340000,1953.63980000, 20.06320000,270.24240000,77,77,600); //Mesa3
	armcar[13] = CreateVehicle_R(500,172.99880000,1958.34790000, 20.00980000,268.88950000,77,77,600); //Mesa4
	armcar[14] = CreateVehicle_R(500,173.07350000,1963.36410000, 19.93220000,270.17900000,77,77,600); //Mesa5
	armcar[15] = CreateVehicle_R(500,173.13080000,1968.48190000, 20.04760000,270.81270000,77,77,600); //Mesa6
	armcar[16] = CreateVehicle_R(500,172.93550000,1973.29700000, 20.05970000,269.62710000,77,77,600); //Mesa7
	armcar[17] = CreateVehicle_R(500,173.09060000,1978.29140000, 20.10240000,269.76820000,77,77,600); //Mesa8
	armcar[18] = CreateVehicle_R(500,172.92090000,1983.38120000, 20.00140000,268.40320000,77,77,600); //Mesa9
	armcar[19] = CreateVehicle_R(470,184.40990000,1945.04360000, 19.65430000,91.06440000,77,77,600); //Patriot0
	armcar[20] = CreateVehicle_R(470,183.96970000,1950.09970000, 19.78680000,88.88780000,77,77,600); //Patriot1
	armcar[21] = CreateVehicle_R(470,183.67430000,1954.93640000, 19.77820000,90.21300000,77,77,600); //Patriot2
	armcar[22] = CreateVehicle_R(470,184.13430000,1960.09620000, 19.57300000,88.98510000,77,77,600); //Patriot3
	armcar[23] = CreateVehicle_R(470,183.87360000,1965.14810000, 19.73130000,91.99030000,77,77,600); //Patriot4
	armcar[24] = CreateVehicle_R(470,184.05790000,1970.22350000, 19.77450000,89.54330000,77,77,600); //Patriot5
	armcar[25] = CreateVehicle_R(470,183.93110000,1975.23380000, 19.79280000,90.13170000,77,77,600); //Patriot6
	armcar[26] = CreateVehicle_R(470,183.60440000,1980.46470000, 19.71780000,90.51290000,77,77,600); //Patriot7
	armcar[27] = CreateVehicle_R(470,183.64470000,1985.51730000, 19.79170000,88.25440000,77,77,600); //Patriot8
	armcar[28] = CreateVehicle_R(470,183.76640000,1990.41660000, 19.74800000,88.68630000,77,77,600); //Patriot9
	armcar[29] = CreateVehicle_R(470,183.59310000,1995.62610000, 19.76930000,87.44930000,77,77,600); //Patriot10
	armcar[30] = CreateVehicle_R(470,274.89999390,1945.69995117,17.79999924,269.25000000,77,77,600); //Patriot11
	armcar[31] = CreateVehicle_R(470,274.70001221,1966.09997559,17.79999924,269.24743652,77,77,600); //Patriot14

	armcar[32] = AddStaticVehicle(431,312.9109,2054.1414,17.7421,179.3079,27,27); // Bus LVa
	armcar[33] = AddStaticVehicle(431,301.3675,2054.1921,17.7440,179.2803,27,27); // Bus LVa

	gunscar[0] = CreateVehicle_R(433,275.2985,1982.4747,18.0773,269.3129,34,34,600); // ArmyTruck0
	gunscar[1] = CreateVehicle_R(433,275.3807,1989.3337,18.0773,269.3129,34,34,600); // ArmyTruck1
	gunscar[2] = CreateVehicle_R(433,275.4670,1996.5306,18.0773,269.3129,34,34,600); // ArmyTruck2
	gunscar[3] = CreateVehicle_R(433,274.89999390,1951.19995117,17.79999924,269.24743652,77,77,600); //Patriot12
	gunscar[4] = CreateVehicle_R(433,274.60000610,1955.80004883,17.79999924,269.24743652,77,77,600); //Patriot13
	gunscar[5] = CreateVehicle_R(433,274.79998779,1960.59997559,17.79999924,269.24743652,77,77,600); //Patriot15
	//============================== Мопеды на АШ ==============================
	faggio[0] = CreateVehicle_R(462,-2020.8462,-90.1184,34.9213,159.0164,1,0,240); // Faggio 0
	faggio[1] = CreateVehicle_R(462,-2022.5684,-90.0082,34.9226,161.6525,1,0,240); // Faggio 1
	faggio[2] = CreateVehicle_R(462,-2025.9767,-89.8600,34.9237,156.5267,1,0,240); // Faggio 2
	faggio[3] = CreateVehicle_R(462,-2024.1243,-89.9715,34.9227,163.0753,1,0,240); // Faggio 3
	faggio[4] = CreateVehicle_R(462,-2029.3910,-90.0002,34.9205,158.7377,1,0,240); // Faggio 4
	faggio[5] = CreateVehicle_R(462,-2027.5295,-89.8887,34.9048,155.6873,1,0,240); // Faggio 5
	//============================= Лодки ========================================
	CreateVehicle_R(452,739.6006,-1667.2963,-0.5654,177.2428,1,35,300); // лодка 1
	CreateVehicle_R(452,720.1100,-1693.0873,-0.3042,178.8085,1,22,300); // лодка 2
	CreateVehicle_R(452,721.1708,-1628.0481,-0.5770,181.3787,1,44,300); // лодка 3
	for(new i = tanker_train[0]; i <= tanker_train[1]; i++) max_gruz[i-tanker_train[0]] = 6;
	for(new i = tanker_train[2]; i <= tanker_train[3]; i++) max_gruz[i-tanker_train[0]] = 12;
	for(new i = tanker_train[4]; i <= tanker_train[5]; i++) max_gruz[i-tanker_train[0]] = 18;
	for(new i = tanker_train[6]; i <= tanker_train[7]; i++) max_gruz[i-tanker_train[0]] = 24, AddVehicleComponent(i,1074);
	
	//Загрузка объектов
	#include <objects>
	return true;
}
publics: GetClosestforeach(p1)
{
	new Float:dis,Float:dis2,player;
	player = -1;
	dis = 99999.99;
	foreach(new x: Player)
	{
		if(x != p1)
		{
			dis2 = GetDistanceBetweenPlayerss(x,p1);
			if(dis2 < dis && dis2 != -1.00)
			{
				dis = dis2;
				player = x;
			}
		}
	}
	return player;
}
stock PayChecks(i)
{
	switch(pData[i][pMember])
	{
	case 1..4,7,10,11,19,22,21:
		{
			if(FracBank[0][fKazna] <=0)
			{
				SCM(i, COLOR_GREY, " [Мэрия] Казна штата пуста, зарплаты нет...");
				return false;
			}
		}
	case 24:
		{
			if(hamcfuels >= 600 || hamcprods >= 100)
			{
				new paycheck = pData[i][pRank]*500;
				return paycheck;
			}
		}
	case 26:
		{
			if(wmcfuels >= 600 || wmcprods >= 100)
			{
				new paycheck = pData[i][pRank]*500;
				return paycheck;
			}
		}
	case 29:
		{
			if(pmcfuels >= 600 || pmcprods >= 100)
			{
				new paycheck = pData[i][pRank]*500;
				return paycheck;
			}
		}
	}
	if(pData[i][pMember] == 7)
	{
		switch(pData[i][pRank])
		{
		case 1,2: return 6000; case 3: return 8000;
		case 4: return 10000; case 5: return 16000;
		case 6: return 20000;
		}
	}
	else if(pData[i][pMember] == 2)
	{
		switch(pData[i][pRank])
		{
		case 1: return 6000;
		case 2..10: return 6000+(pData[i][pRank]*1000);
		}
	}
	else if(pData[i][pMember] == 1 || pData[i][pMember] == 10 || pData[i][pMember] == 21) return 4500+(pData[i][pRank]*500);
	else if(pData[i][pMember] == 3 || pData[i][pMember] == 19) return 2500+(pData[i][pRank]*500);
	else if(pData[i][pMember] == 22)
	{
		switch(pData[i][pRank])
		{
		case 1..8: return 2000+(pData[i][pRank]*500);
		case 9: return 8000;
		case 10: return 10000;
		}
	}
	else if(IsAMafia(i)) return 2500+(pData[i][pRank]*1000);
	else if(pData[i][pMember] == 11 || pData[i][pMember] == 9 || pData[i][pMember] == 16 || pData[i][pMember] == 20) return 1500*pData[i][pRank];
	else if(IsAGang(i))
	{
		new null = 0;
		for(new idx = 1; idx <= TOTALGZ; idx++) if(GZInfo[idx][gFrakVlad] == pData[i][pMember]) null++;
		return null*50;
	}
	return false;
}
stock give_job_exp(playerid, job, Float:exp)
{
    if(booston || (booston2 && pData[playerid][pLevel] < 7)) exp *= 2;
	
	if(pData[playerid][pDonateRank] == 1) exp *= 1.3;
 	if(pData[playerid][pDonateRank] == 2) exp *= 1.5;
  	if(pData[playerid][pDonateRank] == 3) exp *= 2;

	pData[playerid][job_skill][job] += exp;
	
	new exp_sql[200];
	format(exp_sql, sizeof exp_sql, "UPDATE `"TABLE_ACCOUNTS"` SET `job_skill[%d]` = '%f' WHERE Name = '%s'", job, pData[playerid][job_skill][job], Name(playerid));
	mysql_query(DATABASE, exp_sql, false);
}
stock GiveExp(playerid)
{
 //    if(pData[playerid][pMin] > 24)
	// {
		new Float:exp = 1;
		if(booston || (booston2 && pData[playerid][pLevel] < 7)) exp = 3;

	    if(pData[playerid][pDonateRank] == 1) exp += exp*0.2;
	    if(pData[playerid][pDonateRank] == 2) exp += exp*0.25;
	    if(pData[playerid][pDonateRank] == 3) exp += exp*0.35;

	    pData[playerid][pExp] += exp;
	    
	    if( (pData[playerid][pExp]+exp) > ((pData[playerid][pLevel]+1)*4) )
	    {
	        pData[playerid][pLevel] += 1;
		 	pData[playerid][pExp] = (pData[playerid][pExp]+exp)-((pData[playerid][pLevel]+1)*4);
		 	SetAccountInfo(playerid,pData[playerid][pLevel],"pLevel");
		 	SetAccountInfoFloat(playerid,pData[playerid][pExp],"pExp");

		  	DollahScoreUpdate(playerid);
		  	SendClientMessage(playerid, COLOR_LIGHTGREEN, " Поздравляем! Ваш лвл повысился");
		  	
		  	new szQuery[64+24];

		  	mysql_format(DATABASE,szQuery, 256, "SELECT pDrug FROM `"TABLE_ACCOUNTS"` WHERE Name = '%e'",pData[playerid][pName]);
			mysql_tquery(DATABASE,szQuery,"OnMySQL_QUERY","iis",13,playerid,"");

			mysql_format(DATABASE, szQuery, sizeof(szQuery), "SELECT * FROM `promocode` WHERE `code`='%e'", pData[playerid][pDrug]);
			new Cache:result = mysql_query(DATABASE, szQuery);

			if(cache_num_rows())
			{
				new  lvl;
				cache_get_value_name_int(0, "lvl", lvl);
				if(pData[playerid][pLevel] == lvl)
				{
					new money, boostmoney;

					cache_get_value_name_int(0, "money", money);
					cache_get_value_name_int(0, "boostmoney", boostmoney);
					SendClientMessage(playerid, COLOR_BLUE,"Спасибо за то, что принимаете участие в развитии проекта");
					switch(booston)
					{
						case 0:SendMes(playerid, COLOR_BLUE, "Вам зачисленно %d вирт", money),pData[playerid][pCash] += money;
						default: SendMes(playerid, COLOR_BLUE, "Вам зачисленно %d вирт", boostmoney),pData[playerid][pCash] += boostmoney;
					}
					SendClientMessage(playerid,COLOR_GREEN,"Рекомендуется: Сменить пароль на более сложный ( /mm >>> [6] Смена пароля )");
					SendClientMessage(playerid,COLOR_GREEN,"Рекомендуется: Поставить проверку по IP и SuperKey ( /mm >>> [10] Безопасность )");
				}
			}
			cache_delete(result);
	    }
	//}
}

stock PayDay()
{
    
	for(new i = 0; i < 20; i++) if(FrakCD[i] > 0) FrakCD[i]--;
	
	TotalGzR = TotalGzA = TotalGzB = TotalGzG = TotalGzV = 0;
	
	for(new i = 1; i <= TOTALGZ; i++)
	{
		if(GZInfo[i][gFrakVlad] == 12) TotalGzB++;
		if(GZInfo[i][gFrakVlad] == 13) TotalGzV++;
		if(GZInfo[i][gFrakVlad] == 15) TotalGzG++;
		if(GZInfo[i][gFrakVlad] == 17) TotalGzA++;
		if(GZInfo[i][gFrakVlad] == 18) TotalGzR++;
	}
	for(new i = 0; i < 46; i++) if(resoluted_empty[i] > 0) resoluted_empty[i]--;
	for(new i = 0; i < 30; i++) if(resolut_empty[i] > 0) resolut_empty[i]--;
	
	FracBank[0][fBallas] += TotalGzB*200;
	FracBank[0][fVagos] += TotalGzV*200;
	FracBank[0][fGrove] += TotalGzG*200;
	FracBank[0][fRifa] += TotalGzR*200;
	FracBank[0][fAztek] += TotalGzA*200;
	
	//
	GetBizz();
	GetHome();
	GetShop();
	GetFarm();
	getTaxiStation();
	//
	if(armmatbi < 0) armmatbi = 0;
	if(armmatsf < 0) armmatsf = 0;
	foreach(new i: Player)
	{
		if(pData[i][pLogin] == false) continue;
		if(pData[i][pLimitPay] > 0) pData[i][pLimitPay] = 0;
		BGet(i), WGet(i), FGet(i);
		PlayerPlaySound(i, 1068, 0.0, 0.0, 0.0);
		new b = pData[i][pPBizzKey];

		if(!GetPVarInt(i,"Fraction_Duty") && pData[i][pJob] == 1 && pData[i][pPayCheck] > 15000) pData[i][pPayCheck] = 15000;
		if(!GetPVarInt(i,"Fraction_Duty") && pData[i][pJob] == 4 && pData[i][pPayCheck] > 20000) pData[i][pPayCheck] = 20000;
		
		if(pData[i][pWantedLevel])
		{
			if(startaddiction[i] == 0 && pData[i][pAddiction] > 2000 && pData[i][pNarcoLomka] == 1) startaddiction[i] = 1;
			recognition[i] = 0;
			if(!recognition[i])
			{
				SCM(i,-1,"Ваша узнаваемость понизилась");
				SetPlayerWantedLevelEx(i, -1);
			}	
			else
			{
				SCM(i,-1,"Ваша узнаваемость повысилась");
			}
		}

		DeletePVar(i,"_Hel");
	    GiveExp(i);
	
		if(IsAArm(i) && lsamatbi > 90000) pData[i][pPayCheck] = pData[i][pPayCheck]+pData[i][pPayCheck]/2, SendClientMessage(i, COLOR_BLUE, " Склад LSA заполнен");
		if(pData[i][pHelper] && SDuty[i]) pData[i][pPayCheck] = pData[i][pPayCheck]+10000, SendClientMessage(i, COLOR_BLUE, " Зарплата саппорта: +10 000");
		new checks = pData[i][pPayCheck];
		if(pData[i][pDonateRank] > 0) format(string, 20, "PayDay");
		else format(string, 20, "~w~PayDay");
		GameTextForPlayer(i, string, 5000, 1);
		if(pData[i][pDonateRank] > 0) SendClientMessage(i, COLOR_GOLD, " --------===[ VIP КЛИЕНТ БАНКА SA ]===-------");
		else SendClientMessage(i, COLOR_GRAD1, " --------===[ КЛИЕНТ БАНКА SA ]===-------");
		if(pData[i][pPayCheck] >= 500 && !IsAMafia(i) && !IsAGang(i))
		{
			format(string, 128, " ***** Налог государству: -%i вирт *****",pData[i][pPayCheck]/10);
			SendClientMessage(i, 0xFF8C37AA, string);
			pData[i][pBank] -= pData[i][pPayCheck]/10;
			FracBank[0][fKazna] += checks/10;
		}
		else
		{
			format(string, 128, " ***** Налог государству: -0 вирт *****"),
			SendClientMessage(i, 0xFF8C37AA, string);
		}
		if(pData[i][pBank] > 50 && pData[i][pKrisha] != 0) pData[i][pBank] -= 50, pData[i][pDolg] += 50;
		if(pData[i][pCash] > 50 && pData[i][pKrisha] != 0) pData[i][pCash] -= 50, pData[i][pDolg] += 50;
		format(string, 128, " Счёт за телефон: -%i вирт", pData[i][pMobile]);
		SendClientMessage(i, 0xFF8C37AA, string);
		pData[i][pBank]-=pData[i][pMobile];
		pData[i][pMobile] = 0;
		if(pData[i][pDonateRank]) SendClientMessage(i, COLOR_GOLD, " ");
		else SendClientMessage(i, COLOR_WHITE, " ");
		format(string, 128, " Зарплата: %i вирт", checks);
		if(GetPVarInt(i,"Fraction_Duty"))
		{
			switch(pData[i][pMember])
			{
			case 1,10,21: format(string, 128, " Зарплата Полиции: %i вирт", checks);
			case 3,19: format(string, 128, " Зарплата Армии: %i вирт", checks);
			case 2: format(string, 128, " Зарплата ФБР: %i вирт", checks);
			case 7: format(string, 128, " Зарплата Мэрии: %i вирт", checks);
			case 4,22: format(string, 128, " Зарплата Медиков: %i вирт", checks);
			case 11: format(string, 128, " Зарплата Автошколы: %i вирт", checks);
			case 5,6,14: format(string, 128, " Зарплата организации: %i вирт", checks);
			case 12,13,15,17,18: format(string, 128, " Зарплата Бандитов: %i вирт", checks);
			}
		}
		if(pData[i][pAdmin] > 0 && dostup[i])
		{
			format(string, 128, " Зарплата Администрации: 20000 вирт");
			pData[i][pBank] += 20000;
		}
		if(pData[i][pDonateRank] > 0) SendClientMessage(i, COLOR_GOLD, string);
		else SendClientMessage(i, COLOR_WHITE, string);
		pData[i][pBank] += checks;
		checks = 0;
		if(pData[i][pDonateRank] > 0) format(string, 128, " Текущий баланс: %i вирт", pData[i][pBank]), SendClientMessage(i, COLOR_GOLD, string);
		else format(string, 128, " Текущий баланс: %i вирт", pData[i][pBank]), SendClientMessage(i, COLOR_WHITE, string);
		if(pData[i][pPHouseKey] != INVALID_HOUSE_ID)
		{
			if(pData[i][pDonateRank]) SendMes(i,COLOR_GOLD," Домашний счёт: %i вирт", HouseInfo[pData[i][pPHouseKey]][hTakings]);
			else SendMes(i,COLOR_WHITE," Домашний счёт: %i вирт", HouseInfo[pData[i][pPHouseKey]][hTakings]);
		}
		if(BGet(i))
		{
			if(pData[i][pDonateRank]) SendMes(i,COLOR_GOLD," Плата за электроэнергию: %i вирт",BizzLandTax[b]);
			else SendMes(i,COLOR_WHITE," Плата за электроэнергию: %i вирт",BizzLandTax[b]);
			BizzInfo[b][bLandTax] -= BizzLandTax[b];
			BizzPay[b] = 0;
		}
		if(FGet(i))
		{
			FarmStatPayS[pData[i][pPFarmKey]][0] = FarmStatPay[pData[i][pPFarmKey]][0];
			FarmStatPayS[pData[i][pPFarmKey]][1] = FarmStatPay[pData[i][pPFarmKey]][1];
			FarmStatPayS[pData[i][pPFarmKey]][2] = FarmStatPay[pData[i][pPFarmKey]][2];
			FarmStatPayS[pData[i][pPFarmKey]][3] = FarmStatPay[pData[i][pPFarmKey]][3];
			FarmStatPayS[pData[i][pPFarmKey]][4] = FarmStatPay[pData[i][pPFarmKey]][4];
			FarmStatPayS[pData[i][pPFarmKey]][5] = FarmStatPay[pData[i][pPFarmKey]][5];
			FarmStatPayS[pData[i][pPFarmKey]][6] = FarmStatPay[pData[i][pPFarmKey]][6];
			FarmStatPayS[pData[i][pPFarmKey]][7] = FarmStatPay[pData[i][pPFarmKey]][7]; // ZP
			FarmStatPayS[pData[i][pPFarmKey]][8] = FarmStatPay[pData[i][pPFarmKey]][8];
			FarmStatPay[pData[i][pPFarmKey]][0] = 0;
			FarmStatPay[pData[i][pPFarmKey]][1] = 0;
			FarmStatPay[pData[i][pPFarmKey]][2] = 0;
			FarmStatPay[pData[i][pPFarmKey]][3] = 0;
			FarmStatPay[pData[i][pPFarmKey]][4] = 0;
			FarmStatPay[pData[i][pPFarmKey]][5] = 0;
			FarmStatPay[pData[i][pPFarmKey]][6] = 0;
			FarmStatPay[pData[i][pPFarmKey]][7] = 0;
			FarmStatPay[pData[i][pPFarmKey]][8] = 0;
		}
		if(pData[i][pDonateRank] >= 1) SendClientMessage(i, COLOR_GOLD, "================================");
		else SendClientMessage(i,COLOR_GRAD1, "================================");

		if(BGet(i) != 0 && BizzInfo[b][bProducts] < 0)
		{
			if(IsPlayerConnected(i) && pData[i][pLogin])
			{
				SendClientMessage(i, COLOR_LIGHTRED, " Ваш бизнес был закрыт по причине: отсутствие продуктов");
				SendClientMessage(i, COLOR_LIGHTRED, " Если по истечению {ffffff}12 {FF6347}часов бизнес будет закрыт, он будет продан гос-ву");
				BizzInfo[b][bLockTime] = 1;
				BizzInfo[b][bLocked] = 1;
			}
		}
		if(BGet(i) && BizzInfo[b][bLockTime] > 1)
		{
			format(string, 160, " Ваш бизнес закрыт уже {ffffff}%i {FF6347}час(а/ов)",BizzInfo[b][bLockTime]);
			SendClientMessage(i, COLOR_LIGHTRED,string);
			SendClientMessage(i, COLOR_LIGHTRED, " Если по истечению {ffffff}12 {FF6347}часов бизнес будет закрыт, он будет продан гос-ву");
		}
		if(pData[i][pPBizzKey] != 0 && BizzInfo[b][bLockTime] > 12)
		{
			SendClientMessage(i, COLOR_LIGHTRED," Ваш бизнес был продан гос-ву за отсутствие продуктов");
			SendClientMessage(i, COLOR_LIGHTRED," Ваши деньги за бизнес были перечислены на ваш счет");
			BizzInfo[b][bLocked] = 1;
			BizzInfo[b][bProducts] = 0;
			strmid(BizzInfo[b][bOwner], "None", 0, strlen("None"), 24);
			pData[i][pBank] +=BizzInfo[b][bTill]+BizzInfo[b][bLandTax];
			BizzInfo[b][bTill] = 0;
			BizzInfo[b][bPrice] = 0;
			BizzInfo[b][bMafia] = 0;
			BizzInfo[b][bLandTax] = 0;
			BizzPay[b] = 0;
			BizzInfo[b][bLicense] = 0;
			BGet(i);
			format(string, 32, "%s\nПродаётся", BizzInfo[b][bMessage],BizzInfo[b][bBuyPrice]);
			UpdateDynamic3DTextLabelText(BizzInfo[b][bLabel], COLOR_GREEN, string);
			pData[i][pPBizzKey] = 0;
			SaveMySQL(4,b);
		}
		if(pData[i][pPBizzKey] != 0 && BizzInfo[b][bLandTax] < 0)
		{
			SendClientMessage(i, COLOR_LIGHTRED," Ваш бизнес был продан гос-ву за неуплату налогов");
			SendClientMessage(i, COLOR_LIGHTRED," Ваши деньги за бизнес были перечислены на ваш счет");
			BizzInfo[b][bLocked] = 1;
			BizzInfo[b][bProducts] = 0;
			strmid(BizzInfo[b][bOwner], "None", 0, strlen("None"), 24);
			pData[i][pBank] +=BizzInfo[b][bTill]+BizzInfo[b][bLandTax];
			BizzInfo[b][bTill] = 0;
			BizzInfo[b][bPrice] = 0;
			BizzInfo[b][bMafia] = 0;
			BizzInfo[b][bLandTax] = 0;
			BizzPay[b] = 0;
			BizzInfo[b][bLicense] = 0;
			BGet(i);
			format(string, 32, "%s\nПродаётся", BizzInfo[b][bMessage],BizzInfo[b][bBuyPrice]);
			UpdateDynamic3DTextLabelText(BizzInfo[b][bLabel], COLOR_GREEN, string);
			pData[i][pPBizzKey] = 0;
			SaveMySQL(4,b);
		}
		if(GetPVarInt(i, "GetShop") > 0)
		{
			SendClientMessage(i, COLOR_LIGHTRED," Ваша автомастерская была выставлена на аукцион за неуплату налогов");
			SendClientMessage(i, COLOR_LIGHTRED," Деньги с банка автомастерской были перечислены на ваш счет");
			DeletePVar(i, "wShop");
			DeletePVar(i, "GetShop");
		}
		if(GetPVarInt(i, "GetFarm") > 0)
		{
			SendClientMessage(i, COLOR_LIGHTRED," Ваша ферма была выставлена на аукцион за неуплату налогов");
			SendClientMessage(i, COLOR_LIGHTRED," Деньги с банка фермы были перечислены на ваш счет");
			pData[i][pPFarmKey] = 0;
			DeletePVar(i, "GetFarm");
		}
		seans[i] = 0;
		pData[i][pRobHouse] = 0;
		pData[i][pPayCheck] = 0;
		pData[i][pPLimitBank] = 0;
		pData[i][pPayFlood] = 0;
		pData[i][pLimitPay] = 0;
		SetTimer("StopPlayerSound" , 6000, false);
	}
	return true;
}
stock BroadCast(color,const str[])
{
	SendClientMessageToAll(color, str);
	return true;
}
stock ABroadCast(color, const str[],level)
{
	foreach(new i: Player)
	{
		if(pData[i][pAdmin] < level) continue;
		SendClientMessage(i, color, str);
	}
	return true;
}
publics: SendTeamMessage(team, color, const str[])
{
	foreach(new i: Player)
	{
		if(IsAArm(i) && GetPVarInt(i,"Fraction_Duty") || IsAMedic(i) && GetPVarInt(i,"Fraction_Duty") || IsAMayor(i) && GetPVarInt(i,"Fraction_Duty") || IsACop(i) && GetPVarInt(i,"Fraction_Duty") || pData[i][pMember] == 11 && GetPVarInt(i,"Fraction_Duty") || IsAFbi(i) && GetPVarInt(i,"Fraction_Duty")) SCM(i, color, str);
	}
}

stock SendPoliceMessage(color, const  str[])
{
	foreach(new i: Player)
	{
		if(pData[i][pLeader] == 1 || pData[i][pMember] == 1 || pData[i][pLeader] == 10 || pData[i][pMember] == 10 || pData[i][pLeader] == 21 || pData[i][pMember] == 21) SCM(i, color, str);
	}
}

stock SendRadioMessage(member, color, const str[])
{
	foreach(new i: Player)
	{
		if((pData[i][pMember] == member || pData[i][pLeader] == member) && GetPVarInt(i,"Fraction_Duty")) SCM(i, color, str);
	}
}
stock SendJobMessage(job, color, const str[])
{
	foreach(new i: Player) if(pData[i][pJob] == job) SCM(i, color, str);
	return true;
}
stock SendFarmMessage(farm_id, color, const str[])
{
	foreach(new i: Player) if(GetPVarInt(i,"farm_id") == farm_id && GetPVarInt(i,"farm_rank") > 1) SCM(i, color, str);
	return true;
}
stock SendFamilyMessage(family, color, const str[])
{
	foreach(new i: Player)
	{
		if(GetPVarInt(i,"Fraction_Duty"))
		{
			if(GetPVarInt(i,"chats") != 1)
			{
				if(pData[i][pMember] == family || GetPVarInt(i,"Atisper") == family)
				{
					SCM(i, color, str);
				}
			}
		}
		else if(GetPVarInt(i,"Atisper") == family)
		{
			SCM(i, color, str);
		}
	}
}


stock SendDetachMessage(detach, color, const str[])
{
	foreach(new i: Player)
	{
		if(GetPVarInt(i,"Fraction_Duty"))
		{
			if(GetPVarInt(i,"chats") != 1)
			{
				if(pData[i][pDetachID] == detach)
				{
					SCM(i, color, str);
				}
			}
		}
	}
}

stock SendGangFamily(family, color,const  str[])
{
	foreach(new i: Player)
	{
		if(!GetPVarInt(i,"family_chat") && GetPVarInt(i,"Fraction_Duty") && pData[i][pLogin])
		{
			if(GetPVarInt(i,"chats") != 1)
			{
				if(pData[i][pMember] == family || GetPVarInt(i,"Atisper") == family)
				{
					SCM(i, color, str);
				}
			}
		}
		else if(GetPVarInt(i,"Atisper") == family)
		{
			SCM(i, color, str);
		}
	}
}
publics: SendGangMessage(family, color, const str[])
{
	foreach(new i: Player)
	{
		if(pData[i][pMember] == 12 || pData[i][pMember] == 13 || pData[i][pMember] == 15 || pData[i][pMember] == 17 || pData[i][pMember] == 18 )
		{
			if(!GetPVarInt(i,"family_chat")) SCM(i, color, str);
		}
	}
}
publics: SendMafiaMessage(family, color, const str[])
{
	foreach(new i: Player)
	{
		if((pData[i][pMember] == 5 || pData[i][pMember] == 6 || pData[i][pMember] == 14) && !GetPVarInt(i,"family_chat")) SCM(i, color, str);
	}
}
publics: SendCopsMessage(color, const str[])
{
	foreach(new i: Player)
	{
		if((pData[i][pMember] == 1 || pData[i][pMember] == 2 || pData[i][pMember] == 10 || pData[i][pMember] == 21) && GetPVarInt(i,"Fraction_Duty") && !GetPVarInt(i,"family_chat")) SCM(i, color, str);
	}
}
stock SendAdminMessage(color, const str[])
{
	foreach(new i: Player)
	{
		if(!pData[i][pAdmin] || !dostup[i]) continue;
		SendClientMessage(i, color, str);
	}
	return true;
}
stock HelperMessage(color,const str[])
{
	foreach(new i: Player)
	{
		if(!pData[i][pHelper] && !dostup[i] || !SDuty[i]) continue;
		SendClientMessage(i, color, str);
	}
}

stock MoveVehicleToGarage(vehicleid,Float:x,Float:y,Float:z,Float:angle,interiorid,virtualworld)
{
	SetVehiclePos(vehicleid,x,y,z);
	LinkVehicleToInterior(vehicleid, interiorid);
	SetVehicleVirtualWorld(vehicleid, virtualworld);
	SetVehicleZAngle(vehicleid, angle);
	foreach(new i: Player)
	{
		if(IsPlayerInVehicle(i, vehicleid))
		{
			//new her = GetPlayerVehicleSeat(i);
			//SetPlayerPos(i, x,y,z);
			SetPlayerInterior(i, interiorid);
			SetPlayerVirtualWorld(i,virtualworld);
			//PutPlayerInVehicle(i, vehicleid, her);
			SetPlayerTime(i, 12,00);
			SetPlayerWeather(i, 4);
		}
	}
}
CMD:delivery(playerid)
{
	if(pData[playerid][pJob] != J_DELIVERY)
		return SendClientMessage(playerid, 0xe53935FF, " Вы не работаете доставщиком!");

	new str_delivery[100], str_list[512], totaldelivery;
	//strcat
	for(new ff = 0; ff < sizeof delivery_info-1; ff++)
	{
		if(delivery_info[ff][accept]) totaldelivery ++;
	}
	if(totaldelivery < 10) // никогда не будет меньше 10 заказов FAKE AAAAAAAAAAAAA :OOOOOO
	{
		for(new ff = 0; ff < 10; ff++)
		{
			if(!delivery_info[ff][accept]) 
			{// создание фейкового заказа
				delivery_info[ff][food] = random(14);
				delivery_info[ff][accept] = 1;
				new rand_house = random(TotalHouse-1);
				while(strcmp(HouseInfo[rand_house][hOwner],"None",true) == 0 )
				{
					rand_house = random(TotalHouse-1);
				}
				delivery_info[ff][adress] =  rand_house;
			}
		}
	}
	format(str_list, sizeof str_list,"Номер\tНаименование\tЗаказчик\n");

	for(new ff = 0; ff < sizeof delivery_info-1; ff++)
	{
		if(delivery_info[ff][accept]) 
		{
			if(delivery_info[ff][accept] == 1)// 1 - заказан, не принят
				format(str_delivery, sizeof str_delivery, "[%d]\t%s\t%s\n",ff,delivery_food_name(delivery_info[ff][food]), HouseInfo[delivery_info[ff][adress]][hOwner]);
			else // если принят выделяем серым
				format(str_delivery, sizeof str_delivery, "{9e9e9e}[%d]\t{9e9e9e}%s\t{9e9e9e}%s\n",ff,delivery_food_name(delivery_info[ff][food]), HouseInfo[delivery_info[ff][adress]][hOwner]);

			strcat(str_list, str_delivery);
			
		}
	}
	ShowPlayerDialog(playerid,89,DIALOG_STYLE_TABLIST_HEADERS,"Заказы",str_list,"Просмотр","Закрыть");
	return 1;
}

CMD:svrnt(playerid)
{
	if(pData[playerid][pAdmin] < 2) return true;

	string[0] = EOS;
	GetNetworkStats(string, sizeof string);
	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "Server Network Stats", string, "x", "");
	return true;
}
CMD:omenusxy(playerid)
{
	ShowPlayerDialog(playerid,0,DIALOG_STYLE_LIST,"{FFFFFF}Управление | {ae433d}Организация","{FFFFFF}- Банк: {357EBD}100000{FFFFFF} $.\n- [ONLINE] Принять\n- [ONLINE] Назначить\n- [ONLINE] Уволить\n- [OFFLINE] Уволить\n- Наименование должностей\n- Наименование организации\n- Установить позицию\n- Установить цвет", "Далее", "Отмена");
}
CMD:strtr(playerid)
{
	if(pData[playerid][pAdmin] < 2) return true;

	string[0] = EOS;
	format(string, sizeof(string), "streamer tick rate %i", Streamer_GetTickRate());
	SendClientMessage(playerid, -1,string);
	return true;
}

CMD:plrnt(playerid,params[])
{
	if(pData[playerid][pAdmin] < 2) return true;
	else if(sscanf(params,"u",params[0])) return SendClientMessage(playerid, -1,!" Введите /plrns [ид игрока]");
	if(params[0] == INVALID_PLAYER_ID) return true;

	string[0] = EOS;
	GetPlayerNetworkStats(params[0], string, sizeof string ); // get your own networkstats
	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, pData[params[0]][pName], string, "x", "");
	return true;
}

CMD:warelock(playerid, params[])
{
	if(!pData[playerid][pLogin]) return true;
	if(IsAGang(playerid) && pData[playerid][pRank] > 8)
	{
		new gang;
		switch(pData[playerid][pMember])
		{
		case 12: gang = 0;
		case 13: gang = 1;
		case 15: gang = 2;
		case 17: gang = 3;
		case 18: gang = 4;
		}
		if(!warelock1[gang])
		{
			warelock1[gang] = 1;
			format(cString,sizeof(cString)," %s %s {BC2C2C}Закрыл {00B953}доступ к складу с материалами!",GetRank(playerid),pData[playerid][pName]);
			SendFamilyMessage(pData[playerid][pMember],0x00B953AA,cString);
		}
		else
		{
			warelock1[gang] = 0;
			format(cString,sizeof(cString)," %s %s {33AA33}Открыл {00B953}доступ к складу с материалами!",GetRank(playerid),pData[playerid][pName]);
			SendFamilyMessage(pData[playerid][pMember],0x00B953AA,cString);
		}
		return true;
	}
	if(IsAMafia(playerid) && pData[playerid][pRank] > 8)
	{
		new mafia;
		switch(pData[playerid][pMember])
		{
		case 5: mafia = 0;
		case 6: mafia = 1;
		case 14: mafia = 2;
		}
		if(!warelock2[mafia])
		{
			warelock2[mafia] = 1;
			format(cString,sizeof(cString)," %s %s {BC2C2C}Закрыл {00B953}доступ к складу с оружием!",GetRank(playerid),pData[playerid][pName]);
			SendFamilyMessage(pData[playerid][pMember],0x00B953AA,cString);
		}
		else
		{
			warelock2[mafia] = 0;
			format(cString,sizeof(cString)," %s %s {33AA33}Открыл {00B953}доступ к складу с оружием!",GetRank(playerid),pData[playerid][pName]);
			SendFamilyMessage(pData[playerid][pMember],0x00B953AA,cString);
		}
		return true;
	}
	return SCM(playerid,COLOR_GREY," Вам недоступна данная функция");
}
CMD:patrul(playerid, params[])
{
	if(!pData[playerid][pLogin]) return true;
	if(GetPVarInt(playerid,"Pursiut"))
	{
		DisablePlayerCheckpoint(playerid);
		DeletePVar(playerid,"Pursiut");
		SCM(playerid,-1,"Преследование закончено!");
		return true;
	}
	new null[2] = -1;
	if(IsAFbiCar(GetPlayerVehicleID(playerid)) || IsACopCar(GetPlayerVehicleID(playerid)))
	{
		foreach(new i: Player) if(GetPlayerVehicleID(i) == GetPlayerVehicleID(playerid) && (IsACop(i) || IsAFbi(i))) null[0] = i, null[1]++;
		if(null[1] < 1) return SCM(playerid,COLOR_GREY," Для начала патрулирования вам нужен один напарник!");
		new Float:pos[3];
		AntiCheatGetPos(playerid,pos[0],pos[1],pos[2]);
		foreach(new i: Player)
		{
			if(IsPlayerInRangeOfPoint(i, 200.0, pos[0],pos[1],pos[2]))
			{
				if(pData[i][pWantedLevel] != 0 && i != playerid && !IsACop(i) && !IsAFbi(i))
				{
					AntiCheatGetPos(i,pos[0],pos[1],pos[2]);
					SetPlayerCheckpoint(playerid, pos[0],pos[1],pos[2], 4.0);
					SetPVarInt(playerid,"Pursiut",i+1);
					SetPVarInt(playerid,"Partner",null[0]+1);
					SendMes(playerid,-1," Вы начали преследование за преступником %s!",pData[i][pName]);
					format(string,128," Полицейский %s начал преследование за преступником %s (Уровень розыска: %i)",pData[playerid][pName],pData[i][pName],pData[i][pWantedLevel]);
					SendCopsMessage(0xFFC80100,string);
					return true;
				}
			}
		}
		return SCM(playerid,COLOR_GREY," В вашем районе нет преступников!");
	}
	else return SCM(playerid,COLOR_GREY," Вы должны находиться в патрульной машине!");
}
stock EnterExitGarage(playerid)
{
	if(pData[playerid][pState] == PLAYER_STATE_ONFOOT) // пешком
	{
		if(GetPVarInt(playerid,"PlayerInGarage")) // если он в гараже
		{
		    DeletePVar(playerid,"PlayerInGarage");
			new garage = GetPlayerVirtualWorld(playerid)-100;
			if(garage < 0) return true;
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,HouseInfo[garage][hCarx], HouseInfo[garage][hCary], HouseInfo[garage][hCarz]);
			SetPlayerFacingAngle(playerid, HouseInfo[garage][hCarc]);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerWeather(playerid, ServWeather);
			SetPlayerTime(playerid, ServHour,ServMinute);
		}
		new i = (GetPVarInt(playerid, !#pPickHouseId)-1);
		if ( IsPlayerInDynamicArea(playerid, HouseInfo[i][h_area]) )
		{
			if(pData[playerid][pPHouseKey] != i && HouseInfo[i][hLock] == true)  //не владелец и закрыт
			{
				GameTextForPlayer(playerid, "~r~CLOSED", 5000, 1);
				return 1;
			}
			else 
			{
				switch(HouseInfo[i][hKlass])
				{
					case 2: // Дом C Klass
					{
						SetPlayerInterior(playerid,5);
						SetPlayerPos(playerid,1384.6168, -21.3153, 1000.6000);
						SetPlayerFacingAngle(playerid, 90.00);
					}
					case 3: // Дом B Klass
					{
						SetPlayerInterior(playerid,6);
						SetPlayerPos(playerid,1402.5889,-25.5931,1000.9203);
						SetPlayerFacingAngle(playerid, 0.00);
					}
					case 4: // Дом A Klass
					{
						SetPlayerInterior(playerid,7);
						SetPlayerPos(playerid,1393.2773,-28.4577,1000.9128);
						SetPlayerFacingAngle(playerid, 90.00);
					}
					case 5: // Дом S Klass
					{
						SetPlayerInterior(playerid,8);
						SetPlayerPos(playerid,1381.1859,-23.1935,1000.9243);
						SetPlayerFacingAngle(playerid, 270.00);
					}
				}
				SetPlayerVirtualWorld(playerid,i+100);
				SetPVarInt(playerid,"PlayerInGarage",1);
				SetPlayerWeather(playerid, 4);
				SetPlayerTime(playerid, 12,00);
			}
		}
	}		
	if(pData[playerid][pState] == PLAYER_STATE_DRIVER)
	{
		if(GetPVarInt(playerid,"PlayerInGarage") && GetPlayerVirtualWorld(playerid) == pData[playerid][pPHouseKey]+100) // если он в гараже
		{
			if(GetPVarInt(playerid,"CarsInGarage") == -1) return SCM(playerid,COLOR_GREY," Все ваши автомобили должны находиться в гараже");
			new house = pData[playerid][pPHouseKey];
			if(IsPlayerInVehicle(playerid, garage_car[playerid][0]))
			{
				SetPVarInt(playerid,"chosencar",0); // Выставляем игроку значение (Выбрана машина №0)
			}
			else if(IsPlayerInVehicle(playerid, garage_car[playerid][1]))
			{
				SetPVarInt(playerid,"chosencar",1); // Выставляем игроку значение (Выбрана машина №1)
			}
			else if(IsPlayerInVehicle(playerid, garage_car[playerid][2]))
			{
				SetPVarInt(playerid,"chosencar",2); // Выставляем игроку значение (Выбрана машина №2)
			}
			else if(IsPlayerInVehicle(playerid, garage_car[playerid][3]))
			{
				SetPVarInt(playerid,"chosencar",3); // Выставляем игроку значение (Выбрана машина №3)
			}
			else if(IsPlayerInVehicle(playerid, garage_car[playerid][4]))
			{
				SetPVarInt(playerid,"chosencar",4); // Выставляем игроку значение (Выбрана машина №4)
			}
			else if(IsPlayerInVehicle(playerid, garage_car[playerid][5]))
			{
				SetPVarInt(playerid,"chosencar",5); // Выставляем игроку значение (Выбрана машина №4)
			}
			else return true;
			house_car[playerid] = GetPlayerVehicleID(playerid); // Выставим значение машине игрока (house_car)
			SetPVarInt(playerid, "CarsInGarage", -1); // Выставим значение игроку (Не все машины игрока в гараже)
			SetVehiclePos(house_car[playerid], HouseInfo[house][hCarx], HouseInfo[house][hCary], HouseInfo[house][hCarz]);
			SetVehicleZAngle(house_car[playerid], HouseInfo[house][hCarc]);
			SetVehicleVirtualWorld(house_car[playerid], 0);
			LinkVehicleToInterior(house_car[playerid], 0);
			DeletePVar(playerid,"PlayerInGarage");
			foreach(new i: Player)
			{
				if(IsPlayerInVehicle(i, house_car[playerid]))
				{
					//new her = GetPlayerVehicleSeat(i);
					SetPlayerInterior(i,0);
					SetPlayerVirtualWorld(i,0);
					//SetPlayerPos(i,HouseInfo[house][hCarx], HouseInfo[house][hCary], HouseInfo[house][hCarz]);
					//PutPlayerInVehicle(i, house_car[playerid], her);
					SetPlayerWeather(playerid, ServWeather);
					SetPlayerTime(playerid, ServHour,ServMinute);
				}
			}
		}
		else if(!GetPlayerVirtualWorld(playerid) && IsPlayerInVehicle(playerid,house_car[playerid])) // если он на улице
		{
			if(!PlayerToPoint(6,playerid,HouseInfo[pData[playerid][pPHouseKey]][hCarx], HouseInfo[pData[playerid][pPHouseKey]][hCary], HouseInfo[pData[playerid][pPHouseKey]][hCarz])) return true;
			
			new i = pData[playerid][pPHouseKey];
			
			new h = GetPVarInt(playerid,"chosencar");
			switch(HouseInfo[i][hKlass])
			{
			case 2: // Дом C Klass
				{
					switch(h) // Проверка на значение (Какая машина не находится в гараже)
					{
					case 0: MoveVehicleToGarage(house_car[playerid],1397.2958, -21.3153, 1000.6000, 180.0000, 5,i+100);
					case 1: MoveVehicleToGarage(house_car[playerid],1390.3330, -21.3153, 1000.6000, 180.0000, 5,i+100);
					case 2: MoveVehicleToGarage(house_car[playerid],1384.6168, -21.3153, 1000.6000, 180.0000, 5,i+100);
					}
				}
			case 3: // B Klass
				{
					switch(h) // Проверка на значение игрока (Какая машина не находится в гараже)
					{
					case 0: MoveVehicleToGarage(house_car[playerid],1396.0000, -25.0000, 1000.6000, -90.0000,6,i+100);
					case 1: MoveVehicleToGarage(house_car[playerid],1395.8748, -21.0000, 1000.6000, -90.0000,6,i+100);
					case 2: MoveVehicleToGarage(house_car[playerid],1396.0000, -17.0000, 1000.6000, -90.0000,6,i+100);
					case 3: MoveVehicleToGarage(house_car[playerid],1396.0000, -13.0000, 1000.6000, -90.0000,6,i+100);
					}
				}
			case 4: // A Klass
				{
					switch(h) // Проверка на значение игрока (Какая машина не находится в гараже)
					{
					case 0: MoveVehicleToGarage(house_car[playerid],1380.0000, -13.4861, 1000.6000, 180.0000,7,i+100);
					case 1: MoveVehicleToGarage(house_car[playerid],1384.0000, -13.4861, 1000.6000, 180.0000,7,i+100);
					case 2: MoveVehicleToGarage(house_car[playerid],1388.0000, -13.4861, 1000.6000, 180.0000,7,i+100);
					case 3: MoveVehicleToGarage(house_car[playerid],1392.0000, -13.4861, 1000.6000, 180.0000,7,i+100);
					case 4: MoveVehicleToGarage(house_car[playerid],1396.0000, -13.4861, 1000.6000, 180.0000,7,i+100);
					}
				}
			case 5: // S Klass
				{
					switch(h) // Проверка на значение игрока (Какая машина не находится в гараже)
					{
					case 0: MoveVehicleToGarage(house_car[playerid],1390.0000, -12.9679, 1000.6000, -142.0000,8,i+100);
					case 1: MoveVehicleToGarage(house_car[playerid],1397.0000, -12.9679, 1000.6000, -142.0000,8,i+100);
					case 2: MoveVehicleToGarage(house_car[playerid], 1404.0000, -12.9679, 1000.6000, -142.0000,8,i+100);
					case 3: MoveVehicleToGarage(house_car[playerid],1390.0000, -24.4551, 1000.6000, -42.0000,8,i+100);
					case 4: MoveVehicleToGarage(house_car[playerid],1397.0000, -24.4551, 1000.6000, -42.0000,8,i+100);
					case 5: MoveVehicleToGarage(house_car[playerid],1404.0000, -24.4551, 1000.6000, -42.0000,8,i+100);
					}
				}
			}
			SetPVarInt(playerid, "CarsInGarage", 1); // Выставляем игроку значение "все машине в гараже"
			SetPVarInt(playerid,"chosencar",0); // по умолчанию - выбрана машина № 0 (carModel[0])
			GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(GetPlayerVehicleID(playerid),false,false,alarm,doors,bonnet,boot,objective);
			house_car[playerid] = -1;
			SetPVarInt(playerid,"PlayerInGarage",1);
			SetPlayerWeather(playerid, 4);
			SetPlayerTime(playerid, 12,00);
		}
	}
	return true;
}
CMD:freez(playerid, params[])
{
	if(!GetPVarInt(playerid, !#pPickHouseId)) return 1;

	new i = (GetPVarInt(playerid, !#pPickHouseId)-1);

	if(HouseInfo[i][h_improve] & h_improve_freez) 
	{
		if(!IsPlayerInDynamicArea(playerid,gHintFreezArea[HouseInfo[i][hInt]])) 
			return SendClientMessage(playerid,0xAFAFAFAA,"Вы должны быть возле холодильника");

		new freez_str[25];
		format(freez_str, sizeof freez_str, "Продуктов %d ед.", HouseInfo[i][h_prod]);
		ShowPlayerDialog(playerid,81,DIALOG_STYLE_TABLIST,freez_str,ShowFreezProd,"Съесть","Закрыть");
	}
	return SendClientMessage(playerid,0xAFAFAFAA,"В этом доме нет холодильника!");
}
CMD:enter(playerid)
{
	if(!GetPVarInt(playerid, !#pPickHouseId)) return 1;

	new i = (GetPVarInt(playerid, !#pPickHouseId)-1);
	if(!IsPlayerInDynamicArea(playerid, HouseInfo[i][h_area]))return 1;

	new int = HouseInfo[i][hInt];

	if(strcmp(HouseInfo[i][hOwner],"None",true) == 0 || pData[playerid][pPHouseKey] == i || HouseInfo[i][hLock] == false) // Если дом зеленый
	{
		SetPlayerInterior(playerid,interior_info[int][int_int]);
		SetPlayerVirtualWorld(playerid,i+50);
		SetPlayerPos(playerid,interior_info[int][int_x],interior_info[int][int_y],interior_info[int][int_z]);
	}
	else // Если не владелец дома или дом закрыт
	{
		GameTextForPlayer(playerid, "~r~CLOSED", 5000, 1);
	}
	return 1;
}
CMD:boostinfo(playerid)
{
	if(booston)
	{
		new dialog[510];
		strcat(dialog,"Бонус\t\tМножитель\n");
		strcat(dialog,"Опыт\t\t3.0000\n");
		strcat(dialog,"Донат\t\t");			
		strcat(dialog,donates == 2 ? ("2") : ("1"));
		strcat(dialog,".0000\nПатронов в Аммо\t\t3.0000\n");
		strcat(dialog,"Патронов у Мафий\t\t3.0000\n");
		strcat(dialog,"Патронов у Банд\t\t3.0000\n");
		strcat(dialog,"Опыт Такси\t\t3.0000\n");
		strcat(dialog,"Опыт Продуктовозов\t\t2.0000\n");
		strcat(dialog,"Опыт Дальнобойщиков\t\t3.0000\n");
		strcat(dialog,"Опыт Автоугонщиков\t\t3.0000\n");
		strcat(dialog,"Скилл Ударов\t\t3.0000\n");
		strcat(dialog,"Скилл Оружия\t\t2.0000\n");
		strcat(dialog,"Скидка в Автосалоне\t\t0.8000\n");
		strcat(dialog,"Скидка на Скины\t\t0.8000\n");
		strcat(dialog,"Скидка на Квартиры\t\t0.6000\n");
		strcat(dialog,"Процент в Костях\t\t0.5000\n");
		strcat(dialog,"Приз в Гонках\t\t3.0000\n");
		strcat(dialog,"Приз в Пейнтболе\t\t3.0000\n");
		strcat(dialog,"Таймер на Ферме\t\t0.3300\n");
		strcat(dialog,"Таймер на Нарко\t\t0.3300\n");			
		strcat(dialog,"Промокод\t\t2.0000\n");
		format(cString, 128, "Действует до: %s",UnixDate(booston));
		ShowPlayerDialog(playerid, 9922, DIALOG_STYLE_TABLIST_HEADERS, cString,dialog,"x", "");
	}
	else if(booston2)
	{
		if(pData[playerid][pLevel] > 6) return SCM(playerid,COLOR_WHITE," Акция для новичков доступна до 6 уровня");
		new dialog[510];
		strcat(dialog,"Бонус\t\tМножитель\n");
		strcat(dialog,"Донат\t\t");			
		strcat(dialog,donates == 2 ? ("2.0000\n") : ("1.0000\n"));
		strcat(dialog,"Опыт\t\t3.0000\n");
		strcat(dialog,"Опыт Такси\t\t3.0000\n");
		strcat(dialog,"Опыт Продуктовозов\t\t2.0000\n");
		strcat(dialog,"Опыт Дальнобойщиков\t\t3.0000\n");
		strcat(dialog,"Опыт Автоугонщиков\t\t3.0000\n");
		strcat(dialog,"Скилл Ударов\t\t3.0000\n");
		strcat(dialog,"Скилл Оружия\t\t2.0000\n");
		
		format(cString, 128, "Действует до: %s",UnixDate(booston2));
		ShowPlayerDialog(playerid, 9922, DIALOG_STYLE_TABLIST_HEADERS, cString,dialog,"x", "");
	}
	else SCM(playerid,COLOR_WHITE," Бонусы отключены");
	return true;
}


CMD:taxigps(playerid)
{
	if(!pData[playerid][pLogin]) return true;
	if(pData[playerid][pJob] != 4 && !pData[playerid][pAdmin] && !pData[playerid][pHelper]) return SCM(playerid,COLOR_GREY," Вам недоступна данная функция");
	if(CP[playerid] == 776) { DisablePlayerRaceCheckpoint(playerid), CP[playerid] = 0; }
	new null[7];
	foreach(new i: Player)
	{
		if(GetPVarInt(i, "LoaderWork")) null[0]++;
		if(Prorab[i]) null[1]++;
		if(GetPVarInt(i,"farm_id") == 1) null[2]++;
		if(GetPVarInt(i,"farm_id") == 2) null[3]++;
		if(GetPVarInt(i,"farm_id") == 3) null[4]++;
		if(GetPVarInt(i,"farm_id") == 4) null[5]++;
		if(GetPVarInt(i,"farm_id") == 5) null[6]++;
	}
	format(string,500,"{ffffff}[Грузчики] {33AA33} Прорабов %i Рабочих %i\n\
						{ffffff}[Ферма №0] {33AA33} Фермеров %i {FFFF00} Цена за куст %i$\n\
						{ffffff}[Ферма №1] {33AA33} Фермеров %i {FFFF00} Цена за куст %i$\n\
						{ffffff}[Ферма №2] {33AA33} Фермеров %i {FFFF00} Цена за куст %i$\n\
						{ffffff}[Ферма №3] {33AA33} Фермеров %i {FFFF00} Цена за куст %i$\n\
						{ffffff}[Ферма №4] {33AA33} Фермеров %i {FFFF00} Цена за куст %i$",
	null[1], null[0], null[2], FarmInfo[1][fZp], null[3], FarmInfo[2][fZp], null[4], FarmInfo[3][fZp], null[5], FarmInfo[4][fZp], null[6], FarmInfo[5][fZp]);
	return ShowPlayerDialog(playerid, 1344, DIALOG_STYLE_LIST, "Статистика",string, "GPS", "Закрыть");
}
CMD:farmstats(playerid, params[])
{
	if(pData[playerid][pAdmin] < 4) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /farmstats [номер фермы]");
	if(params[0] < 0 || params[0] > 4) return SCM(playerid, COLOR_WHITE, " Ошибка: Неверный номер фермы.");
	FarmStats(playerid,params[0]);
	return true;
}

CMD:farm(playerid, params[])
{
	if(pData[playerid][pAdmin] < 4) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /farm [номер фермы]");
	if(params[0] < 0 || params[0] > 4) return SCM(playerid, COLOR_WHITE, " Ошибка: Неверный номер фермы.");
	switch(params[0])
	{
	case 0:
		{
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			if(pData[playerid][pState] == PLAYER_STATE_DRIVER)
			{
				return SetVehiclePos(GetPlayerVehicleID(playerid),-376.9641,-1437.9998,25.7266);
			}
			else return SetPlayerPos(playerid,-376.9641,-1437.9998,25.7266);
		}
	case 1:
		{
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			if(pData[playerid][pState] == PLAYER_STATE_DRIVER)
			{
				return SetVehiclePos(GetPlayerVehicleID(playerid),-103.2208,-29.6182,3.1172);
			}
			else return SetPlayerPos(playerid,-103.2208,-29.6182,3.1172);
		}
	case 2:
		{
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			if(pData[playerid][pState] == PLAYER_STATE_DRIVER)
			{
				return SetVehiclePos(GetPlayerVehicleID(playerid),-1033.3143,-1166.2423,129.2188);
			}
			else return SetPlayerPos(playerid,-1033.3143,-1166.2423,129.2188);
		}
	case 3:
		{
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			if(pData[playerid][pState] == PLAYER_STATE_DRIVER)
			{
				return SetVehiclePos(GetPlayerVehicleID(playerid),-2.8795,88.8511,3.1172);
			}
			else return SetPlayerPos(playerid,-2.8795,88.8511,3.1172);
		}
	case 4:
		{
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			if(pData[playerid][pState] == PLAYER_STATE_DRIVER)
			{
				return SetVehiclePos(GetPlayerVehicleID(playerid),1904.1216,174.0404,37.1664);
			}
			else return SetPlayerPos(playerid,1904.1216,174.0404,37.1664);
		}
	}
	return true;
}
CMD:hackbase(playerid, params[])
{
	if(!pData[playerid][pLogin]) return true;
	if(!IsAMafia(playerid)) return SCM(playerid,COLOR_GREY," Вам недоступна данная команда!");
	if(sscanf(params,"i", params[0])) return SCM(playerid,COLOR_WHITE," Используйте: /hackbase [playerid]");
	if(!pData[playerid][pLogin]) return SCM(playerid,COLOR_GREY," Игрок оффлайн");
	if(GetPVarInt(playerid,"TimerBaseHack") > 0) return SCM(playerid,COLOR_GREY," Команду можно использовать раз в пол часа");
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 596 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 490 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 597 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 598) return SCM(playerid, COLOR_GRAD1, " [Ошибка] Вы не в патрульной машине");
	if(pData[params[0]][pWantedLevel] == 0) return SCM(playerid,COLOR_GREY," Этот человек не в розыске");
	new hackbase = random(2);
	if(hackbase == 0)
	{
		format(cString, sizeof(cString), " %s взломал базу данных и удалил из списка розыскиваемых %s {63C600} [Удачно]",Name(playerid),Name(params[0]));
		ProxDetector(20.0, playerid, cString, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

		SetPlayerWantedLevelEx(params[0], -6);
		SCM(params[0],-1,"Ваша узнаваемость понизилась");
		SendMes(params[0],COLOR_BLUE,"%s взломал базу данных и удалил вас из списка розыскиваемых",Name(playerid));
	}
	if(hackbase == 1)
	{
		format(cString, sizeof(cString), " %s взломал базу данных и удалил из списка розыскиваемых %s {BF0000} [Неудачно]",Name(playerid),Name(params[0]));
		ProxDetector(20.0, playerid, cString, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	SetPVarInt(playerid,"TimerBaseHack",1800);
	return true;
}
CMD:prodmenu(playerid)
{
	if(!pData[playerid][pLogin]) return true;
	if(pData[playerid][pJob] != 5) return SCM(playerid,COLOR_GREY," Вам недоступна данная команда!");
	if(GetPlayerVehicleID(playerid) >= comptruck[0] && GetPlayerVehicleID(playerid) <= comptruck[1])
	{
		if(GetPVarInt(playerid,"rentcar_job") != GetPlayerVehicleID(playerid)) return SCM(playerid,COLOR_GREY," Это не ваш автомобиль!");
		return ShowPlayerDialog(playerid, 1322, DIALOG_STYLE_LIST, "Развозка продуктов", "Покупка зерна\nПродажа зерна\nПокупка урожая\nПродажа урожая", "Выбрать", "Отмена");
	}
	else if(GetPlayerVehicleID(playerid) >= comptruck[2] && GetPlayerVehicleID(playerid) <=  comptruck[3]) return ShowPlayerDialog(playerid, 1375, DIALOG_STYLE_LIST, "Развозка бензина", "Купить\nПродать\nМониторинг\nСтатистика\nВыбросить продукты", "Выбрать", "Отмена");
	else if(GetPlayerVehicleID(playerid) >= comptruck[4] && GetPlayerVehicleID(playerid) <=  comptruck[5]) return ShowPlayerDialog(playerid, 1375, DIALOG_STYLE_LIST, "Развозка продуктов", "Купить\nПродать\nМониторинг\nСтатистика\nВыбросить продукты", "Выбрать", "Отмена");
	else if(GetPlayerVehicleID(playerid) >= comptruck[6] && GetPlayerVehicleID(playerid) <=  comptruck[7]) return ShowPlayerDialog(playerid, 1375, DIALOG_STYLE_LIST, "Развозка продуктов", "Купить\nПродать\nМониторинг\nСтатистика\nВыбросить продукты", "Выбрать", "Отмена");
	else if(GetPlayerVehicleID(playerid) >= comptruck[8] && GetPlayerVehicleID(playerid) <=  comptruck[9]) return ShowPlayerDialog(playerid, 1375, DIALOG_STYLE_LIST, "Развозка продуктов", "Купить\nПродать\nМониторинг\nСтатистика\nВыбросить продукты", "Выбрать", "Отмена");
	return true;
}
CMD:pfarm(playerid, params[])
{
	if(pData[playerid][pAdmin] < 7 || !dostup[playerid]) return true;
	new null = 0;
	for(new i = 1; i <= TOTALFARM; i++) if(PlayerToPoint(15, playerid,FarmInfo[i][fMenu][0], FarmInfo[i][fMenu][1], FarmInfo[i][fMenu][2])) null = i;
	if(!null) return SCM(playerid,COLOR_GREY," Вы должны находиться возле фермы");
	if(strcmp(FarmInfo[null][fOwner],"None",true) == 0) return SCM(playerid,COLOR_GREY," У фермы нет владельца");
	FarmInfo[null][fGrain] = 10000;
	SCM(playerid, COLOR_GREEN,"Ты кек. Ты знал?");
	return true;
}
CMD:pfarmz(playerid, params[])
{
	if(pData[playerid][pAdmin] < 7 || !dostup[playerid]) return true;
	new null = 0;
	for(new i = 1; i <= TOTALFARM; i++) if(PlayerToPoint(15, playerid,FarmInfo[i][fMenu][0], FarmInfo[i][fMenu][1], FarmInfo[i][fMenu][2])) null = i;
	if(!null) return SCM(playerid,COLOR_GREY," Вы должны находиться возле фермы");
	if(strcmp(FarmInfo[null][fOwner],"None",true) == 0) return SCM(playerid,COLOR_GREY," У фермы нет владельца");
	FarmInfo[null][fGrain] = 0;
	SCM(playerid, COLOR_BLUE,"Ты кек. Ты знал?");
	return true;
}
CMD:stats(playerid, params[])
{
	if(pData[playerid][pLogin] == true) ShowStats(playerid,playerid);
	return true;
}
CMD:funload(playerid)
{
	if(!pData[playerid][pLogin] || GetPVarInt(playerid,"farm_rank") < 2 || (GetPlayerVehicleID(playerid) != FarmInfo[GetPVarInt(playerid,"farm_id")][fSeed_Car][0] && GetPlayerVehicleID(playerid) != FarmInfo[GetPVarInt(playerid,"farm_id")][fSeed_Car][1])) return true;
	if(!IsPlayerInRangeOfPoint(playerid,20.0,FarmInfo[GetPVarInt(playerid,"farm_id")][fMenu][0],FarmInfo[GetPVarInt(playerid,"farm_id")][fMenu][1],FarmInfo[GetPVarInt(playerid,"farm_id")][fMenu][2])) return SCM(playerid,COLOR_GREY," Необходимо находиться возле фермы!");
	if(FarmInfo[GetPVarInt(playerid,"farm_id")][fProds] >= 10000) return SCM(playerid, COLOR_GREY,"Склад полон!");
	if(!Farmcar_prods[GetPlayerVehicleID(playerid)]) return SCM(playerid,COLOR_GREY," В грузовике нет урожая");
	SetPVarInt(playerid,"farm_zp", GetPVarInt(playerid,"farm_zp") + Farmcar_prods[GetPlayerVehicleID(playerid)]*10/2);
	format(string, 32, "~b~count:~w~%i$",GetPVarInt(playerid,"farm_zp"));
	FarmStatPay[GetPVarInt(playerid,"farm_id")][3] += Farmcar_prods[GetPlayerVehicleID(playerid)];
	FarmStatDay[GetPVarInt(playerid,"farm_id")][3] += Farmcar_prods[GetPlayerVehicleID(playerid)];
	GameTextForPlayer(playerid, string, 3000, 1);
	FarmInfo[GetPVarInt(playerid,"farm_id")][fProds] += Farmcar_prods[GetPlayerVehicleID(playerid)];
	if(FarmInfo[GetPVarInt(playerid,"farm_id")][fProds] >= 10000) FarmInfo[GetPVarInt(playerid,"farm_id")][fProds] = 10000;
	Farmcar_prods[GetPlayerVehicleID(playerid)] = 0;
	format(string, 144, " {00AB06}Урожая в машине: 0 / 1000");
	SCM(playerid, COLOR_GREEN,string);
	//DeletePVar(playerid,"farm_status");
	return true;
}
CMD:fpanel(playerid)
{
	if(!GetPVarInt(playerid,"farm_id") || GetPVarInt(playerid,"farm_rank") < 3) return SCM(playerid,COLOR_GREY," Необходимо переодеться на ферме");
	if(!PlayerToPoint(13, playerid,FarmInfo[GetPVarInt(playerid,"farm_id")][fMenu][0], FarmInfo[GetPVarInt(playerid,"farm_id")][fMenu][1], FarmInfo[GetPVarInt(playerid,"farm_id")][fMenu][2])) return SCM(playerid,COLOR_GREY," Необходимо находиться около фермы");
	format(string,sizeof(string),"Установить цену зерна\nУстановить цену продуктов\nУстановить цену работы\nВвести вирты на счёт 'LandTax'\nВвести вирты на ферму\nВывести вирты с фермы\nСтатистика за прошлый час\nСтатистика за этот день");
	format(string,sizeof(string),"%s\nСменить продаваемый продукт\nНазначить Зама [1]\nНазначить Зама [2]\nНазначить Зама [3]\nНазначить Фермера [1]\nНазначить Фермера [2]\nНазначить Фермера [3]\nНазначить Фермера [4]\nНазначить Фермера [5]",string);
	return ShowPlayerDialog(playerid, 9600, DIALOG_STYLE_LIST, "Панель настроек",string, "Выбрать", "Отмена");
}
CMD:finfo(playerid)
{
	if(!pData[playerid][pLogin]) return true;
	for(new i = 1; i <= TOTALFARM; i++)
	{
		if(!PlayerToPoint(10, playerid,FarmInfo[i][fMenu][0], FarmInfo[i][fMenu][1], FarmInfo[i][fMenu][2])) continue;
		return FarmStats(playerid,i);
	}
	return SCM(playerid,COLOR_GREY," Необходимо находиться возле фермы!");
}
CMD:ffixcar(playerid)
{
	if(!pData[playerid][pLogin] || GetPVarInt(playerid,"farm_rank") < 2) return true;
	SetVehicleToRespawn(FarmInfo[GetPVarInt(playerid,"farm_id")][fSeed_Car][0]);
	SetVehicleToRespawn(FarmInfo[GetPVarInt(playerid,"farm_id")][fSeed_Car][1]);
	SetVehicleToRespawn(FarmInfo[GetPVarInt(playerid,"farm_id")][fCombine]);
	if(Farmcar_pickup[FarmInfo[GetPVarInt(playerid,"farm_id")][fSeed_Car][0]] > 0) Delete3DTextLabel(Farmcar_text[FarmInfo[GetPVarInt(playerid,"farm_id")][fSeed_Car][0]]), DestroyDynamicPickup(Farmcar_pickup[FarmInfo[GetPVarInt(playerid,"farm_id")][fSeed_Car][0]]), Farmcar_pickup[FarmInfo[GetPVarInt(playerid,"farm_id")][fSeed_Car][0]] = 0;
	if(Farmcar_pickup[FarmInfo[GetPVarInt(playerid,"farm_id")][fSeed_Car][1]] > 0) Delete3DTextLabel(Farmcar_text[FarmInfo[GetPVarInt(playerid,"farm_id")][fSeed_Car][1]]), DestroyDynamicPickup(Farmcar_pickup[FarmInfo[GetPVarInt(playerid,"farm_id")][fSeed_Car][1]]), Farmcar_pickup[FarmInfo[GetPVarInt(playerid,"farm_id")][fSeed_Car][1]] = 0;
	return true;
}
CMD:finvite(playerid, params[])
{
	if(!pData[playerid][pLogin] || GetPVarInt(playerid,"farm_rank") < 3) return true;
	if(!PlayerToPoint(10, playerid,FarmInfo[GetPVarInt(playerid,"farm_id")][fMenu][0], FarmInfo[GetPVarInt(playerid,"farm_id")][fMenu][1], FarmInfo[GetPVarInt(playerid,"farm_id")][fMenu][2])) return true;
	if(sscanf(params, "iii",params[0],params[1],params[2]))
	{
		SCM(playerid, COLOR_WHITE, " Введите: /finvite [playerid (-1 для увольнения)] [тип] [место (от 1)]");
		return SCM(playerid,COLOR_WHITE," Тип: 1 - заместитель | 2 - фермер");
	}
	if(params[0] != -1 && pData[params[0]][pMember]) return SCM(playerid,COLOR_GREY," Этот человек состоит в организации!");
	switch(params[1])
	{
	case 1:
		{
			if(GetPVarInt(playerid,"farm_rank") < 4) return SCM(playerid,COLOR_GREY," Вы не можете нанимать заместителей");
			if(params[2] == 1)
			{
				if(params[0] == -1) return strmid(FarmInfo[GetPVarInt(playerid,"farm_id")][fDeputy_1],"None", 0, strlen("None"), 24);
				else strmid(FarmInfo[GetPVarInt(playerid,"farm_id")][fDeputy_1],pData[params[0]][pName], 0, strlen(pData[params[0]][pName]), 24);
			}
			else if(params[2] == 2)
			{
				if(params[0] == -1) return strmid(FarmInfo[GetPVarInt(playerid,"farm_id")][fDeputy_2],"None", 0, strlen("None"), 24);
				else strmid(FarmInfo[GetPVarInt(playerid,"farm_id")][fDeputy_2],pData[params[0]][pName], 0, strlen(pData[params[0]][pName]), 24);
			}
			else if(params[2] == 3)
			{
				if(params[0] == -1) return strmid(FarmInfo[GetPVarInt(playerid,"farm_id")][fDeputy_3],"None", 0, strlen("None"), 24);
				else strmid(FarmInfo[GetPVarInt(playerid,"farm_id")][fDeputy_3],pData[params[0]][pName], 0, strlen(pData[params[0]][pName]), 24);
			}
			else return SCM(playerid,COLOR_GREY," Неверное значение");
			SendMes(playerid,COLOR_BLUE,"Вы приняли %s на должность заместителя", pData[params[0]][pName]);
		}
	case 2:
		{
			if(params[2] == 1)
			{
				if(params[0] == -1) return strmid(FarmInfo[GetPVarInt(playerid,"farm_id")][fFarmer_1],"None", 0, strlen("None"), 24);
				else strmid(FarmInfo[GetPVarInt(playerid,"farm_id")][fFarmer_1],pData[params[0]][pName], 0, strlen(pData[params[0]][pName]), 24);
			}
			else if(params[2] == 2)
			{
				if(params[0] == -1) return strmid(FarmInfo[GetPVarInt(playerid,"farm_id")][fFarmer_2],"None", 0, strlen("None"), 24);
				else strmid(FarmInfo[GetPVarInt(playerid,"farm_id")][fFarmer_2],pData[params[0]][pName], 0, strlen(pData[params[0]][pName]), 24);
			}
			else if(params[2] == 3)
			{
				if(params[0] == -1) return strmid(FarmInfo[GetPVarInt(playerid,"farm_id")][fFarmer_3],"None", 0, strlen("None"), 24);
				else strmid(FarmInfo[GetPVarInt(playerid,"farm_id")][fFarmer_3],pData[params[0]][pName], 0, strlen(pData[params[0]][pName]), 24);
			}
			else if(params[2] == 4)
			{
				if(params[0] == -1) return strmid(FarmInfo[GetPVarInt(playerid,"farm_id")][fFarmer_4],"None", 0, strlen("None"), 24);
				else strmid(FarmInfo[GetPVarInt(playerid,"farm_id")][fFarmer_4],pData[params[0]][pName], 0, strlen(pData[params[0]][pName]), 24);
			}
			else if(params[2] == 5)
			{
				if(params[0] == -1) return strmid(FarmInfo[GetPVarInt(playerid,"farm_id")][fFarmer_5],"None", 0, strlen("None"), 24);
				else strmid(FarmInfo[GetPVarInt(playerid,"farm_id")][fFarmer_5],pData[params[0]][pName], 0, strlen(pData[params[0]][pName]), 24);
			}
			else return SCM(playerid,COLOR_GREY," Неверное значение");
			SendMes(playerid,COLOR_BLUE,"Вы приняли %s на должность фермера", pData[params[0]][pName]);
		}
	}
	return true;
}
CMD:gmap(playerid, params[])
{
	if(pData[playerid][pAdmin] == 0) {
		if(!pData[playerid][pLogin] || !IsAGang(playerid)) return true;
		new null = 0;
		for(new i =1;i<= TOTALGZ;i++) if(pData[playerid][pMember] == GZInfo[i][gFrakVlad]) null++;
		return SendMes(playerid,0x6BB3FFAA," Количество территорий, контролируемых вашей бандой: %i",null);}
	else if(pData[playerid][pAdmin] > 1)
	{
		if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /gmap [id банды]");
		
		TotalGzR = TotalGzA = TotalGzB = TotalGzG = TotalGzV = 0;
		for(new y = 0; y < sizeof(GZInfo); y++)
		{
			if(GZInfo[y][gFrakVlad] == 12) TotalGzB++;
			if(GZInfo[y][gFrakVlad] == 13) TotalGzV++;
			if(GZInfo[y][gFrakVlad] == 15) TotalGzG++;
			if(GZInfo[y][gFrakVlad] == 17) TotalGzA++;
			if(GZInfo[y][gFrakVlad] == 18) TotalGzR++;
		}
		switch(params[0])
		{
		case 12: SendMes(playerid,0x6AB1FFAA,"Территорий под контролем The Ballas Gang - %d",TotalGzB);
		case 13: SendMes(playerid,0x6AB1FFAA,"Территорий под контролем The Vagos Gang - %d",TotalGzV);
		case 15: SendMes(playerid,0x6AB1FFAA,"Территорий под контролем The Grove Gang - %d",TotalGzG);
		case 17: SendMes(playerid,0x6AB1FFAA,"Территорий под контролем The Aztec Gang - %d",TotalGzA);
		case 18: SendMes(playerid,0x6AB1FFAA,"Территорий под контролем The Rifa Gang - %d",TotalGzR);
		default: SCM(playerid,COLOR_GREY," Произошла ошибка. Возможно неверно введен id банды");
		}
	}
	return true;
}
CMD:tpanel(playerid)
{
	if(!pData[playerid][pLogin] || !WGet(playerid) && !GetPVarInt(playerid,"Workshop")) return true;
	new i = GetPVarInt(playerid,"wShop");
	if(!PlayerToPoint(15, playerid,WorkshopInfo[i][wEntr][0],WorkshopInfo[i][wEntr][1],WorkshopInfo[i][wEntr][2]) && !PlayerToPoint(15, playerid,WorkshopInfo[i][wExit][0],WorkshopInfo[i][wExit][1],WorkshopInfo[i][wExit][2])) return SCM(playerid, COLOR_GREY, " Вы слишком далеко от вашей мастерской!");
	return ShowPlayerDialog(playerid, 9592, DIALOG_STYLE_LIST, "Панель управления","[1] Пополнить банк автомастерской\n[2] Пополнить 'LandTax' счёт\n[3] Снять деньги с банка\n[4] Установить стоимость 1 продукта\n[5] Установить зарплату рабочим\n[6] Нанять заместителя (1)\
	\n[7] Нанять заместителя (2)\n[8] Нанять заместителя (3)\n[9] Нанять механика (1)\n[10] Нанять механика (2)\n[11] Нанять механика (3)\n[12] Нанять механика (4)\n[13] Нанять механика (5)", "Выбрать", "Отмена");
}
CMD:tinfo(playerid)
{
	if(!pData[playerid][pLogin]) return true;
	for(new i = 1; i <= TOTALSHOPS; i++)
	{
		if(!PlayerToPoint(3, playerid,WorkshopInfo[i][wEntr][0x0], WorkshopInfo[i][wEntr][0x1], WorkshopInfo[i][wEntr][0x2])) continue;
		return WorkshopStats(playerid,i);
	}
	return SCM(playerid,COLOR_GREY," Необходимо находиться возле автомастерской!");
}
CMD:tupdate(playerid)
{
	if(!pData[playerid][pLogin]) return true;
	if(!GetPVarInt(playerid,"Workshop")) return SCM(playerid,COLOR_GREY," Вы не работаете в автомастерской!");
	if(!PlayerToPoint(10, playerid,1067.3966,2128.3901,10.5110)) return SCM(playerid,COLOR_GREY, " Вы должны находиться в гараже автомастерской");
	if(GetPVarInt(playerid,"installation") != 0) return SCM(playerid,COLOR_GREY," Вы не установили деталь!");
	//if(!ProxDetectorS(8.0, playerid, GetPVarInt(playerid,"installation_")) return SCM(playerid, COLOR_GREY, " Человек не рядом с вами!");
	if(GetPVarInt(GetPVarInt(playerid,"installation_"),"InWorkshop") != GetPVarInt(playerid,"Workshop")) return SCM(playerid,COLOR_GREY," Игрок не находится с вами в гараже!");
	return ShowDetals(playerid,GetPVarInt(playerid,"installation_"),GetPVarInt(playerid,"Workshop"));
}
CMD:endtune(playerid)
{
	if(!pData[playerid][pLogin]) return true;
	if(!GetPVarInt(playerid,"Workshop")) return SCM(playerid,COLOR_GREY," Вы не работаете в автомастерской!");
	if(!PlayerToPoint(10, playerid,1067.3966,2128.3901,10.5110)) return SCM(playerid,COLOR_GREY, " Вы должны находиться в гараже автомастерской");
	if(GetPVarInt(playerid,"installation") != 0) return SCM(playerid,COLOR_GREY," Вы не установили деталь!");
	if(!ProxDetectorS(8.0, playerid, GetPVarInt(playerid,"installation_"))) return SCM(playerid, COLOR_GREY, " Человек не рядом с вами!");
	if(!IsPlayerInAnyVehicle(GetPVarInt(playerid,"installation_"))) return SCM(playerid,COLOR_GREY," Игрок должен находиться в автомобиле");
	if(GetPVarInt(GetPVarInt(playerid,"installation_"),"InWorkshop") != GetPVarInt(playerid,"Workshop")) return SCM(playerid,COLOR_GREY," Игрок не находится в гараже!");
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,-1," Вы должны находиться в автомобиле");
	SetPlayerVirtualWorld(playerid,0);
	SetPlayerVirtualWorld(GetPVarInt(playerid,"installation_"),0);
	SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),0);
	SetVehicleZAngle(GetPlayerVehicleID(playerid),90.0);
	SetVehiclePos(GetPlayerVehicleID(playerid),WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][0],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][1],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][2]);
	DeletePVar(GetPVarInt(playerid,"installation_"),"cost");
	DeletePVar(GetPVarInt(playerid,"installation_"),"prods");
	DeletePVar(GetPVarInt(playerid,"installation_"),"detals");
	DeletePVar(GetPVarInt(playerid,"installation_"),"color0");
	DeletePVar(GetPVarInt(playerid,"installation_"),"color1");
	SaveTuning(GetPVarInt(playerid,"installation_"),house_car[GetPVarInt(playerid,"installation_")]);
	DeletePVar(playerid,"installation");
	cto_mechanic[GetPVarInt(playerid,"installation_")] = -1;
	new x = GetPVarInt(playerid,"Workshop");
	for(new x_ = 0; x_ < 9; x_++)
	{
		WorkshopList[x_][x][wlID] = WorkshopList[x_+1][x][wlID];
		strmid(WorkshopList[x_][x][wlName],WorkshopList[x_+1][x][wlName],0,strlen(WorkshopList[x_+1][x][wlName]), MAX_PLAYER_NAME);
		WorkshopList[x_+1][x][wlID] = -1;
		strmid(WorkshopList[x_+1][x][wlName],"", 0, strlen(""), 5);
	}
	if(WorkshopList[0][x][wlID] != -1 && strlen(WorkshopList[0][x][wlName]))
	{
		SCM(WorkshopList[0][x][wlID],0x6BB3FFAA," Подошла ваша очередь. У вас есть 2 минуты что бы прибыть к гаражу!");
		SetPVarInt(WorkshopList[0][x][wlID],"w_time", gettime() + 120);
		SetPlayerCheckpoint(WorkshopList[0][x][wlID],WorkshopInfo[x][wMenu][0],WorkshopInfo[x][wMenu][1],WorkshopInfo[x][wMenu][2], 10.0);
	}
	DeletePVar(GetPVarInt(playerid,"installation_"),"w_time");
	DeletePVar(GetPVarInt(playerid,"installation_"),"w_id");
	DeletePVar(GetPVarInt(playerid,"installation_"),"InWorkshop");
	DeletePVar(GetPVarInt(playerid,"installation_"),"f_tune");
	return DeletePVar(playerid,"installation_");
}
CMD:addtunnequeue(playerid, params[])
{
	if(pData[playerid][pLogin] == false || !GetPVarInt(playerid,"Workshop")) return true;
	if(GetPVarInt(playerid,"Workshop__") < 2) return SCM(playerid,COLOR_WHITE," Вы не можете добавлять в очередь");
	if(!PlayerToPoint(10, playerid,1496.0302,1308.6653,1093.2892)) return SCM(playerid,-1, " Вы должны находиться в автомастерской");
	if(sscanf(params, "u",params[0])) return	SCM(playerid, COLOR_WHITE, " Введите: /addtunnequeue [id]");
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	new null = -1, null_ = 0;
	for(new i = 9; i >= 0; i--)
	{
		if(!strlen(WorkshopList[i][GetPVarInt(playerid,"Workshop")][wlName])) null = i;
		if(strcmp(WorkshopList[i][GetPVarInt(playerid,"Workshop")][wlName],pData[params[0]][pName],true) == 0 && strlen(WorkshopList[i][GetPVarInt(playerid,"Workshop")][wlName])) null_++;
	}
	if(null == -1) return SCM(playerid,COLOR_GREY," Очередь заполнена!");
	if(null_ > 0) return SCM(playerid,COLOR_GREY," Игрок уже ждет свою очередь!");
	SetPVarInt(params[0], "w_id",GetPVarInt(playerid,"Workshop"));
	WorkshopList[null][GetPVarInt(playerid,"Workshop")][wlID] = params[0];
	strmid(WorkshopList[null][GetPVarInt(playerid,"Workshop")][wlName],pData[params[0]][pName],0,strlen(pData[params[0]][pName]), 24);
	SendMes(playerid,0x6BB3FFAA," Вы добавили игрока %s в очередь!", pData[params[0]][pName]);
	if(null == 0)
	{
		SetPVarInt(params[0], "w_time", gettime() + 120);
		SCM(params[0],0x6BB3FFAA," Механик добавил вас в очередь. У вас есть 2 минуты что бы прибыть к гаражу!");
		SetPlayerCheckpoint(params[0],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][0],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][1],WorkshopInfo[GetPVarInt(playerid,"Workshop")][wMenu][2], 10.0);
	}
	else SCM(params[0],0x6BB3FFAA," Механик добавил вас в очередь");
	return true;
}
CMD:setmemleader(playerid, params[])
{
	if(!pData[playerid][pLogin] || pData[playerid][pLeader] != 22) return SCM(playerid,COLOR_GREY," Вам недоступна данная команда");
	if(sscanf(params, "ud", params[0x0],params[0x1]) || params[0x1] < 1 || params[0x1] > 4 || params[0x0] == playerid) return SCM(playerid, COLOR_WHITE," Введите: /setmemleader [playerid] [подразделение]"), SCM(playerid, COLOR_WHITE, "1. LS | 2. SF | 3. LV | 4. FC");
	if(pData[params[0x0]][pMember] != 22) return SCM(playerid,COLOR_GREY," Данный игрок не состоит в МЧС");
	new null[16];
	if(params[0x1] == 1) null = "LS";
	else if(params[0x1] == 2) null = "SF";
	else if(params[0x1] == 3) null = "LV";
	else if(params[0x1] == 4) null = "Fort Carson";
	SendMes(params[0x0],COLOR_BLUE,"%s назначил вас контролировать участок МЧС %s!",pData[playerid][pName],null);
	SendMes(playerid,COLOR_BLUE,"Вы назначили %s контролировать участок МЧС %s!",pData[params[0x0]][pName],null);
	pData[params[0x0]][pRank] = 9;
	pData[params[0x0]][pJobHeal] = params[0x1];
	return true;
}
CMD:setmemgroup(playerid, params[])
{
	if(!pData[playerid][pLogin] || !IsAMedic(playerid)) return true;
	if(pData[playerid][pRank] < 9) return SCM(playerid,COLOR_GREY," Вам недоступна данная команда");
	if(sscanf(params, "ud", params[0x0],params[0x1]) || params[0x1] < 1 || params[0x1] > 4 || params[0x0] == playerid) return SCM(playerid, COLOR_WHITE," Введите: /setmemgroup [playerid] [подразделение]"), SCM(playerid, COLOR_WHITE, "1. LS | 2. SF | 3. LV | 4. FC");
	if(pData[params[0x0]][pMember] != 22) return SCM(playerid,COLOR_GREY," Данный игрок не состоит в МЧС");
	new null[16];
	if(params[0x1] == 1) null = "LS";
	else if(params[0x1] == 2) null = "SF";
	else if(params[0x1] == 3) null = "LV";
	else if(params[0x1] == 4) null = "Fort Carson";
	SendMes(params[0x0],COLOR_BLUE,"%s перевел вас на участок МЧС %s!",pData[playerid][pName],null);
	SendMes(playerid,COLOR_BLUE,"Вы перевели %s на участок МЧС %s!",pData[params[0x0]][pName],null);
	pData[params[0x0]][pJobHeal] = params[0x1];
	return true;
}
CMD:slimit(playerid)
{
	if(!pData[playerid][pLogin] || IsANoLimiter(GetPlayerVehicleID(playerid))) return true;
	if(pData[playerid][pDrivingSkill] > 1) return SCM(playerid,COLOR_GREY," Ваш навык вождения недостаточно высок!");
	switch(pData[playerid][pDrivingSkill])
	{
		case 0: {
			pData[playerid][pDrivingSkill] = 1;
			TextDrawShowForPlayer	(playerid, ogrankrug);
		}
		case 1: {
			pData[playerid][pDrivingSkill] = 0;
			TextDrawHideForPlayer	(playerid, ogrankrug);
		}
	}
	return true;
}
CMD:setcasinoowner(playerid, params[])
{
	if(!pData[playerid][pLogin] || pData[playerid][pAdmin] < 6) return true;
	if(sscanf(params, "dd",params[0x0], params[0x1])) return SCM(playerid, COLOR_WHITE, "  Введите: /setcasinoowner [id мафии] (6 - Yakuza | 5 - LCN | 14 - Russian Mafia) [id казино 1 - 4 dragons | 0 - caligula]");
	if(params[0x0] != 6 && params[0x0] < 0 && params[0x0] != 5 && params[0x0] != 14) return SCM(playerid,COLOR_GREY," Неверный ид");
	CasinoInfo[params[0x1]][caMafia] = params[0x0];
	return SCM(playerid,COLOR_WHITE," Успешно! (/cinfo)");
}
CMD:setmbiz(playerid, params[])
{
	if(!pData[playerid][pLogin] || pData[playerid][pAdmin] < 6) return true;
	if(sscanf(params, "dd",params[0x0], params[0x1])) return SCM(playerid, COLOR_WHITE, "  Введите: /setmbiz [id мафии] [id бизнеса. -1 список]");
	if(params[0x1] == -1)
	{
		new strrr[924];
		new count = 0;
		for(new h = 1; h <= TotalBizz; h++)
		{
			format(YCMDstr, sizeof(YCMDstr),"[%i] %s\n",count, BizzInfo[h][bMessage]), strcat(strrr, YCMDstr); count ++;
			if (strlen(strrr) > 1) ShowPlayerDialog(playerid, 8006, DIALOG_STYLE_LIST, "Бизнесы", strrr, "Выбрать", "Назад");
		}
		return true;
	}
	if(params[0x0] != 6 && params[0x0] < 0 && params[0x0] != 5 && params[0x0] != 14) return SCM(playerid,COLOR_GREY," Неверный ид");
	BizzInfo[params[0x1]][bMafia] = params[0x0];
	return SCM(playerid,-1,"Успешно");
}
CMD:setmng(playerid, params[])
{
	for(new i = 1; i <= TOTALCASINO; i++)
	{
		if(!PlayerToPoint(200,playerid, CasinoInfo[i][caPos][0x0],CasinoInfo[i][caPos][0x1], CasinoInfo[i][caPos][0x2])) continue;
		if(pData[playerid][pMember] != CasinoInfo[i][caMafia] || pData[playerid][pRank] < 9) return true;
		if(sscanf(params, "ii",params[0x0],params[0x1]) || (params[0x0] == playerid && params[0x0] > -1)) return SCM(playerid, COLOR_WHITE, " Введите: /setmng [playerid (-1 для увольнения)] [слот (0 - 2)]");
		if(params[0x0] > -1 && pData[params[0x0]][pMember]) return SCM(playerid,COLOR_GREY," Этот человек состоит в организации!");
		if(!ProxDetectorS(8.0, playerid, params[0x0])) return SCM(playerid,COLOR_GREY," Вы должны находиться рядом друг с другом");
		switch(params[0x1])
		{
		case 0:
			{
				if(params[0x0] == -1) return strmid(CasinoInfo[i][caManager],"-", 0, strlen("-"), 24), SendMes(playerid, COLOR_BLUE, " Вы уволили %s с должности Менеджера [%i]",pData[params[0x0]][pName],params[0x1]);
				else strmid(CasinoInfo[i][caManager],pData[params[0x0]][pName], 0, strlen(pData[params[0x0]][pName]), 24);
			}
		case 1:
			{
				if(params[0x0] == -1) return strmid(CasinoInfo[i][caManager2],"-", 0, strlen("-"), 24), SendMes(playerid, COLOR_BLUE, " Вы уволили %s с должности Менеджера [%i]",pData[params[0x0]][pName],params[0x1]);
				else strmid(CasinoInfo[i][caManager2],pData[params[0x0]][pName], 0, strlen(pData[params[0x0]][pName]), 24);
			}
		case 2:
			{
				if(params[0x0] == -1) return strmid(CasinoInfo[i][caManager3],"-", 0, strlen("-"), 24), SendMes(playerid, COLOR_BLUE, " Вы уволили %s с должности Менеджера [%i]",pData[params[0x0]][pName],params[0x1]);
				else strmid(CasinoInfo[i][caManager3],pData[params[0x0]][pName], 0, strlen(pData[params[0x0]][pName]), 24);
			}
		default: return SCM(playerid,COLOR_GREY," Неверный слот!");
		}
		SendMes(params[0x0], COLOR_BLUE, "%s назначил вас Менеджером казино [%i]",pData[playerid][pName],params[0x1]);
		SendMes(playerid, COLOR_BLUE, " Вы назначили %s Менеджером казино [%i]",pData[params[0x0]][pName],params[0x1]);
	}
	return true;
}
CMD:cinvite(playerid, params[])
{
	for(new i = 1; i <= TOTALCASINO; i++)
	{
		if(!PlayerToPoint(200,playerid, CasinoInfo[i][caPos][0x0],CasinoInfo[i][caPos][0x1], CasinoInfo[i][caPos][0x2])) continue;
		if(GetPVarInt(playerid,"CasinoRank") != 2) return true;
		if(sscanf(params, "ii",params[0x0],params[0x1]) || (params[0x0] == playerid && params[0x0] > -1)) return SCM(playerid, COLOR_WHITE, " Введите: /cinvite [playerid (-1 для увольнения)] [слот (0 - 9)]");
		if(params[0x0] > -1 && pData[params[0x0]][pMember]) return SCM(playerid,COLOR_GREY," Этот человек состоит в организации!");
		if(!ProxDetectorS(8.0, playerid, params[0x0])) return SCM(playerid,COLOR_GREY," Вы должны находиться рядом друг с другом");
		
		switch(params[0x1])
		{
		case 0:
			{
				if(params[0x0] == -1) return strmid(CasinoInfo[i][caKrupie],"-", 0, strlen("-"), 24), SendMes(playerid, COLOR_BLUE, " Вы уволили %s с должности Крупье [%i]",pData[params[0x0]][pName],params[0x1]);
				else strmid(CasinoInfo[i][caKrupie],pData[params[0x0]][pName], 0, strlen(pData[params[0x0]][pName]), 24);
			}
		case 1:
			{
				if(params[0x0] == -1) return strmid(CasinoInfo[i][caKrupie2],"-", 0, strlen("-"), 24), SendMes(playerid, COLOR_BLUE, " Вы уволили %s с должности Крупье [%i]",pData[params[0x0]][pName],params[0x1]);
				else strmid(CasinoInfo[i][caKrupie2],pData[params[0x0]][pName], 0, strlen(pData[params[0x0]][pName]), 24);
			}
		case 2:
			{
				if(params[0x0] == -1) return strmid(CasinoInfo[i][caKrupie3],"-", 0, strlen("-"), 24), SendMes(playerid, COLOR_BLUE, " Вы уволили %s с должности Крупье [%i]",pData[params[0x0]][pName],params[0x1]);
				else strmid(CasinoInfo[i][caKrupie3],pData[params[0x0]][pName], 0, strlen(pData[params[0x0]][pName]), 24);
			}
		case 3:
			{
				if(params[0x0] == -1) return strmid(CasinoInfo[i][caKrupie4],"-", 0, strlen("-"), 24), SendMes(playerid, COLOR_BLUE, " Вы уволили %s с должности Крупье [%i]",pData[params[0x0]][pName],params[0x1]);
				else strmid(CasinoInfo[i][caKrupie4],pData[params[0x0]][pName], 0, strlen(pData[params[0x0]][pName]), 24);
			}
		case 4:
			{
				if(params[0x0] == -1) return strmid(CasinoInfo[i][caKrupie5],"-", 0, strlen("-"), 24), SendMes(playerid, COLOR_BLUE, " Вы уволили %s с должности Крупье [%i]",pData[params[0x0]][pName],params[0x1]);
				else strmid(CasinoInfo[i][caKrupie5],pData[params[0x0]][pName], 0, strlen(pData[params[0x0]][pName]), 24);
			}
		case 5:
			{
				if(params[0x0] == -1) return strmid(CasinoInfo[i][caKrupie6],"-", 0, strlen("-"), 24), SendMes(playerid, COLOR_BLUE, " Вы уволили %s с должности Крупье [%i]",pData[params[0x0]][pName],params[0x1]);
				else strmid(CasinoInfo[i][caKrupie6],pData[params[0x0]][pName], 0, strlen(pData[params[0x0]][pName]), 24);
			}
		case 6:
			{
				if(params[0x0] == -1) return strmid(CasinoInfo[i][caKrupie7],"-", 0, strlen("-"), 24), SendMes(playerid, COLOR_BLUE, " Вы уволили %s с должности Крупье [%i]",pData[params[0x0]][pName],params[0x1]);
				else strmid(CasinoInfo[i][caKrupie7],pData[params[0x0]][pName], 0, strlen(pData[params[0x0]][pName]), 24);
			}
		case 7:
			{
				if(params[0x0] == -1) return strmid(CasinoInfo[i][caKrupie8],"-", 0, strlen("-"), 24), SendMes(playerid, COLOR_BLUE, " Вы уволили %s с должности Крупье [%i]",pData[params[0x0]][pName],params[0x1]);
				else strmid(CasinoInfo[i][caKrupie8],pData[params[0x0]][pName], 0, strlen(pData[params[0x0]][pName]), 24);
			}
		case 8:
			{
				if(params[0x0] == -1) return strmid(CasinoInfo[i][caKrupie9],"-", 0, strlen("-"), 24), SendMes(playerid, COLOR_BLUE, " Вы уволили %s с должности Крупье [%i]",pData[params[0x0]][pName],params[0x1]);
				else strmid(CasinoInfo[i][caKrupie9],pData[params[0x0]][pName], 0, strlen(pData[params[0x0]][pName]), 24);
			}
		case 9:
			{
				if(params[0x0] == -1) return strmid(CasinoInfo[i][caKrupie10],"-", 0, strlen("-"), 24), SendMes(playerid, COLOR_BLUE, " Вы уволили %s с должности Крупье [%i]",pData[params[0x0]][pName],params[0x1]);
				else strmid(CasinoInfo[i][caKrupie10],pData[params[0x0]][pName], 0, strlen(pData[params[0x0]][pName]), 24);
			}
		default: return SCM(playerid,COLOR_GREY," Неверный слот!");
		}
		SendMes(params[0x0], COLOR_BLUE, "%s назначил вас Крупье [%i]",pData[playerid][pName],params[0x1]);
		SendMes(playerid, COLOR_BLUE, " Вы назначили %s Крупье [%i]",pData[params[0x0]][pName],params[0x1]);
	}
	return true;
}
CMD:cinfo(playerid, params[])
{
	for(new i = 1; i <= TOTALCASINO; i++)
	{
		if(!PlayerToPoint(200,playerid, CasinoInfo[i][caPos][0x0],CasinoInfo[i][caPos][0x1], CasinoInfo[i][caPos][0x2])) continue;
		new gaatext[24];
		switch(CasinoInfo[i][caMafia])
		{
		case 5: gaatext = "La Costra Nostra";
		case 6: gaatext = "Yakuza";
		case 14: gaatext = "Russian Mafia";
		}
		format(string, 500, "Казино: %s\n\nПод контролем: %s\n\nРаботники казино:",CasinoInfo[i][caName],gaatext);
		format(string, 500, "%s\n\n[0] Менеджер: %s\n[1] Менеджер: %s\n[2] Менеджер: %s\n\n[0] Крупье: %s\n[1] Крупье: %s\n[2] Крупье: %s\n[3] Крупье: %s\n[4] Крупье: %s\n[5] Крупье: %s\n[6] Крупье: %s\n[7] Крупье: %s\n[8] Крупье: %s\n[9] Крупье: %s",string,CasinoInfo[i][caManager],CasinoInfo[i][caManager2],CasinoInfo[i][caManager3],CasinoInfo[i][caKrupie],CasinoInfo[i][caKrupie2],CasinoInfo[i][caKrupie3],CasinoInfo[i][caKrupie4],CasinoInfo[i][caKrupie5],
		CasinoInfo[i][caKrupie6],CasinoInfo[i][caKrupie7],CasinoInfo[i][caKrupie8],CasinoInfo[i][caKrupie9],CasinoInfo[i][caKrupie10]);
		ShowPlayerDialog(playerid,2145,DIALOG_STYLE_MSGBOX,"Информация о Казино",string,"Скрыть","");
		break;
	}
	return true;
}
CMD:deal(playerid, params[])
{
	if(!GetPVarInt(playerid,"CasinoRank")) return true;
	if(GetPVarInt(playerid,"Roulet")) return SCM(playerid,COLOR_GREY," Вы уже запустили рулетку!");
	if(!GetRoulet(playerid)) return SCM(playerid,COLOR_GREY," В данном месте нет рулетки!");
	if(RouletPlay[GetRoulet(playerid)]) return SCM(playerid,COLOR_GREY," Рулетка уже запущена!");
	SetPVarInt(playerid,"Roulet",GetRoulet(playerid));
	RouletTimer[GetRoulet(playerid)][0x2] = random(80) + 70;
	RouletPlay[GetRoulet(playerid)] = true;
	RouletTimer[GetRoulet(playerid)][0x0] = SetTimerEx("RouletCheck",100,1,"d",GetRoulet(playerid));
	RouletKrupie[GetRoulet(playerid)] = playerid;
	return true;
}
CMD:bmenu(playerid)
{
	new i = pData[playerid][pPBizzKey];
	if(PlayerToPoint(5, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]) || PlayerToPoint(5, playerid,BizzInfo[i][bBarX], BizzInfo[i][bBarY], BizzInfo[i][bBarZ]))
	{
		if(pData[playerid][pLogin] == false) return true;
		if(!BGet(playerid)) return SCM(playerid, COLOR_GREY, " Вы не владеете бизнесом");
		format(YCMDstr, sizeof(YCMDstr), "[0] Продать бизнес\n[1] Пополнить счет\n[2] Снять деньги\n[3] Баланс\n[4] Цена за товар\n[5] Цена за вход\n[6] Информация");
		ShowPlayerDialog(playerid, 1846, 2, "Бизнес", YCMDstr, "Выбрать", "Отмена");
		return true;
	}
	else if(!PlayerToPoint(5, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]) && !PlayerToPoint(5, playerid,BizzInfo[i][bBarX], BizzInfo[i][bBarY], BizzInfo[i][bBarZ])) return SCM(playerid,COLOR_GREY," Вы должны находиться рядом с бизнесом");
	return true;
}
CMD:kmenu(playerid)
{
	if(!GetPVarInt(playerid, "id_kvart_enter")) 
		return SCM(playerid, COLOR_GREY, " Вы должны находиться рядом или внутри квартиры!");

	new h = (GetPVarInt(playerid, "id_kvart_enter")-1);

	new str_hmenu[512];
	format(str_hmenu, sizeof str_hmenu, "%s\n2. %s\n3. Использовать аптечку\n4. Сменить интерьер\n5. Информация", 
	(!strcmp(kvart_info[h][k_owner],"None",true))?("{4caf50}1. Купить квартиру"):("{ef5350}1. Продать квартиру"),
	(kvart_info[h][k_lock])?("Открыть дверь"):("Закрыть дверь") );


	ShowPlayerDialog(playerid, 6710, 2, "Меню квартиры",str_hmenu,"Выбор","Закрыть");
	return true;
}
CMD:hmenu(playerid)
{
	if(!GetPVarInt(playerid, !#pPickHouseId)) 
		return SCM(playerid, COLOR_GREY, " Вы должны находиться рядом с домом или внутри!");

	new h = (GetPVarInt(playerid, !#pPickHouseId)-1);

	new str_hmenu[512];
	format(str_hmenu, sizeof str_hmenu, "%s\n2. %s\n3. Использовать аптечку\n4. Сменить интерьер\n5. Улучшения\n6. Информация", 
	(!strcmp(HouseInfo[h][hOwner],"None",true))?("{4caf50}1. Купить дом"):("{ef5350}1. Продать дом"),
	(HouseInfo[h][hLock])?("Открыть дверь"):("Закрыть дверь") );


	ShowPlayerDialog(playerid, 6700, 2, "Меню дома",str_hmenu,"Выбор","Закрыть");
	return true;
}
CMD:cmenu(playerid)
{
	if(pData[playerid][pPHouseKey] != INVALID_HOUSE_ID) 
		return SCM(playerid, COLOR_GREY, " Вы не владеете автомобилем");

	ShowPlayerDialog(playerid, 8445, 2, "Транспорт", "[0] Продать\n[1] Заправить\n[2] Заправить с канисистры\n[3] Купить канистру\n[4] Отбуксировать к дому\n[5] Техпаспорт", "Выбрать", "Отмена");
	return true;
}
CMD:painlist(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	else if(!Painlist) return SendClientMessage(playerid,COLOR_GREY,"Список пуст!");
	
	new klevel[4];
	new dlevel[4];
	YCMDstr[0] = EOS;
	strcat(YCMDstr,"{FFFFFF}Псевдоним\t{FFFFFF}Убийств\t{FFFFFF}Смертей\n",sizeof YCMDstr);
	for(new i = 0; i < Painlist; i++)
	{
		format(klevel,sizeof(klevel),"%i",PaintStats[i][paKills]);
		format(dlevel,sizeof(dlevel),"%i",PaintStats[i][paDeaths]);
		strcat(YCMDstr,PaintStats[i][paName],sizeof YCMDstr);
		strcat(YCMDstr,"\t",sizeof YCMDstr);
		strcat(YCMDstr,klevel,sizeof YCMDstr);
		strcat(YCMDstr,"\t",sizeof YCMDstr);
		strcat(YCMDstr,dlevel,sizeof YCMDstr);
		strcat(YCMDstr,"\n",sizeof YCMDstr);
	}
	ShowPlayerDialog(playerid, 0,DIALOG_STYLE_TABLIST_HEADERS, "Список игроков", YCMDstr, "Закрыть", "");
	return true;
}
CMD:racelist(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	else if(!RaceList) return SendClientMessage(playerid,COLOR_GREY,"Список пуст!");
	
	new nubmer[4];
	YCMDstr[0] = EOS;
	strcat(YCMDstr,"{FFFFFF}Номер\t{FFFFFF}Псевдоним\n",sizeof YCMDstr);
	for(new i = 0; i < RaceList; i++)
	{
		format(nubmer,sizeof(nubmer),"%i",i+1);
		
		strcat(YCMDstr,nubmer,sizeof YCMDstr);
		strcat(YCMDstr,"\t",sizeof YCMDstr);
		strcat(YCMDstr,RaceInfo[i][rName],sizeof YCMDstr);
		strcat(YCMDstr,"\n",sizeof YCMDstr);
	}
	ShowPlayerDialog(playerid, 0,DIALOG_STYLE_TABLIST_HEADERS, "Список игроков", YCMDstr, "Закрыть", "");
	return true;
}
CMD:gmx(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if (pData[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if(restart_time)
	{
		restart_time = 0;
		format(string,128," Администратор %s отменил рестарт сервера!",pData[playerid][pName]);
		SendClientMessageToAll(COLOR_LIGHTRED,string);
		return true;
	}
	for(new i; i < 5; i++) SendClientMessageToAll(COLOR_RED, "");
	SendClientMessageToAll(COLOR_RED, "_______________=======[ Внимание! Рестарт сервера через 1 минуту ]=======_______________");
	for(new i; i < 5; i++) SendClientMessageToAll(COLOR_RED, "");
	restart_time = 90;
	foreach(new i: Player)
	{
		GameTextForPlayer(i,"~r~RESTART", 1000, 0);
		ShowPlayerDialog(i,556,DIALOG_STYLE_MSGBOX,"{D95A41}Рестарт сервера","{D95A41}В данный момент проходит рестарт сервера\nПерезайдите через минуту","ENTER","");
		L_Kick(i,18);
	}
	new szQuery[60];
	mysql_format(DATABASE, szQuery, 60, "UPDATE `"TABLE_ACCOUNTS"` SET `pLimitPay` = '0'");
	mysql_tquery(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 60, "UPDATE `"TABLE_ACCOUNTS"` SET `pLimitSellCar` = '0'");
	mysql_tquery(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 60, "UPDATE `"TABLE_ACCOUNTS"` SET `pLimitAutoUgon` = '0'");
	mysql_tquery(DATABASE,szQuery);
	SaveOthers();
	for(new i = 1; i <= TOTALCASINO; i++) SaveMySQL(1,i);
	for(new i = 1; i <= TOTALSHOPS; i++) SaveMySQL(3,i);
	for(new i = 1; i <= TotalBizz; i++) SaveMySQL(4,i);

	for(new i = 0; i<TotalHouse; i++)
	{
		SaveMySQL(5,i);
	}
	for(new i = 1; i <= TOTALFARM; i++) SaveMySQL(9,i);
	return true;
}
CMD:setallbizint(playerid,params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 8 || dostup[playerid] == 0) return true;
	for(new i = 1; i <= TotalBizz; i++)
	{
		if(BizzInfo[i][bType] == 3)
		{
			BizzInfo[i][bInterior] = 6;
			BizzInfo[i][bExitX] = -2240.4685;
			BizzInfo[i][bExitY] = 137.0604;
			BizzInfo[i][bExitZ] = 1035.4140;
			BizzInfo[i][bBarX] = -2236.1130;
			BizzInfo[i][bBarY] = 130.1580;
			BizzInfo[i][bBarZ] = 1035.4141;
			DestroyDynamicPickup(BizzInfo[i][bExitPic]);
			BizzInfo[i][bExitPic] = CreateDynamicPickup(19132, 23, BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ],BizzInfo[i][bVirtualWorld]);
		}
	}
	SCM(playerid,-1,"Бизнесы по интерьерам распределены");
	return true;
}
CMD:buycar(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(!PlayerLicenses(playerid, LICENSES_GET, LIC_DRIVER)) 
		return SCM(playerid,COLOR_WHITE, " У вас нет Лицензии на управление авто");

	if(pData[playerid][pPHouseKey] == INVALID_HOUSE_ID) 
		return SCM(playerid,COLOR_GREY, " У вас нет дома/квартиры");

	if(IsPlayerInRangeOfPoint(playerid,5.0, 562.2836,-1291.9972,17.2482))
	{
		SetPVarInt(playerid,"AutoShop",1);
		SetPVarInt(playerid, "CarShop", 0);//nope
		SetPVarInt(playerid, "SelectAvto", 0);
		return ShowBuyCar(playerid);
	}
	else if(IsPlayerInRangeOfPoint(playerid,5.0, -1951.2544,293.6375,35.4688))
	{
		SetPVarInt(playerid,"AutoShop",2);
		return ShowPlayerDialog(playerid,14009,0," ","Выберите класс машин","C","D");
	}
	else if(IsPlayerInRangeOfPoint(playerid,5.0, -1657.7015,1210.2267,7.2500))
	{
		SetPVarInt(playerid,"AutoShop",3);
		return ShowPlayerDialog(playerid,14009,0," ","Выберите класс машин","A","B");
	}
	else if(IsPlayerInRangeOfPoint(playerid,5.0, 2200.8857,1394.2892,11.0625))
	{
		SetPVarInt(playerid,"AutoShop",4);
		return ShowPlayerDialog(playerid,14009,0," ","Выберите класс машин","A","B");
	}
	else SCM(playerid,COLOR_WHITE," Вы не в месте продажи автомобилей!");
	return true;
}
CMD:setspa(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	if(sscanf(params, "ud", params[0],params[1])) return SCM(playerid, COLOR_WHITE, " Введите: /setspa [playerid] [значение]");
	SetPlayerSpecialAction (params[0],params[1]);
	return true;
}

CMD:route(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pJob] != 1) return SCM(playerid, COLOR_GREY, " Вы не водитель автобуса!");
	if(pData[playerid][pState] != 2) return SCM(playerid, COLOR_GREY, " Вы должны находиться за рулем автобуса!");
	new carid = GetPlayerVehicleID(playerid);
	if(carid != job_car[playerid]) return true;
	if((carid >= buscar[0] && carid <= buscar[1]) || (carid >= buscar[2] && carid <= buscar[3]) || (carid >= buscar[4] && carid <= buscar[5]) || (carid >= buscar[6] && carid <= buscar[7]))
	{
		if(GetPVarInt(playerid, "TypeBus") > 0)
		{
			ShowPlayerDialog(playerid,8128,DIALOG_STYLE_MSGBOX, " ", "Вы уверены, что хотите завершить свой рабочий день?", "Завершить", "Отмена");
			return true;
		}
		if(GetPlayerVehicleID(playerid) >= buscar[0] && GetPlayerVehicleID(playerid) <= buscar[1]) ShowPlayerDialog(playerid,1745,DIALOG_STYLE_MSGBOX," ","Начать работу водителя автобуса?", "Да", "Нет");
		else if(GetPlayerVehicleID(playerid) >= buscar[2] && GetPlayerVehicleID(playerid) <= buscar[3]) ShowPlayerDialog(playerid,1745,DIALOG_STYLE_MSGBOX," ","Начать работу водителя автобуса?", "Да", "Нет");
		else if(GetPlayerVehicleID(playerid) >= buscar[4] && GetPlayerVehicleID(playerid) <= buscar[5]) ShowPlayerDialog(playerid,1745,DIALOG_STYLE_MSGBOX," ","Начать работу водителя автобуса?", "Да", "Нет");
		else ShowPlayerDialog(playerid, 163, 2, "Маршрут", "АвтоВокзал LS << >> Автошкола SF\nАвтоВокзал LS << >> АвтоВокзал LV", "Принять", "Отмена");
	}
	else SCM(playerid, COLOR_GREY, " Вы должны находиться в автобусе!");
	return true;
}
CMD:hbjectid(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /hbjecdit [object slot]");
	if(IsPlayerAttachedObjectSlotUsed(playerid, params[0])) EditAttachedObject(playerid, params[0]);
	return true;
}
CMD:hbject(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new giveplayerids = -1, slot = -1, objectid = -1, bone = -1, Float:oX, Float:oY, Float:oZ, Float:rX, Float:rY, Float:rZ, Float:sX, Float:sY, Float:sZ;
	if(sscanf(params, "udddfffffffff", giveplayerids, slot, objectid, bone, oX, oY, oZ, rX, rY, rZ, sX, sY, sZ)) return SCM(playerid, COLOR_WHITE, " Введите: /hbject [playerid] [слот 0-9] [id объект] [1-18]  [x][y][z]  [rx][ry][rz] [sx][sy][sz]");
	if(IsPlayerAttachedObjectSlotUsed(giveplayerids, slot)) return RemovePlayerAttachedObject(giveplayerids, slot), SCM(playerid, COLOR_WHITE, " Объект удален");
	SetPlayerAttachedObject(giveplayerids, slot, objectid, bone, oX, oY, oZ, rX, rY, rZ, sX, sY, sZ);
	return true;
}
CMD:getobjectpos(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new Float:x1,Float:y1,Float:z1;
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /getobjectpos [Слот]");
	GetObjectPos(SlotObject[params[0]],x1,y1,z1);
	format(string, 128, " GetDynamicObjectPos %f,%f,%f",x1,y1,z1);
	SCM(playerid,COLOR_GREY,string);
	return true;
}
CMD:obj(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	if(sscanf(params, "dd", params[0],params[1])) return SCM(playerid, COLOR_WHITE, " Введите: /obj [слот] [id объекта]");
	if(SlotObject[params[0]] != 0) return true;
	if(params[0] > 99) return true;
	new Float:x1,Float:y1,Float:z1;
	AntiCheatGetPos(playerid,x1,y1,z1);
	SlotObject[params[0]] = CreateDynamicObject(params[1],x1,y1,z1,0.00,0.00,0.00);
	return true;
}
CMD:aobject(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	new slot,objectid, Float:oX, Float:oY, Float:oZ, Float: Anglee[3];
	if(sscanf(params, "ddffffff",slot,objectid,oX,oY,oZ,Anglee[0],Anglee[1],Anglee[2])) return SCM(playerid, COLOR_WHITE, " Введите: /aobject [слот] [ид объекта] [X] [Y] [Z] [X2] [Y2] [Z2]");
	if(slot > 99) return true;
	if(SlotObject[slot] != 0) return true;
	SlotObject[slot] = CreateDynamicObject(objectid,oX,oY,oZ,Anglee[0],Anglee[1],Anglee[2]);
	return true;
}

CMD:dobject(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /dobject [слот]");
	if(SlotObject[params[0]] != 0)
	{
		DestroyDynamicObject(SlotObject[params[0]]);
		SlotObject[params[0]] = 0;
	}
	return true;
}
CMD:eobject(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d", params[0])) { SelectObject(playerid); } else
	{
		if(SlotObject[params[0]] != 0)
		{
			EditObject(playerid,SlotObject[params[0]]);
		}
	}
	return true;
}


CMD:tload(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pJob] != 99) return SCM(playerid,COLOR_GREY, " Вы не Дальнобойщик");
	if(GetPlayerVehicleID(playerid) != job_car[playerid]) return SCM(playerid,COLOR_GREY," Вы должны находится в своем грузовике");
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 514 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 403  && GetVehicleModel(GetPlayerVehicleID(playerid)) != 515 || pData[playerid][pState] != 2) return SCM(playerid,COLOR_GREY," Вы не в фуре");
	new maxguz = max_gruz[GetPlayerVehicleID(playerid)-tanker_train[0]]+pData[playerid][pDLevel];
	if(loaded_type[playerid] != 0) return true;
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /tload [количество]");
	if(params[0] < 1) return SendMes(playerid,COLOR_GREY," Нельзя купить меньше 1 и больше %i тонн",maxguz);
	if(params[0] > maxguz)
	{
		format(cString, 64, " Слишком много товара, ваш максимум: %i т.",maxguz);
		SCM(playerid,COLOR_GREY,cString);
		return true;
	}
	if(IsPlayerInRangeOfPoint(playerid, 10.0, 256.4736,1414.5182,10.7075))
	{
		if(pData[playerid][pCash] < params[0]*Benzbuy[0]) return SCM(playerid, 0x6495EDFF, "  У вас нет столько денег!");
		pData[playerid][pCash] -= params[0]*Benzbuy[0];
		format(cString, 64, "{00D26D}Загружено %i т.груза на сумму %i вирт", params[0],Benzbuy[0]*params[0]);
		trailer_id[playerid] = CreateVehicle_R(584, 249.1628,1420.7445,11.1698,269.4982,1,1, -1);
		loaded_type[playerid] = 1;

		if(Benzbuy[0] != 900) Benzbuy[0] += 100;
		Benzbuy[1] -= 100;
		if(Benzbuy[0] == 900) {
			Benzbuy[1] = 200; }
		format(string, 144, " Нефтезавод №1\nЦена за тонну: %d",Benzbuy[0]);
		Update3DTextLabelText(GasZavod[0],0xFFFF00FF,string);
		format(string, 144, " Нефтезавод №2\nЦена за тонну: %d",Benzbuy[1]);
		Update3DTextLabelText(GasZavod[1],0xFFFF00FF,string);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 10.0,-1046.7723,-670.7208,32.3516))
	{
		if(pData[playerid][pCash] < params[0]*Benzbuy[1]) return SCM(playerid, 0x6495EDFF, "  У вас нет столько денег!");
		pData[playerid][pCash] -= params[0]*Benzbuy[1];
		format(cString, 64, "{00D26D}Загружено %i т.груза на сумму %i вирт", params[0],Benzbuy[1]*params[0]);
		trailer_id[playerid] = CreateVehicle_R(584,-1053.0789,-662.7253,32.5968,266.1711,1,1, -1);
		SetVehicleParamsEx(trailer_id[playerid],false,false,false,true,false,false,false);
		loaded_type[playerid] = 1;
		Benzbuy[0] -= 100;
		if(Benzbuy[1] != 900) Benzbuy[1] += 100;
		if(Benzbuy[1] == 900) {
			Benzbuy[0] = 200; }
		format(string, 144, " Нефтезавод №1\nЦена за тонну: %d",Benzbuy[0]);
		Update3DTextLabelText(GasZavod[0],0xFFFF00FF,string);
		format(string, 144, " Нефтезавод №2\nЦена за тонну: %d",Benzbuy[1]);
		Update3DTextLabelText(GasZavod[1],0xFFFF00FF,string);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 10.0,608.7718,847.8765,-43.1532))
	{
		if(pData[playerid][pCash] < params[0]*ugolbuy[0]) return SCM(playerid, 0x6495EDFF, "  У вас нет столько денег!");
		pData[playerid][pCash] -= params[0]*ugolbuy[0];
		format(cString, 64, "{00D26D}Загружено %i т.груза на сумму %i вирт", params[0],ugolbuy[0]*params[0]);
		trailer_id[playerid] = CreateVehicle_R(450,588.2112,844.9619,-42.8014,272.4998,1,1, -1);
		SetVehicleParamsEx(trailer_id[playerid],false,false,false,true,false,false,false);
		loaded_type[playerid] = 2;
		if(ugolbuy[0] != 900) ugolbuy[0] += 100;
		ugolbuy[1] -= 100;
		if(ugolbuy[0] == 900) {
			ugolbuy[1] = 200; }
		format(string, 144, "Cклад угля №1\nЦена за тонну: %d",ugolbuy[0]);
		Update3DTextLabelText(Sklad[0],0xFFFF00FF,string);
		format(string, 144, "Cклад угля №2\n Цена за тонну: %d",ugolbuy[1]);
		Update3DTextLabelText(Sklad[1],0xFFFF00FF,string);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 10.0,-1873.0896,-1720.2430,21.7500))
	{
		if(pData[playerid][pCash] < params[0]*ugolbuy[1]) return SCM(playerid, 0x6495EDFF, "  У вас нет столько денег!");
		pData[playerid][pCash] -= params[0]*ugolbuy[1];
		format(cString, 64, "{00D26D}Загружено %i т.груза на сумму %i вирт", params[0],ugolbuy[1]*params[0]);
		trailer_id[playerid] = CreateVehicle_R(450,-1863.5292,-1725.8236,21.7500,120.3313,1,1, -1);
		SetVehicleParamsEx(trailer_id[playerid],false,false,false,true,false,false,false);
		loaded_type[playerid] = 2;
		ugolbuy[0] -= 100;
		if(ugolbuy[1] != 900) ugolbuy[1] += 100;
		if(ugolbuy[1] == 900) {
			ugolbuy[0] = 200; }
		format(string, 144, "Cклад угля №1\nЦена за тонну: %d",ugolbuy[0]);
		Update3DTextLabelText(Sklad[0],0xFFFF00FF,string);
		format(string, 144, "Cклад угля №2\nЦена за тонну: %d",ugolbuy[1]);
		Update3DTextLabelText(Sklad[1],0xFFFF00FF,string);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 10.0,-449.3336,-65.9115,59.4158))
	{
		if(pData[playerid][pCash] < params[0]*Buyderevo[0]) return SCM(playerid, 0x6495EDFF, "  У вас нет столько денег!");
		pData[playerid][pCash] -= params[0]*Buyderevo[0];
		format(cString, 64, "{00D26D}Загружено %i т.груза на сумму %i вирт", params[0],Buyderevo[0]*params[0]);
		trailer_id[playerid] = CreateVehicle_R(450,-455.8806,-47.2069,60.4907,182.1683,1,1, -1);
		SetVehicleParamsEx(trailer_id[playerid],false,false,false,true,false,false,false);
		loaded_type[playerid] = 3;
		if(Buyderevo[0] != 900) Buyderevo[0] += 100;
		Buyderevo[1] -= 100;
		if(Buyderevo[0] == 900) {
			Buyderevo[1] = 200; }
		format(string, 144, " Лесопилка №1\nЦена за тонну: %d",Buyderevo[0]);
		Update3DTextLabelText(Derevobuy[0],0xFFFF00FF,string);
		format(string, 144, " Лесопилка №2\n Цена за тонну: %d",Buyderevo[1]);
		Update3DTextLabelText(Derevobuy[1],0xFFFF00FF,string);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 10.0,-1978.6846,-2434.8274,30.6250))
	{
		if(pData[playerid][pCash] < params[0]*Buyderevo[1]) return SCM(playerid, 0x6495EDFF, "  У вас нет столько денег!");
		pData[playerid][pCash] -= params[0]*Buyderevo[1];
		format(cString, 64, "{00D26D}Загружено %i т.груза на сумму %i вирт", params[0],Buyderevo[0]*params[0]);
		trailer_id[playerid] = CreateVehicle_R(450,-1966.3121,-2436.0132,31.2080,226.3676,1,1, -1);
		SetVehicleParamsEx(trailer_id[playerid],false,false,false,true,false,false,false);
		loaded_type[playerid] = 3;
		Buyderevo[0] -= 100;
		if(Buyderevo[1] != 900) Buyderevo[1] += 100;
		if(Buyderevo[1] == 900) {
			Buyderevo[0] = 200; }
		format(string, 144, " Лесопилка №1\nЦена за тонну: %d",Buyderevo[0]);
		Update3DTextLabelText(Derevobuy[0],0xFFFF00FF,string);
		format(string, 144, " Лесопилка №2\n Цена за тонну: %d",Buyderevo[1]);
		Update3DTextLabelText(Derevobuy[1],0xFFFF00FF,string);
	}
	else return SCM(playerid, COLOR_GREY, " Вы не на месте закупки!");
	SCM(playerid, 0x66FBA6FF, cString);
	pData[playerid][pDgruz] += params[0];
	return true;
}
CMD:tunload(playerid, params[])
{
	if(unloadtimer[playerid] > gettime()) return SCM(playerid,0x81DA99AA," Очередь на разгрузку. Ожидайте 5 минут.");
	new trailerid = GetVehicleTrailer(GetPlayerVehicleID(playerid));
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pJob] != 99)return SCM(playerid,COLOR_GREY, " Вы не Дальнобойщик");
	if(!IsPlayerInAnyVehicle(playerid) || pData[playerid][pState] != PLAYER_STATE_DRIVER || job_car[playerid] != GetPlayerVehicleID(playerid)) return SCM(playerid,COLOR_GREY," Вы должны находиться в своей фуре");
	if(loaded_type[playerid] == 0 || trailerid != trailer_id[playerid]) return SCM(playerid,COLOR_GREY," Вы не загружены");
	if(!IsAtTTPlace(playerid)) return SCM(playerid,0x81DA99AA," Вы должны находиться в порту");
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 514 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 403  && GetVehicleModel(GetPlayerVehicleID(playerid)) != 515 || pData[playerid][pState] != 2) return SCM(playerid,COLOR_GREY," Вы не в фуре");
	if(pData[playerid][pState] != PLAYER_STATE_DRIVER) return SCM(playerid,COLOR_GREY," Это не ваш груз");
	switch(loaded_type[playerid]) // Проверяем каким товаром загружен игрок
	{
	case 1:
		{
			if(IsPlayerInRangeOfPoint(playerid, 10.0, 2601.7222,-2226.5867,13.3732))
			{
				unloadtimer[playerid] = gettime()+300;
				pData[playerid][pCash] += pData[playerid][pDgruz]*Sellbenz[0];
				if(booston || (booston2 && pData[playerid][pLevel] < 7)) pData[playerid][pDExp] += 400+pData[playerid][pDgruz]*200;
				else  pData[playerid][pDExp] += 400+pData[playerid][pDgruz]*600;
				format(cString, 64, "{00D26D}Вы доставили %d т.груза на сумму %i вирт",pData[playerid][pDgruz],Sellbenz[0]*pData[playerid][pDgruz]);
				SCM(playerid, 0x66FBA6FF, cString);
				if(Sellbenz[0] != 200) Sellbenz[0] -= 100;
				if(Sellbenz[1] != 900) Sellbenz[1] += 100;
			}
			else if(IsPlayerInRangeOfPoint(playerid, 10.0, -1731.4509,118.9413,3.5547))
			{
				unloadtimer[playerid] = gettime()+300;
				pData[playerid][pCash] += pData[playerid][pDgruz]*Sellbenz[1];
				if(booston || (booston2 && pData[playerid][pLevel] < 7)) pData[playerid][pDExp] += 400+pData[playerid][pDgruz]*200;
				else pData[playerid][pDExp] += 400+pData[playerid][pDgruz]*600;
				format(cString, 64, "{00D26D}Вы доставили %d т.груза на сумму %i вирт",pData[playerid][pDgruz],Sellbenz[1]*pData[playerid][pDgruz]);
				SCM(playerid, 0x66FBA6FF, cString);
				if(Sellbenz[1] != 200) Sellbenz[1] -= 100;
				if(Sellbenz[0] != 900) Sellbenz[0] += 100;
			}
		}
	case 2:
		{
			if(IsPlayerInRangeOfPoint(playerid, 7.0, 2601.7222,-2226.5867,13.3732))
			{
				unloadtimer[playerid] = gettime()+300;
				pData[playerid][pCash] += pData[playerid][pDgruz]*Sellugol[0];
				if(booston || (booston2 && pData[playerid][pLevel] < 7)) pData[playerid][pDExp] += 400+pData[playerid][pDgruz]*200;
				else pData[playerid][pDExp] += 400+pData[playerid][pDgruz]*600;
				format(cString, 64, "{00D26D}Вы доставили %d т.груза на сумму %i вирт",pData[playerid][pDgruz],Sellugol[0]*pData[playerid][pDgruz]);
				SCM(playerid, 0x66FBA6FF, cString);
				if(Sellugol[0] != 200) Sellugol[0] -= 100;
				if(Sellugol[1] != 900) Sellugol[1] += 100;
			}
			else if(IsPlayerInRangeOfPoint(playerid, 7.0, -1731.4509,118.9413,3.5547))
			{
				unloadtimer[playerid] = gettime()+300;
				pData[playerid][pCash] += pData[playerid][pDgruz]*Sellugol[1];
				if(booston || (booston2 && pData[playerid][pLevel] < 7)) pData[playerid][pDExp] += 400+pData[playerid][pDgruz]*200;
				else pData[playerid][pDExp] += 400+pData[playerid][pDgruz]*600;
				format(cString, sizeof(cString), " {00D26D}Вы доставили %d т.груза на сумму %i вирт",pData[playerid][pDgruz],Sellugol[1]*pData[playerid][pDgruz]);
				SCM(playerid, 0x66FBA6FF, cString);
				if(Sellugol[1] != 200) Sellugol[1] -= 100;
				if(Sellugol[0] != 900) Sellugol[0] += 100;
			}
		}
	case 3:
		{
			if(IsPlayerInRangeOfPoint(playerid, 7.0, 2601.7222,-2226.5867,13.3732))
			{
				unloadtimer[playerid] = gettime()+300;
				pData[playerid][pCash] += pData[playerid][pDgruz]*Sellderevo[0];
				if(booston || (booston2 && pData[playerid][pLevel] < 7)) pData[playerid][pDExp] += 400+pData[playerid][pDgruz]*200;
				else pData[playerid][pDExp] += 400+pData[playerid][pDgruz]*600;
				format(cString, 64, "{00D26D}Вы доставили %d т.груза на сумму %i вирт",pData[playerid][pDgruz],Sellderevo[0]*pData[playerid][pDgruz]);
				SCM(playerid, 0x66FBA6FF, cString);
				if(Sellderevo[0] != 200) Sellderevo[0] -= 100;
				if(Sellderevo[1] != 900) Sellderevo[1] += 100;
			}
			else if(IsPlayerInRangeOfPoint(playerid, 7.0, -1731.4509,118.9413,3.5547))
			{
				unloadtimer[playerid] = gettime()+300;
				pData[playerid][pCash] += pData[playerid][pDgruz]*Sellderevo[1];
				if(booston || (booston2 && pData[playerid][pLevel] < 7)) pData[playerid][pDExp] += 400+pData[playerid][pDgruz]*200;
				else pData[playerid][pDExp] += 400+pData[playerid][pDgruz]*600;
				format(cString, 64, "{00D26D}Вы доставили %d т.груза на сумму %i вирт",pData[playerid][pDgruz],Sellderevo[1]*pData[playerid][pDgruz]);
				SCM(playerid, 0x66FBA6FF, cString);
				if(Sellderevo[1] != 200) Sellderevo[1] -= 100;
				if(Sellderevo[0] != 900) Sellderevo[0] += 100;
			}
		}
	}
	format(string, 144, " Порт ЛС\nНефть: %d\nУголь: %d\nДерево: %d",Sellbenz[0],Sellugol[0],Sellderevo[0]);
	Update3DTextLabelText(Doki[0],0xFFFF00FF,string);
	format(string, 144, " Порт СФ\nНефть: %d\nУголь: %d\nДерево: %d",Sellbenz[1],Sellugol[1],Sellderevo[1]);
	Update3DTextLabelText(Doki[1],0xFFFF00FF,string);
	trailer_id[playerid] = 0;
	trailer_on[playerid] = 0;
	DestroyVehicleEX(GetVehicleTrailer(GetPlayerVehicleID(playerid)));
	Expirence(playerid);
	pData[playerid][pDgruz] = 0;
	loaded_type[playerid] = 0;
	return true;
}
CMD:tskill(playerid, params[])
{
	trailer_on[playerid] = 0;
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pJob] != 99)return SCM(playerid,COLOR_GREY, " Вы не Дальнобойщик");
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,COLOR_GREY," Вы должны находиться в своей фуре");
	if(GetPlayerVehicleID(playerid) != job_car[playerid] || !IsATanker(GetPlayerVehicleID(playerid))) return SCM(playerid,COLOR_GREY," Вы должны находиться в своей фуре");
	new gtext[7];
	switch(loaded_type[playerid])
	{
	case 1: gtext ="Нефть";
	case 2: gtext ="Уголь";
	case 3: gtext ="Дерево";
	case 0: gtext ="Нет";
	}
	new gaatext[7];
	switch(pData[playerid][pDLevel])
	{
	case 1..4: gaatext ="11т";
	case 5..14: gaatext ="21т.";
	case 15..24: gaatext ="35т.";
	case 25..26: gaatext ="50т.";
	}
	new level = pData[playerid][pDLevel];
	new exp = pData[playerid][pDExp];
	new expamount = level*levelDexp;
	new gruz = pData[playerid][pDgruz];
	new maxgruz = max_gruz[GetPlayerVehicleID(playerid)-tanker_train[0]]+pData[playerid][pDLevel];
	new msg[] = "Навык:\n\tLVL: %i\n\tExp: %i / %i\nФура:\n\tМакс груз: %iт.\n\tЗагружено: %iт. из %s\nГруз: %s";
	format(YCMDstr, 128, msg,level,exp,expamount,maxgruz,gruz,gaatext,gtext);
	ShowPlayerDialog(playerid,31999,0, "Статистика Дальнобойщика",YCMDstr, "Готово", "");
	return true;
}
CMD:queststats(playerid, params[])
{
	QuestStats(playerid,playerid);
	return true;
}
CMD:tmonitor(playerid, params[])
{
	trailer_on[playerid] = 0;
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pJob] != 99)return SCM(playerid,COLOR_GREY, " Вы не Дальнобойщик");
	if(!IsAtTPlace(playerid)) return SCM(playerid,0x81DA99AA," Вы должны находиться в порту / заводе");
	new msg1[] = "Заводы:\nНефтезавод №1 Цена 1т: \n\t%i\nНефтезавод №2 Цена 1т: \n\t%i\nСклад угля №1 Цена 1т: \n\t%i\nСклад угля №2 Цена 1т:\n\t%i\nЛесопилка №1 Цена 1т:\n\t%i\nЛесопилка №2 Цена 1т: \n\t%i\n\nПорты:\nПорт LS, Цена 1т:\n\tНефть: %i\n\tУголь: %i\n\tДерево: %i\nПорт SF, Цена 1т:\n\tНефть: %i\n\tУголь: %i\n\tДерево: %i";
	format(YCMDstr, 500, msg1,Benzbuy[0],Benzbuy[1],ugolbuy[0],ugolbuy[1],Buyderevo[0],Buyderevo[1],Sellbenz[0],Sellugol[0],Sellderevo[0],Sellbenz[1],Sellugol[1],Sellderevo[1]);
	ShowPlayerDialog(playerid,31998,0, "Мониторинг цен:",YCMDstr, "Готово", "");
	return true;
}

CMD:instopen(playerid)
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pMember] != 11 && pData[playerid][pLeader] != 11 && TakingLesson[playerid] != 1) return true;
	if(!PlayerToPoint(8.0,playerid,-2074.50000000,-94.90000153,35.00000000)) return true;
	MoveDynamicObject(licgate, -2074.50000000,-94.90000153,35.00000000+0.020,0.020, 0.00,0.00,90.00);
	SetTimer("LicClose", 8000, 0);
	SCM(playerid, 0x6495EDFF, " Шлагбаум опустится через 8 секунд");
	return true;
}
CMD:prodopen(playerid)
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pJob] != 5) return true;
	if(!PlayerToPoint(10.0,playerid,2203.8630371094,-2252.1179199219,13.5)) return true;
	MoveDynamicObject(gruzgate, 2203.7639160156,-2252.0598117188,13.40+0.120,0.120, 0.00,0.00,316.00);
	SetTimer("GruzClose", 8000, 0);
	SCM(playerid, 0x6495EDFF, " Шлагбаум опустится через 8 секунд");
	return true;
}
CMD:givenewskeys(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /givenewskeys [id]");
	else if(pData[params[0]][pNkeys]) return SCM(playerid, COLOR_GREY, " У игрока есть ключи!");
	if(pData[playerid][pMember] == 9 || pData[playerid][pMember] == 16 || pData[playerid][pMember] == 20 || pData[playerid][pAdmin] >= 1)
	{
		if(params[0] == INVALID_PLAYER_ID) return true;
		if(!ProxDetectorS(5.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, " Человек далеко от вас!");
		pData[params[0]][pNkeys] = pData[playerid][pMember];
		format(cString, sizeof(cString), " Сотрудник News %s выдал пропуск в офис %s",pData[playerid][pName],Name(params[0]));
		ProxDetector(30.0, playerid, cString, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	return true;
}
CMD:takenewskeys(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	else if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /takenewskeys [id]");
	else if(!ProxDetectorS(5.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, " Человек далеко от вас!");
	else if(!pData[params[0]][pNkeys]) return SCM(playerid, COLOR_GREY, " У игрока нет ключей!");
	else if(pData[playerid][pMember] == 9 || pData[playerid][pMember] == 16 || pData[playerid][pMember] == 20 || pData[playerid][pAdmin] >= 1)
	{
		if(params[0] == INVALID_PLAYER_ID) return true;
		pData[params[0]][pNkeys] = 0;
		format(cString, sizeof(cString), " Сотрудник News %s забрал пропуск в офис %s",pData[playerid][pName],Name(params[0]));
		ProxDetector(30.0, playerid, cString, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	return true;
}
CMD:selldrugs(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	else if(!IsAGang(playerid)) return SCM(playerid,COLOR_GREY," Вы не бандит!");
	else if(sscanf(params, "udd", params[0],params[1],params[2])) return SCM(playerid, COLOR_GRAD2, " Введите: /selldrugs [id] [кол-во] [Цена]");
	else if(!(1 <= params[1] <= 150)) return SCM(playerid, COLOR_GREY, " Вес не может быть меньше 1 и больше 150!");
	else if(!(1 <= params[2] <= 5000)) return SCM(playerid, COLOR_GREY, " Цена не может быть меньше 1 и больше 5000 вирт!");
	else if(params[1] > pData[playerid][pDrugs]) return SCM(playerid, COLOR_GREY, " У вас нет столько наркотиков!");
	//else if GetPVarInt(playerid,"Offer") *then return true;
	else if(!IsPlayerConnected(params[0])) return true;
	else if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid,COLOR_GREY," Вы должны находиться рядом друг с другом");
	else if(params[0] == playerid) return SCM(playerid, COLOR_GREY, " Вы не можете продать себе наркотики!");
	format(cString, sizeof(cString), " Вы предложили %s купить %i грамм наркоты за %i вирт",Name(params[0]),params[1],params[2]);
	SCM(playerid, 0x6495EDFF, cString);
	format(cString, sizeof(YCMDstr), "%s предлагает вам купить %i грам наркоты за %i вирт. (( Введите /accept drugs для покупки ))",pData[playerid][pName],params[1],params[2]);
	SCM(params[0], 0x6495EDFF, cString);
	SetPVarInt(playerid,"Offer",params[0]);
	DrugOffer[params[0]] = playerid;
	DrugPrice[params[0]] = params[2];
	DrugGram[params[0]] = params[1];
	return true;
}
CMD:quitjob(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	pData[playerid][pJob] = 0;
	SCM(playerid, COLOR_GREY, " Вы уволились с работы");
	return true;
}
CMD:sellbiz(playerid)
{
	if(pData[playerid][pLogin] == false) return true;
	if(!IsPlayerConnected(playerid)) return true;
	if(!BGet(playerid)) return SCM(playerid, COLOR_GREY, " У вас нет бизенса!");
	new bouse = pData[playerid][pPBizzKey];
	if(strcmp(pData[playerid][pName], BizzInfo[pData[playerid][pPBizzKey]][bOwner], true) == 0)
	{
		if(PlayerToPoint(5, playerid,BizzInfo[bouse][bEntranceX], BizzInfo[bouse][bEntranceY], BizzInfo[bouse][bEntranceZ]) || PlayerToPoint(5, playerid,BizzInfo[bouse][bBarX], BizzInfo[bouse][bBarY], BizzInfo[bouse][bBarZ]))
		{
			ShowPlayerDialog(playerid,8447,DIALOG_STYLE_MSGBOX, " ", "Вы уверены, что хотите продать свой бизнес?", "Далее", "Отмена");
			return true;
		}
	}
	return true;
}
CMD:sellchuonebiz(playerid)
{
	if(pData[playerid][pLogin] == false) return true;
	if(!IsPlayerConnected(playerid)) return true;
	if(!BGet(playerid)) return SCM(playerid, COLOR_GREY, " У вас нет бизенса!");
	new bouse = pData[playerid][pPBizzKey];
	if(strcmp(pData[playerid][pName], BizzInfo[pData[playerid][pPBizzKey]][bOwner], true) == 0)
	{
		if(PlayerToPoint(5, playerid,BizzInfo[bouse][bEntranceX], BizzInfo[bouse][bEntranceY], BizzInfo[bouse][bEntranceZ]) || PlayerToPoint(5, playerid,BizzInfo[bouse][bBarX], BizzInfo[bouse][bBarY], BizzInfo[bouse][bBarZ]))
		{
			BizzInfo[bouse][bLocked] = 1;
			BizzInfo[bouse][bProducts] = 0;
			strmid(BizzInfo[bouse][bOwner], "None", 0, strlen("None"), 24);
			pData[playerid][pBank] += BizzInfo[bouse][bTill]+BizzInfo[bouse][bLandTax];
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string,40,"~w~business in sold~n~~g~$%i",BizzInfo[bouse][bTill]+BizzInfo[bouse][bLandTax]);
			GameTextForPlayer(playerid,string, 5000, 3);
			BizzInfo[bouse][bTill] = 0;
			BizzInfo[bouse][bPrice] = 0;
			BizzInfo[bouse][bMafia] = 0;
			BizzInfo[bouse][bLandTax] = 0;
			pData[playerid][pPBizzKey] = 0;
			BizzPay[bouse] = 0;
			BizzInfo[bouse][bLicense] = 0;
			BGet(playerid);
			format(YCMDstr, sizeof(YCMDstr), "%s\nПродаётся", BizzInfo[bouse][bMessage],BizzInfo[bouse][bBuyPrice]);
			UpdateDynamic3DTextLabelText(BizzInfo[bouse][bLabel], COLOR_GREEN, YCMDstr);
			return true;
		}
	}
	return true;
}
CMD:gztime(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 10 || !dostup[playerid]) return true;
	for(new i = 1; i <= TOTALGZ; i++)
	{
		if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
		{
			if(GZSafeTime[i]) return SendMes(playerid,-1,"Секунд до окончания территории: %i",GZSafeTime[i]),SendMes(playerid,-1,"ZoneOnBattle: %i",ZoneOnBattle[i]);
			else return SCM(playerid,COLOR_GREY," Нет воин");
		}
	}
	return true;
}
CMD:gzfinish(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 10 || !dostup[playerid]) return true;
	for(new i = 1; i <= TOTALGZ; i++)
	{
		if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
		{
			if(GZSafeTime[i] && ZoneOnBattle[i] == 1)
			{
				if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_GRAD2, " Введите: /gzfinish [1/2] 1 - Napad Win 2 - FrakVlad Win");
				switch(params[0])
				{
				case 1: CountOnZone[GZInfo[i][gNapad]] = 9999;
				case 2: CountOnZone[GZInfo[i][gFrakVlad]] = 9999;
				default: SCM(playerid,-1,"Неверное значение");
				}
				GZSafeTime[i] = 2;
			}
			return true;
		}
	}
	return true;
}
CMD:capture(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(IsAGang(playerid)) // /capture для банд
	{
		if(FrakCD[pData[playerid][pMember]] != 0) return SCM(playerid,COLOR_GREY," Ваша банда уже воюет / воевала за территорию в этом часу.");
		else if(!IsInAllowed(playerid)) return SCM(playerid,COLOR_GRAD1, " Данная команда доступна с 7 ранга");
		else if(IsARespawn(playerid)) return SendClientMessage(playerid,COLOR_WHITE," Нельзя захватить эту территорию");

		for(new i = 1; i <= TOTALGZ; i++)
		{
			if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) && GZInfo[i][gFrakVlad] != pData[playerid][pMember] && ZoneOnBattle[i]==0)
			{
				if(i == 47 || i == 57 || i == 35 || i == 45
						|| i == 1 || i == 2 || i == 11 || i == 18 || i == 19) return SendClientMessage(playerid,COLOR_GREY,"Нельзя захватить данную территорию");
				new playerss = 0;
				foreach(new m: Player)
				{
					if(pData[m][pMember] == GZInfo[i][gFrakVlad]) playerss++;
				}
				if(FrakCD[GZInfo[i][gFrakVlad]] != 0) return SCM(playerid,COLOR_GRAD1,"Нападаемая банда уже воюет / воевала за территорию в этом часу");
				if(i == 47 || i == 57 || i == 35 || i == 45
						|| i == 1 || i == 2 || i == 11 || i == 18 || i == 19) return SCM(playerid,COLOR_GREY," Нельзя захватить данную территорию");
				GZSafeTime[i] = 900;
				ZoneOnBattle[i] = 1;
				FrakCD[GZInfo[i][gFrakVlad]] = 2;
				FrakCD[pData[playerid][pMember]] = 2;
				format(cString,sizeof(cString)," [Внимание]: Ваша банда напала на территорию %s",GetGangName(GZInfo[i][gFrakVlad]));
				SendFamilyMessage(pData[playerid][pMember],0x00B953AA,cString);
				format(cString,sizeof(cString), "[Внимание]: На вашу территорию напала банда %s",GetGangName(pData[playerid][pMember]));
				SendFamilyMessage(GZInfo[i][gFrakVlad],COLOR_RED,cString);
				GangZoneFlashForAll(GZInfo[i][gZone],GetGZColorF(pData[playerid][pMember]));
				SCM(playerid,COLOR_WHITE," Территория будет мигать 15 минут. Победит банда, которая останется последней");
				SCM(playerid,COLOR_WHITE," Территория будет мигать до тех пор, пока на ней не останется 1 банда");
				CountOnZone[GZInfo[i][gFrakVlad]] = 0;
				CountOnZone[pData[playerid][pMember]] = 0;
				new str[64];
				switch(GZInfo[i][gFrakVlad])
				{
				case 12: str="Ballas";
				case 13: str="Vagos";
				case 15: str="Grove";
				case 17: str="Aztecas";
				case 18: str="Rifa";
				}
				switch(pData[playerid][pMember])
				{
				case 12: str2="Ballas";
				case 13: str2="Vagos";
				case 15: str2="Grove";
				case 17: str2="Aztecas";
				case 18: str2="Rifa";
				}
				format(string,128," {BEBEBE}Банда %s напала на банду %s.",str2,str);
				SendAdminMessage(0x00a86bAA,string);
				GZInfo[i][gNapad] = pData[playerid][pMember];
				if(playerss == 0) GZSafeTime[i] = 2,CountOnZone[GZInfo[i][gNapad]] = 2;
				break;
			}
		}
	}
	return true;
}
CMD:mafiawar(playerid, params[])
{
	if(!pData[playerid][pLogin] || !IsAMafia(playerid) || pData[playerid][pRank] < 6) return true;
	if(WarStart > 0) return SCM(playerid, COLOR_GREY,"В данное время нельзя начать войну!");
	if(sscanf(params, "d",params[0]) || params[0] < 1 || params[0] > 3) return SCM(playerid, COLOR_WHITE," Введите: /mafiawar [id стрелы (1 - Заброшенный аэропорт | 2 - Карьер ЛВ | 3 - Карьер СФ)]");
	for(new b = 1; b <= TotalBizz; b++)
	{
		if(PlayerToPoint(6, playerid,BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]) && BizzInfo[b][bMafia] != pData[playerid][pMember])
		{
			if(BizzInfo[b][bMafia] == 0)
			{
				BizzInfo[b][bMafia] = pData[playerid][pMember];
				format(cString,sizeof(cString)," Вам удалось взять под контроль бизнес %s без войны",BizzInfo[b][bMessage]);
				SendFamilyMessage(pData[playerid][pMember],0x114D71AA, cString);
				return true;
			}
			new playerss = 0;
			foreach(new m: Player)
			{
				if(pData[m][pMember] == BizzInfo[b][bMafia]) playerss++;
			}
			WarStart = 7200;
			format(cString,144, "Вы набили стрелку %s. Бизнес: %s. Место встречи: Территория [ID %i]",GetMafiaName(BizzInfo[b][bMafia]), BizzInfo[b][bMessage],params[0x0]);
			SendFamilyMessage(pData[playerid][pMember],0x114D71AA,cString);
			SendFamilyMessage(pData[playerid][pMember],0x114D71AA, "Встреча через 20 минут");
			format(cString,144, "%s забила вам стрелку. Бизнес: %s. Место встречи: Территория [ID %i]",GetMafiaName(pData[playerid][pMember]),BizzInfo[b][bMessage],params[0x0]);
			SendFamilyMessage(BizzInfo[b][bMafia],COLOR_RED,cString);
			SendFamilyMessage(BizzInfo[b][bMafia],COLOR_RED, " Встреча через 20 минут");

			BizzInfo[b][bCapture] = pData[playerid][pMember];
			MFrakCD[pData[playerid][pMember]] = 1200;
			MFrakCD[BizzInfo[b][bMafia]] = 1200;
			ZoneID = params[0];
			ZoneTimer = 1200;
			if(ZoneID == 1) ZoneWar = GangZoneCreate(208.99609375, 2479.546875, 357.99609375, 2551.546875); // Заброшка
			else if(ZoneID == 2) ZoneWar = GangZoneCreate(286.9487,871.2994,402.0977,926.5380); // Карьер ЛВ
			else if(ZoneID == 3) ZoneWar = GangZoneCreate(-1889.1348,-1751.2496, -1830.0239, -1560.2955); // Карьер СФ
			printf("GangZoneCrete [MafiaWar GZ] [ID: %i]",ZoneWar);
			if(playerss == 0) ZoneTimer = 3,CountOnZone[BizzInfo[b][bCapture]] = 9999;
			MzCheckTimer = SetTimer("MzCheck", 1000,1);
			CountOnZone[BizzInfo[b][bMafia]] = 0;
			CountOnZone[pData[playerid][pMember]] = 0;
		}
	}
	return true;
}

CMD:kiss(playerid, params[])
{
	if(!dostup[playerid]) return true;
	if(pData[playerid][pState]!=PLAYER_STATE_ONFOOT) return true;
	params[0]= GetClosestforeach(playerid);
	if(!ProxDetectorS(4.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, " Нет никого рядом");
	SetPosInFrontOfPlayer(playerid,params[0],1);
	new Float:a;GetPlayerFacingAngle(playerid,a);
	SetPlayerFacingAngle(params[0],180+a);
	ApplyAnimation(params[0], "BD_FIRE", "GRLFRD_KISS_03",4.0,0,0,0,0,0,1);
	ApplyAnimation(playerid, "BD_FIRE", "PLAYA_KISS_03",4.0,0,0,0,0,0,1);
	return true;
}
CMD:pee(playerid, params[])
{
	if(!dostup[playerid]) return true;
	if(pData[playerid][pState]!=PLAYER_STATE_ONFOOT) return true;
	SetPlayerSpecialAction(playerid, 68);
	return true;
}
CMD:bizlist(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(!IsAMafia(playerid)) return SCM(playerid,COLOR_GREY," Вам недоступна данная команда");
	new strrr[1000];
	new null;
	for(new h = 1; h <= TotalBizz; h++) if(BizzInfo[h][bMafia] == pData[playerid][pMember]) null++, format(YCMDstr, sizeof(YCMDstr), " [%i] %s\n",null, BizzInfo[h][bMessage]), strcat(strrr, YCMDstr);
	if (strlen(strrr) > 1) ShowPlayerDialog(playerid, 11349, 2, "Завоёванные бизнесы", strrr, "Закрыть", "");
	else SCM(playerid,-1,"Нет бизнесов");
	return true;
}
CMD:bizmafia(playerid, params[])
{
	if(!pData[playerid][pLogin]) return true;
	if(!BGet(playerid)) return SCM(playerid, COLOR_GRAD2, " У вас нет бизнеса!");
	new bouse = pData[playerid][pPBizzKey];
	if(BizzInfo[bouse][bMafia]) return SCM(playerid,COLOR_GREY," Бизнес уже крышуют!");
	if(sscanf(params, "d", params[0]))
	{
		SCM(playerid, COLOR_WHITE, " Введите: /bizmafia [мафия]");
		return SCM(playerid, COLOR_WHITE," 0 - Yakuza | 1 - RM | 2 - LCN");
	}
	switch (params[0])
	{
	case 0: BizzInfo[bouse][bMafia] = 6, SCM(playerid,  COLOR_WHITE, " Крыша бизнеса - Yakuza");
	case 1: BizzInfo[bouse][bMafia] = 14, SCM(playerid,  COLOR_WHITE, " Крыша бизнеса - RM");
	case 2: BizzInfo[bouse][bMafia] = 5, SCM(playerid,  COLOR_WHITE, " Крыша бизнеса - LCN");
	default: SCM(playerid, COLOR_GREY,"Неверное значение");
	}
	return true;
}
CMD:bizenterc(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(!IsPlayerConnected(playerid)) return true;
	if(!BGet(playerid)) return SCM(playerid, COLOR_GRAD2, " У вас нет бизнеса!");
	new bouse = pData[playerid][pPBizzKey];
	if(BizzInfo[bouse][bType] != 1) return SCM(playerid,COLOR_GREY," Данная команда доступна только владельцам клубов/баров");
	if(sscanf(params, "d", params[0])) return	SCM(playerid, COLOR_WHITE, " Введите: /bizenterc [цена входа]");
	if(params[0] < 100 || params[0] > 9999)  return SCM(playerid, COLOR_GREY, " Минимальная цена 100, максимальная 9999 вирт");
	BizzInfo[bouse][bEntranceCost] = params[0];
	UpdateBizz(bouse);
	format(cString, 32, "Плата за вход %i вирт.", BizzInfo[bouse][bEntranceCost]);
	SCM(playerid, COLOR_WHITE, cString);
	return true;
}
CMD:bizwithdraw(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(!IsPlayerConnected(playerid)) return true;
	if(!BGet(playerid))  return SCM(playerid, COLOR_GRAD2, " У вас нет бизнеса!");
	new bouse = pData[playerid][pPBizzKey];
	if(sscanf(params, "d", params[0]))
	{
		format(cString, 32,  "На счету бизнеса %i вирт", BizzInfo[bouse][bTill]);
		SCM(playerid, COLOR_GRAD3, cString);
		return SCM(playerid, COLOR_WHITE, " Введите: /bizwithdraw [сумма]");
	}
	if(params[0] > BizzInfo[bouse][bTill] || params[0] < 1)  return SCM(playerid, COLOR_GRAD2, " На счету бизнеса нет столько денег!");
	if (!PlayerToPoint(100, playerid,BizzInfo[bouse][bEntranceX],BizzInfo[bouse][bEntranceY],BizzInfo[bouse][bEntranceZ]))
	{
		SCM(playerid, COLOR_GRAD2, " Вам нужно быть возле бизнеса!");
		return true;
	}
	else
	{
		pData[playerid][pCash] +=params[0];
		BizzInfo[bouse][bTill] -= params[0];
		format(cString, 64, "Вы сняли %i вирт со счёта вашего бизнеса. Остаток: %i вирт ",params[0],BizzInfo[bouse][bTill]);
		SCM(playerid, 0x6495EDFF, cString);
		return true;
	}
}
CMD:getbizstats(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	new bizz[40];
	if(sscanf(params, "s[40]", bizz)) return SCM(playerid,COLOR_WHITE," Введите: /getbizstats [название]");
	for(new h = 1; h <= TotalBizz; h++)
	{
		if(PlayerToPoint(3.0, playerid,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]) && !strcmp(bizz,BizzInfo[h][bMessage],true)) return PrintBizInfo(playerid,h);
	}
	return SCM(playerid,COLOR_GREY," Вы должны находиться возле бизнеса / неверное название бизнеса");
}
CMD:getcampos(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(!IsPlayerConnected(playerid)) return true;
	if(pData[playerid][pAdmin] < 8 || dostup[playerid] == 0) return true;
	new Float:x1,Float:y1,Float:z1;
	GetPlayerCameraLookAt(playerid,x1,y1,z1);
	format(cString, 64, "GetPlayerCameraLookAt %f,%f,%f",x1,y1,z1);
	SCM(playerid,COLOR_GREY,cString);
	GetPlayerCameraPos(playerid,x1,y1,z1);
	format(cString, 64, "GetPlayerCameraPos %f,%f,%f",x1,y1,z1);
	SCM(playerid,COLOR_GREY,cString);
	return true;
}
CMD:spwcar(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(!IsPlayerConnected(playerid)) return true;
	if(pData[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /spwcar [id]");
	SetVehicleToRespawn(params[0]);
	return true;
}
CMD:endlesson(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(TakingLesson[playerid] == 0) return SCM(playerid, COLOR_GRAD1, " Вы не начинали урок");
	LessonCar[playerid] = 0;
	LessonStat[playerid] = 0;
	TakingLesson[playerid] = 0;
	RemovePlayerFromVehicle(playerid);
	return true;
}
CMD:bizstats(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(!IsPlayerConnected(playerid)) return true;
	if(!BGet(playerid)) return SCM(playerid, COLOR_GREY, " У вас нет бизнеса!");
	PrintBizInfo(playerid,pData[playerid][pPBizzKey]);
	return true;
}
CMD:bizlock(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	for(new i = 1; i <= TotalBizz; i++)
	{
		if(PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
		{
			if(pData[playerid][pMember] == 2 && pData[playerid][pRank] >= 3 || BizzInfo[i][bMafia] == pData[playerid][pMember] && pData[playerid][pRank] > 7)
			{
				if(BizzInfo[i][bLocked] == 1)
				{
					BizzInfo[i][bLocked] = 0;
					SCM(playerid, COLOR_GRAD1, " Вы открыли бизнес");
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					return true;
				}
				if(BizzInfo[i][bLocked] == 0)
				{
					BizzInfo[i][bLocked] = 1;
					SCM(playerid, COLOR_GRAD1, " Вы закрыли бизнес");
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					return true;
				}
			}
			else if(pData[playerid][pPBizzKey] == i)
			{
				if(BizzInfo[i][bLockTime] == 0) return SCM(playerid, COLOR_GREY, " Бизнес уже открыт!");
				if(BizzInfo[i][bProducts] <= 0 || BizzInfo[i][bLicense] == 0) return SCM(playerid, COLOR_GREY, " В бизнесе нет продуктов или нет лицензии!");
				BizzInfo[i][bLocked] = 0;
				BizzInfo[i][bLockTime] = 0;
				SCM(playerid, COLOR_LIGHTRED, " Вы открыли бизнес. Всегда следите за состоянием продуктов и лицензией");
				SCM(playerid, COLOR_LIGHTRED, " В противном случае вы можете потерять бизнес");
			}
		}
	}
	return true;
}

CMD:buyhouse(playerid)
{
	if(!GetPVarInt(playerid, !#pPickHouseId))return 1;

	new h = (GetPVarInt(playerid, !#pPickHouseId)-1);

	if(pData[playerid][pBank] < HouseInfo[h][hValue]) 
		return SCM(playerid,COLOR_GREY," Недостаточно денег для покупки!");

	if(pData[playerid][pPHouseKey] != INVALID_HOUSE_ID) 
		return SCM(playerid,COLOR_GREY," У вас уже есть дом!");

	if(strcmp(HouseInfo[h][hOwner],"None",true) == 0)
	{
		pData[playerid][pPHouseKey] = h;
		SetAccountInfo(playerid, HouseInfo[h][hID], "pPHouseKey");
		
		strmid(HouseInfo[h][hOwner],pData[playerid][pName], 0, strlen(pData[playerid][pName]), 24);
		
		pData[playerid][pBank] -= HouseInfo[h][hValue];
		SetAccountInfo(playerid, pData[playerid][pBank], "pBank");
		pData[playerid][pSpawnChange] = 1;
		SetAccountInfo(playerid, pData[playerid][pSpawnChange], "pSpawnChange");

		SCM(playerid, COLOR_WHITE, " Поздравляем с покупкой!");
		format(cString, sizeof(cString), " Внимание! Теперь каждый час со счёта вашего дома будут снимать комунальные платежи в размере %i вирт",GetHouseOplata(h));
		SCM(playerid, COLOR_YELLOW,cString);
		SCM(playerid, COLOR_YELLOW, " Если на счету недостаточно денег, вас выселят");
		SCM(playerid, COLOR_YELLOW, " Пополнить домашний счёт или узнать баланс можно через банк/банкомат (помощь: /mm -> Помощь по игре -> Команды сервера)");
		GameTextForPlayer(playerid,"~w~welcome home~n~print:~g~/exit", 5000, 3);

		BuyHouse(h);
		new str_buy_house[213];
		mysql_format(DATABASE, str_buy_house, sizeof str_buy_house, "UPDATE `"TABLE_HOUSE"` SET `hOwner`='%e' WHERE hID = %d",Name(playerid), HouseInfo[h][hID]);
		mysql_query(DATABASE, str_buy_house, false);

		SpawnHouseCars(playerid);
		return true;
	}
	return true;
}
CMD:sellprodsone(playerid)
{
	if(car_prods[GetPlayerVehicleID(playerid)][3] <= 0) return SCM(playerid,COLOR_GREY," В автомобиле нет продуктов!");
	for(new bizz = 1; bizz <= TotalBizz; bizz++)
	{
		if(PlayerToPoint(5.0, playerid, BizzInfo[bizz][bEntranceX], BizzInfo[bizz][bEntranceY], BizzInfo[bizz][bEntranceZ]) && BizzInfo[bizz][bType] == 1)
		{
			new newcar = GetPlayerVehicleID(playerid);
			if(newcar >= comptruck[4] && newcar <= comptruck[9])
			{
				if(strcmp(BizzInfo[bizz][bOwner],"None",true) == 0) return SCM(playerid,COLOR_GREY," У бизнеса нет владельца");
				SetPVarInt(playerid, "bizz", bizz);
				new null = 0;
				if(BizzInfo[bizz][bProducts]+car_prods[GetPlayerVehicleID(playerid)][3] > BizzMaxProds[bizz]) null = BizzMaxProds[bizz]-BizzInfo[bizz][bProducts];
				else null = car_prods[GetPlayerVehicleID(playerid)][3];
				format(string,256,"Вы собираетесь продать продукты\n\n{15B5B8}Бизнес: %s\n{FFD500}Количество: %d\n{E51212}Стоимость: %d вирт",BizzInfo[bizz][bMessage],null,null*16);
				return ShowPlayerDialog(playerid,1387,DIALOG_STYLE_MSGBOX,"Продажа продуктов",string,"Продать","Отмена");
			}
			else return SCM(playerid,COLOR_GREY," Нужно быть в транспортном средстве, которое может перевозить данный тип груза");
		}
	}
	return true;
}
CMD:sellprodstwo(playerid)
{
	if(car_prods[GetPlayerVehicleID(playerid)][3] <= 0) return SCM(playerid,COLOR_GREY," В автомобиле нет продуктов!");
	for(new bizz = 1; bizz <= TotalBizz; bizz++)
	{
		if(PlayerToPoint(5.0, playerid, BizzInfo[bizz][bEntranceX], BizzInfo[bizz][bEntranceY], BizzInfo[bizz][bEntranceZ]) && BizzInfo[bizz][bType] == 2)
		{
			new newcar = GetPlayerVehicleID(playerid);
			if(newcar >= comptruck[4] && newcar <= comptruck[9])
			{
				if(strcmp(BizzInfo[bizz][bOwner],"None",true) == 0) return SCM(playerid,COLOR_GREY," У бизнеса нет владельца");
				SetPVarInt(playerid, "bizz", bizz);
				new null = 0;
				if(BizzInfo[bizz][bProducts]+car_prods[GetPlayerVehicleID(playerid)][3] > BizzMaxProds[bizz]) null = BizzMaxProds[bizz]-BizzInfo[bizz][bProducts];
				else null = car_prods[GetPlayerVehicleID(playerid)][3];
				format(string,256,"Вы собираетесь продать продукты\n\n{15B5B8}Бизнес: %s\n{FFD500}Количество: %d\n{E51212}Стоимость: %d вирт",BizzInfo[bizz][bMessage],null,null*16);
				return ShowPlayerDialog(playerid,1388,DIALOG_STYLE_MSGBOX,"Продажа продуктов",string,"Продать","Отмена");
			}
			else return SCM(playerid,COLOR_GREY," Нужно быть в транспортном средстве, которое может перевозить данный тип груза");
		}
	}
	return true;
}
CMD:sellprodsthree(playerid)
{
	if(car_prods[GetPlayerVehicleID(playerid)][2] <= 0) return SCM(playerid,COLOR_GREY," В автомобиле нет продуктов!");
	for(new bizz = 1; bizz <= TotalBizz; bizz++)
	{
		if(PlayerToPoint(5.0, playerid, BizzInfo[bizz][bEntranceX], BizzInfo[bizz][bEntranceY], BizzInfo[bizz][bEntranceZ]) && BizzInfo[bizz][bType] == 3)
		{
			new newcar = GetPlayerVehicleID(playerid);
			if(newcar >= comptruck[4] && newcar <= comptruck[9])
			{
				if(strcmp(BizzInfo[bizz][bOwner],"None",true) == 0) return SCM(playerid,COLOR_GREY," У бизнеса нет владельца");
				SetPVarInt(playerid, "bizz", bizz);
				new null = 0;
				if(BizzInfo[bizz][bProducts]+car_prods[GetPlayerVehicleID(playerid)][2] > BizzMaxProds[bizz]) null = BizzMaxProds[bizz]-BizzInfo[bizz][bProducts];
				else null = car_prods[GetPlayerVehicleID(playerid)][2];
				format(string,256,"Вы собираетесь продать Товары\n\n{15B5B8}Бизнес: %s\n{FFD500}Количество: %d\n{E51212}Стоимость: %d вирт",BizzInfo[bizz][bMessage],null,null*16);
				return ShowPlayerDialog(playerid,1389,DIALOG_STYLE_MSGBOX,"Продажа продуктов",string,"Продать","Отмена");
			}
			else return SCM(playerid,COLOR_GREY," Нужно быть в транспортном средстве, которое может перевозить данный тип груза");
		}
	}
	return true;
}
CMD:sellprodsfour(playerid)
{
	if(car_prods[GetPlayerVehicleID(playerid)][1] <= 0) return SCM(playerid,COLOR_GREY," В автомобиле нет продуктов!");
	for(new bizz = 1; bizz <= TotalBizz; bizz++)
	{
		if(PlayerToPoint(5.0, playerid, BizzInfo[bizz][bEntranceX], BizzInfo[bizz][bEntranceY], BizzInfo[bizz][bEntranceZ]) && BizzInfo[bizz][bType] == 4)
		{
			new newcar = GetPlayerVehicleID(playerid);
			if(newcar >= comptruck[2] && newcar <= comptruck[3])
			{
				if(strcmp(BizzInfo[bizz][bOwner],"None",true) == 0) return SCM(playerid,COLOR_GREY," У бизнеса нет владельца");
				SetPVarInt(playerid, "bizz", bizz);
				new null = 0;
				if(BizzInfo[bizz][bProducts]+car_prods[GetPlayerVehicleID(playerid)][1] > BizzMaxProds[bizz]) null = BizzMaxProds[bizz]-BizzInfo[bizz][bProducts];
				else null = car_prods[GetPlayerVehicleID(playerid)][1];
				format(string,256,"Вы собираетесь продать топливо\n\n{15B5B8}Бизнес: %s\n{FFD500}Количество: %d\n{E51212}Стоимость: %d вирт",BizzInfo[bizz][bMessage],null,null*16);
				return ShowPlayerDialog(playerid,1390,DIALOG_STYLE_MSGBOX,"Продажа продуктов",string,"Продать","Отмена");
			}
			else return SCM(playerid,COLOR_GREY," Нужно быть в транспортном средстве, которое может перевозить данный тип груза");
		}
	}
	return true;
}
CMD:selltune(playerid)
{
	if(pData[playerid][pLogin] == false) return true;
	if(!WGet(playerid)) return SCM(playerid,COLOR_GREY," Вы не владеете автомастерской!");
	new i = GetPVarInt(playerid,"wShop");
	if(!PlayerToPoint(5.0, playerid, WorkshopInfo[i][wEntr][0], WorkshopInfo[i][wEntr][1], WorkshopInfo[i][wEntr][2])) return SCM(playerid,COLOR_GREY," Необходимо находиться возле автомастерской!");
	pData[playerid][pBank] += WorkshopInfo[i][wBank]+WorkshopInfo[i][wLandTax];
	format(string,40,"~w~workshop in sold~n~~g~$%i",WorkshopInfo[i][wBank]+WorkshopInfo[i][wLandTax]);
	GameTextForPlayer(playerid,string, 5000, 3);
	strmid(WorkshopInfo[i][wOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(WorkshopInfo[i][wDeputy1],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(WorkshopInfo[i][wDeputy2],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(WorkshopInfo[i][wDeputy3],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(WorkshopInfo[i][wMechanic1],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(WorkshopInfo[i][wMechanic2],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(WorkshopInfo[i][wMechanic3],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(WorkshopInfo[i][wMechanic4],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(WorkshopInfo[i][wMechanic5],"None",0,strlen("None"),MAX_PLAYER_NAME);
	WorkshopInfo[i][wAuction][0] = 0;
	WorkshopInfo[i][wAuction][1] = 0;
	WorkshopInfo[i][wAuction][2] = 0;
	WorkshopInfo[i][wAuction][3] = 0;
	WorkshopInfo[i][wAuction][4] = 0;
	WorkshopInfo[i][wLandTax] = 0;
	WorkshopInfo[i][wBank] = 0;
	WorkshopInfo[i][wProds] = 0;
	WorkshopInfo[i][wPriceProds] = 50;
	WorkshopInfo[i][wZp] = 5;
	DeletePVar(playerid,"wShop");
	return SendMes(playerid,0x4B00B0AA,"Бизнес СТО [%i] выставлен на аукцион!",i-1);
}
CMD:sellfarm(playerid)
{
	if(pData[playerid][pLogin] == false) return true;
	if(!FGet(playerid)) return SCM(playerid,COLOR_GREY," Вы не владеете фермой!");
	new i = pData[playerid][pPFarmKey];
	if(GetPVarInt(playerid,"farm_id") == i) return SCM(playerid,COLOR_GREY," Для начала переоденьтесь!");
	if(!PlayerToPoint(10.0, playerid, FarmInfo[i][fMenu][0], FarmInfo[i][fMenu][1], FarmInfo[i][fMenu][2])) return SCM(playerid,COLOR_GREY," Необходимо находиться возле фермы!");
	pData[playerid][pBank] += FarmInfo[i][fBank]+FarmInfo[i][fLandTax];
	format(string,40,"~w~farm in sold~n~~g~$%i",FarmInfo[i][fBank]+FarmInfo[i][fLandTax]);
	GameTextForPlayer(playerid,string, 5000, 3);
	strmid(FarmInfo[i][fOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(FarmInfo[i][fDeputy_1],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(FarmInfo[i][fDeputy_2],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(FarmInfo[i][fDeputy_3],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(FarmInfo[i][fFarmer_1],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(FarmInfo[i][fFarmer_2],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(FarmInfo[i][fFarmer_3],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(FarmInfo[i][fFarmer_4],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(FarmInfo[i][fFarmer_5],"None",0,strlen("None"),MAX_PLAYER_NAME);
	FarmInfo[i][fAuction][0] = 0;
	FarmInfo[i][fAuction][1] = 0;
	FarmInfo[i][fAuction][2] = 0;
	FarmInfo[i][fAuction][3] = 0;
	FarmInfo[i][fAuction][4] = 0;
	FarmInfo[i][fLandTax] = 0;
	FarmInfo[i][fBank] = 0;
	FarmInfo[i][fProds] = 0;
	FarmInfo[i][fZp] = 30;
	FarmInfo[i][fGrain_Price] = 5;
	FarmInfo[i][fGrain] = 0;
	FarmInfo[i][fGrain_Sown] = 0;
	FarmInfo[i][fProds_Selling] = 1;
	FarmInfo[i][fProds_Price] = 21;
	pData[playerid][pPFarmKey] = 0;
	return SendMes(playerid,0x4B00B0AA,"Бизнес Ферма [%i] выставлен на аукцион!",i-1);
}
CMD:healaddict(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	else if(pData[playerid][pMember] != 4 && pData[playerid][pMember] != 22 && pData[playerid][pMember] != 33) return SCM(playerid,COLOR_GREY," Вы не медик!");
	else if(sscanf(params, "u", params[0]))  return SCM(playerid, COLOR_WHITE, " Введите: /healaddict [id/name]");
	else if(!IsPlayerConnected(params[0])) return true;
	else if(params[0] == INVALID_PLAYER_ID) return true;
	else if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, " Игрок должен находиться рядом с вами");
	else if(!PlayerToPoint(40.0,playerid,366.9755,-60.1330,1076.4773) && !PlayerToPoint(40.0,playerid,366.9755,-60.1330,1076.4773)) return true;
	else if(seans[params[0]] == 1)return SCM(playerid,COLOR_GREEN, " Следущий сеанс можно провести через час");
	else if(pData[params[0]][pAddiction] <1000)return SCM(playerid,COLOR_GREEN, " У пациента меньше чем 1000 зависимости");
	else if(params[0] == playerid)return SCM(playerid,COLOR_GRAD1, " [Ошибка]  Вы указали свой ID");
	
	pData[params[0]][pAddiction] -= 500;
	format(cString,sizeof(cString), "Медик %s провёл с вами сеанс от наркозависимости",pData[playerid][pName]);
	SCM(params[0],COLOR_GREEN,cString);
	format(cString,sizeof(cString), "Вы провели сеанс от наркозависимости с %s",Name(params[0]));
	SCM(playerid,COLOR_GREEN,cString);
	seans[params[0]] = 1;
	pData[params[0]][pNarcoLomka] = 0;
	SetAccountInfo(playerid, pData[playerid][pNarcoLomka], "pNarcoLomka");
	return true;
}
CMD:usedrugs(playerid, params[])
{
	if(!pData[playerid][pLogin]) return true;
	if(pData[playerid][pDuelIDP] != -1) return SCM(playerid,COLOR_GREY," Нельзя использовать во время дуэлей");
	if(sscanf(params, "i", params[0])) params[0] = 5;

	if(pData[playerid][pDrugs] < params[0]) return SCM(playerid, COLOR_GREY," Недостаточно наркотиков");
	if(!(1 <= params[0] <= 15)) return SCM(playerid,COLOR_GREY," Не более 15 грамм");
	new Float:health;
	GetPlayerHealth(playerid, health);

	if(pData[playerid][pAddiction] < 2000 && health+ 10.0*params[0] > 120)
	{
		if(GetPVarInt(playerid,"drug_time") < gettime()) SCM(playerid,COLOR_WHITE," (( Здоровье пополнено до: 120 ))"), SetPlayerHealth(playerid,120);
		else SCM(playerid,COLOR_WHITE," (( Здоровье можно пополнить не чаще, чем раз в минуту ))");
		SetPlayerTime(playerid,17,0);
		SetPlayerWeather(playerid, -67);
		SetTimerEx("AddictionTimer", 20000, false, "i", playerid);
	}
	else if(pData[playerid][pAddiction] < 5000 && health+ 10.0*params[0] > 140)
	{
		if(GetPVarInt(playerid,"drug_time") < gettime()) SCM(playerid,COLOR_WHITE," (( Здоровье пополнено до: 140 ))"), SetPlayerHealth(playerid,140);
		else SCM(playerid,COLOR_WHITE," (( Здоровье можно пополнить не чаще, чем раз в минуту ))");
	}
	else if(pData[playerid][pAddiction] > 5000 && health+10.0*params[0] > 160)
	{
		if(GetPVarInt(playerid,"drug_time") < gettime()) SCM(playerid,COLOR_WHITE," (( Здоровье пополнено до: 160 ))"), SetPlayerHealth(playerid,160);
		else SCM(playerid,COLOR_WHITE," (( Здоровье можно пополнить не чаще, чем раз в минуту ))");
	}
	else
	{
		if(GetPVarInt(playerid,"drug_time") < gettime()) SendMes(playerid,COLOR_WHITE," (( Здоровье пополнено до: %.0f ))",health+10*params[0]), SetPlayerHealth(playerid, health + 10.0*params[0]);
		else SCM(playerid,COLOR_WHITE," (( Здоровье можно пополнить не чаще, чем раз в минуту ))");
		if(pData[playerid][pAddiction] < 2000)
		{
			SetPlayerTime(playerid,17,0);
			SetPlayerWeather(playerid, -68);
			SetTimerEx("AddictionTimer", 10000, false, "i", playerid);
		}
	}
	pData[playerid][pNarcoLomka] = 1;
	if(GetPVarInt(playerid,"drug_time") < gettime())
	{
		switch(booston)
		{
		case 0:SetPVarInt(playerid,"drug_time", gettime() + 60);
		default:SetPVarInt(playerid,"drug_time", gettime() + 30);
		}
	}
	pData[playerid][pDrugs] -= params[0];
	SendMes(playerid,COLOR_WHITE," (( Остаток: %i грамм ))",pData[playerid][pDrugs]);
	if(PlayerCuffed[playerid] == 0 && pData[playerid][pState] == PLAYER_STATE_ONFOOT) ApplyAnimation(playerid,"SMOKING","M_smk_drag",4.1,0,0,0,0,0,1);
	SetPlayerChatBubble(playerid,"употребил(a) наркотик",COLOR_PURPLE,30.0,10000);
	format(cString,64, " %s употребил(a) наркотик",pData[playerid][pName]);
	ProxDetector(10.0, playerid,cString, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	pData[playerid][pAddiction] += 4*params[0];
	if(startaddiction[playerid] == 1)
	{
		startaddiction[playerid] = 0;
		if(PlayerCuffed[playerid] == 0 && pData[playerid][pState] == PLAYER_STATE_ONFOOT) ApplyAnimation(playerid,"SMOKING","M_smk_drag",4.1,0,0,0,0,0,1);
		pData[playerid][pNarcoLomka] = 1;
	}
	SetAccountInfo(playerid, pData[playerid][pNarcoLomka], "pNarcoLomka");
	return true;
}
CMD:gunlist(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(!IsAGang(playerid)) return true;
	ShowPlayerDialog(playerid,8321,DIALOG_STYLE_MSGBOX, "Cписок оружия", "\tИмя\t\t материалов за патрон\t\t материалов за обойму\n__________________________________________________________________\n\n[ID: 23] Sdpistol\t\t1м\t\t\t\t15м\n[ID: 24] Deagle\t\t\t3м\t\t\t\t21м\n[ID: 25] Shotgun\t\t3м\t\t\t\t-\n[ID: 29] SMG\t\t\t2м\t\t\t\t60м\n[ID: 30] AK-47\t\t\t3м\t\t\t\t90м\n[ID: 31] M4A1\t\t\t3м\t\t\t\t150м\n[ID: 33] Rifle\t\t\t5м\t\t\t\t-", "Закрыть", "");
	return true;
}
CMD:sellgun(playerid, params[])
{
	if(!IsAGang(playerid)) return SendClientMessage(playerid,COLOR_GREY,"Вам недоступна данная команда!");
	new ret = 0;
	for(new i = 1; i <= TOTALGZ; i++) // roflo checker
		if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) && GZInfo[i][gFrakVlad] == pData[playerid][pMember])
		{
			ret++;
			break;
		}

	if(ret == 0)
		return SCM(playerid, COLOR_GREY, " Вы должны находиться на своей территории");

	new gunname[22];
	if(sscanf(params, "s[18]ddu",gunname,params[0],params[1],params[2]))
	{
		SendClientMessage(playerid, COLOR_WHITE,"Введите: /sellgun [название оружия] [патроны] [цена] [playerid]");
		SendClientMessage(playerid, COLOR_WHITE,"Введите: /gunlist - название оружия и расходы материалов");
		return true;
	}
	else if(pData[playerid][pMats] < 3*params[0]) return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно материалов!");
	else if(params[1] > 50000 || params[1] < 4 || params[0] < 0 || params[0] > 100) return SendClientMessage(playerid,COLOR_GREY,"Неверная цена/патроны");
	else if(!ProxDetectorS(5.0, playerid, params[2])) return SendClientMessage(playerid, COLOR_GREY, "Человек должен быть рядом с вами");
	else if(strcmp(gunname,"sdpistol", true) == 0) SetPVarInt(params[2],"Sell_Gun",23);
	else if(strcmp(gunname,"deagle", true) == 0) SetPVarInt(params[2],"Sell_Gun",24);
	else if(strcmp(gunname,"shotgun", true) == 0) SetPVarInt(params[2],"Sell_Gun",25);
	else if(strcmp(gunname,"smg", true) == 0) SetPVarInt(params[2],"Sell_Gun",29);
	else if(strcmp(gunname,"ak47", true) == 0) SetPVarInt(params[2],"Sell_Gun",30);
	else if(strcmp(gunname,"m4", true) == 0) SetPVarInt(params[2],"Sell_Gun",31);
	else if(strcmp(gunname,"rifle", true) == 0) SetPVarInt(params[2],"Sell_Gun",33);
	else return SendClientMessage(playerid,COLOR_GREY,"Неизвестное оружие");
	if(playerid == params[2])
	{
		if(booston == 0) GivePlayerWeaponEx(playerid,GetPVarInt(params[2],"Sell_Gun"),params[0]);
		else GivePlayerWeaponEx(playerid,GetPVarInt(params[2],"Sell_Gun"),params[0]*3);
		pData[playerid][pMats] -= 3*params[0];
		format(cString, 64, " %s сделал себе оружие из материалов",pData[playerid][pName]);
		ProxDetector(10.0, playerid, cString, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		return true;
	}
	SetPVarInt(params[2],"Sell_GunMats",3*params[0]);
	SetPVarInt(params[2],"Sell_GunId",playerid);
	SetPVarInt(params[2],"Sell_GunAmmo",params[0]);
	SetPVarInt(params[2],"Sell_GunPrice",params[1]);
	SendMes(params[2],COLOR_BLUE, "%s предлагает вам купить оружие %s за %i вирт. Патроны: %i",pData[playerid][pName],gunname,params[1],params[0]);
	SendClientMessage(params[2],COLOR_BLUE,"Введите: /accept gun для покупки оружия");
	SendClientMessage(playerid, 0x6495EDFF, "Вы предложили купить оружие!");
	return true;
}
CMD:getgun(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(!PlayerToPoint(5.0,playerid,1258.4004,-791.0316,1084.0078) && !PlayerToPoint(5.0,playerid,775.8078,-465.3459,1428.1820)) 
		return SCM(playerid, COLOR_GREY, " Вы должны находиться у барной стойки");
	new mafia;
	switch(pData[playerid][pMember])
	{
	case 5: mafia = 0;
	case 6: mafia = 1;
	case 14: mafia = 2;
	}
	if(sscanf(params, "d",params[0]))
	{
		switch(pData[playerid][pMember])
		{
		case 5,6,14:
			{
				if(warelock2[mafia]) return SCM(playerid, COLOR_GREY,"Склад закрыт");
				if(pData[playerid][pRank] < 3) return SCM(playerid,COLOR_GRAD1, " Оружие можно взять с 3 ранга!");
				getgunsid[playerid] = playerid,SCM(playerid,COLOR_WHITE," Вы можете использовать:{00BF00} /getgun [ид игрока] {ffffff},чтобы выдать оружие другим членам организации");
			}
		default: return true;
		}
		new listitems[] = " [1] Deagle\t[70 материалов/50 патронов]\n [2] Shotgun\t[50 материалов/15 патронов]\n [3] Rifle\t[100 материалов/10 патронов]\n [4] M4\t\t[500 материалов/100 патронов]\n [5] AK-47\t[500 материалов/100 патронов]\n [6] MP5\t[400 материалов/200 патронов]\n [7] SDPistol\t[100 материалов/100 патронов])";
		switch(pData[playerid][pMember])
		{
		case 5: ShowPlayerDialog(playerid, 2014, DIALOG_STYLE_LIST, "Взять оружие со склада LCN", listitems, "Выбрать", "Отмена");
		case 6: ShowPlayerDialog(playerid, 2013, DIALOG_STYLE_LIST, "Взять оружие со склада Yakuza", listitems, "Выбрать", "Отмена");
		case 14: ShowPlayerDialog(playerid, 2015, DIALOG_STYLE_LIST, "Взять оружие со склада Russian Mafia", listitems, "Выбрать", "Отмена");
		case 24: ShowPlayerDialog(playerid, 2017, DIALOG_STYLE_LIST, "Взять оружие со склада Mongols MC", listitems, "Выбрать", "Отмена");
		case 26: ShowPlayerDialog(playerid, 2019, DIALOG_STYLE_LIST, "Взять оружие со склада Warlocks MC", listitems, "Выбрать", "Отмена");
		case 29: ShowPlayerDialog(playerid, 2022, DIALOG_STYLE_LIST, "Взять оружие со склада Pagans MC", listitems, "Выбрать", "Отмена");
		}
		return true;
	}
	switch(pData[playerid][pMember])
	{
	case 5,6,14:
		{
			if(warelock2[mafia]) return SCM(playerid, COLOR_GREY,"Склад закрыт");
			if(pData[playerid][pRank] < 6) return SCM(playerid,COLOR_GRAD1, " Оружие можно выдать с 6 ранга!");
			if(!ProxDetectorS(8.0, params[0], playerid)) return SCM(playerid,COLOR_GREY," Игрок должен находиться рядом с вами!");
			getgunsid[playerid] = params[0];
		}
	default: return true;
	}
	new listitems[] = " [1] Deagle\t[70 материалов/50 патронов]\n [2] Shotgun\t[50 материалов/15 патронов]\n [3] Rifle\t[100 материалов/10 патронов]\n [4] M4\t\t[500 материалов/100 патронов]\n [5] AK-47\t[500 материалов/100 патронов]\n [6] MP5\t[400 материалов/200 патронов]\n [7] SDPistol\t[100 материалов/100 патронов])";
	switch(pData[playerid][pMember])
	{
	case 5: ShowPlayerDialog(playerid, 2014, DIALOG_STYLE_LIST, "Взять оружие со склада LCN", listitems, "Выбрать", "Отмена");
	case 6: ShowPlayerDialog(playerid, 2013, DIALOG_STYLE_LIST, "Взять оружие со склада Yakuza", listitems, "Выбрать", "Отмена");
	case 14: ShowPlayerDialog(playerid, 2015, DIALOG_STYLE_LIST, "Взять оружие со склада Russian Mafia", listitems, "Выбрать", "Отмена");
	case 24: ShowPlayerDialog(playerid, 2017, DIALOG_STYLE_LIST, "Взять оружие со склада Mongols MC", listitems, "Выбрать", "Отмена");
	case 26: ShowPlayerDialog(playerid, 2019, DIALOG_STYLE_LIST, "Взять оружие со склада Warlocks MC", listitems, "Выбрать", "Отмена");
	case 29: ShowPlayerDialog(playerid, 2022, DIALOG_STYLE_LIST, "Взять оружие со склада Pagans MC", listitems, "Выбрать", "Отмена");
	}
	return true;
}
CMD:bbank(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(!IsPlayerConnected(playerid)) return true;
	if(pData[playerid][pMember] == 24 || pData[playerid][pMember] == 26 || pData[playerid][pMember] == 29)
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /bbank [количество]");
	if(pData[playerid][pCash] < params[0]) { SCM(playerid, COLOR_GREY, " У вас нет столько денег!"); return true; }
	if(params[0] > 100000000 || params[0] < 1) { SCM(playerid, COLOR_GREY, " Неправильный количество денег!"); return true; }
	switch(pData[playerid][pMember])
	{
	case 24:
		{
			FracBank[0][fHamc] += params[0];
			pData[playerid][pCash] -= params[0];
			format(cString, sizeof(cString), " Вы положили в банк Mongols MC: %i вирт", params[0]);
			SCM(playerid, 0x6BB3FFAA, cString);
		}
	case 26:
		{
			FracBank[0][fWmc] += params[0];
			pData[playerid][pCash] -= params[0];
			format(cString, sizeof(cString), " Вы положили в банк Warlocks MC: %i вирт",params[0]);
			SCM(playerid, 0x6BB3FFAA, cString);
		}
	case 29:
		{
			FracBank[0][fPmc] += params[0];
			pData[playerid][pCash] -= params[0];
			format(cString, sizeof(cString), " Вы положили в банк Pagans MC: %i вирт", params[0]);
			SCM(playerid, 0x6BB3FFAA, cString);
		}
	}
	return true;
}
CMD:bwithdraw(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pLeader] == 23 || pData[playerid][pLeader] == 24 || pData[playerid][pLeader] == 25 || pData[playerid][pLeader] == 26 || pData[playerid][pLeader] == 27 || pData[playerid][pLeader] == 28 || pData[playerid][pLeader] == 29 || pData[playerid][pLeader] == 30 || pData[playerid][pLeader] == 31 || pData[playerid][pLeader] == 32 )
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /bwithdraw [количество]");
	if(pData[playerid][pMember] == 24 && pData[playerid][pRank] == 9)
	{
		if(FracBank[0][fHamc] == 0) { SCM(playerid, COLOR_GREY, " В банке Mongols MC нет денег"); return true; }
		if(FracBank[0][fHamc] < params[0]) { SCM(playerid, COLOR_GREY, " В банке Mongols MC нет столько денег"); return true; }
		if(params[0] > 100000000 || params[0] < 1) { SCM(playerid, COLOR_GREY, " Неправильный количество денег!"); return true; }
		FracBank[0][fHamc] -= params[0];
		pData[playerid][pCash] +=params[0];
		format(cString, sizeof(cString), " Вы сняли с банка Mongols MC: %i вирт",params[0]);
		SCM(playerid, 0x6BB3FFAA, cString);
	}
	else if(pData[playerid][pMember] == 26 && pData[playerid][pRank] == 9)
	{
		if(FracBank[0][fWmc] == 0) { SCM(playerid, COLOR_GREY, " В банке Highwayman MC нет денег"); return true; }
		if(FracBank[0][fWmc] < params[0]) { SCM(playerid, COLOR_GREY, " В банке Highwayman MC нет столько денег"); return true; }
		if(params[0] > 100000000 || params[0] < 1) { SCM(playerid, COLOR_GREY, " Неправильный количество денег!"); return true; }
		FracBank[0][fWmc] -= params[0];
		pData[playerid][pCash] +=params[0];
		format(cString, sizeof(cString), " Вы сняли с банка Highwayman MC: %i вирт", params[0]);
		SCM(playerid, 0x6BB3FFAA, cString);
	}
	else if(pData[playerid][pMember] == 29 && pData[playerid][pRank] == 9)
	{
		if(FracBank[0][fPmc] == 0) { SCM(playerid, COLOR_GREY, " В банке Pagans MC нет денег"); return true; }
		if(FracBank[0][fPmc] < params[0]) { SCM(playerid, COLOR_GREY, " В банке Pagans MC нет столько денег"); return true; }
		if(params[0] > 100000000 || params[0] < 1) { SCM(playerid, COLOR_GREY, " Неправильный количество денег!"); return true; }
		FracBank[0][fPmc] -= params[0];
		pData[playerid][pCash] +=params[0];
		format(cString, sizeof(cString), " Вы сняли с банка Pagans MC: %i вирт", params[0]);
		SCM(playerid, 0x6BB3FFAA, cString);
	}
	return true;
}
CMD:bbalance(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	switch(pData[playerid][pMember])
	{
	case 24:
		{
			format(cString, sizeof(cString), " В банке Mongols MC: %i вирт", FracBank[0][fHamc]);
			SCM(playerid, 0x6BB3FFAA, cString);
			return true;
		}
	case 26:
		{
			format(cString, sizeof(cString), " В банке Warlocks MC: %i вирт", FracBank[0][fWmc]);
			SCM(playerid, 0x6BB3FFAA, cString);
			return true;
		}
	case 29:
		{
			format(cString, sizeof(cString), " В банке Pagans MC: %i вирт", FracBank[0][fPmc]);
			SCM(playerid, 0x6BB3FFAA, cString);
			return true;
		}
	default: SCM(playerid,COLOR_GREY," Вам недоступна данная команда");
	}
	return true;
}
CMD:warehouse(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	switch(pData[playerid][pMember])
	{
	case 1:
		{
			format(string, 128, " На складе LSPD %i/100000 материалов", lspdmatbi);
			SCM(playerid, COLOR_BLUE, string);
			return true;
		}
	case 2:
		{
			format(string, 128, " На складе FBI %i/100000 материалов", fbimats);
			SCM(playerid, COLOR_BLUE, string);
			return true;
		}
	case 3:
		{
			format(string, 128, " На военном складе SF: %i материалов", armmatsf);
			SCM(playerid, COLOR_BLUE, string);
			format(string, 128, " На военном складе LS: %i материалов", lsamatbi);
			SCM(playerid, 0x66FBA6FF, string);
			return true;
		}
	case 5:
		{
			format(string, 128, " На складе LCN %i/100000 материалов", lcnmats);
			SCM(playerid, COLOR_BLUE, string);
			return true;
		}
	case 6:
		{
			format(string, 128, " На складе Yakuza %i/100000 материалов", yakuzamats);
			SCM(playerid, COLOR_BLUE, string);
			return true;
		}
	case 10:
		{
			format(string, 128, " На складе SFPD %i/100000 материалов", sfpdmats);
			SCM(playerid, COLOR_BLUE, string);
			return true;
		}
	case 12:
		{
			format(string, 128, " На складе Ballas %i/100000 материалов", ballasmatbi);
			SCM(playerid, COLOR_BLUE, string);
			return true;
		}
	case 13:
		{
			format(string, 128, " На складе Vagos %i/100000 материалов", vagosmatbi);
			SCM(playerid, COLOR_BLUE, string);
			return true;
		}
	case 14:
		{
			format(string, 128, " На складе Russian Mafia %i/100000 материалов", rmmats);
			SCM(playerid, COLOR_BLUE, string);
			return true;
		}
	case 15:
		{
			format(string, 128, " На складе Grove %i/100000 материалов", groovmatbi);
			SCM(playerid, COLOR_BLUE, string);
			return true;
		}
	case 17:
		{
			format(string, 128, " На складе Aztec %i/100000 материалов", aztekmatbi);
			SCM(playerid, COLOR_BLUE, string);
			return true;
		}
	case 18:
		{
			format(string, 128, " На складе Rifa %i/100000 материалов", rifamatbi);
			SCM(playerid, COLOR_BLUE, string);
			return true;
		}
	case 19:
		{
			format(string, 128, " На главном складе: %i материалов", armmatbi);
			SCM(playerid, COLOR_BLUE, string);
			format(string, 128, " На складе LSA: %i материалов", lsamatbi);
			SCM(playerid, 0x66FBA6FF, string);
		}
	case 21:
		{
			format(string, 128, " На складе LVPD %i/100000 материалов", lvpdmats);
			SCM(playerid, COLOR_BLUE, string);
			return true;
		}
	case 24:
		{
			format(string, 128, " На складе Mongols %i/100000 материалов", hamcmatbi);
			SCM(playerid, COLOR_BLUE, string);
			format(string, 128, " На складе Mongols %i/10000 литров бензина", hamcfuels);
			SCM(playerid, COLOR_BLUE, string);
			format(string, 128, " На складе Mongols %i/2000 продуктов", hamcprods);
			SCM(playerid, COLOR_BLUE, string);
			return true;
		}
	case 26:
		{
			format(string, 128, " На складе Warlocks MC %i/100000 материалов", wmcmatbi);
			SCM(playerid, COLOR_BLUE, string);
			format(string, 128, " На складе Warlocks MC %i/10000 литров бензина", wmcfuels);
			SCM(playerid, COLOR_BLUE, string);
			format(string, 128, " На складе Warlocks %i/2000 продуктов", wmcprods);
			SCM(playerid, COLOR_BLUE, string);
			return true;
		}
	case 29:
		{
			format(string, 128, " На складе Pagans MC %i/100000 материалов", pmcmatbi);
			SCM(playerid, COLOR_BLUE, string);
			format(string, 128, " На складе Pagans MC %i/10000 литров бензина", pmcfuels);
			SCM(playerid, COLOR_BLUE, string);
			format(string, 128, " На складе Pagans %i/2000 продуктов", pmcprods);
			SCM(playerid, COLOR_BLUE, string);
			return true;
		}
	}
	return true;
}

CMD:unloading(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	new tmpcar = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(tmpcar) == 433)
	{
		if(!IsAGang(playerid)) return SCM(playerid,COLOR_GREY," Вам недоступна данная функция");
		if(MatHaul[tmpcar-gunscar[0]] <= 0) return SCM(playerid,COLOR_GREY," Грузовик пуст");
		if(!IsATerra(playerid)) return SCM(playerid,COLOR_GREY," Вы не на своей территории");
		switch(pData[playerid][pMember])
		{
		case 12:
			{
				ballasmatbi += MatHaul[tmpcar-gunscar[0]];
				if(ballasmatbi > 100000) ballasmatbi = 100000;
			}
		case 13:
			{
				vagosmatbi += MatHaul[tmpcar-gunscar[0]];
				if(vagosmatbi > 100000) vagosmatbi = 100000;
			}
		case 15:
			{
				groovmatbi += MatHaul[tmpcar-gunscar[0]];
				if(groovmatbi > 100000) groovmatbi = 100000;
			}
		case 17:
			{
				aztekmatbi += MatHaul[tmpcar-gunscar[0]];
				if(aztekmatbi > 100000) aztekmatbi = 100000;
			}
		case 18:
			{
				rifamatbi += MatHaul[tmpcar-gunscar[0]];
				if(rifamatbi > 100000) rifamatbi = 100000;
			}
		}
		SCM(playerid,COLOR_GREEN, " Материалы разгружены");
		MatHaul[tmpcar-gunscar[0]] = 0;
	}
	else if(GetPlayerVehicleID(playerid) >= matsfura[0] && GetPlayerVehicleID(playerid) <= matsfura[4])
	{
		if(!IsAGang(playerid)) return SCM(playerid,COLOR_GREY," Вам недоступна данная функция");
		if(pData[playerid][pRank] < 3) return SCM(playerid,COLOR_GREY," Вам недоступна данная функция");
		if(!MatsGang[tmpcar-matsfura[0]]) return SCM(playerid,COLOR_GREY, " В фургоне недостаточно материалов");
		if(!IsATerra (playerid)) return SCM(playerid, COLOR_GREY, " Вы не на своей базе");
		if(PlayerToPoint(6.0,playerid,1454.3406,758.1638,11.0234))
		{
			lcnmats += MatsGang[tmpcar-matsfura[0]];
			MatsGang[tmpcar-matsfura[0]] = 0;
			SCM(playerid, TEAM_GROVE_COLOR, " Материалы разгружены!");
			if(lcnmats > 100000) lcnmats = 100000;
			SendMes(playerid,-1,"Склад мафии LCN: %i", lcnmats);
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,967.3965,1684.1112,8.8516))
		{
			rmmats += MatsGang[tmpcar-matsfura[0]];
			MatsGang[tmpcar-matsfura[0]] = 0;
			SCM(playerid, TEAM_GROVE_COLOR, " Материалы разгружены!");
			if(rmmats > 100000) rmmats = 100000;
			SendMes(playerid,-1,"Склад Русской мафии: %i", rmmats);
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,1460.3116,2763.8110,10.8203))
		{
			yakuzamats += MatsGang[tmpcar-matsfura[0]];
			MatsGang[tmpcar-matsfura[0]] = 0;
			SCM(playerid, TEAM_GROVE_COLOR, " Материалы разгружены!");
			if(yakuzamats > 100000) yakuzamats = 100000;
			SendMes(playerid,-1,"Склад мафии Yakuza: %i", yakuzamats);
			return true;
		}
		switch(pData[playerid][pMember])
		{
		case 12:
			{
				ballasmatbi += MatsGang[tmpcar-matsfura[0]];
				if(ballasmatbi > 100000) ballasmatbi = 100000;
			}
		case 13:
			{
				vagosmatbi += MatsGang[tmpcar-matsfura[0]];
				if(vagosmatbi > 100000) vagosmatbi = 100000;
			}
		case 15:
			{
				groovmatbi += MatsGang[tmpcar-matsfura[0]];
				if(groovmatbi > 100000) groovmatbi = 100000;
			}
		case 17:
			{
				aztekmatbi += MatsGang[tmpcar-matsfura[0]];
				if(aztekmatbi > 100000) aztekmatbi = 100000;
			}
		case 18:
			{
				rifamatbi += MatsGang[tmpcar-matsfura[0]];
				if(rifamatbi > 100000) rifamatbi = 100000;
			}
		}
		MatsGang[tmpcar-matsfura[0]] = 0;
		SCM(playerid,COLOR_GREEN, " Материалы разгружены");
	}
	return true;
}
CMD:gbank(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	switch(pData[playerid][pMember])
	{
	case 15:
		{
			format(cString, 48, "В банке Grove: %i вирт", FracBank[0][fGrove]);
			SCM(playerid, 0x6495EDFF, cString);
			return true;
		}
	case 12:
		{
			format(cString, 48, "В банке Ballas: %i вирт", FracBank[0][fBallas]);
			SCM(playerid, 0x6495EDFF, cString);
			return true;
		}
	case 13:
		{
			format(cString, 48, "В банке Vagos: %i вирт", FracBank[0][fVagos]);
			SCM(playerid, 0x6495EDFF, cString);
			return true;
		}
	case 17:
		{
			format(cString, 48, "В банке Aztec: %i вирт", FracBank[0][fAztek]);
			SCM(playerid, 0x6495EDFF, cString);
			return true;
		}
	case 18:
		{
			format(cString, 48, "В банке Rifa: %i вирт", FracBank[0][fRifa]);
			SCM(playerid, 0x6495EDFF, cString);
			return true;
		}
	}
	return true;
}
CMD:gbankwithdraw(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pLeader] != 15 && pData[playerid][pLeader] != 12 && pData[playerid][pLeader] != 13 && pData[playerid][pLeader] != 17 && pData[playerid][pLeader] != 18) return SCM(playerid,COLOR_GREY," Вам недоступна данная функция");
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /gbankwithdraw [количество]");
	if(pData[playerid][pLeader] == 12)
	{
		if(FracBank[0][fBallas] == 0) { SCM(playerid, COLOR_GREY, " В банке банды Ballas нет денег"); return true; }
		if(FracBank[0][fBallas] < params[0]) { SCM(playerid, COLOR_GREY, " В банке банды Ballas нет столько денег"); return true; }
		if(params[0] > 100000000 || params[0] < 1) { SCM(playerid, COLOR_GREY, " Неправильный количество денег!"); return true; }
		FracBank[0][fBallas] -= params[0];
		pData[playerid][pCash] += params[0];
		format(cString, sizeof(cString), " Вы сняли с банка банды Ballas: %i вирт", params[0]);
		SCM(playerid, 0x6495EDFF, cString);
	}
	else if(pData[playerid][pLeader] == 13)
	{
		if(FracBank[0][fVagos] == 0) { SCM(playerid, COLOR_GREY, " В банке банды Vagos нет денег"); return true; }
		if(FracBank[0][fVagos] < params[0]) { SCM(playerid, COLOR_GREY, " В банке банды Vagos нет столько денег"); return true; }
		if(params[0] > 100000000 || params[0] < 1) { SCM(playerid, COLOR_GREY, " Неправильный количество денег!"); return true; }
		FracBank[0][fVagos] -= params[0];
		pData[playerid][pCash] +=params[0];
		format(cString, sizeof(cString), " Вы сняли с банка банды Vagos: %i вирт", params[0]);
		SCM(playerid, 0x6495EDFF, cString);
	}
	else if(pData[playerid][pLeader] == 15)
	{
		if(FracBank[0][fGrove] == 0) { SCM(playerid, COLOR_GREY, " В банке банды Grove нет денег"); return true; }
		if(FracBank[0][fGrove] < params[0]) { SCM(playerid, COLOR_GREY, " В банке банды Grove нет столько денег"); return true; }
		if(params[0] > 100000000 || params[0] < 1) { SCM(playerid, COLOR_GREY, " Неправильный количество денег!"); return true; }
		FracBank[0][fGrove] -= params[0];
		pData[playerid][pCash] +=params[0];
		format(cString, sizeof(cString), " Вы сняли с банка банды Grove: %i вирт", params[0]);
		SCM(playerid, 0x6495EDFF, cString);
	}
	else if(pData[playerid][pLeader] == 17)
	{
		if(FracBank[0][fAztek] == 0) { SCM(playerid, COLOR_GREY, " В банке банды Aztec нет денег"); return true; }
		if(FracBank[0][fAztek] < params[0]) { SCM(playerid, COLOR_GREY, " В банке банды Aztec нет столько денег"); return true; }
		if(params[0] > 100000000 || params[0] < 1) { SCM(playerid, COLOR_GREY, " Неправильный количество денег!"); return true; }
		FracBank[0][fAztek] -= params[0];
		pData[playerid][pCash] +=params[0];
		format(cString, sizeof(cString), " Вы сняли с банка банды Aztec: %i вирт", params[0]);
		SCM(playerid, 0x6495EDFF, cString);
	}
	else if(pData[playerid][pLeader] == 18)
	{
		if(FracBank[0][fRifa] == 0) { SCM(playerid, COLOR_GREY, " В банке банды Rifa нет денег"); return true; }
		if(FracBank[0][fRifa] < params[0]) { SCM(playerid, COLOR_GREY, " В банке банды Rifa нет столько денег"); return true; }
		if(params[0] > 100000000 || params[0] < 1) { SCM(playerid, COLOR_GREY, " Неправильный количество денег!"); return true; }
		FracBank[0][fRifa] -= params[0];
		pData[playerid][pCash] +=params[0];
		format(cString, sizeof(cString), " Вы сняли с банка банды Rifa: %i вирт", params[0]);
		SCM(playerid, 0x6495EDFF, cString);
	}
	return true;
}
CMD:gbankput(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pMember] == 15 || pData[playerid][pMember] == 12 || pData[playerid][pMember] == 13 || pData[playerid][pMember] == 17 || pData[playerid][pMember] == 18)
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /gbankput [количество]");
	if(params[0] < 1) { SCM(playerid, COLOR_GREY, " Неправильное количество денег!"); return true; }
	switch(pData[playerid][pMember])
	{
	case 15:
		{
			if(pData[playerid][pCash] < params[0]) { SCM(playerid, COLOR_GREY, " У вас нет столько денег!"); return true; }
			FracBank[0][fGrove] += params[0];
			pData[playerid][pCash] -= params[0];
			format(cString, sizeof(cString), " Вы положили в банк Grove: %i вирт", params[0]);
			SCM(playerid, 0x6495EDFF, cString);
		}
	case 12:
		{
			if(pData[playerid][pCash] < params[0]) { SCM(playerid, COLOR_GREY, " У вас нет столько денег!"); return true; }
			FracBank[0][fBallas] += params[0];
			pData[playerid][pCash] -= params[0];
			format(cString, sizeof(cString), " Вы положили в банк Ballas: %i вирт", params[0]);
			SCM(playerid, 0x6495EDFF, cString);
		}
	case 13:
		{
			if(pData[playerid][pCash] < params[0]) { SCM(playerid, COLOR_GREY, " У вас нет столько денег!"); return true; }
			FracBank[0][fVagos] += params[0];
			pData[playerid][pCash] -= params[0];
			format(cString, sizeof(cString), " Вы положили в банк Vagos: %i вирт", params[0]);
			SCM(playerid, 0x6495EDFF, cString);
		}
	case 17:
		{
			if(pData[playerid][pCash] < params[0]) { SCM(playerid, COLOR_GREY, " У вас нет столько денег!"); return true; }
			FracBank[0][fAztek] += params[0];
			pData[playerid][pCash] -= params[0];
			format(cString, sizeof(cString), " Вы положили в банк Aztec: %i вирт", params[0]);
			SCM(playerid, 0x6495EDFF, cString);
		}
	case 18:
		{
			if(pData[playerid][pCash] < params[0]) { SCM(playerid, COLOR_GREY, " У вас нет столько денег!"); return true; }
			FracBank[0][fRifa] += params[0];
			pData[playerid][pCash] -= params[0];
			format(cString, sizeof(cString), " Вы положили в банк Rifa: %i вирт", params[0]);
			SCM(playerid, 0x6495EDFF, cString);
		}
	}
	return true;
}
CMD:newsbank(playerid)
{
	if(pData[playerid][pLogin] == false) return true;
	switch(pData[playerid][pMember])
	{
	case 9: format(cString, 48, "В банке SF NEWS: %i вирт", FracBank[0][fSfnews]);
	case 16: format(cString, 48, "В банке LS NEWS: %i вирт", FracBank[0][fLsnews]);
	case 20: format(cString, 48, "В банке LV NEWS: %i вирт", FracBank[0][fLvnews]);
	default:return true;
	}
	SCM(playerid, 0x6495EDFF, cString);
	return true;
}
CMD:newsput(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /newsput [количество]");
	if(params[0] < 1) { SCM(playerid, COLOR_GREY, " Неправильное количество денег!"); return true; }
	if(pData[playerid][pMember] == 9)
	{
		if(pData[playerid][pCash] < params[0]) { SCM(playerid, COLOR_GREY, " Недостаточно денег"); return true; }
		FracBank[0][fSfnews] += params[0];
		pData[playerid][pCash] -=params[0];
		format(cString, 72, "Вы положили на банк SF News %i вирт", params[0]);
		SCM(playerid, 0x6495EDFF, cString);
	}
	else if(pData[playerid][pMember] == 16)
	{
		if(pData[playerid][pCash] < params[0]) { SCM(playerid, COLOR_GREY, " Недостаточно денег"); return true; }
		FracBank[0][fLsnews] += params[0];
		pData[playerid][pCash] -=params[0];
		format(cString, 72, "Вы положили на банк LS NEWS %i вирт", params[0]);
		SCM(playerid, 0x6495EDFF, cString);
	}
	else if(pData[playerid][pMember] == 20)
	{
		if(pData[playerid][pCash] < params[0]) { SCM(playerid, COLOR_GREY, " Недостаточно денег"); return true; }
		FracBank[0][fLvnews] += params[0];
		pData[playerid][pCash] -=params[0];
		format(cString, 72, "Вы положили на банк LV NEWS %i вирт", params[0]);
		SCM(playerid, 0x6495EDFF, cString);
	}
	return true;
}
CMD:newswithdraw(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pLeader] == 9 || pData[playerid][pLeader] == 16 || pData[playerid][pLeader] == 20)
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /newswithdraw [количество]");
	if(params[0] < 1) { SCM(playerid, COLOR_GREY, " Неправильное количество денег!"); return true; }
	if(pData[playerid][pPLimitBank]+params[0] > 500001) { SCM(playerid, COLOR_GREY, " Лимит исчерпан"); return true; }
	if(pData[playerid][pMember] == 9 && pData[playerid][pRank] == 10)
	{
		if(FracBank[0][fSfnews] == 0) { SCM(playerid, COLOR_GREY, " В банке SF NEWS нет денег"); return true; }
		if(FracBank[0][fSfnews] < params[0]) { SCM(playerid, COLOR_GREY, " В банке SF NEWS нет столько денег"); return true; }
		FracBank[0][fSfnews] -= params[0];
		pData[playerid][pCash] +=params[0];
		pData[playerid][pPLimitBank] +=params[0];
		format(cString, 72, " Вы сняли с банка SF NEWS: %i вирт", params[0]);
		SCM(playerid, 0x6495EDFF, cString);
	}
	else if(pData[playerid][pMember] == 16 && pData[playerid][pRank] == 10)
	{
		if(FracBank[0][fLsnews] == 0) { SCM(playerid, COLOR_GREY, " В банке LS NEWS нет денег"); return true; }
		if(FracBank[0][fLsnews] < params[0]) { SCM(playerid, COLOR_GREY, " В банке LS NEWS нет столько денег"); return true; }
		FracBank[0][fLsnews] -= params[0];
		pData[playerid][pCash] +=params[0];
		pData[playerid][pPLimitBank] +=params[0];
		format(cString, 72, " Вы сняли с банка LS NEWS: %i вирт", params[0]);
		SCM(playerid, 0x6495EDFF, cString);
	}
	else if(pData[playerid][pMember] == 20 && pData[playerid][pRank] == 10)
	{
		if(FracBank[0][fLvnews] == 0) { SCM(playerid, COLOR_GREY, " В банке LV NEWS нет денег"); return true; }
		if(FracBank[0][fLvnews] < params[0]) { SCM(playerid, COLOR_GREY, " В банке LV NEWS нет столько денег"); return true; }
		FracBank[0][fLvnews] -= params[0];
		pData[playerid][pCash] +=params[0];
		pData[playerid][pPLimitBank] +=params[0];
		format(cString, 72, " Вы сняли с банка LV NEWS: %i вирт", params[0]);
		SCM(playerid, 0x6495EDFF, cString);
	}
	SetAccountInfo(playerid,pData[playerid][pPLimitBank],"pPLimitBank");
	return true;
}
CMD:mafiabalance(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pRank] < 8) return true;
	switch(pData[playerid][pMember])
	{
	case 6: format(cString, 48, " В банке мафии Yakuza: %i вирт", MafiaBank[0][nYakuza]);
	case 14: format(cString, 48, "В банке Русской мафии: %i вирт", MafiaBank[0][nRm]);
	case 5: format(cString, 48, " В банке мафии LCN: %i вирт", MafiaBank[0][nLcn]);
	default:return true;
	}
	SCM(playerid, 0x6495EDFF, cString);
	return true;
}
CMD:mafiawithdraw(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pLeader] != 6 && pData[playerid][pLeader] != 14 && pData[playerid][pLeader] != 5) return SCM(playerid,COLOR_GREY," Вам недоступна данная функция");
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /mafiawithdraw [количество]");
	if(pData[playerid][pPLimitBank]+params[0] > 30000) { SCM(playerid, COLOR_GREY, " Лимит исчерпан"); return true; }
	if(params[0] < 1) { SCM(playerid, COLOR_GREY, " Неверное количество"); return true; }
	if(pData[playerid][pMember] == 6 && pData[playerid][pRank] >= 10)
	{
		if(MafiaBank[0][nYakuza] <= 0) { SCM(playerid, COLOR_GREY, " В банке мафии Yakuza нет денег"); return true; }
		if(MafiaBank[0][nYakuza] < params[0]) { SCM(playerid, COLOR_GREY, " В банке мафии Yakuza нет столько денег"); return true; }
		MafiaBank[0][nYakuza] -= params[0];
		pData[playerid][pPLimitBank] += params[0];
		pData[playerid][pCash] +=params[0];
		format(cString, sizeof(cString), " Вы сняли с банка мафии Yakuza: %i вирт", params[0]);
		SCM(playerid, 0x6495EDFF, cString);
	}
	else if(pData[playerid][pMember] == 14 && pData[playerid][pRank] >= 10)
	{
		if(MafiaBank[0][nRm] <= 0) { SCM(playerid, COLOR_GREY, " В банке Русской мафии нет денег"); return true; }
		if(MafiaBank[0][nRm] < params[0]) { SCM(playerid, COLOR_GREY, " В банке Русской мафии нет столько денег"); return true; }
		MafiaBank[0][nRm] -= params[0];
		pData[playerid][pPLimitBank] += params[0];
		pData[playerid][pCash] +=params[0];
		format(cString, sizeof(cString), " Вы сняли с банка Русской мафии: %i вирт", params[0]);
		SCM(playerid, 0x6495EDFF, cString);
	}
	else if(pData[playerid][pMember] == 5 && pData[playerid][pRank] >= 10)
	{
		if(MafiaBank[0][nLcn] <= 0) { SCM(playerid, COLOR_GREY, " В банке мафии LCN нет денег"); return true; }
		if(MafiaBank[0][nLcn] < params[0]) { SCM(playerid, COLOR_GREY, " В банке мафии LCN нет столько денег"); return true; }
		MafiaBank[0][nLcn] -= params[0];
		pData[playerid][pPLimitBank] += params[0];
		pData[playerid][pCash] +=params[0];
		format(cString, sizeof(cString), " Вы сняли с банка мафии LCN: %i вирт", params[0]);
		SCM(playerid, 0x6495EDFF, cString);
	}
	SetAccountInfo(playerid,pData[playerid][pPLimitBank],"pPLimitBank");
	return true;
}
CMD:mafiabank(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pLeader] == 6 || pData[playerid][pLeader] == 14 || pData[playerid][pLeader] == 5)
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /mafiabank [количество]");
	if(params[0] < 1 || pData[playerid][pCash] < params[0]) { SCM(playerid, COLOR_GREY, " Неправильное количество денег!"); return true; }
	if(pData[playerid][pMember] == 6)
	{
		MafiaBank[0][nYakuza] += params[0];
		pData[playerid][pCash] -=params[0];
		format(cString, sizeof(cString), " Вы положили в банк мафии Yakuza: %i вирт", params[0]);
		SCM(playerid, 0x6495EDFF, cString);
	}
	else if(pData[playerid][pMember] == 14)
	{
		MafiaBank[0][nRm] += params[0];
		pData[playerid][pCash] -=params[0];
		format(cString, sizeof(cString), " Вы положили в банк Русской мафии: %i вирт", params[0]);
		SCM(playerid, 0x6495EDFF, cString);
	}
	else if(pData[playerid][pMember] == 5)
	{
		MafiaBank[0][nLcn] += params[0];
		pData[playerid][pCash] -=params[0];
		format(cString, sizeof(cString), " Вы положили в банк мафии LCN: %i вирт", params[0]);
		SCM(playerid, 0x6495EDFF, cString);
	}
	return true;
}


CMD:gloading(playerid)
{
	if(pData[playerid][pLogin] == false) return true;


	return 1;
}


CMD:materials(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	new x_nr[65];
	if(IsPlayerConnected(playerid))
	{
		if( sscanf(params, "s[64]S()[64]", x_nr, params)) return SCM(playerid, COLOR_WHITE, " Введите: /materials [значение] Доступные значения: sell, buy, load, get, put");
		if(strcmp(x_nr, "sell",true) == 0)
		{
			if(IsAGang(playerid) && pData[playerid][pRank] >= 8)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				new giveplayerid,price;
				if(sscanf(params, "dd",giveplayerid,price)) return SCM(playerid,COLOR_WHITE," Введите: /materialssell [playerid] [1-15 вирт]");
				if(giveplayerid == playerid) return SCM(playerid,COLOR_GREY," Вы указали свой ID");
				if(!ProxDetectorS(8.0, playerid, giveplayerid)) return SCM(playerid, COLOR_GREY, " Игрок должен находиться рядом с вами");
				if(!IsAMafia(giveplayerid)) return SCM(playerid,COLOR_GREY," Этот человек не в мафии");
				if(price < 1 || price > 15) return SCM(playerid,COLOR_GREY," Нельзя меньше 1 и больше 15 вирт за материал");
				if(pData[giveplayerid][pCash] < price*3000) return SCM(playerid,COLOR_GREY," У этого человека нет столько денег");
				if(GetPlayerVehicleID(playerid) >= matsfura[0] && GetPlayerVehicleID(playerid) <= matsfura[4])
				{
					if(!MatsGang[tmpcar-matsfura[0]]) return SCM(playerid,COLOR_GREY, " В фургоне недостаточно материалов");
					if(MafiaMatsSell[playerid] != 9999) return SCM(playerid,COLOR_GREY," Вы уже предложили кому-то купить материалы");
					if(MafiaMatsSell[giveplayerid] != 9999) return SCM(playerid,COLOR_GREY," Этому человеку уже кто-то предложил купить материалы");
					MafiaMatsSell[giveplayerid] = playerid;
					MafiaMatsSell[playerid] = giveplayerid;
					MafiaMatsSellPrice[giveplayerid] = price;
					SetPVarInt(giveplayerid,"CarWithMats",tmpcar);
					SendMes(playerid,COLOR_BLUE," Вы предложили %s купить 3000 материалов за [%i вирт] / [%i вирт за 1 материал]",Name(giveplayerid),price*3000,price);
					SendMes(giveplayerid,COLOR_BLUE," %s предложил Вам купить 3000 материалов в общак мафии за [%i вирт].{FFFFFF}(( Введите /materials buy для покупки ))",Name(playerid),price*3000);
				}
			}
			return true;
		}
		if(strcmp(x_nr, "buy",true) == 0)
		{
			if(IsAMafia(playerid) && pData[playerid][pRank] >= 8)
			{
				if(PicCP[playerid] == 3)
				{
					new null;
					switch(pData[playerid][pMember])
					{
					case 5: null = 100000-lcnmats;
					case 6: null = 100000-yakuzamats;
					case 14: null = 100000-rmmats;
					}
					format(string, 336, "Введите колличество материалов, которое вы хотите купить на склад.\nМаксимально колличество материалов для преобретения %i шт.\
					\n\nСтоимость одного материала - 5 вирт",null);
					ShowPlayerDialog(playerid,9298,DIALOG_STYLE_INPUT, "Покупка материалов",string, "Купить", "Отмена");
					return true;
				}
				if(MafiaMatsSell[playerid] == 9999) return SCM(playerid,COLOR_GREY," Вам никто не предлагал купить материалы.");
				if(!ProxDetectorS(8.0, playerid, MafiaMatsSell[playerid])) return SCM(playerid,COLOR_GREY," Вы должны находиться рядом с тем, кому хотите продать материалы");
				if((pData[playerid][pMember] == 5 && !IsPlayerInRangeOfPoint(playerid, 40, 1445.2869,750.0549,10.8203)) ||
						(pData[playerid][pMember] == 6 && !IsPlayerInRangeOfPoint(playerid, 40, 1463.6934,2773.0571,10.6719)) ||
						(pData[playerid][pMember] == 14 && !IsPlayerInRangeOfPoint(playerid, 40, 955.7462,1721.6234,8.6484))) return SCM(playerid,COLOR_GREY," Вы должны находиться у мафии, которой хотите продать материалы");
				if(pData[playerid][pCash] < MafiaMatsSellPrice[playerid]*3000) return SCM(playerid,COLOR_GREY," У вас недостаточно денег");
				switch(pData[playerid][pMember])
				{
				case 5:
					{
						pData[MafiaMatsSell[playerid]][pCash] += MafiaMatsSellPrice[playerid]*3000;
						pData[playerid][pCash] -= MafiaMatsSellPrice[playerid]*3000;
						format(string,128," %s купил 3000 материалов на общий склад мафии за [%i вирт]",Name(playerid),MafiaMatsSellPrice[playerid]*3000); // Форматируем сообщение
						SendFamilyMessage(pData[playerid][pMember], 0x2A9170FF,string);
						SendMes(MafiaMatsSell[playerid],COLOR_BLUE,"%s купил 3000 материалов на общий склад мафии за [%i вирт]",Name(playerid),MafiaMatsSellPrice[playerid]*3000);
						MatsGang[GetPVarInt(playerid,"CarWithMats")-matsfura[0]] = 0;
						lcnmats += 3000;
						if(lcnmats > 100000) lcnmats = 100000;
					}
				case 6:
					{
						pData[MafiaMatsSell[playerid]][pCash] += MafiaMatsSellPrice[playerid]*3000;
						pData[playerid][pCash] -= MafiaMatsSellPrice[playerid]*3000;
						format(string,128," %s купил 3000 материалов на общий склад мафии за [%i вирт]",Name(playerid),MafiaMatsSellPrice[playerid]*3000); // Форматируем сообщение
						SendFamilyMessage(pData[playerid][pMember], 0x2A9170FF,string);
						SendMes(MafiaMatsSell[playerid],COLOR_BLUE,"%s купил 3000 материалов на общий склад мафии за [%i вирт]",Name(playerid),MafiaMatsSellPrice[playerid]*3000);
						MatsGang[GetPVarInt(playerid,"CarWithMats")-matsfura[0]] = 0;
						yakuzamats += 3000;
						if(yakuzamats > 100000) yakuzamats = 100000;
					}
				case 14:
					{
						pData[MafiaMatsSell[playerid]][pCash] += MafiaMatsSellPrice[playerid]*3000;
						pData[playerid][pCash] -= MafiaMatsSellPrice[playerid]*3000;
						format(string,128," %s купил 3000 материалов на общий склад мафии за [%i вирт]",Name(playerid),MafiaMatsSellPrice[playerid]*3000); // Форматируем сообщение
						SendFamilyMessage(pData[playerid][pMember], 0x2A9170FF,string);
						SendMes(MafiaMatsSell[playerid],COLOR_BLUE,"%s купил 3000 материалов на общий склад мафии за [%i вирт]",Name(playerid),MafiaMatsSellPrice[playerid]*3000);
						MatsGang[GetPVarInt(playerid,"CarWithMats")-matsfura[0]] = 0;
						rmmats += 3000;
						if(rmmats > 100000) rmmats = 100000;
					}
				}
				MafiaMatsSell[MafiaMatsSell[playerid]] = 9999;
				MafiaMatsSell[playerid] = 9999;
				MafiaMatsSellPrice[params[1]] = 0;
				DeletePVar(playerid,"CarWithMats");
				return true;
			}
		}
		else if(strcmp(x_nr, "load",true) == 0)
		{
			if(!IsAGang(playerid)) return SCM(playerid,COLOR_GREY, " Вы не бандит");
			if(pData[playerid][pRank] < 8) return SCM(playerid,COLOR_GREY," Вам недоступна данная функция");
			if(!IsATerra(playerid)) return SCM(playerid, COLOR_GREY, " Вы должны находится на своей базе");
			if(GetPlayerVehicleID(playerid) < matsfura[0] || GetPlayerVehicleID(playerid) > matsfura[4]) return SCM(playerid,COLOR_GREY," Вы должны находиться в фургоне");
			if(MatsGang[GetPlayerVehicleID(playerid)-matsfura[0]] >= 3000) return SCM(playerid,COLOR_GREY," Фургон уже загружен");
			new null;
			switch(pData[playerid][pMember])
			{
			case 12:
				{
					if(ballasmatbi > 3000 - MatsGang[GetPlayerVehicleID(playerid)-matsfura[0]]) null = 3000 - MatsGang[GetPlayerVehicleID(playerid)-matsfura[0]];
					else null = ballasmatbi;
					ballasmatbi -= null;
				}
			case 13:
				{
					if(vagosmatbi > 3000 - MatsGang[GetPlayerVehicleID(playerid)-matsfura[0]]) null = 3000 - MatsGang[GetPlayerVehicleID(playerid)-matsfura[0]];
					else null = vagosmatbi;
					vagosmatbi -= null;
				}
			case 15:
				{
					if(groovmatbi > 3000 - MatsGang[GetPlayerVehicleID(playerid)-matsfura[0]]) null = 3000 - MatsGang[GetPlayerVehicleID(playerid)-matsfura[0]];
					else null = groovmatbi;
					groovmatbi -= null;
				}
			case 17:
				{
					if(aztekmatbi > 3000 - MatsGang[GetPlayerVehicleID(playerid)-matsfura[0]]) null = 3000 - MatsGang[GetPlayerVehicleID(playerid)-matsfura[0]];
					else null = aztekmatbi;
					aztekmatbi -= null;
				}
			case 18:
				{
					if(rifamatbi > 3000 - MatsGang[GetPlayerVehicleID(playerid)-matsfura[0]]) null = 3000 - MatsGang[GetPlayerVehicleID(playerid)-matsfura[0]];
					else null = rifamatbi;
					rifamatbi -= null;
				}
			}
			MatsGang[GetPlayerVehicleID(playerid)-matsfura[0]] += null;
			format(string, 128, " %s загрузил(а) %i материалов в фургон", pData[playerid][pName], null);
			ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else if(strcmp(x_nr, "put",true) == 0)
		{
			new tmpcar = GetNearestVehicle(playerid);
			if(tmpcar < matsfura[0] || tmpcar > matsfura[4]) return SCM(playerid,COLOR_GREY, " Вы не в фургоне/около фургона");
			if(usemats[playerid] == 0 && !GetPVarInt(playerid, !#_dGetMaterials)) return SCM(playerid,COLOR_GREY, " У вас нет материалов с собой");
			if(MatsGang[tmpcar-matsfura[0]] >= 3000) return SCM(playerid,COLOR_GREY," Фургон заполнен");
			switch(pData[playerid][pMember])
			{
				case 12:
					if(tmpcar != matsfura[0]) return SCM(playerid,COLOR_GREY, " Вы не в фургоне/около фургона");
				case 17:
					if(tmpcar != matsfura[1]) return SCM(playerid,COLOR_GREY, " Вы не в фургоне/около фургона");
				case 13:
					if(tmpcar != matsfura[2]) return SCM(playerid,COLOR_GREY, " Вы не в фургоне/около фургона");
				case 15:
					if(tmpcar != matsfura[3]) return SCM(playerid,COLOR_GREY, " Вы не в фургоне/около фургона");
				case 18:
					if(tmpcar != matsfura[4]) return SCM(playerid,COLOR_GREY, " Вы не в фургоне/около фургона");
			}

			MatsGang[tmpcar-matsfura[0]] += GetPVarInt(playerid, !#_dGetMaterials) ? MAX_MATERIALS_GET : 250;

			DeletePVar(playerid, !#_dGetMaterials);
			usemats[playerid] = 0;
			SCM(playerid, 0x6BB3FFAA, " Вы положили ящик в фургон");
			RemovePlayerAttachedObject(playerid, 1);
			SetPlayerSpecialAction (playerid, SPECIAL_ACTION_NONE);
		}
		else if(strcmp(x_nr, "get",true) == 0)
		{
			if(IsAGang(playerid))
			{
				if(PlayerToPoint(10.0,playerid,-1290.9072,501.4489,11.1953))
				{
					if(armmatsf < 250)return SCM(playerid,COLOR_GRAD1, " Склад армии пуст");
					if(usemats[playerid] != 0) return SCM(playerid,COLOR_GRAD1, "  Вы не можете взять больше");
					SCM(playerid, 0x6495EDFF, " Вы взяли 250 материалов со склада армии");
					SCM(playerid, COLOR_WHITE, " Несите ящик в грузовик, используйте /materials put, чтобы положить материалы в фургон");
					SetPlayerSpecialAction (playerid, SPECIAL_ACTION_CARRY);
					ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,0,0,0,0,1,0);
					SetPlayerAttachedObject(playerid, 1 , 2358, 1,0.11,0.36,0.0,0.0,90.0);
					usemats[playerid] = 1;
					armmatsf -= 250;
				}
				if(PlayerToPoint(2.0,playerid,2729.3267,-2451.5051,17.5937))
				{
					if(lsamatbi < 250)return SCM(playerid,COLOR_GRAD1, " Склад армии пуст");
					if(usemats[playerid] != 0) return SCM(playerid,COLOR_GRAD1, "  Вы не можете взять больше");
					SCM(playerid, 0x6495EDFF, " Вы взяли 250 материалов со склада армии");
					SCM(playerid, COLOR_WHITE, " Несите ящик в грузовик, используйте /materials put, чтобы положить материалы в фургон");
					SetPlayerSpecialAction (playerid, SPECIAL_ACTION_CARRY);
					ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,0,0,0,0,1,0);
					SetPlayerAttachedObject(playerid, 1 , 2358, 1,0.11,0.36,0.0,0.0,90.0);
					usemats[playerid] = 2;
					lsamatbi -= 250;
				}
				if(PlayerToPoint(10.0,playerid,316.8127,-167.5395,999.5938) && GetPlayerVirtualWorld(playerid) == 0)
				{
					if(armmatbi < 250)return SCM(playerid,COLOR_GRAD1, " Склад армии пуст");
					if(usemats[playerid] != 0) return SCM(playerid,COLOR_GRAD1, "  Вы не можете взять больше");
					SCM(playerid, 0x6495EDFF, " Вы взяли 250 материалов со склада армии");
					SCM(playerid, COLOR_WHITE, " Несите ящик в грузовик, используйте /materials put, чтобы положить материалы в фургон");
					SetPlayerSpecialAction (playerid, SPECIAL_ACTION_CARRY);
					ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,0,0,0,0,1,0);
					SetPlayerAttachedObject(playerid, 1 , 2358, 1,0.11,0.36,0.0,0.0,90.0);
					usemats[playerid] = 3;
					armmatbi -= 250;
					new strings1[50];
					format(strings1,sizeof(strings1), "{33AA33}Склад армии ЛВ: {FFFFFF}%i", armmatbi);
					UpdateDynamic3DTextLabelText(LvaLable, 0xFFFF00FF, strings1);
				}
			}
		}
	}
	return true;
}
CMD:gettax(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pMember] == 7)
	{
		format(cString, 24, "В казне: %i вирт", FracBank[0][fKazna]);
		SCM(playerid, COLOR_WHITE, cString);
	}
	return true;
}
CMD:animlist(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
    ShowPlayerDialog(playerid, 1994, DIALOG_STYLE_LIST, "Анимации", "[0] Танец 1\n[1] Танец 2\n[2] Танец 3\n[3] Танец 4\n[4] Танец 5\n[5] Курить\n[6] Поза 1\n[7] Поза 2\n[8] Поза 3\n[9] Поза 4\n[10] Поза 5\n[11] Поза 6\n[12] Поза 7\n[13] Поза 8\n[14] Поза 9\n[15] Поза 10\n[16] Поза 11\n[17] Диллер\n[18] Поза 12\n[19] Руки вверх\n[20] Поза 13\n[21] Поза 14\n[22] Поза 15\n[23] Поза 16\n[24] Поза 17\n[25] Поза 18","Выбрать","Назад");
	return true;
}
CMD:apanel(playerid, params[])
{
	if(!dostup[playerid]) return true;
	if(pData[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new stringer[1024];
	format(string, 48, "(1) LCN\t\t\t\t %i $\n", MafiaBank[0][nLcn]); strcat(stringer, string);
	format(string, 48, "(2) Yakuza\t\t\t %i $\n", MafiaBank[0][nYakuza]); strcat(stringer, string);
	format(string, 48, "(3) Мэрия\t\t\t %i $\n", FracBank[0][fKazna]); strcat(stringer, string);
	format(string, 48, "(4) SF News\t\t\t %i $\n", FracBank[0][fSfnews]); strcat(stringer, string);
	format(string, 48, "(5) Ballas\t\t\t %i $\n", FracBank[0][fBallas]); strcat(stringer, string);
	format(string, 48, "(6) Vagos\t\t\t %i $\n", FracBank[0][fVagos]); strcat(stringer, string);
	format(string, 48, "(7) RM\t\t\t\t %i $\n",MafiaBank[0][nRm]); strcat(stringer, string);
	format(string, 48, "(7) Grove\t\t\t %i $\n",FracBank[0][fGrove]); strcat(stringer, string);
	format(string, 48, "(8) LS News\t\t\t %i $\n",FracBank[0][fLsnews]); strcat(stringer, string);
	format(string, 48, "(9) Aztec\t\t\t %i $\n",FracBank[0][fAztek]); strcat(stringer, string);
	format(string, 48, "(10) Rifa\t\t\t %i $\n",FracBank[0][fRifa]); strcat(stringer, string);
	format(string, 48, "(12) LV News\t\t\t %i $\n",FracBank[0][fLvnews]); strcat(stringer, string);
	format(string, 48, "(13) Mongols MC\t\t %i $\n",FracBank[0][fHamc]); strcat(stringer, string);
	format(string, 48, "(14) Warlocks MC\t\t %i $\n",FracBank[0][fWmc]); strcat(stringer, string);
	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX,"Админ панель",stringer,"Готово", " ");
	return true;
}
CMD:awarehouse(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	format(string, 128, " На складе Зоны 51: %i/300000 материалов", armmatbi);
	SCM(playerid, COLOR_GRAD1, string);
	format(string, 128, " На складе армии Авианосца: %i/300000 материалов", armmatsf);
	SCM(playerid, COLOR_GRAD1, string);
	format(string, 128, " На складе FBI %i материалов", fbimats);
	SCM(playerid, COLOR_GRAD1, string);
	format(string, 128, " На складе LSPD %i/50000 материалов", lspdmatbi);
	SCM(playerid, COLOR_GRAD1, string);
	format(string, 128, " На складе SFPD %i/50000 материалов", sfpdmats);
	SCM(playerid, COLOR_GRAD1, string);
	format(string, 128, " На складе LVPD %i/50000 материалов", lvpdmats);
	SCM(playerid, COLOR_GRAD1, string);
	format(string, 128, " На складе мафии Якудза %i/100000 материалов", yakuzamats);
	SCM(playerid, COLOR_GRAD1, string);
	format(string, 128, " На складе мафии LCN %i/100000 материалов", lcnmats);
	SCM(playerid, COLOR_GRAD1, string);
	format(string, 128, " На складе Русской Мафии %i/100000 материалов", rmmats);
	SCM(playerid, COLOR_GRAD1, string);
	return true;
}
CMD:payday(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	PayDay();
	return true;
}
CMD:paycheck(playerid)
{
	if(pData[playerid][pLogin] == false) return true;
	new string_[82];
    new pay_checks = pData[playerid][pPayCheck];
    pay_checks +=PayChecks(playerid);
	new paycheckhour;
	gettime(paycheckhour);
	format(string_, sizeof string_, " Вы заработали %d вирт. Деньги будут зачислены на ваш счет в %02d:00", pay_checks, paycheckhour < 23 ? paycheckhour+1 : 0);
	SendClientMessage(playerid, COLOR_GOLD, string_);
	return 1;
}

CMD:spawn(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	SpawnPlayer(playerid);
	return true;
}
CMD:pspawn(playerid, params[])
{
	new giveplayerid;
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u", giveplayerid)) return SCM(playerid,0xFFFFFFFF, " Введите: /pspawn [ID].");
	if(!IsPlayerConnected(giveplayerid)) return SCM(playerid,0xFFFFFFFF, " Игрок не в сети");
	SpawnPlayer(giveplayerid);
	SCM(playerid,COLOR_WHITE," Удачно!");
	return true;
}
CMD:busdrivers(playerid)
{
	if(!pData[playerid][pLogin]) return true;
	new null[13], str[512];
	foreach(new i: Player)
	{
		if(GetPVarInt(i,"TypeBus")) null[GetPVarInt(i,"TypeBus")]++, null[0]++;
	}
	if(!null[0]) return SCM(playerid,COLOR_GREY," Нет водителей автобуса!");
	null[7] = 100 / null[0] * null[1];
	null[8] = 100 / null[0] * null[2];
	null[9] = 100 / null[0] * null[3];
	null[10] = 100 / null[0] * null[4];
	null[11] = 100 / null[0] * null[5];
	null[12] = 100 / null[0] * null[6];
	format(str,sizeof(str),			"Всего водителей: %i человек\n\n\
									ВнутриГородской ЛС\t\t\t\t[%s]%i%% %i человек\n\
									ВнутриГородской СФ\t\t\t\t[%s]%i%% %i человек\n\
									ВнутриГородской ЛВ\t\t\t\t[%s]%i%% %i человек\n", null[0],
	ToDevelopSkills(null[7], 100 - null[7]), null[7], null[1],
	ToDevelopSkills(null[8], 100 - null[8]), null[8], null[2],
	ToDevelopSkills(null[9], 100 - null[9]), null[9], null[3]);
	format(str,sizeof(str),			"%sАвтоВокзал LS << >> Автошкола SF\t\t[%s]%i%% %i человек\n\
									АвтоВокзал LS << >> АвтоВокзал LV\t\t[%s]%i%% %i человек\n\
									АвтоВокзал LS << >> Заводы\t\t\t[%s]%i%% %i человек", str,
	ToDevelopSkills(null[10], 100 - null[10]), null[10], null[4],
	ToDevelopSkills(null[11], 100 - null[11]), null[11], null[5],
	ToDevelopSkills(null[12], 100 - null[12]), null[12], null[6]);
	return ShowPlayerDialog(playerid,1100,DIALOG_STYLE_MSGBOX," ",str,"Готово","");
}

CMD:spcar(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	return true;
}

CMD:spveh(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new Float:pos;
	if(sscanf(params, "f",pos)) return SCM(playerid,COLOR_GRAD2, " Введите: /spveh [радиус]");
	new Float:car_x,Float:car_y,Float:car_z;
	
	foreach(new cars: Vehicle)
	{
		if(GetVehicleModel(cars) > 399)
		{
			AntiCheatGetVehiclePos(cars,car_x,car_y,car_z);
			if(IsPlayerInRangeOfPoint(playerid,pos,car_x,car_y,car_z)) SetVehicleToRespawn(cars);
		}
	}
	return true;
}

CMD:spcars(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(!IsPlayerConnected(playerid)) return true;
	if(pData[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /spcars [расстояние]");
	if(params[0] < 1 || params[0] > 100) return SCM(playerid,COLOR_GREY," Радиус должен быть не менее 1 и не более 100 метров");
	new Float:car_x,Float:car_y,Float:car_z;
	foreach(new cars: Vehicle)
	{
		if(GetVehicleModel(cars) > 399)
		{
			AntiCheatGetVehiclePos(cars,car_x,car_y,car_z);
			if(IsPlayerInRangeOfPoint(playerid,params[0]+2,car_x,car_y,car_z))
			{
				if(IsPlayerInAnyVehicle(playerid)) SetVehicleToRespawn(GetPlayerVehicleID(playerid));
				if(IsVehicleOccupied(cars) == -1) SetVehicleToRespawn(cars);
			}
		}
	}
	SCM(playerid,COLOR_BLUE," Машины заспавнены");
	format(cString,78," Администратор: %s заспавнил машины",Name(playerid));
	return ProxDetector(params[0], playerid, cString, COLOR_LIGHTRED,COLOR_LIGHTRED,COLOR_LIGHTRED,COLOR_LIGHTRED,COLOR_LIGHTRED);
}
CMD:cc(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	for(new i = 0; i < 60; i++) SendClientMessageToAll(COLOR_WHITE, "");
	return true;
}
CMD:unzap(playerid, params[])
{
    if(!IsACop(playerid))
	    return SCM(playerid, COLOR_WHITE, "Вы не коп!");
	    
    if(sscanf(params, "u", params[0]))
		return SCM(playerid, COLOR_WHITE, "Введите: /unzap [id]");
		
    strmid(pData[params[0]][pBlackList],"None",0,14, 14);
    SetAccountInfo(params[0], pData[playerid][pBlackList], "pBlackList");

	new blackListString[123];
    format(blackListString, sizeof(blackListString), "Вы удалили из списка запрещенных дело - %s ",pData[params[0]][pName]);
	SCM(playerid, 0x6495EDFF, blackListString);

	format(blackListString, sizeof(blackListString), "%s удалил ваше дело из списка запрещенных",pData[playerid][pName]);
	SCM(params[0], 0x6495EDFF, blackListString);
	
	format(blackListString, sizeof(blackListString), "%s удалил дело %s из списка запрещенных",pData[playerid][pName],pData[params[0]][pName]);
	SendTeamMessage(pData[playerid][pMember], COLOR_ALLDEPT, blackListString);
	return 1;
}
CMD:zap(playerid, params[])
{
	if(!IsACop(playerid))
	    return SCM(playerid, COLOR_WHITE, "Вы не коп!");
	    
	if(sscanf(params, "us[15]", params[0],params[1]))
		return SCM(playerid, COLOR_WHITE, "Введите: /zap [id] [причина]");
		
	if(strlen(params[1]) < 5 || strlen(params[1]) > 14)
	    return SCM(playerid, COLOR_WHITE, "Причина от 5 до 14 символов!");
	
	if(pData[params[0]][pJailTime] < 1)
		return SCM(playerid, COLOR_GRAD1, "Человек не в тюрьме!");
	

	strmid(pData[params[0]][pBlackList],params[1],0,14, 14);
    SetAccountInfo(params[0], pData[playerid][pBlackList], "pBlackList");
    
	new blackListString[123];
    format(blackListString, sizeof(blackListString), "Вы ввели запрет на обжалование дела %s ",pData[params[0]][pName]);
	SCM(playerid, 0x6495EDFF, blackListString);
	
	format(blackListString, sizeof(blackListString), "%s ввел запрет на обжалование вашего дела ",pData[playerid][pName]);
	SCM(params[0], 0x6495EDFF, blackListString);
	
	format(blackListString, sizeof(blackListString), "%s ввел запрет на дело %s. Причина: %s",pData[playerid][pName],pData[params[0]][pName],params[1]);
	SendTeamMessage(pData[playerid][pMember], COLOR_ALLDEPT, blackListString);
    return 1;
}
CMD:blacklist(playerid)
{
	if((pData[playerid][pMember] != 7 || pData[playerid][pRank] != 2) && !IsACop(playerid)) return true;
	
	new strBlackList[512];
	new __;
	
    foreach(new i: OnPlayersStream[playerid])
    {
        if(strlen(pData[i][pBlackList]) > 4) // если чел в чс
        {
            new BlackSTR[123];
            format(BlackSTR, sizeof(BlackSTR),"[%d] %s\t%s\n",i, pData[i][pName],pData[i][pBlackList]);
            strcat(strBlackList, BlackSTR);
            __++;
        }
    }
    ShowPlayerDialog(playerid, 0, DIALOG_STYLE_TABLIST,"Запрещенные дела",strBlackList,"Готово","Отмена");
	return true;
}
CMD:free(playerid, params[])
{
	if(pData[playerid][pMember] != 7 || pData[playerid][pRank] != 2)
	    return SCM(playerid, COLOR_WHITE, "Вы не адвокат!");
	    
	if(sscanf(params, "ud", params[0],params[1],params[2]))
		return SCM(playerid, COLOR_WHITE, " Введите: /free [id] [цена]");
		
	else if(pData[params[0]][pJailTime] < 1)
		return SCM(playerid, COLOR_GRAD1, " Человек не в тюрьме!");
		
	else if(!ProxDetectorS(6.0, playerid, params[0]))
		return SCM(playerid, COLOR_GREY, " Человек не рядом с вами!");
		
	else if(params[1] < 100 || params[1] > 50000)
		return SCM(playerid, COLOR_GREY, " Цена не может быть меньше 100 и больше 50000!");
		
	else if(params[0] == playerid)
		return  SCM(playerid,COLOR_GRAD1, " [Ошибка]  Вы указали свой ID");
	
	if(strlen(pData[params[0]][pBlackList]) > 4) {
	    SCM(playerid, COLOR_GREY, "Данное дело в списке запрещенных!");
	    return 1;
	}
	
	new strFree[123];
	format(strFree, sizeof(strFree), " Вы предложили %s освободить его. Цена: %i вирт",pData[params[0]][pName],params[1]);
	SCM(playerid, 0x6495EDFF, strFree);
	
	format(strFree, sizeof(strFree), "%s предлагает освободить вас. Цена: %i вирт",pData[playerid][pName],params[1]);
	SCM(params[0], 0x6495EDFF, strFree);

	SetPVarInt(params[0],"FreeOffer",playerid);
	SetPVarInt(params[0],"FreePrice",params[1]);
	
	format(strFree, sizeof(strFree),"Выйти за %d $",params[1]);
	ShowPlayerDialog(params[0], 5525, DIALOG_STYLE_LIST,strFree,"1. Оплатить наличными\n2. Оплатить картой\n3. Отказаться","Готово","Отмена");
	return true;
}
CMD:selleat(playerid, params[])
{
	if(!pData[playerid][pLogin] || pData[playerid][pJob] != 3) return true;
	if(sscanf(params, "u", params[0])) return	SCM(playerid, COLOR_WHITE, " Введите: /selleat [playerid]");
	if((GetPlayerVehicleID(playerid) < hotdogcar[0] || GetPlayerVehicleID(playerid) > hotdogcar[1]) && !GetPVarInt(playerid,"h_stall")) return SCM(playerid,COLOR_GREY," Вы не можете продать хот дог");
	if(!GetPVarInt(playerid,"h_contract")) return SCM(playerid,COLOR_GREY," Вы не заключили контракт с закусочной");
	if(GetPlayerVehicleID(playerid) != GetPVarInt(playerid,"rentcar_job") && !GetPVarInt(playerid,"h_stall")) return SCM(playerid,COLOR_GREY," Это не ваш автомобиль");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid,COLOR_GREY," Игрок должен находиться рядом с вами");
	SendMes(playerid,0x6495EDFF," Вы предложили %s ХотДог за %i вирт",Name(params[0]),GetPVarInt(playerid,"h_price"));
	SendMes(params[0],0x6495EDFF,"%s предлагает Вам ХотДог за %i вирт. ((  Введите: /(ac)cept hotdog для покупки ХотДога ))",pData[playerid][pName],GetPVarInt(playerid,"h_price"));
	SetPVarInt(params[0],"h_id",playerid+1);
	return true;
}
CMD:rename(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /rename [id]");
	if(params[0] == INVALID_PLAYER_ID) return true;
	if(strlen(WantNickChange[params[0]]) < 3) return SCM(playerid,-1, "Этот игрок не хочет менять ник");
	format(cString,sizeof(cString), " %s одобрил заявку на смену ника: %s >> %s",Name(playerid),Name(params[0]),WantNickChange[params[0]]);
	SendClientMessageToAll(COLOR_LIGHTRED,cString);
	SCM(playerid,COLOR_WHITE," Ник одобрен");
	new szQuery[55+24];
	mysql_format(DATABASE,szQuery, 55+24, "SELECT `Name` FROM `"TABLE_ACCOUNTS"` WHERE Name= '%e'",WantNickChange[params[0]]);
	mysql_tquery(DATABASE,szQuery,"OnMySQL_QUERY","iis",15,params[0],playerid);
	return true;
}
CMD:cname(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /cname [id]");
	if(params[0] == INVALID_PLAYER_ID) return true;
	if(!IsAMayor(playerid) || pData[playerid][pRank] != 1 && pData[playerid][pRank] != 6) return SCM(playerid,COLOR_GREY," Функция доступна только мэру, и секретарю");
	if(strlen(WantNickChange[params[0]]) < 3) return SCM(playerid,-1, "Этот игрок не подавал заявку на смену ника");
	if(pData[params[0]][pBank] < 3000000) return SCM(playerid,COLOR_GREY," У этого игрока недостаточно денег на счету");
	format(cString,sizeof(cString), " %s одобрил заявку на смену ника: %s >> %s",Name(playerid),Name(params[0]),WantNickChange[params[0]]);
	SendClientMessageToAll(COLOR_YELLOW,cString);
	pData[params[0]][pBank] -=3000000;
	SetAccountInfo(params[0], pData[playerid][pBank], "pBank");
	SCM(playerid,COLOR_WHITE," Ник одобрен");
	format(string,64,"%s to %s",Name(params[0]),WantNickChange[params[0]]);
	MoneyLog(pData[playerid][pName],string, 0, "ReNamePlayer");
	new szQuery[54+MAX_PLAYER_NAME];
	mysql_format(DATABASE,szQuery,sizeof(szQuery),"SELECT `Name` FROM `"TABLE_ACCOUNTS"` WHERE Name= '%e'",WantNickChange[params[0]]);
	mysql_tquery(DATABASE,szQuery,"OnMySQL_QUERY","iis",15,params[0],playerid);
	return true;
}
CMD:forceskin(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /forceskin [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(params[0] == INVALID_PLAYER_ID) return true;
	if(pData[params[0]][pMember] < 1) return SCM(playerid, COLOR_GREY, " Игрок не состоит в организации");
	SCM(params[0], 0x6BB3FFAA," Вы были допущены к изменению скина администратором Noxe-Rp");
	format(cString, sizeof(cString), " Вы допустили %s к изменению скина", Name(params[0]));
	SCM(playerid, 0x6BB3FFAA, cString);
	SCM(params[0], COLOR_DRED, " Используйте клавишу 'Быстрый бег' (пробел по умолчанию)");
	SCM(params[0], COLOR_DRED, " Используйте клавишу 'Вверх,вниз' (W,S по умолчанию)");
	ShowMenuForPlayer(ChoseSkin[0],params[0]);
	SetPlayerInterior(params[0],5);
	OldSkin[params[0]] = GetPlayerSkin(params[0]);
	ChosenSkin[params[0]] = OldSkin[params[0]];
	new skin =2 + random(100);
	SetPlayerVirtualWorld(params[0],skin);
	new rand = 0;
	SetPlayerPos(params[0], gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
	SetPlayerFacingAngle(params[0], gInviteSpawns[rand][3]);
	SetPlayerCameraPos(params[0],gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
	SetPlayerCameraLookAt(params[0],gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
	TogglePlayerControllable(params[0], 0);
	SelectChar[params[0]] = 255;
	SelectCharID[params[0]] = pData[params[0]][pMember];
	SelectCharPlace[params[0]] = 1;
	return true;
}
CMD:setskin(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /setskin [id скина]");
	if(params[0] > 311 || params[0] < 1) { SCM(playerid, COLOR_GREY, " Неправильный ID скина!"); return true; }
	pData[playerid][pChar][0] = params[0];
	SetPlayerSkin(playerid, pData[playerid][pChar][0]);
	return true;
}
CMD:setplayerskin(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 10 || dostup[playerid] == 0) return true;
	if(sscanf(params, "ud", params[0],params[1])) return SCM(playerid, COLOR_WHITE, " Введите: /setplayerskin [id игрока/ник] [id скина]");
	if(params[1] > 311 || params[1] < 1) { SCM(playerid, COLOR_GREY, " Неправильный ID скина!"); return true; }
	if(!IsPlayerConnected(params[0])) return true;
	if(params[0] == INVALID_PLAYER_ID) return true;
	pData[params[0]][pChar][0] = params[1];
	format(cString, 64, "Вы изменили скин %s на номер: %i",Name(params[0]),params[1]);
	SCM(playerid, 0x6495EDFF, cString);
	SetPlayerSkin(params[0], pData[params[0]][pChar][0]);
	return true;
}
CMD:pay(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(sscanf(params, "ud", params[0],params[1])) return	SCM(playerid, COLOR_WHITE, " Введите: /pay [id] [сумма]");
	if(params[0] == playerid) return SCM(playerid,COLOR_GREY," Вы указали свой ID");
	if(params[0] == INVALID_PLAYER_ID) return true;
	if(params[1] > 1000 && pData[playerid][pLevel] < 1) return SCM(playerid, COLOR_GRAD1, " Нельзя передать меньше 1 вирта и больше 1000 вирт.");
	if(params[1] < 1 || params[1] > 100000) return SCM(playerid, COLOR_GRAD1, " Нельзя передать меньше 1 вирта и больше 100000 вирт.");
	if(pData[params[0]][pLevel] < 6 && pData[playerid][pLimitPay]+params[1] > 100000 && pData[playerid][pPayFlood] > gettime()) return SCM(playerid, COLOR_GRAD1, " Нельзя передать больше 50000 вирт в 5 минут");
	if(!IsPlayerConnected(params[0]) || !pData[playerid][pLogin]) return SCM(playerid,COLOR_GREY," Игрок не найден");
	if(!ProxDetectorS(5.0, playerid, params[0])) return SCM(playerid, COLOR_GRAD1, " Вы слишком далеко");
	if(GetSRVMoney(playerid) < params[1]) return SCM(playerid,COLOR_GREY," У вас нет столько денег");
	if(pData[playerid][pIp] == pData[params[0]][pIp] && pData[playerid][pLevel] < 3) return SCM(playerid,COLOR_GREY," Передавать деньги на твинк можно с 3-го уровня");
	pData[params[0]][pCash] += params[1];
	pData[playerid][pCash] -= params[1];
	SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
	SetAccountInfo(params[0], pData[params[0]][pCash], "pCash");
	format(cString, 72, " Вы передали %s[%i] %i вирт",Name(params[0]),params[0],params[1]);
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	SCM(playerid, COLOR_GRAD1, cString);
	format(cString, sizeof(cString), " Вы получили %i вирт от %s[%i]",params[1],pData[playerid][pName], playerid);
	SCM(params[0], COLOR_GRAD1, cString);
	PlayerPlaySound(params[0], 1052, 0.0, 0.0, 0.0);
	format(cString,sizeof(cString), "достал бумажник и передал деньги %s",Name(params[0]));
	SetPlayerChatBubble(playerid,cString,COLOR_PURPLE,30.0,10000);
	new year, month,day;
	getdate(year, month, day);
	MoneyLog(pData[playerid][pName],pData[params[0]][pName], params[1], "(-)Pay");
	if(pData[playerid][pLevel] < 6) pData[playerid][pLimitPay] = params[1],pData[playerid][pPayFlood] = gettime()+300;
	if(pData[params[0]][pLevel] < 2 && pData[params[0]][pCash] > 400000)
	{
		format(string,256," <Warning> %s[%d]: Возможно bagouser. lvl = 1 | money = %i | donatemoney: %i",pData[params[0]][pName],params[0],pData[params[0]][pCash],pData[params[0]][pDonateAccount]);
		ABroadCast(COLOR_REDD,string,3);
	}
	return true;
}
CMD:setmats(playerid, params[])
{
	if(!pData[playerid][pLogin]) return SCM(playerid,COLOR_WHITE," Необходимо авторизоваться");
	if(pData[playerid][pAdmin] < 10 || dostup[playerid] == 0) return true;
	if(sscanf(params, "dd", params[0],params[1]))
	{
		SCM(playerid, COLOR_WHITE, " Введите: /setmats [номер] [количество]");
		SCM(playerid, COLOR_WHITE, " [1] - LSPD, [2] - FBI, [3] - SFA, [4] - Yakuza, [5] - LCN, [6] - SFPD, [7] - Ballas, [8] - Vagos");
		SCM(playerid, COLOR_WHITE, " [9] - RM, [10] - Groove, [11] - Aztecas, [12] - Rifa, [13] - Army LV, [14] - LVPD");
		return true;
	}
	switch (params[0])
	{
	case 1:
		{
			lspdmatbi = params[1];
			format(cString, sizeof(cString), " Материалы LSPD изменены на: %i", params[1]);
		}
	case 2:
		{
			fbimats = params[1];
			format(cString, sizeof(cString), " Материалы FBI изменены на: %i", params[1]);
		}
	case 3:
		{
			armmatsf = params[1];
			format(cString, sizeof(cString), " Материалы SFA изменены на: %i", params[1]);
		}
	case 4:
		{
			yakuzamats = params[1];
			format(cString, sizeof(cString), " Материалы Yakuza изменены на: %i", params[1]);
		}
	case 5:
		{
			lcnmats = params[1];
			format(cString, sizeof(cString), " Материалы LCN изменены на: %i", params[1]);
		}
	case 6:
		{
			sfpdmats = params[1];
			format(cString, sizeof(cString), " Материалы SFPD изменены на: %i", params[1]);
		}
	case 7:
		{
			ballasmatbi = params[1];
			format(cString, sizeof(cString), " Материалы Ballas изменены на: %i", params[1]);
		}
	case 8:
		{
			vagosmatbi = params[1];
			format(cString, sizeof(cString), " Материалы Vagos изменены на: %i", params[1]);
		}
	case 9:
		{
			rmmats = params[1];
			format(cString, sizeof(cString), " Материалы RM изменены на: %i", params[1]);
		}
	case 10:
		{
			groovmatbi = params[1];
			format(cString, sizeof(cString), " Материалы Groove изменены на: %i", params[1]);
		}
	case 11:
		{
			aztekmatbi = params[1];
			format(cString, sizeof(cString), " Материалы Aztecas изменены на: %i", params[1]);
		}
	case 12:
		{
			rifamatbi = params[1];
			format(cString, sizeof(cString), " Материалы Rifa изменены на: %i", params[1]);
		}
	case 13:
		{
			armmatbi = params[1];
			format(cString, sizeof(cString), " Материалы LVA изменены на: %i", params[1]);
		}
	case 14:
		{
			lvpdmats = params[1];
			format(cString, sizeof(cString), " Материалы LVPD изменены на: %i", params[1]);
		}
	default:
		{
			format(cString, 12, "[Ошибка]");
		}
	}
	SCM(playerid, COLOR_GRAD1, cString);
	return true;
}
CMD:setstat(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	new giveplayerid;
	new stat;
	new amount;
	if(pData[playerid][pAdmin] < 10 || dostup[playerid] == 0) return true;
	if(sscanf(params, "udd",giveplayerid,stat,amount))
	{
		SCM(playerid, COLOR_WHITE, " Введите: /setstat [id] [номер] [количество]");
		SCM(playerid, COLOR_GRAD4, " [1] Уровень|[2] Законопослушность|[3] Материалы|[4] Скин|[5] Преступлений");
		SCM(playerid, COLOR_GRAD3, " [6] Номер телефона|[7] Exp|[8] Ключ от дома |[9] Номер бизнеса");
		SCM(playerid, COLOR_GRAD2, " [10] VIP [1-3]|[11] Работа игрока|[12] Сытость|[13] Деньги в банке");
		SCM(playerid, COLOR_GRAD2, " [14] Счёт мобильного|[15] Деньги|[16] Варны|[17] Наркотики");
		SCM(playerid, COLOR_GRAD2, " [18] Член орг|[19] Донат счётчик");
		SCM(playerid, COLOR_GRAD2, " [20] Box|[21] Kong Fu|[22] Kick Box");
		SCM(playerid, COLOR_GRAD2, " [23] Машина|[24] Цвет авто 1|[25] Цвет авто 2|[26] Наркозависимость");
		SCM(playerid, COLOR_GRAD2, " [27] Модель игрока|[28] Помолвлен на|[29] Проценты Авто|[30] Мастерская|[31] Скилл таксиста|[32] Навык вождения");
		return true;
	}
	if(!IsPlayerConnected(giveplayerid)) return true;
	if(giveplayerid == INVALID_PLAYER_ID) return true;
	switch(stat)
	{
	case 1:
		{
			pData[giveplayerid][pLevel] = amount;
			format(string, 128, " LVL игрока изменён на: %i", amount);
			DollahScoreUpdate(giveplayerid);
			SetAccountInfo(giveplayerid,pData[giveplayerid][pLevel],"pLevel");
		}
	case 2:
		{
			pData[giveplayerid][pZakonp] = amount;
			format(string, 128, " Законопослушность: %i", amount);
		}
	case 3:
		{
			pData[giveplayerid][pMats] = amount;
			format(string, 128, " Материалы: %i", amount);
		}
	case 4:
		{
			pData[giveplayerid][pChar][0] = amount;
			format(string, 128, " Скин игрока установлен на: %i", amount);
		}
	case 5:
		{
			pData[giveplayerid][pCrimes] = amount;
			format(string, 128, " Преступлений: %i", amount);
		}
	case 6:
		{
			pData[giveplayerid][pPnumber] = amount;
			format(string, 128, " Номер телефона игрока изменён на: %i", amount);
		}
	case 7:
		{
			pData[giveplayerid][pExp] = amount;
			format(string, 128, " EXP игрока изменены на: %i", amount);
		}
	case 8:
		{
			//pData[giveplayerid][pPHouseKey] = amount;
			format(string, 128, " пошел нахуй", amount);
		}
	case 9:
		{
			format(string, 128, " Бизнес: %i", amount);
		}
	case 10:
		{
			pData[giveplayerid][pDonateRank] = amount;
			format(string, 128, " VIP аккаунт уровня: %i", amount);
		}
	case 11:
		{
			pData[giveplayerid][pJob] = amount;
			format(string, 128, " Работа: %i", amount);
		}
	case 12:
		{
		    UpdatePlayerHunger(giveplayerid, amount);
			//pData[giveplayerid][pSatiety] = amount;
			format(string, 128, " Сытость игрока: %i", pData[giveplayerid][pSatiety]);
		}
	case 13:
		{
			pData[giveplayerid][pBank] = amount;
			format(string, 128, " Деньги в банке изменены на: %i вирт", amount);
		}
	case 14:
		{
			pData[giveplayerid][pMobile] = amount;
			format(string, 128, " Счёт мобильного: %i вирт", amount);
		}
	case 15:
		{
			pData[giveplayerid][pCash] = amount;
			format(string, 128, " Деньги изменены на: %i вирт", amount);
		}
	case 16:
		{
			pData[giveplayerid][pWarns] = amount;
			format(string, 128, " Количество варнов изменено на: %i", amount);
		}
	case 17:
		{
			pData[giveplayerid][pDrugs] = amount;
			format(string, 128, " Количество наркотиков изменено на: %i", amount);
		}
	case 18:
		{
			pData[giveplayerid][pMember] = amount;
			pData[giveplayerid][pRank] = 1;
			format(string, 128, " Организация: %i", amount);
		}
	case 19:
		{
			pData[giveplayerid][pDonateAccount] = amount;
			format(string, 128, " Донат счётчик изменён на: %i вирт", amount);
		}
	case 23:
		{
			CarInfo[giveplayerid][carModel][GetPVarInt(giveplayerid,"chosencar")] = amount;
			SetCarsInfo(giveplayerid,amount,"model",GetPVarInt(giveplayerid,"chosencar"));
			format(string, 128, " Машина: %i", amount);
		}
	case 24:
		{
			CarInfo[giveplayerid][carColor_one][GetPVarInt(giveplayerid,"chosencar")] = amount;
			SetCarsInfo(giveplayerid,amount,"color_one",GetPVarInt(giveplayerid,"chosencar"));
			format(string, 128, " Цвет 1: %i", amount);
		}
	case 25:
		{
			CarInfo[giveplayerid][carColor_two][GetPVarInt(giveplayerid,"chosencar")] = amount;
			SetCarsInfo(giveplayerid,amount,"color_two",GetPVarInt(giveplayerid,"chosencar"));
			format(string, 128, " Цвет 2: %i", amount);
		}
	case 26:
		{
			pData[giveplayerid][pAddiction] = amount;
			format(string, 128, " Зависимость %i", amount);
		}
	case 27:
		{
			pData[giveplayerid][pModel] = amount;
			format(string, 128, " Модель игрока: %i", amount);
		}
	case 28:
		{
			format(string,128," Временно отключено");
		}
	case 29:
		{
			CarInfo[giveplayerid][carPercent][GetPVarInt(giveplayerid,"chosencar")] = amount;
			SetCarsInfo(giveplayerid,amount,"percent",GetPVarInt(giveplayerid,"chosencar"));
			format(string, 128, " Проценты Автмобиля: %i", amount);
		}
	case 30:
		{
			pData[giveplayerid][pAvtomas] = amount;
			format(string, 128, " Мастерская игрока: %i", amount);
		}
	case 31:
		{
			pData[giveplayerid][job_skill][job_taxi] = amount;
			format(string, 128, " Скилл таксиста: %i", amount);
		}
	case 32:
		{
			pData[giveplayerid][pDrivingSkill] = amount;
			format(string, 128, " Навык вождения: %i", amount);
		}
	}
	SCM(playerid, COLOR_GRAD1, string);
	return true;
}

CMD:setbcost(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	if(sscanf(params, "dd",params[0],params[1])) return SCM(playerid, COLOR_WHITE, " Введите: /setbcost [бизнес] [цена]");
	BizzInfo[params[0]][bBuyPrice] = params[1];
	SCM(playerid, COLOR_WHITE, " Стоимость бизнеса установлена");
	return true;
}
CMD:setbproducts(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	if(sscanf(params, "dd",params[0],params[1])) return SCM(playerid, COLOR_WHITE, " Введите: /setbproducts [бизнес] [продукты]");
	BizzInfo[params[0]][bProducts] = params[1];
	SCM(playerid, COLOR_WHITE, " Количество продуктов установлено");
	return true;
}
CMD:setbizbar(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /setbizbar [бизнес]");
	new Float:X,Float:Y,Float:Z; AntiCheatGetPos(playerid,X,Y,Z);
	BizzInfo[params[0]][bBarX] = X;
	BizzInfo[params[0]][bBarY]= Y;
	BizzInfo[params[0]][bBarZ] = Z;
	SCM(playerid, COLOR_GREY, " Координаты бара установлены");
	return true;
}
CMD:setallbizworld(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	for(new i = 1; i <= TotalBizz; i++) BizzInfo[i][bVirtualWorld] = i;
	SCM(playerid, COLOR_GREY, " Виртуальные миры распределены");
	return true;
}
CMD:setbizexit(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /setbizexit [бизнес]");
	if(params[0] > TotalBizz) return SCM(playerid,COLOR_GREY," Неверный ID");
	new Float:X,Float:Y,Float:Z; AntiCheatGetPos(playerid,X,Y,Z);
	DestroyDynamicPickup(BizzInfo[params[0]][bExitPic]);
	BizzInfo[params[0]][bExitX] = X;
	BizzInfo[params[0]][bExitY]= Y;
	BizzInfo[params[0]][bExitZ] = Z;
	BizzInfo[params[0]][bExitPic] = CreateDynamicPickup(19132, 23, BizzInfo[params[0]][bExitX], BizzInfo[params[0]][bExitY], BizzInfo[params[0]][bExitZ],BizzInfo[params[0]][bVirtualWorld]);
	SCM(playerid, COLOR_GREY, " Координаты выхода установлены");
	return true;
}
CMD:setbizeenter(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /setbizenter [бизнес]");
	if(params[0] > TotalBizz) return SCM(playerid,COLOR_GREY," Неверный ID");
	new Float:X,Float:Y,Float:Z; AntiCheatGetPos(playerid,X,Y,Z);
	DestroyDynamicPickup(BizzInfo[params[0]][bEnterPic]);
	BizzInfo[params[0]][bEntranceX] = X;
	BizzInfo[params[0]][bEntranceY]= Y;
	BizzInfo[params[0]][bEntranceZ] = Z;
	BizzInfo[params[0]][bEnterPic] = CreateDynamicPickup(19132, 23, BizzInfo[params[0]][bEntranceX], BizzInfo[params[0]][bEntranceY], BizzInfo[params[0]][bEntranceZ],0);
	SCM(playerid, COLOR_GREY, " Координаты входа установлены");
	DestroyDynamic3DTextLabel(BizzInfo[params[0]][bLabel]);
	if(strcmp(BizzInfo[params[0]][bOwner],"None",true) == 0) format(string, 90, " %s\nПродаётся", BizzInfo[params[0]][bMessage], BizzInfo[params[0]][bBuyPrice]), BizzInfo[params[0]][bLocked] = 1;
	else format(string,128, "%s\nВладелец:\n %s", BizzInfo[params[0]][bMessage], BizzInfo[params[0]][bOwner]);
	BizzInfo[params[0]][bLabel] = CreateDynamic3DTextLabel(string,COLOR_GREEN,BizzInfo[params[0]][bEntranceX], BizzInfo[params[0]][bEntranceY], BizzInfo[params[0]][bEntranceZ]+1,20.0);
	return true;
}
CMD:setbizname(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	new b_name[64];
	if(sscanf(params, "ds[64]",params[0],b_name)) return SCM(playerid, COLOR_WHITE, " Введите: /setbizname [бизнес] [name]");
	if(params[0] > TotalBizz) return SCM(playerid,COLOR_GREY," Неверный ID");
	strmid(BizzInfo[params[0]][bMessage],b_name, 0, strlen(b_name), 64);
	DestroyDynamic3DTextLabel(BizzInfo[params[0]][bLabel]);
	if(strcmp(BizzInfo[params[0]][bOwner],"None",true) == 0) format(string, 90, " %s\nПродаётся", BizzInfo[params[0]][bMessage], BizzInfo[params[0]][bBuyPrice]), BizzInfo[params[0]][bLocked] = 1;
	else format(string,128, "%s\nВладелец:\n %s", BizzInfo[params[0]][bMessage], BizzInfo[params[0]][bOwner]);
	BizzInfo[params[0]][bLabel] = CreateDynamic3DTextLabel(string,COLOR_GREEN,BizzInfo[params[0]][bEntranceX], BizzInfo[params[0]][bEntranceY], BizzInfo[params[0]][bEntranceZ]+1,20.0);
	return true;
}
CMD:editdasd(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 9 || dostup[playerid] == 0) return true;
	ShowPlayerDialog(playerid, 3725, DIALOG_STYLE_LIST, "Выберите действие", "[1] Продать все дома\n[2] Продать все бизнесы\n[3] Установить дому интеръер\n[4] Установить дому интерьер часть 2\n[5] Распределить дома\n[6] Распределить цены на дома\n[7] Продать все квартиры\n[8] Удалить все аккаунты", "Выбрать", "Закрыть");
	return true;
}

publics: create_house(playerid)
{
	//new count;
	//cache_get_row_count(count);
	cache_get_value_name_int(0, "max(hID)",HouseInfo[TotalHouse][hID]);
	SendMes(playerid, -1, "Дом № - %d успешно создан. MySQL_ID = %d",TotalHouse, HouseInfo[TotalHouse][hID]);

	DeletePVar(playerid, "SelectedInt");
	DeletePVar(playerid, "add_house_step");
	DeletePVar(playerid, "SelectedInt_add"); 
	strmid(HouseInfo[TotalHouse][hOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);

	HouseInfo[TotalHouse][hPickup] = CreateDynamicPickup(1273, 1, HouseInfo[TotalHouse][hEntrancex], HouseInfo[TotalHouse][hEntrancey], HouseInfo[TotalHouse][hEntrancez]);
	HouseInfo[TotalHouse][hMIcon] = CreateDynamicMapIcon(HouseInfo[TotalHouse][hEntrancex], HouseInfo[TotalHouse][hEntrancey], HouseInfo[TotalHouse][hEntrancez], 31, COLOR_WHITE, 0, -1, -1,150);

	HouseInfo[TotalHouse][h_area] = CreateDynamicSphere(HouseInfo[TotalHouse][hEntrancex], HouseInfo[TotalHouse][hEntrancey], HouseInfo[TotalHouse][hEntrancez], 2, 0,0);
	Streamer_SetIntData(STREAMER_TYPE_AREA, HouseInfo[TotalHouse][h_area], E_STREAMER_EXTRA_ID, TotalHouse);
	server_add_house = false;
	TotalHouse ++;
	return 1;
}
CMD:gohouseint(playerid, params[])
{
	if(sscanf(params, "dd",params[0]))
		return SCM(playerid, COLOR_WHITE, " Введите: /gohouseint [nomer]");

	SetPlayerInterior(playerid,interior_info[params[0]][int_int]);
	SetPlayerVirtualWorld(playerid,playerid+50);
	SetPlayerPos(playerid,interior_info[params[0]][int_x],interior_info[params[0]][int_y],interior_info[params[0]][int_z]);
	return 1;

}
publics: create_podeezd(playerid)
{
	cache_get_value_name_int(0, "max(mysql_id)",podeezd_info[total_podeezd][mysql_id]);
	SendMes(playerid, -1, "падик № - %d успешно создан. MySQL_ID = %d",total_podeezd, podeezd_info[total_podeezd][mysql_id]);

	DeletePVar(playerid, "step_create_podeezd");
	
	//strmid(HouseInfo[TotalHouse][hOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);

	podeezd_info[total_podeezd][p_area] = CreateDynamicSphere(podeezd_info[total_podeezd][hEntrancex], podeezd_info[total_podeezd][hEntrancey], podeezd_info[total_podeezd][hEntrancez], 2, 0,0);
	Streamer_SetIntData(STREAMER_TYPE_AREA, podeezd_info[total_podeezd][p_area], E_STREAMER_EXTRA_ID, total_podeezd);
	//server_add_house = false;
	new padik_str[123];
	format(padik_str, sizeof padik_str,"Многоквартирный дом\nНомер подъезда: %i",total_podeezd);
	CreateDynamic3DTextLabel(padik_str,0x0076FCFF,podeezd_info[total_podeezd][hEntrancex], podeezd_info[total_podeezd][hEntrancey], podeezd_info[total_podeezd][hEntrancez]+1,5.0);
	CreateDynamicPickup(1318, 1, podeezd_info[total_podeezd][hEntrancex], podeezd_info[total_podeezd][hEntrancey], podeezd_info[total_podeezd][hEntrancez]);
	new interior_for_kvar[] = {0,5,6,10,9};
	new interior_kvar = interior_for_kvar[random(4)];
	new kvart_cnt = total_kvart;
	for(new etaz = 0; etaz < podeezd_info[total_podeezd][p_floors]; etaz ++)
	{
		for(new k = 0; k< 10; k++ )
		{
			new padik_int = podeezd_info[total_podeezd][p_hint];
			kvart_info[total_kvart][k_number]		= k;

			kvart_info[total_kvart][k_padik] 		= podeezd_info[total_podeezd][mysql_id];
			kvart_info[total_kvart][k_floor] 		= etaz;
			kvart_info[total_kvart][k_int]			= interior_kvar;

			new str_kvart[250];
			format(str_kvart, sizeof str_kvart,"{0076FC}Комната #%i\nПродается: %i вирт\nЧтобы войти, нажмите клавишу 'ENTER'",total_kvart,100);
			kvart_info[total_kvart][dtext] = CreateDynamic3DTextLabel(str_kvart,0x0076FCFF,kvar_pos[padik_int][k][0],kvar_pos[padik_int][k][1],kvar_pos[padik_int][k][2]+1,3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,podeezd_info[total_podeezd][p_word]+etaz);

			new sql_add_house[1000];
			format(sql_add_house, sizeof sql_add_house, "\
			INSERT INTO `kvartiri` \
			(`k_number`,`k_padik`,`k_floor`,`k_int`) VALUES ('%d', '%d', '%d','%d')",
			kvart_info[total_kvart][k_number],
			kvart_info[total_kvart][k_padik],
			kvart_info[total_kvart][k_floor],
			kvart_info[total_kvart][k_int]);

			mysql_query(DATABASE,sql_add_house);

			total_kvart ++ ;
		}
	}
	SendMes(playerid, -1, "падик № - %d успешно заполнен. Новых квартир = %d",total_podeezd, total_kvart - kvart_cnt);
	total_podeezd ++;
	return 1;
}
CMD:addpodeezd(playerid, params[])
{

	if(pData[playerid][pAdmin] < 10 || dostup[playerid] == 0) return true;
	new Float: posX, Float: posY, Float: posZ;
	AntiCheatGetPos(playerid, posX, posY, posZ);

	if(GetPVarInt(playerid, "step_create_podeezd") == 1)
	{
		new vehicleid = CreateVehicle_R(411, posX, posY, posZ, 0.0, 0, 0, 6000);
		SetVehicleParamsEx(vehicleid,true,true,false,false,false,false,false);
		UnLockCar(playerid,vehicleid);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SetPVarInt(playerid, "step_create_podeezd", 2);
		return 1;
	}
	if(GetPVarInt(playerid, "step_create_podeezd") == 2)
	{
		new Float: z_rot;
		AntiCheatGetVehiclePos(GetPlayerVehicleID(playerid), posX, posY, posZ);
		GetVehicleZAngle(GetPlayerVehicleID(playerid), z_rot);
		podeezd_info[total_podeezd][hCarx] = posX;
		podeezd_info[total_podeezd][hCary]= posY;
		podeezd_info[total_podeezd][hCarz] = posZ;
		podeezd_info[total_podeezd][hCarc] = z_rot;

		new sql_add_house[1000];
		format(sql_add_house, sizeof sql_add_house, "\
		INSERT INTO `podeezdi` \
		(`hEntrancex`, `hEntrancey`,`hEntrancez`,`hInt`,`hCarx`,`hCary`,`hCarz`,`hCarc`,`floors`,`word`) VALUES ('%f', '%f', '%f', '%i','%f','%f','%f','%f','%i','%i')",
		podeezd_info[total_podeezd][hEntrancex],
		podeezd_info[total_podeezd][hEntrancey], 
		podeezd_info[total_podeezd][hEntrancez],
		podeezd_info[total_podeezd][p_hint],
		podeezd_info[total_podeezd][hCarx], 
		podeezd_info[total_podeezd][hCary],
		podeezd_info[total_podeezd][hCarz], 
		podeezd_info[total_podeezd][hCarc],
		podeezd_info[total_podeezd][p_floors],
		podeezd_info[total_podeezd][p_word]);

		mysql_query(DATABASE,sql_add_house);

		mysql_tquery(DATABASE,"SELECT max(mysql_id) FROM `podeezdi`","create_podeezd", "i",playerid);

		return true;
	}
	if(sscanf(params, "dd",params[0],params[1]))
	{
		SCM(playerid, COLOR_WHITE, " Введите: /addpodeezd [тип подъезда] [кол-о этажей]");
		SCM(playerid,-1,"0 - элитный, 1 - хуевый");
		return true;
	}
	
	

	podeezd_info[total_podeezd][p_hint] 	  	= params[0];
	podeezd_info[total_podeezd][p_floors] 	  	= params[1];
	podeezd_info[total_podeezd][hEntrancex] 	= posX;
	podeezd_info[total_podeezd][hEntrancey] 	= posY;
	podeezd_info[total_podeezd][hEntrancez] 	= posZ;

	if(total_podeezd == 0)	podeezd_info[total_podeezd][p_word] = 1;
	else 					podeezd_info[total_podeezd][p_word]	= podeezd_info[total_podeezd-1][p_word]+podeezd_info[total_podeezd-1][p_floors];

	SetPVarInt(playerid, "step_create_podeezd", 1);
	return 1;
}

CMD:addhouse(playerid, params[])
{
	if(pData[playerid][pAdmin] < 10 || dostup[playerid] == 0) return true;
	

	new Float: posX, Float: posY, Float: posZ;
	AntiCheatGetPos(playerid, posX, posY, posZ);
	if(GetPVarInt(playerid, "add_house_step") == 3)
	{
		new Float: z_rot;
		AntiCheatGetVehiclePos(GetPlayerVehicleID(playerid), posX, posY, posZ);
		GetVehicleZAngle(GetPlayerVehicleID(playerid), z_rot);
		HouseInfo[TotalHouse][hCarx] = posX;
		HouseInfo[TotalHouse][hCary]= posY;
		HouseInfo[TotalHouse][hCarz] = posZ;
		HouseInfo[TotalHouse][hCarc] = z_rot;

		new sql_add_house[1000];
		format(sql_add_house, sizeof sql_add_house, "\
		INSERT INTO `"TABLE_HOUSE"` \
		(`hEntrancex`, `hEntrancey`,`hEntrancez`,`hKlass`,`hValue`,`hCarx`,`hCary`,`hCarz`,`hCarc`,`hInt`) VALUES\
		 ('%f', '%f', '%f', '%i','%i','%f','%f','%f','%f','%i')",HouseInfo[TotalHouse][hEntrancex],
		 HouseInfo[TotalHouse][hEntrancey], HouseInfo[TotalHouse][hEntrancez],HouseInfo[TotalHouse][hKlass],
		 HouseInfo[TotalHouse][hValue], HouseInfo[TotalHouse][hCarx], HouseInfo[TotalHouse][hCary],
		 HouseInfo[TotalHouse][hCarz], HouseInfo[TotalHouse][hCarc], HouseInfo[TotalHouse][hInt]);
		mysql_query(DATABASE,sql_add_house);

		mysql_tquery(DATABASE,"SELECT max(hID) FROM `"TABLE_HOUSE"`","create_house", "i",playerid);

		return true;
	}

	if(GetPVarInt(playerid, "add_house_step") == 2)
	{
		new vehicleid = CreateVehicle_R(411, posX, posY, posZ, 0.0, 0, 0, 6000);
		SetVehicleParamsEx(vehicleid,true,true,false,false,false,false,false);
		UnLockCar(playerid,vehicleid);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SetPVarInt(playerid, "add_house_step", 3);
		return 1;
	}

	if(sscanf(params, "d",params[0]))
	{
		SCM(playerid, COLOR_WHITE, " Введите: /addhouse [класс]");
		SCM(playerid,-1,"1 - [Nope] | 2 - [D] | 3 - [C] | 4 - [B] | 5 - [A] | 6 - [S]");
		return true;
	}
	if(server_add_house)
		return SendClientMessage(playerid, -1, "В данный момент кто-то создает дом, попробуйте позже!");

	server_add_house = true;
	HouseInfo[TotalHouse][hEntrancex] = posX;
	HouseInfo[TotalHouse][hEntrancey] = posY;
	HouseInfo[TotalHouse][hEntrancez] = posZ;

	if(params[0] == 1) HouseInfo[TotalHouse][hValue] = (1+random(2))*100000; 
	if(params[0] == 2) HouseInfo[TotalHouse][hValue] = (3+random(2))*100000;
	if(params[0] == 3) HouseInfo[TotalHouse][hValue] = (5+random(2))*100000;
	if(params[0] == 4) HouseInfo[TotalHouse][hValue] = (10+random(20))*100000;
	if(params[0] == 5) HouseInfo[TotalHouse][hValue] = (20+random(30))*100000;
	if(params[0] == 6) HouseInfo[TotalHouse][hValue] = (30+random(20))*100000;
	HouseInfo[TotalHouse][hKlass] 	  = params[0]-1;

	if(params[0] == 6)SetPVarInt(playerid, "SelectedInt_add", 5);
	else SetPVarInt(playerid, "SelectedInt_add", params[0]);

	ShowMenuForPlayer(buy_interior_menu,playerid);
	return 1;
}
CMD:addstall(playerid, params[])
{
	if(!pData[playerid][pLogin]) return true;
	if(pData[playerid][pAdmin] < 10 || dostup[playerid] == 0) return true;
	if(!GetPVarInt(playerid,"st_object"))
	{
		new Float: posX, Float: posY, Float: posZ;
		AntiCheatGetPos(playerid, posX, posY, posZ);
		new stobject = CreateDynamicObject(1340,posX,posY,posZ,0,0,0);
		SetPVarInt(playerid,"st_object",stobject);
		EditDynamicObject(playerid,stobject);
		SCM(playerid,COLOR_GREEN,"Поставьте прилавок на нужное место. {ffffff}Для продолжения введите команду ещё раз");
	}
	else ShowPlayerDialog(playerid, 1783, DIALOG_STYLE_MSGBOX, "Хот доги", "Продолжить изменять положение объекта", "Да", "Нет");
	return true;
}

CMD:getip(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid,COLOR_WHITE, " Введите: /getip [playerid]");
	new ip[15];
	GetPlayerIp(params[0],ip,15);
	//GetPlayerSubnet(params[0], subnet, sizeof(subnet));
	format(cString, sizeof(cString), " Nik [%s]   R-IP [%s]   L-IP [%s]   IP [%s]",Name(params[0]),pData[params[0]][pIpReg],pData[params[0]][pvIp],ip);
	SCM(playerid,0x6BB3FFAA,cString);
	return true;
}
CMD:getstats(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if (pData[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return	SCM(playerid, COLOR_WHITE, " Введите: /getstats [playerid]");
	if(!IsPlayerConnected(params[0])) return true;
	if(pData[playerid][pAdmin] >= 1 && pData[playerid][pAdmin] <= 2) return ShowStats(playerid,params[0]);
	if(pData[playerid][pAdmin] >= 3) return kShowStats(playerid,params[0]);
	return true;
}

CMD:fractionid(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if (pData[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	LeaderList(playerid);
	return true;
}
CMD:iwep(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "u",giveplayerid)) return  	SCM(playerid, COLOR_WHITE, " Введите: /iwep [playerid]");
	if(IsPlayerConnected(giveplayerid))
	{
		if(giveplayerid != INVALID_PLAYER_ID)
		{
			new Gun[13], Ammo[13], wep[350];
			GetPlayerWeaponData(giveplayerid,0,Gun[0],Ammo[0]);
			GetPlayerWeaponData(giveplayerid,1,Gun[1],Ammo[1]);
			GetPlayerWeaponData(giveplayerid,2,Gun[2],Ammo[2]);
			GetPlayerWeaponData(giveplayerid,3,Gun[3],Ammo[3]);
			GetPlayerWeaponData(giveplayerid,4,Gun[4],Ammo[4]);
			GetPlayerWeaponData(giveplayerid,5,Gun[5],Ammo[5]);
			GetPlayerWeaponData(giveplayerid,6,Gun[6],Ammo[6]);
			GetPlayerWeaponData(giveplayerid,7,Gun[7],Ammo[7]);
			GetPlayerWeaponData(giveplayerid,8,Gun[8],Ammo[8]);
			GetPlayerWeaponData(giveplayerid,9,Gun[9],Ammo[9]);
			GetPlayerWeaponData(giveplayerid,10,Gun[10],Ammo[10]);
			GetPlayerWeaponData(giveplayerid,11,Gun[11],Ammo[11]);
			GetPlayerWeaponData(giveplayerid,12,Gun[12],Ammo[12]);
			format(wep,sizeof(wep),
			"{ff00ff}State:   %s\n\n\
			0: Ид оружия: %i    Патрон: %i\
			\n1: Ид оружия: %i    Патрон: %i\
			\n2: Ид оружия: %i    Патрон: %i\
			\n3: Ид оружия: %i    Патрон: %i\
			\n4: Ид оружия: %i    Патрон: %i\
			\n5: Ид оружия: %i    Патрон: %i\
			\n6: Ид оружия: %i    Патрон: %i\
			\n7: Ид оружия: %i    Патрон: %i\
			\n8: Ид оружия: %i    Патрон: %i\
			\n9: Ид оружия: %i    Патрон: %i\
			\n10: Ид оружия: %i    Патрон: %i\
			\n11: Ид оружия: %i    Патрон: %i\
			\n12: Ид оружия: %i    Патрон: %i"
			, pData[giveplayerid][pName], Gun[0], Ammo[0], Gun[1], Ammo[1], Gun[2], Ammo[2], Gun[3], Ammo[3], Gun[4], Ammo[4], Gun[5], Ammo[5], Gun[6], Ammo[6], Gun[7], Ammo[7], Gun[8], Ammo[8], Gun[9], Ammo[9], Gun[10], Ammo[10], Gun[11], Ammo[11], Gun[12], Ammo[12]);
			ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX,"Информация оружия",wep,"Готово","");
		}
	}
	else return SCM(playerid, COLOR_GREY, " Игрок не найден!");
	return true;
}
CMD:agetstats(playerid, params[])
{
	if(pData[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new name[64];
	if(sscanf(params, "s[64]", name)) return SCM(playerid, COLOR_WHITE, " Введите: /agetstats [Nick_Name]");
	new szQuery[52+64];
	mysql_format(DATABASE,szQuery, 52+64, "SELECT * FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%e'",name);
	mysql_tquery(DATABASE,szQuery,"OnMySQL_QUERY","iis",16,playerid,name);
	MoneyLog(pData[playerid][pName],name, 0, "AGetStats");
	return true;
}
CMD:number(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /number [id]");
	if(!IsPlayerConnected(params[0])) return true;
	format(cString, 64, "Владелец: %s. Телефон: %i",Name(params[0]),pData[params[0]][pPnumber]);
	SCM(playerid, COLOR_WHITE, cString);
	return true;
}
CMD:bizfee(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(!IsPlayerConnected(playerid)) return true;
	if(!BGet(playerid)) return SCM(playerid, COLOR_GRAD2, " У вас нет бизнеса!");
	new bouse = pData[playerid][pPBizzKey];
	if(sscanf(params, "d",params[0])) return 	SCM(playerid, COLOR_WHITE, " Введите: /bizfee [цена]");
	if(params[0] < 50 || params[0] > 5000) return SCM(playerid, COLOR_GREY, " Минимальная цена 50, Максимальная 5000 вирт");
	BizzInfo[bouse][bPrice] = params[0];
	format(cString, 64, "Цена за товар установлена на %i вирт", BizzInfo[bouse][bPrice]);
	SCM(playerid, COLOR_WHITE, cString);
	if(BizzInfo[bouse][bType] == 4)
	{
		format(string,128, "%s\nВладелец:\n%s\nЦена бензина: %i вирт", BizzInfo[bouse][bMessage], BizzInfo[bouse][bOwner],BizzInfo[bouse][bPrice]);
		UpdateDynamic3DTextLabelText(BizzInfo[bouse][bLabel], COLOR_GREEN, string);
	}
	return true;
}
CMD:eat(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	for(new h = 1; h <= TotalBizz; h++)
	{
		if(!PlayerToPoint(10, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) || BizzInfo[h][bType] != 2 || GetPlayerVirtualWorld(playerid) != BizzInfo[h][bVirtualWorld]) continue;
		if(strcmp(BizzInfo[h][bOwner],"None",true) == 0 || BizzInfo[h][bLocked]) return SCM(playerid, COLOR_GREY, " Бизнес закрыт");
		if(GetPlayerInterior(playerid) == 10 || GetPlayerInterior(playerid) == 4) format(YCMDstr,sizeof(YCMDstr), "Бургер\t\t\t\t[%i вирт]\nРыбный суп\t\t\t[%i вирт]\nБольшой бургер\t\t[%i вирт]\nКотлеты\t\t\t[%i вирт]\
		\nПельмени\t\t\t[%i вирт]\nГамбургер\t\t\t[%i вирт]",BizzInfo[h][bPrice],BizzInfo[h][bPrice],BizzInfo[h][bPrice]*2,BizzInfo[h][bPrice]*2,BizzInfo[h][bPrice]*3,BizzInfo[h][bPrice]*3);
		else format(YCMDstr,sizeof(YCMDstr), "Пицца маленькая\t\t[%i вирт]\nПицца с грибами\t\t[%i вирт]\nПицца с сыром\t\t[%i вирт]\nПицца большая\t\t[%i вирт]\
		\nПицца с ветчиной\t\t[%i вирт]\nПицца с куринным мясом\t[%i вирт]",BizzInfo[h][bPrice],BizzInfo[h][bPrice],BizzInfo[h][bPrice]*2,BizzInfo[h][bPrice]*2,BizzInfo[h][bPrice]*3,BizzInfo[h][bPrice]*3);
		ShowPlayerDialog(playerid, 3389, DIALOG_STYLE_LIST, "Меню", YCMDstr, "Выбрать", "Отмена");
	}
	return true;
}
CMD:buy(playerid)
{
	if(pData[playerid][pLogin] == false) return true;
	for(new i = 1; i <= TotalBizz; i++)
	{
		if(!PlayerToPoint(10, playerid,BizzInfo[i][bBarX], BizzInfo[i][bBarY], BizzInfo[i][bBarZ]) || BizzInfo[i][bType] != 3 || GetPlayerVirtualWorld(playerid) != BizzInfo[i][bVirtualWorld]) continue;
		if(strcmp(BizzInfo[i][bOwner],"None",true) == 0 || BizzInfo[i][bLocked]) return SCM(playerid, COLOR_GREY, " Бизнес закрыт");
		if(BizzInfo[i][bProducts] <= 0) return SCM(playerid,COLOR_GREY," В бизнесе нет продуктов"), BizzInfo[i][bProducts] = 0;
		format(string,300,"Номер телефона:\t[%i вирт]\nСправочник:\t\t[%i вирт]\nАптечки(25шт.):\t\t[%i вирт]\nФотоаппарат:\t\t[%i вирт]\nЦветы:\t\t\t[%i вирт]\nУдочка:\t\t[%i вирт]\nСнасти(10шт.):\t\t[%i вирт]\nСонар:\t\t\t[%i вирт]",BizzInfo[i][bPrice],BizzInfo[i][bPrice]*2,
		BizzInfo[i][bPrice]*3,BizzInfo[i][bPrice]*3,BizzInfo[i][bPrice]*3,BizzInfo[i][bPrice]*4,BizzInfo[i][bPrice]*4,BizzInfo[i][bPrice]*5);
		ShowPlayerDialog(playerid, 5589, DIALOG_STYLE_LIST, "24/7", string, "Купить", "Отмена");
	}
	return true;
}

CMD:clients(playerid)
{
	new strTaxClients[512];
	new __ = 0;
	new vehicleid = GetPlayerVehicleID(playerid);
	
	if(car_data[vehicleid][TypeCar] != TYPE_TAXI || pData[playerid][pState] != PLAYER_STATE_DRIVER)
	{
	    SCM(playerid, COLOR_GRAD1, "Вы не начали работу таксистом!");
	    return 1;
	}
	
    foreach(new i: OnPlayersStream[playerid])
    {
        if(inTaxi[i] == playerid)
        {
            new taxiSTR[123];
            format(taxiSTR, sizeof(taxiSTR),"%s расстояние %.2f метра(ов)\n",pData[i][pName], GetPlayerDistanceFromPoint(playerid, GetPVarFloat(i, "TaxiGPScorX"), GetPVarFloat(i, "TaxiGPScorY"), GetPVarFloat(i, "TaxiGPScorZ")));
            strcat(strTaxClients, taxiSTR);
            __++;
        }
    }
    if(!__)
 		return SCM(playerid, COLOR_GRAD1, "У вас нет клиентов!");
 		
   	ShowPlayerDialog(playerid, 5533, DIALOG_STYLE_LIST,"Клиенты",strTaxClients,"Поехали","Отмена");
	return 1;
}

CMD:gps(playerid)
{
	if(pData[playerid][pLogin] == false) return true;
	if(pPressed[playerid] != -1) return SCM(playerid,COLOR_GREY," В данный момент  Вы не можете использовать навигатор");
	if(CP[playerid] == 776) { DisablePlayerRaceCheckpoint(playerid), CP[playerid] = 0; }
	ShowPlayerDialog(playerid, 8001, DIALOG_STYLE_LIST, "GPS", "[0] Важные\n[1] По работе\n[2] Бизнесы\n[3] Магазины\n[4] Базы организаций\n[5] Фермы\n[6] Дальнобойщики\n[7] СТО", "Выбрать", "Отмена");
	return true;
}
CMD:aquestion(playerid, params[])
{
	if(!pData[playerid][pLogin]) return true;
	else if(sscanf(params, "s[128]",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /aquestion [вопрос]");
	else if(pData[playerid][pRMuteTime] > gettime()) return SendClientMessage(playerid, COLOR_GRAD1, " Вам запрещено писать в репорт на определенное время");
	//else if(GetPVarInt(playerid,"FloodRep") > 0) return SCM(playerid, COLOR_GRAD1, " Запрещено писать в репорт чаще чем раз в 2 минуты. Пожалуйста, сформулируйте свою жалобу адекватно");
	format(string, 256, " Жалоба от: %s[%i]: %s", Name(playerid), playerid, params[0]);
	SCM(playerid, COLOR_YELLOW, string);
	SCM(playerid, COLOR_LIGHTRED, " Ваша жалоба была отправлена администрации");
	format(string, 256, " Жалоба от: %s[%i]: %s", Name(playerid), playerid, params[0]);
	SendAdminMessage(0xD97700AA,string);
	return true;
}
CMD:question(playerid, params[])
{
	if(!pData[playerid][pLogin]) return true;
	if(sscanf(params, "s[128]",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /question [вопрос]");
	if(GetPVarInt(playerid,"FloodAques") > 0) return SCM(playerid, 0xFFD5BBAA, "АнтиФлуд саппортам 15 секунд");
	format(string, 256, " ->Вопрос %s[%i]: %s", Name(playerid), playerid, params[0]);
	SCM(playerid, COLOR_YELLOW, string);
	format(string, 256, " ->Вопрос %s[%i]: %s", Name(playerid), playerid, params[0]);
	HelperMessage(0xE9A52800, string);
	SetPVarInt(playerid,"FloodAques",15);
	return true;
}
CMD:ooc(playerid, params[])
{
	if(pData[playerid][pMuted] > 0)
	{
		format(cString, 64, " У Вас бан чата! До снятия: %i секунд(ы)",pData[playerid][pMuted]);
		SCM(playerid, COLOR_LIGHTRED, cString);
		return true;
	}
	if(sscanf(params, "s[128]",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: (/o)oc [текст]");
	if((!noooc) && pData[playerid][pAdmin] < 1) return SCM(playerid, COLOR_GRAD1, " Общий чат отключен админом!");
	else if(dostup[playerid] == 0 && pData[playerid][pAdmin] >= 1) return true;
	if(pData[playerid][pAdmin] == 0 && gettime() < antioocsend) return SCM(playerid, COLOR_GREY, " Антифлуд ООС чата");
	antioocsend = gettime()+antiooc;
	foreach(new i: Player)
	{
		if(ChatOOC[playerid] == 1) SendMes(i,COLOR_OOC," << %s[%i]: %s >>",pData[playerid][pName], playerid, params[0]);
	}
	return true;
}
CMD:olimit(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",antiooc)) return SCM(playerid, COLOR_WHITE, " Введите: /olimit [секунды]");
	SendMes(playerid,0xFFFFFFFF,"Установлен лимит для OOC чата на %i секунд",antiooc);
	return true;
}
CMD:noooc(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if (pData[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if (noooc != 0) return noooc = 0, BroadCast(COLOR_WHITE, " Общий чат отключен админом!");
	if(sscanf(params, "s[128]", params[0])) return	SCM(playerid, COLOR_WHITE, " Введите: /noooc [1 включить / 0 отключить]");
	noooc = params[0], BroadCast(COLOR_WHITE, " Общий чат включен админом!");
	return true;
}
CMD:goverment(playerid, params[])
{
	if(!pData[playerid][pLogin]) return SCM(playerid,COLOR_WHITE," Вы не авторизованы!");
	if(!GetPVarInt(playerid,"Fraction_Duty")) return true;
	if(IsACop(playerid) || IsAArm(playerid) || IsAMayor(playerid) || IsAMedic(playerid) || IsALicenser(playerid) || IsAFbi(playerid))
	{
		new rtext[30];
		if(pData[playerid][pMuted] > 0)
		{
			format(cString, sizeof(cString), " У Вас бан чата! До снятия: %i секунд(ы)",pData[playerid][pMuted]);
			SCM(playerid, COLOR_LIGHTRED, cString);
			return true;
		}
		if(sscanf(params, "s[128]", params[0])) return	SCM(playerid, COLOR_WHITE, " Введите: (/gov)erment [текст]");
		if(pData[playerid][pMember] == 1 || pData[playerid][pLeader] == 1)
		{
			if(pData[playerid][pRank] < 13) return true;
			if(pData[playerid][pRank] == 13) { rtext = "Новости:"; }
			else if(pData[playerid][pRank] == 14) { rtext = "Новости:"; }
		}
		else if(pData[playerid][pMember] == 2 || pData[playerid][pLeader] == 2)
		{
			if(pData[playerid][pRank] < 8) return true;
			else if(pData[playerid][pRank] >= 9) { rtext = "Новости:"; }
		}
		else if(pData[playerid][pMember] == 3 || pData[playerid][pLeader] == 3)
		{
			if(pData[playerid][pRank] < 14) return true;
			if(pData[playerid][pRank] == 14) { rtext = "Новости:"; }
			else if(pData[playerid][pLeader] == 3) { rtext = "Новости:"; }
		}
		else if(pData[playerid][pMember] == 7 || pData[playerid][pLeader] == 7)
		{
			if(pData[playerid][pRank] < 5) return true;
			if(pData[playerid][pRank] == 5) { rtext = "Новости:"; }
			else if(pData[playerid][pRank] == 6) { rtext = "Новости:"; }
		}
		else if(pData[playerid][pMember] == 10 || pData[playerid][pLeader] == 10)
		{
			if(pData[playerid][pRank] < 13) return true;
			if(pData[playerid][pRank] == 13) { rtext = "Новости:"; }
			else if(pData[playerid][pRank] == 14) { rtext = "Новости:"; }
		}
		else if(pData[playerid][pMember] == 11 || pData[playerid][pLeader] == 11)
		{
			if(pData[playerid][pRank] < 7) return true;
			if(pData[playerid][pRank] >= 7) { rtext = "Новости:"; }
		}
		else if(pData[playerid][pMember] == 19 || pData[playerid][pLeader] == 19)
		{
			if(pData[playerid][pRank] < 14) return true;
			if(pData[playerid][pRank] == 14) { rtext = "Новости:"; }
			else if(pData[playerid][pLeader] == 19) { rtext = "Новости:"; }
		}
		else if(pData[playerid][pMember] == 21 || pData[playerid][pLeader] == 21)
		{
			if(pData[playerid][pRank] < 13) return true;
			if(pData[playerid][pRank] == 13) { rtext = "Новости:"; }
			else if(pData[playerid][pRank] == 14) { rtext = "Новости:"; }
		}
		else if(pData[playerid][pMember] == 22 || pData[playerid][pLeader] == 7)
		{
			if(pData[playerid][pRank] < 9) return true;
			if(pData[playerid][pRank] == 10) { rtext = "Новости:"; }
			else if(pData[playerid][pRank] == 9) { rtext = "Новости:"; }
		}
		else { return true; }
		SendClientMessageToAll(COLOR_WHITE, "---========== Государственные Новости ==========---");
		format(cString, sizeof(cString), " %s %s: %s", rtext, pData[playerid][pName], params[0]);
		SendClientMessageToAll(0x3737FC00, cString);
	}
	return true;
}
CMD:fight(playerid, params[])
{
	if(!pData[playerid][pLogin] || !GetPVarInt(playerid,"style_clothes") || GetPVarInt(playerid,"fight")) return true;
	if(TOTALSTYLELIST > 4) return SCM(playerid,COLOR_GREY," Очередь на бой заполнена");
	if(sscanf(params, "ui",params[0],params[1])) return SCM(playerid, COLOR_WHITE, " Введите: /fight [playerid] [ставка (от 1000 до 10000 вирт)]");
	if(params[0] == playerid) return SCM(playerid,COLOR_GREY," Вы не можете предложить бой сами себе");
	if(!IsPlayerConnected(params[0] ) || !pData[params[0]][pLogin]) return SCM(playerid,COLOR_GREY," Игрок не найден");
	if(pData[params[0]][pStyleSkill][0] < 10) return SCM(playerid,COLOR_GREY," Игрок еще не готов к бою");
	if(pData[playerid][pStyleSkill][0] < 10) return SCM(playerid,COLOR_GREY," Вы еще не готовы к бою");
	if(pData[params[0]][pJob] == 6 || pData[playerid][pJob] == 6) return SCM(playerid,COLOR_GREY," Тренер не может участвовать в бою");
	if(!GetPVarInt(params[0],"style_clothes")) return SCM(playerid,COLOR_GREY," Игрок должен находится в спортзале!");
	if(params[1] < 1000 || params[1] > 10000) return SCM(playerid,COLOR_GREY," Ставка не должна быть меньше 1000 вирт и больше 10000 вирт");
	if(pData[playerid][pCash] < params[1]) return SCM(playerid,COLOR_GREY," У вас  Недостаточно средств");
	if(pData[params[0]][pCash] < params[1]) return SCM(playerid,COLOR_GREY," У игрока  Недостаточно средств");
	SetPVarInt(params[0],"fight_offer",playerid+1), SetPVarInt(params[0],"fight_price",params[1]);
	SendMes(playerid,0x6495EDFF," Вы предложили %s участвовать в бою. Ставка %i вирт",pData[params[0]][pName], params[1]);
	return SendMes(params[0],0x6495EDFF,"%s предлагает тебе участвовать в бою. Ставка %i вирт (( /(ac)cept fight ))",pData[playerid][pName], params[1]);
}
CMD:startfight(playerid, params[])
{
	if(!pData[playerid][pLogin] || !GetPVarInt(playerid,"style_clothes")) return true;
	if(pData[playerid][pJob] != 6) return SCM(playerid,COLOR_GREY," Вам недоступна данная функция");
	if(!TOTALSTYLELIST) return SCM(playerid,COLOR_GREY," Очередь на бой пуста");
	if(GetPVarInt(playerid,"start_fight") > gettime()) return SendMes(playerid,COLOR_GREY," Подождите немного! До старта осталось %i секунд", GetPVarInt(playerid,"start_fight")-gettime());
	foreach(new i: Player) if(GetPVarInt(i,"fight")) return SCM(playerid,COLOR_GREY," Кто то уже участвует в бою");
	new i = GetPlayerID(StyleList[0][slName]), ii = GetPlayerID(StyleList[0][slName_two]);
	if(i == INVALID_PLAYER_ID || ii == INVALID_PLAYER_ID
			|| !GetPVarInt(i,"style_clothes") || !GetPVarInt(ii,"style_clothes"))
	{
		SCM(playerid,COLOR_GREY," Одного из игрока нет в спортзале");
		for(new idx = 0; idx < TOTALSTYLELIST; idx++)
		{
			strmid(StyleList[idx][slName],StyleList[idx+1][slName], 0, strlen(StyleList[idx+1][slName]), MAX_PLAYER_NAME);
			strmid(StyleList[idx][slName_two],StyleList[idx+1][slName_two], 0, strlen(StyleList[idx+1][slName_two]), MAX_PLAYER_NAME);
			StyleList[idx][slPrice] = StyleList[idx+1][slPrice];
		}
		TOTALSTYLELIST--;
		return true;
	}
	if(pData[i][pCash] < StyleList[0][slPrice] || pData[ii][pCash] < StyleList[0][slPrice])
	{
		SCM(playerid,COLOR_GREY," У игроков  Недостаточно средств");
		for(new idx = 0; idx < TOTALSTYLELIST; idx++)
		{
			strmid(StyleList[idx][slName],StyleList[idx+1][slName], 0, strlen(StyleList[idx+1][slName]), MAX_PLAYER_NAME);
			strmid(StyleList[idx][slName_two],StyleList[idx+1][slName_two], 0, strlen(StyleList[idx+1][slName_two]), MAX_PLAYER_NAME);
			StyleList[idx][slPrice] = StyleList[idx+1][slPrice];
		}
		TOTALSTYLELIST--;
		return true;
	}
	SetPlayerPos(i,762.7578,2.3013,1001.5942);
	SetPlayerFacingAngle(i,130);
	SetPlayerPos(ii,758.9441,-1.7533,1001.5942);
	SetPlayerFacingAngle(ii,315);
	SetPVarInt(i,"fight",playerid+1);
	SetPVarInt(ii,"fight",playerid+1);
	pData[i][pCash] -= StyleList[0][slPrice];
	pData[ii][pCash] -= StyleList[0][slPrice];
	TogglePlayerControllable(i,false);
	TogglePlayerControllable(ii,false);
	SetTimerEx("StartFight" , 5000, false, "ii",i,ii);
	SetCameraBehindPlayer(i);
	SetCameraBehindPlayer(ii);
	return true;
}
CMD:fstyle(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(sscanf(params, "d", params[0])) return SCM(playerid,COLOR_WHITE, " Введите: /fstyle [0-3]");
	if(params[0] < 0 || params[0] > 3) return SCM(playerid,COLOR_WHITE, " Введите: /fstyle [0-3]");
	if(GetPVarInt(playerid,"style_clothes")) return SCM(playerid,COLOR_GREY," Нельзя менять стили боя во время тренировки");
	if(pData[playerid][pStyleSkill][1] < params[0]) return SCM(playerid,COLOR_GREY," Вы не изучали этот стиль боя");
	switch(params[0])
	{
	case 0: SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
	case 1: SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
	case 2: SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
	case 3: SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
	default: return SCM(playerid,COLOR_GREY," Неверный стиль боя");
	}
	pData[playerid][pStyleSelect] = params[0];
	return SCM(playerid, COLOR_LIGHTGREEN, " Вы установили новый стиль боя");
}
CMD:balance(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(!IsABank(playerid)) return SCM(playerid,COLOR_GREY," Вы не в банке!");
	format(cString, 32, "В банке: %i вирт", pData[playerid][pBank]);
	SCM(playerid, COLOR_WHITE, cString);
	return true;
}

CMD:code(playerid)
{
	if(!pData[playerid][pLogin]) return true;
	
	pData[playerid][pRoolete][0] = EOS;
	ShowPlayerDialog(playerid,228,DIALOG_STYLE_INPUT,"{FFFFFF}Рулетка >{00BF2B}Код","\
		{FFFFFF}Для получения игровых бонусов,\n\
		Вы можете испытать свою удачу на официальной рулетке -\n\
		{00BF2B}Noxe-Rp.Ru{FFFFFF} - и возможно Вы станете обладателем:\n\
		- Дополнительные EXP\n\
		- Игровая валюта\n\
		- Комплект лицензий\n\
		- Скиллы\n\
		- Автомобиль\n\
		и многого другого...\n\n\
		Стоимость одной прокрутки: 50 руб.\n\
		Не упустите свой шанс!","x","");
	return true;
}

CMD:bizbank(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(!BGet(playerid))  return SCM(playerid, COLOR_GRAD2, " У вас нет бизнеса!");
	new bouse = pData[playerid][pPBizzKey];
	if(sscanf(params, "dd", params[0],params[1])) return SCM(playerid, COLOR_WHITE, " Введите: /bizbank [сумма] [1 - баланс банка | 2 - баланс оплаты электроэнергии]");
	if(params[0] < 1 || params[0] > (BizzLandTax[bouse]*720)-BizzInfo[bouse][bLandTax] && params[1] == 2)  return SendMes(playerid, COLOR_GRAD2, " Неверная сумма, максимально допустимая %i вирт", (BizzLandTax[bouse]*720)-BizzInfo[bouse][bLandTax]);
	if(!IsABank(playerid)) return SCM(playerid,COLOR_GREY," Вы не в банке");
	if(pData[playerid][pBank] < params[0]) return SCM(playerid, COLOR_GREY, " На банковском счету  Недостаточно средств");
	pData[playerid][pBank] -= params[0];
	SetAccountInfo(playerid, pData[playerid][pBank], "pBank");
	switch(params[1])
	{
	case 1: BizzInfo[bouse][bTill] += params[0], SendMes(playerid,0x6495EDFF," Вы перевели на счёт вашего бизнеса %i вирт",params[0]);
	case 2: BizzInfo[bouse][bLandTax] += params[0],SendMes(playerid,0x6495EDFF," Вы перевели на счёт вашего бизнеса %i вирт",params[0]);
	default: SCM(playerid,COLOR_GREY," Неверное значение!");
	}
	return true;
}

CMD:bank(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(!IsABank(playerid)) return SCM(playerid,COLOR_GREY," Вы не в банке");
	if(sscanf(params, "d", params[0]))
	{
		SCM(playerid, COLOR_WHITE, " Введите: /bank [Сумма]");
		return SendMes(playerid,COLOR_WHITE," На вашем счету: %i вирт",pData[playerid][pBank]);
	}
	if(pData[playerid][pCash] < params[0]) { SCM(playerid, COLOR_GREY, " У вас нет столько денег!"); return true; }
	if(params[0] > 100000000 || params[0] < 1) { SCM(playerid, COLOR_GREY, " Неправильное количество денег!"); return true; }
	SCM(playerid, COLOR_GRAD1, "---------===[ ЧЕК ]===---------");
	format(cString, sizeof(cString), " Старый баланс: %i вирт", pData[playerid][pBank]);
	SCM(playerid, COLOR_GREY, cString);
	pData[playerid][pCash] -= params[0];
	pData[playerid][pBank] += params[0];
	SetAccountInfo(playerid, pData[playerid][pBank], "pBank");
	format(cString, 32, "Переведено: %i вирт", params[0]);
	SCM(playerid, COLOR_GRAD4, cString);
	format(cString, 32, "Новый баланс: %i вирт", pData[playerid][pBank]);
	SCM(playerid, COLOR_WHITE, cString);
	MoneyLog(pData[playerid][pName],"None", params[0], "(+)PutMoneyOnBank");
	return true;
}
CMD:whonear(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	if(sscanf(params, "fdd", params[0], params[1], params[2]) || params[2] > 1 || params[2] < 0) return SCM(playerid, -1, " Введите: /whonear [радиус в метрах] [лвл] [0 - равно и меньше, 1 - равно и больше]");
	new Float: POS[3];
	AntiCheatGetPos(playerid, POS[0], POS[1], POS[2]);
	foreach(new i: Player)
	{
		if(!IsPlayerConnected(i) || !IsPlayerInRangeOfPoint(i, params[0], POS[0], POS[1], POS[2])) continue;
		if(params[2] == 0 && pData[i][pLevel] > params[1]) continue;
		if(params[2] == 1 && pData[i][pLevel] < params[1]) continue;
		format(string, 60, "%s [ID: %i]", Name(i), i);
		SCM(playerid, -1, string);
	}
	return true;
}
CMD:transfer(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pLevel] < 7) return SCM(playerid, COLOR_LIGHTRED, " У вас должен быть 7 уровень");
	if(!IsABank(playerid)) return SCM(playerid, COLOR_GREY, " Вы не в банке!");
	new year1, month1, day1, hour1, minute1, second1;
	getdate(year1, month1, day1);
	gettime(hour1, minute1, second1);
	if(sscanf(params, "ud", params[0],params[1])) return SCM(playerid, COLOR_WHITE, " Введите: /transfer [id] [Сумма]");
	if (!IsPlayerConnected(params[0]) || !pData[params[0]][pLogin]) return true;
	if(params[1] > 0 && pData[playerid][pBank] >= params[1])
	{
		if(pData[playerid][pIp] == pData[params[0]][pIp] && pData[playerid][pLevel] < 3) return SCM(playerid,COLOR_GREY," Передавать деньги на твинк можно с 3-го уровня");
		pData[playerid][pBank] -= params[1];
		pData[params[0]][pBank] += params[1];
		format(cString, sizeof(cString), " Вы передали %i вирт, на счет %s [%i/%i/%i  %i:%i]", params[1], Name(params[0]), day1,month1,year1,hour1, minute1);
		SCM(playerid, COLOR_WHITE, cString);
		format(cString, sizeof(cString), " Вы получили %i вирт, на свой счет от %s [%i/%i/%i  %i:%i]",params[1],Name(playerid), day1,month1,year1,hour1, minute1);
		SCM(params[0], COLOR_WHITE, cString);
		PlayerPlaySound(params[0], 1052, 0.0, 0.0, 0.0);
		new year, month,day;
		getdate(year, month, day);
		SetAccountInfo(playerid, pData[playerid][pBank], "pBank");
		SetAccountInfo(params[0], pData[params[0]][pBank], "pBank");
		MoneyLog(pData[playerid][pName],pData[params[0]][pName], params[1], "(-)Transfer");
	}
	return true;
}
CMD:withdraw(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(!IsABank(playerid)) return SCM(playerid, COLOR_GREY, " Вы не в банке!");
	if(sscanf(params, "d", params[0]))
	{
		SCM(playerid, COLOR_WHITE, " Введите: /withdraw [Сумма]");
		return SendMes(playerid,COLOR_WHITE," На вашем счету: %i вирт",pData[playerid][pBank]);
	}
	if(params[0] < 1 || params[0] > 100000000) { SCM(playerid, COLOR_GREY, " Нельзя снять 1 вирта и более 100000000!"); return true; }
	if(pData[playerid][pBank] < params[0]) return SCM(playerid, COLOR_GRAD1, "  У вас нет столько денег!");
	pData[playerid][pCash] += params[0];
	pData[playerid][pBank] -= params[0];
	SetAccountInfo(playerid, pData[playerid][pBank], "pBank");
	format(cString, 64, "Вы сняли %i вирт. Остаток: %i вирт",params[0], pData[playerid][pBank]);
	SCM(playerid, COLOR_YELLOW, cString);
	MoneyLog(pData[playerid][pName],"None", params[0], "(+)GetMoneyOfBank");
	return true;
}

stock Showspeedometer(playerid)
{
    GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
    
	TextDrawShowForPlayer	(playerid, speedBOX);
	TextDrawShowForPlayer	(playerid, ogrankrugBlack);
	if(pData[playerid][pDrivingSkill])
	{
		    TextDrawShowForPlayer	(playerid, ogrankrug);
	}
 	TextDrawShowForPlayer	(playerid, temp_string);
 	TextDrawShowForPlayer	(playerid, temp_icon);
 	TextDrawShowForPlayer	(playerid, temp_icon2);
 	TextDrawShowForPlayer	(playerid, SpeedTime);
 	
 	PlayerTextDrawShow		(playerid, KmSpeed[playerid]);
 	PlayerTextDrawShow		(playerid, LightIcon[playerid]);
 	PlayerTextDrawShow		(playerid, RemenIcon[playerid]);
 	PlayerTextDrawShow		(playerid, RepairIcon[playerid]);
 	PlayerTextDrawShow		(playerid, SpeedRadio[playerid]);
 	PlayerTextDrawShow		(playerid, FuellString[playerid]);
 	PlayerTextDrawShow		(playerid, DoorIcon[playerid]);

   	if(SelectOnlineRadio[playerid] != -1)
   	{
   		PlayAudioStreamForPlayer(playerid, radioOnline[SelectOnlineRadio[playerid]][0][0]);
   		PlayerTextDrawSetString(playerid,SpeedRadio[playerid],radioOnline[SelectOnlineRadio[playerid]][1][0]);
   	}
   	else
   	{
   		PlayerTextDrawSetString(playerid,SpeedRadio[playerid],"Radio: OFF");
   	}
	if (engine)
	{
	   // if(lights)	PlayerTextDrawColor(playerid, LightIcon[playerid], -8433409);
		//else		PlayerTextDrawColor(playerid, LightIcon[playerid], 65320);
	    
	    if(speed_update[playerid] != -1)
		{
			KillTimer(speed_update[playerid]);
			speed_update[playerid] = -1;
		}
		speed_update[playerid] = SetTimerEx("UpdateSpeedometr",200,1,"i",playerid);
	}
}
stock Hidespeedometer(playerid, full = 1)
{

	PlayerTextDrawHide		(playerid, FuellString[playerid]);
 	
	if(full)
	{
	    TextDrawHideForPlayer	(playerid, speedBOX);
    	TextDrawHideForPlayer	(playerid, ogrankrug);
    	TextDrawHideForPlayer	(playerid, ogrankrugBlack);
	    TextDrawHideForPlayer	(playerid, temp_string);
	    TextDrawHideForPlayer	(playerid, temp_icon);
	    TextDrawHideForPlayer	(playerid, temp_icon2);
	    TextDrawHideForPlayer	(playerid, SpeedTime);


	    PlayerTextDrawHide		(playerid, KmSpeed[playerid]);
	    PlayerTextDrawHide		(playerid, LightIcon[playerid]);
	    PlayerTextDrawHide		(playerid, RemenIcon[playerid]);
	    PlayerTextDrawHide		(playerid, RepairIcon[playerid]);
	    PlayerTextDrawHide		(playerid, SpeedRadio[playerid]);
	    PlayerTextDrawHide		(playerid, DoorIcon[playerid]);

	    StopAudioStreamForPlayer(playerid);
	}
 	if(speed_update[playerid] != -1)
	{
		KillTimer(speed_update[playerid]);
		speed_update[playerid] = -1;
	}
	
}
CMD:en(playerid)
{
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 481 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 509 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 510) return true;
	if(GetPlayerVehicleID(playerid) == INVALID_VEHICLE_ID) 	return true;
	if(pData[playerid][pState] != PLAYER_STATE_DRIVER) 		return true;
	
	new vehicleid = GetPlayerVehicleID(playerid);
	GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
	if(!engine)
	{
		if(car_data[vehicleid][fuell]  <= 0 && !IsNoFuel(vehicleid))
		{
			car_data[vehicleid][fuell] = 0;
			GameTextForPlayer(playerid,"~r~FUEL HAS ENDED", 5000, 3);
			SCM(playerid, COLOR_GREEN, " {00A86B}Используйте телефон {FFFFFF}(( /call )) {00A86B}чтобы вызвать механика / таксиста");
			SCM(playerid, COLOR_GREEN, " {00A86B}Если у вас есть канистра с бензином, введите {FFFFFF}(( /fillcar ))");
			return true;
		}
		if(AntiCheatGetVehicleHealth(vehicleid) <= 320) 
			return GameTextForPlayer(playerid,"~r~ENGINE HAS BROKENED", 5000, 3);

		SetVehicleParamsEx(vehicleid,true,true,alarm,doors,bonnet,boot,objective);
		Showspeedometer(playerid);
	}
	else
	{
	    Hidespeedometer(playerid, 0);
		SetVehicleParamsEx(vehicleid,false,false,alarm,doors,bonnet,boot,objective);
	}
	return true;
}
CMD:lights(playerid)
{
	if(GetPlayerVehicleID(playerid) == INVALID_VEHICLE_ID) 	return true;
	if(pData[playerid][pState] != PLAYER_STATE_DRIVER) 		return true;

	new vehicleid = GetPlayerVehicleID(playerid);
	GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
 	if(!lights)
	{
	    PlayerTextDrawColor(playerid, LightIcon[playerid], -8433409);
	    PlayerTextDrawShow(playerid, LightIcon[playerid]);
		SetVehicleParamsEx(vehicleid,engine,true,alarm,doors,bonnet,boot,objective);
	}
	else
	{
	    PlayerTextDrawColor(playerid, LightIcon[playerid], 65320);
	    PlayerTextDrawShow(playerid, LightIcon[playerid]);
		SetVehicleParamsEx(vehicleid,engine,false,alarm,doors,bonnet,boot,objective);
	}
	return true;
}
CMD:hi(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	if(!IsPlayerConnected(playerid)) return true;
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_GREY, " Нельзя использовать в машине");
	if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /hi [ид]");
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(2.0, playerid, params[0]) || IsPlayerInAnyVehicle(params[0])) return true;
	if(params[0] == playerid)  return  SCM(playerid,COLOR_GRAD1, " [Ошибка]  Вы указали свой ID");
	new Float:angle;
	GetPlayerFacingAngle(playerid, angle);
	SetPlayerFacingAngle(params[0], angle + 180);
	format(cString, 64, " %s пожал руку %s'у",Name(playerid),Name(params[0]));
	ProxDetector(10.0, playerid, cString, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	ApplyAnimation(playerid, "GANGS", "hndshkfa",4.0,0,0,0,0,0,1);
	ApplyAnimation(params[0], "GANGS", "hndshkfa",4.0,0,0,0,0,0,1);
	return true;
}
CMD:viphelp(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	switch(pData[playerid][pDonateRank])
	{
	case 0: SendMes(playerid,COLOR_GOLD,"Донат счётчик: %i/1000000 вирт", pData[playerid][pDonateAccount]);
	case 1: SendMes(playerid,COLOR_GOLD,"Донат счётчик: %i/10000000 вирт", pData[playerid][pDonateAccount]);
	case 2: SendMes(playerid,COLOR_GOLD,"Донат счётчик: %i/30000000 вирт", pData[playerid][pDonateAccount]);
	default: SendMes(playerid,COLOR_GOLD,"Донат счётчик: %i вирт", pData[playerid][pDonateAccount]);
	}
	SCM(playerid, COLOR_YELLOW, "BRONZE: /togphone - вкл/выкл. телефон");
	SCM(playerid, COLOR_YELLOW, "SILVER: /admins - администрация Online");
	SCM(playerid, COLOR_YELLOW, "GOLD: /vipuninvite - уволиться из организации");
	return true;
}
CMD:vipuninvite(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pLeader] >= 1) return SCM(playerid,COLOR_WHITE," Вы не можете уволить себя!");
	if(pData[playerid][pMember] > 0 && pData[playerid][pDonateRank] >= 3)
	{
		if(GetPVarInt(playerid,"capture_on"))
		{
			DeletePVar(playerid,"capture_on");
			PlayerTextDrawHide(playerid, Capture[playerid]);
			for(new i_ = 0; i_ < 5; i_++) { SendDeathMessageToPlayer(playerid,INVALID_PLAYER_ID-1, INVALID_PLAYER_ID-1, 0); }
		}
		if(GetPVarInt(playerid,"mWar_on"))
		{
			DeletePVar(playerid,"mWar_on");
			PlayerTextDrawHide(playerid, mWar[playerid]);
			for(new i_ = 0; i_ < 5; i_++) { SendDeathMessageToPlayer(playerid,INVALID_PLAYER_ID-1, INVALID_PLAYER_ID-1, 0); }
		}
		if(GetPVarInt(playerid,"bWar_on"))
		{
			PlayerTextDrawHide(playerid, bWar[playerid]);
			DestroyDynamic3DTextLabel(LabelBwar[playerid]);
			DeletePVar(playerid,"bWar_on");
			for(new i_ = 0; i_ < 5; i_++) { SendDeathMessageToPlayer(playerid,INVALID_PLAYER_ID-1, INVALID_PLAYER_ID-1, 0); }
		}
		pData[playerid][pMember] = 0;
		pData[playerid][pRank] = 0;
		pData[playerid][pLeader] = 0;
		pData[playerid][pJobHeal] = 0;
		pData[playerid][pJob] = 0;
		pData[playerid][pDetachID] = 0;
		new szQuery[128];
		mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `firstdeputy`='Нет' WHERE `firstdeputy`='%e'", pData[playerid][pName]);
		mysql_query(DATABASE, szQuery);
		mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `seconddeputy`='Нет' WHERE `seconddeputy`='%e'", pData[playerid][pName]);
		mysql_query(DATABASE, szQuery);
		mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `member`='Нет' WHERE `member`='%e'", pData[playerid][pName]);
		mysql_query(DATABASE, szQuery);
		DeletePVar(playerid, !#_pDetachRank);
		DeletePVar(playerid, !#_pDetachColor);


		SetPlayerArmour(playerid,0);
		SetPlayerColor(playerid, TEAM_HIT_COLOR);
		SetPlayerSkin(playerid, pData[playerid][pChar][0]);
		SCM(playerid, COLOR_BLUE, " Вы были уволены по собственному желанию");
		SCM(playerid, COLOR_BLUE, " Вы снова гражданский");
		SCM(playerid, COLOR_BLUE, " Рабочий день окончен");
	}
	return true;
}
CMD:togphone(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pDonateRank] >= 1 || pData[playerid][pAdmin] >= 1 || pData[playerid][pLeader] >= 1 || pData[playerid][pHelper])
	{
		if(!PhoneOnline[playerid])
		{
			PhoneOnline[playerid] = 1;
			SCM(playerid, COLOR_WHITE, " Ваш телефон выключен!");
		}
		else if(PhoneOnline[playerid])
		{
			PhoneOnline[playerid] = 0;
			SCM(playerid, COLOR_WHITE, " Ваш телефон включен!");
		}
	}
	else
	{
		SCM(playerid, COLOR_GREY, " Вы не VIP игрок!");
		return true;
	}
	return true;
}
CMD:todo(playerid,params[])
{
	if(pData[playerid][pLogin] == false) return true;
	else if(pData[playerid][pMuted] > 0) return SendMes(playerid,COLOR_LIGHTRED," У Вас бан чата! До снятия: %i секунд(ы)",pData[playerid][pMuted]);
	else if(isnull(params) || strfind( params , "*" , true ) == -1 ) return SCM(playerid, COLOR_GREY," Введите: /todo [фраза] * [действие]");
	new arrCoords[2][128];
	sscanf(params,"p<*>s[128]s[128]",arrCoords[0],arrCoords[1]);
	if(pData[playerid][pSex] == 0) format(cString, sizeof(cString), " {E6E6E6}\"%s\", - {C2A2DA}сказал %s, %s",arrCoords[0], Name(playerid),arrCoords[1]);
	else format(cString, sizeof(cString), " {E6E6E6}\"%s\", - сказала %s,{C2A2DA} %s",arrCoords[0], Name(playerid),arrCoords[1]);
	ProxDetector(30.0, playerid, cString, 0xC2A2DAFF,0xC2A2DAFF,0xC2A2DAFF,0xC2A2DAFF,0xC2A2DAFF);
	return true;
}
CMD:me(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	else if(pData[playerid][pMuted] > 0) return SendMes(playerid,COLOR_LIGHTRED," У Вас бан чата! До снятия: %i секунд(ы)",pData[playerid][pMuted]);
	else if(sscanf(params, "s[64]", params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /me [действие]");
	format(cString, sizeof(cString), " %s %s", Name(playerid), params[0]);
	ProxDetector(30.0, playerid, cString, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	SetPlayerChatBubble(playerid,params[0],COLOR_PURPLE,30.0,10000);
	return true;
}
CMD:do(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	else if(pData[playerid][pMuted] > 0) return SendMes(playerid,COLOR_LIGHTRED," У Вас бан чата! До снятия: %i секунд(ы)",pData[playerid][pMuted]);
	else if(sscanf(params, "s[64]", params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /do [действие]");
	format(cString, 144, " {FFFFFF}(( %s[%i] )) {FF9900}%s",pData[playerid][pName],playerid, params[0]);
	ProxDetector(30.0, playerid, cString, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	SetPlayerChatBubble(playerid,params[0],0xFF9900AA,30.0,10000);
	return true;
}
CMD:try(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	else if(pData[playerid][pMuted] > 0) return SendMes(playerid,COLOR_LIGHTRED," У Вас бан чата! До снятия: %i секунд(ы)",pData[playerid][pMuted]);
	else if(sscanf(params, "s[64]", params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /try [действие]");
	new randomchik = Random(0,2);
	format(cString, sizeof(cString), " %s %s %s",Name(playerid),params[0],(!randomchik)?("{63C600} [Удачно]") : ("{BF0000} [Неудачно]"));
	ProxDetector(30.0, playerid, cString, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	SetPlayerChatBubble(playerid,params[0],COLOR_PURPLE,30.0,10000);
	return true;
}
CMD:shout(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pMuted] > 0) return SendMes(playerid,COLOR_LIGHTRED," У Вас бан чата! До снятия: %i секунд(ы)",pData[playerid][pMuted]);
	if(sscanf(params, "s[64]", params[0])) return SCM(playerid, COLOR_WHITE, " Введите: (/s)hout [текст]");
	format(cString, sizeof(cString), " %s кричит: %s!!",Name(playerid),params[0]);
	ProxDetector(60.0, playerid, cString,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
	if(pData[playerid][pState] == PLAYER_STATE_ONFOOT) ApplyAnimation(playerid, "RIOT", "RIOT_shout", 2000.0, 0, 1, 1, 1, 1, 1), SetTimerEx("ClearAnim", 800, false, "d", playerid);
	SetPlayerChatBubble(playerid,params[0],COLOR_YELLOW,60.0,10000);
	return true;
}
CMD:fish(playerid)
{
	if(pData[playerid][pLogin] == false) return true;
	ShowPlayerDialog(playerid,1342,DIALOG_STYLE_LIST, "Рыбалка","Начать / Закончить рыбалку\nНакопать червей\nПриготовить рыбу\nСъесть рыбу\nПродать рыбу\nИнформация\nПомощь", "Выбор", "Выход");
	return true;
}
CMD:quest(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	ShowPlayerDialog(playerid,1343,DIALOG_STYLE_LIST, "Управление квестами","Текущий квест\nВыбор сюжетной линии [Временно не работает]\nСтатистика\nЧужая статистика", "Далее", "Выход");
	return true;
}
CMD:licenses(playerid)
{

	if(pData[playerid][pLogin] == false) return true;
	SCM(playerid, 0x059BD3AA, "-----------===[ LICENSES ]===-----------");
	format(cString, 37, " Водительские права:  %s",(!PlayerLicenses(playerid, LICENSES_GET, LIC_DRIVER))?("Отсутствует") : ("Есть"));
	SCM(playerid, 0xC5EEFEAA, cString);
	format(cString, 37, " Лицензия пилота:  %s",(!PlayerLicenses(playerid, LICENSES_GET, LIC_HELICOPTER))?("Отсутствует") : ("Есть"));
	SCM(playerid, 0xC5EEFEAA, cString);
	format(cString, 37, " Лицензия на катера:  %s",(!PlayerLicenses(playerid, LICENSES_GET, LIC_BOAT))?("Отсутствует") : ("Есть"));
	SCM(playerid, 0xC5EEFEAA, cString);
	format(cString, 37, " Лицензия рыболова:  %s",(!PlayerLicenses(playerid, LICENSES_GET, LIC_FISHING))?("Отсутствует") : ("Есть"));
	SCM(playerid, 0xC5EEFEAA, cString);
	format(cString, 37, " Лицензия на оружие:  %s",(!PlayerLicenses(playerid, LICENSES_GET, LIC_WEAPONS))?("Отсутствует") : ("Есть"));
	SCM(playerid, 0xC5EEFEAA, cString);
	SCM(playerid, 0x059BD3AA, "=============================");
	return true;
}
CMD:showlicenses(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /showlicenses [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	format(cString, sizeof(cString), " -----------===[ LICENSES %s ]===-----------", Name(playerid));
	SCM(params[0], 0x059BD3AA, cString);
	format(cString, sizeof(cString), " Водительские права:  %s",(!PlayerLicenses(playerid, LICENSES_GET, LIC_DRIVER))?("Отсутствует") : ("Есть"));
	SCM(params[0], 0xC5EEFEAA, cString);
	format(cString, sizeof(cString), " Лицензия пилота:  %s",(!PlayerLicenses(playerid, LICENSES_GET, LIC_HELICOPTER))?("Отсутствует") : ("Есть"));
	SCM(params[0], 0xC5EEFEAA, cString);
	format(cString, sizeof(cString), " Лицензия на катера:  %s",(!PlayerLicenses(playerid, LICENSES_GET, LIC_BOAT))?("Отсутствует") : ("Есть"));
	SCM(params[0], 0xC5EEFEAA, cString);
	format(cString, sizeof(cString), " Лицензия рыболова:  %s",(!PlayerLicenses(playerid, LICENSES_GET, LIC_FISHING))?("Отсутствует") : ("Есть"));
	SCM(params[0], 0xC5EEFEAA, cString);
	format(cString, sizeof(cString), " Лицензия на оружие:  %s",(!PlayerLicenses(playerid, LICENSES_GET, LIC_WEAPONS))?("Отсутствует") : ("Есть"));
	SCM(params[0], 0xC5EEFEAA, cString);
	format(cString,sizeof(cString), "%s показал свои лицензии %s'у",Name(playerid),Name(params[0]));
	ProxDetector(30.0, playerid, cString, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	format(cString,sizeof(cString), "показал свои лицензии %s'у",Name(params[0]));
	SetPlayerChatBubble(playerid,cString,COLOR_PURPLE,30.0,10000);
	return true;
}
CMD:divorce(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	SCM(playerid, COLOR_GREY, " Вы развелись");
	ClearMarriage(playerid);
	return true;
}
CMD:propose(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pCash] < 100000) return SCM(playerid, COLOR_GREY, " Вам нужно 100 000 на свадьбу!");
	if(strcmp(pData[playerid][pMarriedTo],"-",true) != 0) return SCM(playerid, COLOR_GREY, " Вы уже женаты/замужем!");
	if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /propose [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(strcmp(pData[params[0]][pMarriedTo],"-",true) != 0) return SCM(playerid, COLOR_GREY, " Человек уже состоит в браке!");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, " Человек не рядом с вами!");
	if(params[0] == playerid) { SCM(playerid, COLOR_GREY, " [Ошибка]  Вы указали свой ID"); return true; }
	format(cString, sizeof(cString), " Вы предложили руку и сердце %s.",Name(params[0]));
	SCM(playerid, 0x6495EDFF, cString);
	format(cString, sizeof(cString), " %s предлагает вам руку и сердце. ((  Введите: /accept marriage, чтобы принять )).",Name(playerid));
	SCM(params[0], COLOR_BLUE, cString);
	ProposeOffer[params[0]] = playerid;
	return true;
}
CMD:ram(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(IsACop(playerid)|| IsAArm(playerid) || IsAFbi(playerid) || pData[playerid][pAdmin] >= 1)
	{
		for(new i = 0; i<TotalHouse; i++)
		{
			if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
			{
				SetPlayerVirtualWorld(playerid,i+50);

				//SetPlayerInterior(playerid,interior_info[i][int_int]);
				//SetPlayerPos(playerid,interior_info[int][int_x],interior_info[int][int_y],interior_info[int][int_z]);
			}
		}
	}
	return true;
}
CMD:inventory(playerid)
{
	new strinv[48],
	inventory[700];
	format(inventory, sizeof(inventory), "Key\tВещи\tКоличество\n");
	if(pData[playerid][pDrugs] != 0) { format(strinv, sizeof(strinv), "A\tНаркотики\t%i\n", pData[playerid][pDrugs]), strcat(inventory, strinv); }
	if(pData[playerid][pMats] != 0) { format(strinv, 48, "B\tМатериалы\t%i\n", pData[playerid][pMats]); strcat(inventory, strinv); }
	if(pData[playerid][pDirectory] != 0) { format(strinv, 48, "Y\tТелефонная книга\t1\n"); strcat(inventory, strinv); }
	if(pData[playerid][pFishes] != 0) { new Float:fishes = pData[playerid][pFishes]; format(strinv, 48, "E\tРыба\t%.1f\n",fishes); strcat(inventory, strinv); }
	if(pData[playerid][pFuel] == 1) { format(strinv, 48, "H\tКанистра с бензином\t1\n"); strcat(inventory, strinv); }
	if(pData[playerid][pMushrooms] != 0) { format(strinv, 48, "J\tГрибы\t%i\n",pData[playerid][pMushrooms]); strcat(inventory, strinv); }
	if(PlayerLicenses(playerid, LICENSES_GET, LIC_DRIVER)) { format(strinv, 48, "K\tВодительские права\t1\n"); strcat(inventory, strinv); }
	if(PlayerLicenses(playerid, LICENSES_GET, LIC_HELICOPTER)) { format(strinv, 48, "L\tЛицензия пилота\t1\n"); strcat(inventory, strinv); }
	if(PlayerLicenses(playerid, LICENSES_GET, LIC_BOAT)) { format(strinv, 48, "M\tЛицензия на лодки\t1\n"); strcat(inventory, strinv); }
	if(PlayerLicenses(playerid, LICENSES_GET, LIC_FISHING)) { format(strinv, 48, "N\tЛицензия на рыболовство\t1\n"); strcat(inventory, strinv); }
	if(PlayerLicenses(playerid, LICENSES_GET, LIC_WEAPONS)) { format(strinv, 48, "O\tЛицензия на оружие\t1\n"); strcat(inventory, strinv); }
	if(pData[playerid][pFishesPach] > 0) { format(strinv, 48, "R\tГотовая рыба\t%i\n",pData[playerid][pFishesPach]); strcat(inventory, strinv); }
	if(pData[playerid][pKeys] > 0) { format(strinv, 48, "F\tКлючи\t%i\n",pData[playerid][pKeys]); strcat(inventory, strinv); }
	return ShowPlayerDialog(playerid,10427,DIALOG_STYLE_TABLIST_HEADERS,"{AFAFAF}Карманы",inventory,"Готово","");
}
CMD:take(playerid,params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /take [id]");
	if(!IsPlayerConnected(params[0]) || !pData[params[0]][pLogin]) return SCM(playerid,COLOR_GREY," Игрок оффлайн");
	if(params[0] == playerid) return SCM(playerid,COLOR_GREY," Ошибка.  Вы указали свой ID");
	if(!ProxDetectorS(4.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, " Игрок должен находиться рядом с вами");
	if(IsACop(playerid) && pData[playerid][pRank] > 3 || IsAFbi(playerid) || pData[playerid][pAdmin] >= 2)
	{
		new wep,strinv[48],
		inventory[700];
		format(inventory, sizeof(inventory), "Key\tВещи\tКоличество\n");
		if(pData[params[0]][pDrugs] != 0) { format(strinv, sizeof(strinv), "A\tНаркотики\t%i\n", pData[params[0]][pDrugs]), strcat(inventory, strinv); }
		if(pData[params[0]][pMats] != 0) { format(strinv, 48, "B\tМатериалы\t%i\n", pData[params[0]][pMats]); strcat(inventory, strinv); }
		if(pData[params[0]][pDirectory] != 0) { format(strinv, 48, "Y\tТелефонная книга\t1\n"); strcat(inventory, strinv); }
		if(pData[params[0]][pFishes] != 0) { new Float:fishes = pData[params[0]][pFishes]; format(strinv, 48, "E\tРыба\t%.1f\n",fishes); strcat(inventory, strinv); }
		if(pData[params[0]][pFuel] == 1) { format(strinv, 48, "H\tКанистра с бензином\t1\n"); strcat(inventory, strinv); }
		if(pData[params[0]][pMushrooms] != 0) { format(strinv, 48, "J\tГрибы\t%i\n",pData[params[0]][pMushrooms]); strcat(inventory, strinv); }
		if(PlayerLicenses(params[0], LICENSES_GET, LIC_DRIVER)) { format(strinv, 48, "K\tВодительские права\t1\n"); strcat(inventory, strinv); }
		if(PlayerLicenses(params[0], LICENSES_GET, LIC_HELICOPTER)) { format(strinv, 48, "L\tЛицензия пилота\t1\n"); strcat(inventory, strinv); }
		if(PlayerLicenses(params[0], LICENSES_GET, LIC_BOAT)) { format(strinv, 48, "M\tЛицензия на лодки\t1\n"); strcat(inventory, strinv); }
		if(PlayerLicenses(params[0], LICENSES_GET, LIC_FISHING)) { format(strinv, 48, "N\tЛицензия на рыболовство\t1\n"); strcat(inventory, strinv); }
		if(PlayerLicenses(params[0], LICENSES_GET, LIC_WEAPONS)) { format(strinv, 48, "O\tЛицензия на оружие\t1\n"); strcat(inventory, strinv); }
		if(pData[params[0]][pFishesPach] > 0) { format(strinv, 48, "R\tГотовая рыба\t%i\n",pData[params[0]][pFishesPach]); strcat(inventory, strinv); }
		if(pData[params[0]][pKeys] > 0) { format(strinv, 48, "F\tКлючи\t%i\n",pData[params[0]][pKeys]); strcat(inventory, strinv); }
		for(new i = 0; i < 12; i++) if(WeaponInfo[params[0]][wWeapon][i] != 0) wep++;
		if(wep)
		{
			format(strinv, 48, "P\tОружие\t%i",wep); 
			strcat(inventory, strinv); 
		}
		ShowPlayerDialog(playerid,7779,DIALOG_STYLE_TABLIST_HEADERS,"{AFAFAF}Карманы",inventory,"Забрать","Отмена");
		if(chooses[playerid] == 1000) format(cString, sizeof(cString), " %s обыскал %s", Name(playerid) ,Name(params[0]));
		if(chooses[playerid] == 1000) ProxDetector(30.0, playerid, cString, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		chooses[playerid] = params[0];
	}
	return true;
}
CMD:suspect(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(sscanf(params, "uds[32]", params[0],params[1],params[2])) return SCM(playerid, COLOR_WHITE, " Введите: (/su)spect [id] [уровень розыска] [преступление]");
	if (IsACop(playerid) || IsAFbi(playerid))
	{
		if(!IsPlayerConnected(params[0])) return true;
		if(params[0] == INVALID_PLAYER_ID) return true;
		if(pData[params[0]][pJailTime] != 0) return true;
		if(pData[params[0]][pWantedLevel] >= 6) return SCM(playerid, COLOR_GREY, " У данного игрока уже 6 уровней розыска!");
		if(IsACop(params[0]) || IsAFbi(params[0]) || IsAArm(params[0])) return SCM(playerid, COLOR_GRAD2, " Вы не можете давать розыск законникам!");

		SetPlayerWantedLevelEx(params[0], params[1]);
		SetPlayerCriminal(params[0],Name(playerid), params[2]);
		return true;
	}
	return true;
}
CMD:spawnchange(playerid)
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pMember] == 19 && pData[playerid][pRank] <= 2) return true;
	if(pData[playerid][pMember] == 3 && pData[playerid][pRank] <= 2) return true;
	return ShowPlayerDialog(playerid, 2003, DIALOG_STYLE_LIST, "Выбор спавна", "[0] Дом\n[1] Вокзал / База организации", "Выбрать", "Назад");
}

CMD:findhouse(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pJob] != 7 || GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 2 && pData[playerid][pRank] > 3) return true;
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /findhouse [дом]");
	SetPlayerCheckpoint(playerid,HouseInfo[params[0]][hEntrancex], HouseInfo[params[0]][hEntrancey], HouseInfo[params[0]][hEntrancez], 4.0);
	SCM(playerid, COLOR_WHITE, " Метка на карте установлена");
	CP[playerid] = 0;
	return true;
}
CMD:home(playerid)
{
	if(pData[playerid][pPHouseKey] != INVALID_HOUSE_ID)
	{
		SetPlayerCheckpoint(playerid,HouseInfo[pData[playerid][pPHouseKey]][hEntrancex], HouseInfo[pData[playerid][pPHouseKey]][hEntrancey], HouseInfo[pData[playerid][pPHouseKey]][hEntrancez], 4.0);
		SCM(playerid, COLOR_YELLOW, " Ваш дом обозначен на карте красной меткой");
		gPlayerCheckpointStatus[playerid] = 12;
	}
	return true;
}
CMD:clear(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	new giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return  SCM(playerid, COLOR_WHITE, " Введите: /clear [id]");
	if(giveplayerid == playerid) return SCM(playerid,COLOR_GREY," Вы указали свой ID");
	if(!IsPlayerConnected(giveplayerid) || !pData[giveplayerid][pLogin]) return SCM(playerid,COLOR_GREY," Игрок оффлайн");
	new tmpcar = GetPlayerVehicleID(playerid);
	if(!IsACopCar(tmpcar) && !IsAFbiCar(tmpcar) && GetVehicleModel(tmpcar) != 596 && GetVehicleModel(tmpcar) != 490 && GetVehicleModel(tmpcar) != 597 && GetVehicleModel(tmpcar) != 598 && GetVehicleModel(tmpcar) != 560 && GetVehicleModel(tmpcar) != 415 && GetVehicleModel(tmpcar) != 521) return SCM(playerid, COLOR_GRAD1, " Вы не в патрульной машине");
	if((IsACop(playerid) && pData[playerid][pRank] >= 3) || IsAFbi(playerid))
	{
		format(string, 128, " Вы сняли уровни розыска у %s.", Name(giveplayerid));
		SCM(playerid, 0x6495EDFF, string);
		format(string, 128, " Офицер / Агент ФБР %s снял с Вас уровни розыска.", Name(playerid));
		SCM(giveplayerid, 0x6495EDFF, string);

		SetPlayerWantedLevelEx(giveplayerid, -6);
		foreach(new i: Player)
		{
			if(IsAFbi(i) || IsACop(i))
			{
				cString = "";
				format(cString, 144, "[Clear] %s удалил из розыскиваемых %s",Name(playerid),Name(giveplayerid));
				SCM(i, 0xFEBC41AA,cString);
			}
		}
	}
	return true;
}
CMD:ticket(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(!IsACop(playerid)) return SCM(playerid, COLOR_GREY, " Вы не полицейский!");
	if(sscanf(params, "uds[54]",params[0],params[1],params[2])) return	SCM(playerid, COLOR_WHITE, " Введите: /ticket [id] [цена] [причина]");
	if(params[1] < 1 || params[1] > 10000) { SCM(playerid, COLOR_GREY, " Штраф не должен привышать 10000 и не должен быть меньше 0 вирт!"); return true; }
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	if(GetSRVMoney(params[0]) < params[1]) 	return 	SCM(playerid, COLOR_GRAD1, " У этого  нет столько денег!");
	if(params[0] == playerid) { SCM(playerid, COLOR_GREY, " [Ошибка]  Вы указали свой ID"); return true; }
	format(cString, sizeof(cString), " Вы выписали штраф в размере %i вирт %s. Причина: %s",params[1],Name(params[0]),params[2]);
	SCM(playerid, COLOR_BLUE, cString);
	format(cString, sizeof(cString), " Офицер %s выписал вам штраф в размере %i вирт. Причина: %s",Name(playerid),params[1],params[2]);
	SCM(params[0], COLOR_BLUE, cString);
	SCM(params[0], COLOR_WHITE, "((  Введите: /accept ticket, чтобы оплатить штраф ))");
	TicketOffer[params[0]] = playerid;
	TicketMoney[params[0]] = params[1];
	return true;
}

CMD:arrest(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 1 || GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 2 || GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 10 || GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 21)
	if(PlayerToPoint(6.0, playerid, 268.3327,77.8972,1001.0391) || PlayerToPoint(6.0, playerid, 227.7436,114.5075,999.0156) || PlayerToPoint(6.0, playerid, 198.1339,158.4835,1003.0234)|| PlayerToPoint(6.0, playerid, 218.2263,114.9286,999.0156) || PlayerToPoint(6.0, playerid, 198.3940,157.9389,1003.0234))
	{
		if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /arrest [id игрока]");
		if(params[0] == playerid) return SCM(playerid, COLOR_GREY, " Вы указали свой ID");
		if(!IsPlayerConnected(params[0])) return true;
		if(!ProxDetectorS(4.0, playerid, params[0])) return SCM(playerid,COLOR_GREY," Этот человек должен находиться рядом");
		if(pData[playerid][pKeys] == 0) return SCM(playerid,COLOR_GREY," У вас нет ключей от камеры");
		if(pData[params[0]][pWantedLevel] < 1) return  SCM(playerid, COLOR_GREY, " Человек должен иметь хотя бы один уровень розыска!");
		format(cString, sizeof(cString), " Вы посадили в тюрьму %s на %d секунд",Name(params[0]),pData[params[0]][pWantedLevel]*600);
		SCM(playerid, COLOR_BLUE, cString);
		format(cString, sizeof(cString), " Вас посадили в тюрьму %s на %d секунд",Name(playerid),pData[params[0]][pWantedLevel]*600);
		SCM(params[0], COLOR_BLUE, cString);
		SCM(params[0],-1,"Ваша узнаваемость понизилась");
		pData[playerid][pPayCheck]+= 200*pData[params[0]][pWantedLevel];
		ResetPlayerWeaponEx(params[0]);
		foreach(new i: Player)
		{
			if(IsAFbi(i) || IsACop(i))
			{
				switch(pData[playerid][pMember])
				{
				case 1,10,21: format(cString, sizeof(cString), " << Офицер %s арестовал %s >>",Name(playerid),Name(params[0])),SCM(i, COLOR_LIGHTRED,cString);
				case 2: format(cString, sizeof(cString), " << Агент FBI %s арестовал %s >>",Name(playerid),Name(params[0])),SCM(i, COLOR_LIGHTRED,cString);
				}
			}
		}
		new konv = GetPVarInt(playerid, "TempConvoi");
		if(params[0] == konv)
		{
			SetPVarInt(playerid, "TempConvoi", -1);
			Convoi[params[0]] = 9999;
			if(TimerForPlayer[params[0]] != -1) KillTimer(TimerForPlayer[params[0]]);
			TimerForPlayer[params[0]] = -1;
			ClearAnim(playerid);
			TogglePlayerControllable(params[0], 0);
		}
		SetPlayerSpecialAction(params[0],SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(params[0],0);
		PlayerCuffed[params[0]] = 0;
		PlayerCuffedTime[params[0]] = 0;
		if(PlayerToPoint(6.0, playerid, 268.3327,77.8972,1001.0391))
		{
			SetPlayerInterior(params[0], 6);
			SetPlayerPos(params[0],264.1425,77.4712,1001.0391);
			SetPlayerFacingAngle(params[0], 263.0160);
			pData[params[0]][pMestoJail] = 1;
		}
		else if(PlayerToPoint(6.0, playerid, 218.2263,114.9286,999.0156))
		{
			SetPlayerInterior(params[0], 10);
			SetPlayerPos(params[0],219.5400,109.9767,999.0156);
			SetPlayerFacingAngle(params[0], 1.0000);
			pData[params[0]][pMestoJail] = 2;
		}
		else if(PlayerToPoint(6.0, playerid, 198.3940,157.9389,1003.0234))
		{
			SetPlayerInterior(params[0], 3);
			SetPlayerPos(params[0],198.3642,161.8103,1003.0300);
			SetPlayerFacingAngle(params[0], 1.0000);
			pData[params[0]][pMestoJail] = 3;
		}
		pData[params[0]][pJailTime] = pData[params[0]][pWantedLevel]*600;

		pData[params[0]][pArrested] += 1;
		SetPlayerWantedLevelEx(params[0], -6);
		TogglePlayerControllable(params[0], 1);
	}
	return true;
}

CMD:frisk(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /frisk [id]");
	new str[32];
	format(str, sizeof(str), "%i",params[0]);
	return cmd_take(playerid,str);
}
CMD:wanted(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(!IsACop(playerid) && !IsAFbi(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не законник");
	
	new wlevel[2];
	new szQuery[1024];
	szQuery[0] = EOS;
	strcat(szQuery,"{FFFFFF}Псевдоним\t{FFFFFF}Уровень розыска\tПричина розыска\n",1024);
	foreach(new i: Player)
	{
		if(pData[i][pWantedLevel] > 0)
		{
			format(wlevel,sizeof(wlevel),"%i",pData[i][pWantedLevel]);
			strcat(szQuery,Name(i),1024);
			strcat(szQuery,"\t",1024);
			strcat(szQuery,wlevel,1024);
			strcat(szQuery,"\t",1024);
			strcat(szQuery,PlayerCrime[i][pAccusedof],1024);
			strcat(szQuery,"\n",1024);
			
		}
	}
	ShowPlayerDialog(playerid, 0,DIALOG_STYLE_TABLIST_HEADERS, "Розыскиваются", szQuery, "Закрыть", "");
	return true;
}
CMD:mdc(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(!IsACop(playerid) && !IsAFbi(playerid)) return SCM(playerid, COLOR_GREY, " Вы не полицейский!");
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /mdc [id]");
	if(!IsPlayerConnected(params[0])) return true;
	SCM(playerid, TEAM_BLUE_COLOR, "---======== МОБИЛЬНЫЙ КОМПЬЮТЕР ДАННЫХ ========---");
	format(cString, 32, "Имя: %s", Name(params[0])), SCM(playerid, COLOR_WHITE,cString);
	switch(pData[params[0]][pMember])
	{
	case 1: SCM(playerid, COLOR_GRAD2,"Организация: LSPD");
	case 2: SCM(playerid, COLOR_GRAD2,"Организация: ФБР");
	case 3: SCM(playerid, COLOR_GRAD2,"Организация: Армия СФ");
	case 4: SCM(playerid, COLOR_GRAD2,"Организация: Медики СФ");
	case 5: SCM(playerid, COLOR_GRAD2,"Организация: Неизвестно");
	case 6: SCM(playerid, COLOR_GRAD2,"Организация: Неизвестно");
	case 7: SCM(playerid, COLOR_GRAD2,"Организация: Мэр");
	case 8: SCM(playerid, COLOR_GRAD2,"Организация: Неизвестно");
	case 9: SCM(playerid, COLOR_GRAD2,"Организация: SF News");
	case 10: SCM(playerid, COLOR_GRAD2,"Организация: SFPD");
	case 11: SCM(playerid, COLOR_GRAD2,"Организация: Автошкола");
	case 12: SCM(playerid, COLOR_GRAD2,"Организация: Неизвестно");
	case 13: SCM(playerid, COLOR_GRAD2,"Организация: Неизвестно");
	case 14: SCM(playerid, COLOR_GRAD2,"Организация: Неизвестно");
	case 15: SCM(playerid, COLOR_GRAD2,"Организация: Неизвестно");
	case 16: SCM(playerid, COLOR_GRAD2,"Организация: LS News");
	case 17: SCM(playerid, COLOR_GRAD2,"Организация: Неизвестно");
	case 18: SCM(playerid, COLOR_GRAD2,"Организация: Неизвестно");
	case 19: SCM(playerid, COLOR_GRAD2,"Организация: Армия ЛВ");
	case 20: SCM(playerid, COLOR_GRAD2,"Организация: LV News");
	case 21: SCM(playerid, COLOR_GRAD2,"Организация: LVPD");
	case 22: SCM(playerid, COLOR_GRAD2,"Организация: Медики ЛС");
	case 24: SCM(playerid, COLOR_GRAD2,"Организация: Неизвестно");
	case 26: SCM(playerid, COLOR_GRAD2,"Организация: Неизвестно");
	case 29: SCM(playerid, COLOR_GRAD2,"Организация: Неизвестно");
	case 33: SCM(playerid, COLOR_GRAD2,"Организация: Медики ЛВ");
	default: SCM(playerid, COLOR_GRAD2,"Организация: Неизвестно");
	}
	format(cString, 32, "Преступление: %s", PlayerCrime[params[0]][pAccusedof]), SCM(playerid, COLOR_GRAD2,cString);
	format(cString, 32, "Сообщил: %s", PlayerCrime[params[0]][pVictim]), SCM(playerid, COLOR_GRAD3,cString);
	format(cString, 32, "Уровень розыска: %i", pData[params[0]][pWantedLevel]), SCM(playerid, COLOR_GRAD4,cString);
	SCM(playerid, TEAM_BLUE_COLOR, "---============================================---");
	return true;
}
CMD:megaphone(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(sscanf(params, "s[128]",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: (/m)egaphone [текст]");
	
	new car = GetPlayerVehicleID(playerid);
	if(!IsACopCar(car) && !IsAArmCar(car) && !IsAFbiCar(car)) return SCM(playerid, COLOR_GRAD2, " Вы не в полицейской машине");
	switch(pData[playerid][pMember])
	{
	case 1,10,21:
		{
			format(cString, sizeof(cString), " {{ Офицер %s: %s }}",Name(playerid),params[0]);
			ProxDetector(80.0, playerid, cString,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
		}
	case 3,19:
		{
			format(cString, sizeof(cString), " {{ Солдат %s: %s }}",Name(playerid),params[0]);
			ProxDetector(80.0, playerid, cString,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
		}
	case 2:
		{
			format(cString, sizeof(cString), " {{ Агент FBI %s: %s }}",Name(playerid),params[0]);
			ProxDetector(80.0, playerid, cString,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
		}
	}
	return true;
}
CMD:amegaphone(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	if(!IsPlayerConnected(playerid)) return true;
	if(sscanf(params, "s[128]",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: (/am)egaphone [текст]");
	format(cString, sizeof(cString), " {{ %s: %s }}",Name(playerid),params[0]);
	return ProxDetector(80.0, playerid, cString,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
}
CMD:fb(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	new result[128];
	if(sscanf(params, "s[128]",result)) return	SCM(playerid, COLOR_GRAD2, " Введите: /rb [текст]");
	if(pData[playerid][pMuted] > 0) return SendMes(playerid,COLOR_LIGHTRED," У Вас бан чата! До снятия: %i секунд(ы)",pData[playerid][pMuted]);
	if(!GetPVarInt(playerid,"Fraction_Duty")) return true;
	switch(pData[playerid][pMember])
	{
	case 5,6,8,9,16,20,12,13,15,11,14,17,18,24,26,29:
		{
			format(cString, 128, " %s %s: (( %s ))",GetRank(playerid), Name(playerid), result);
			SendFamilyMessage(pData[playerid][pMember], TEAM_AZTECAS_COLOR, cString);
			if(tipsteron == pData[playerid][pMember]) foreach(new i: Player) if(tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, cString);
			return true;
		}
	case 1,2,3,4,7,10,19,21,22,33:
		{
			if(!GetPVarInt(playerid,"Fraction_Duty")) return true;
			format(cString, 128, " %s %s: (( %s ))",GetRank(playerid), Name(playerid), result);
			SendFamilyMessage(pData[playerid][pMember], TEAM_BLUE_COLOR, cString);
			foreach(new i: Player) if(tipsteron == pData[playerid][pMember] && tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, cString);
			return true;
		}
	}
	if(pData[playerid][pMember] != 1 && pData[playerid][pMember] != 2 && pData[playerid][pMember] != 3 &&
			pData[playerid][pMember] != 7 && pData[playerid][pMember] != 10 && pData[playerid][pMember] != 19 && pData[playerid][pMember] != 21 &&
			pData[playerid][pMember] != 22) return true;
	format(string, 128, " %s %s: (( %s ))",GetRank(playerid), Name(playerid), result);
	SendFamilyMessage(pData[playerid][pMember], TEAM_BLUE_COLOR, string);
	if(tipsteron == pData[playerid][pMember]) foreach(new i: Player) if(tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, string);
	return true;
}
CMD:rb(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	new result[128];
	if(sscanf(params, "s[128]",result)) return	SCM(playerid, COLOR_GRAD2, " Введите: /rb [текст]");
	if(pData[playerid][pMuted] > 0) return SendMes(playerid,COLOR_LIGHTRED," У Вас бан чата! До снятия: %i секунд(ы)",pData[playerid][pMuted]);
	if(!GetPVarInt(playerid,"Fraction_Duty")) return true;
	switch(pData[playerid][pMember])
	{
	case 5,6,8,9,16,20,12,13,15,11,14,17,18,24,26,29:
		{
			format(cString, 128, " %s %s: (( %s ))",GetRank(playerid), Name(playerid), result);
			SendFamilyMessage(pData[playerid][pMember], TEAM_AZTECAS_COLOR, cString);
			if(tipsteron == pData[playerid][pMember]) foreach(new i: Player) if(tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, cString);
			return true;
		}
	case 1,2,3,4,7,10,19,21,22,33:
		{
			if(!GetPVarInt(playerid,"Fraction_Duty")) return true;
			format(cString, 128, " %s %s: (( %s ))",GetRank(playerid), Name(playerid), result);
			SendFamilyMessage(pData[playerid][pMember], TEAM_BLUE_COLOR, cString);
			foreach(new i: Player) if(tipsteron == pData[playerid][pMember] && tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, cString);
			return true;
		}
	}
	if(pData[playerid][pMember] != 1 && pData[playerid][pMember] != 2 && pData[playerid][pMember] != 3 &&
			pData[playerid][pMember] != 7 && pData[playerid][pMember] != 10 && pData[playerid][pMember] != 19 && pData[playerid][pMember] != 21 &&
			pData[playerid][pMember] != 22) return true;
	format(string, 128, " %s %s: (( %s ))",GetRank(playerid), Name(playerid), result);
	SendFamilyMessage(pData[playerid][pMember], TEAM_BLUE_COLOR, string);
	if(tipsteron == pData[playerid][pMember]) foreach(new i: Player) if(tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, string);
	return true;
}

CMD:family(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	new result[128];
	if(pData[playerid][pMuted] > 0) return SendMes(playerid,COLOR_LIGHTRED," У Вас бан чата! До снятия: %i секунд(ы)",pData[playerid][pMuted]);
	if(pData[playerid][pMember] == 0 && pData[playerid][pJob] != 99 && pData[playerid][pJob] != 4 && GetPVarInt(playerid,"farm_rank") < 2 && !GetPVarInt(playerid,"CasinoRank")) return SCM(playerid,COLOR_GREY," Вам недоступна данная функция");
	if(sscanf(params, "s[128]",result)) return SCM(playerid, COLOR_WHITE, " Введите: (/f)amily [текст]");
	if(GetPVarInt(playerid,"farm_rank") > 1)
	{
		switch(GetPVarInt(playerid,"farm_rank"))
		{
		case 2: format(cString, 128, "[FARM %i] Фермер %s: %s",GetPVarInt(playerid,"farm_id")-1, Name(playerid), result);
		case 3: format(cString, 128, "[FARM %i] Заместитель %s: %s",GetPVarInt(playerid,"farm_id")-1, Name(playerid), result);
		case 4: format(cString, 128, "[FARM %i] Владелец %s: %s",GetPVarInt(playerid,"farm_id")-1, Name(playerid), result);
		}
		SendFarmMessage(GetPVarInt(playerid,"farm_id"), TEAM_AZTECAS_COLOR, cString);
		return true;
	}
	if(GetPVarInt(playerid,"CasinoRank"))
	{
		switch(GetPVarInt(playerid,"CasinoRank"))
		{
		case 1: format(cString, 128, "[CASINO] Крупье %s: %s", Name(playerid), result);
		default: format(cString, 128, "[CASINO] Менеджер %s: %s", Name(playerid), result);
		}
		for(new ids = 1; ids <= TOTALCASINO; ids++)
		{
			foreach(new x: Player)
			{
				if(!PlayerToPoint(300,x, CasinoInfo[x][caPos][0x0],CasinoInfo[x][caPos][0x1], CasinoInfo[x][caPos][0x2])) return true;
				if(GetCasino(x, ids) && GetCasino(playerid, x) && GetPVarInt(x,"CasinoRank")) SCM(x,TEAM_AZTECAS_COLOR,cString);
			}
		}
		return true;
	}
	if(!GetPVarInt(playerid,"Fraction_Duty"))
	{
		switch(pData[playerid][pJob])
		{
		case 99: // Дальнобой рация
			{
				format(cString, 128, " %s [T.LVL %d]: {FFFFFF}%s",Name(playerid),pData[playerid][pDLevel],result);
				SendJobMessage(pData[playerid][pJob], 0x0073B7AA, cString);
				return true;
			}
		case 4: // Taxi Family
			{
   				if(inTaxi[playerid] != -1) return SCM(playerid,COLOR_GREY," Необходимо начать работу таксиста.");
 
				if(job_lvl(pData[playerid][job_skill][job_taxi]) < 5) 
					return SCM(playerid,COLOR_GREY," Рация доступна с 5 уровня таксиста");

				format(cString, 128, " %s [T.LVL %d]: {FFFFFF}%s",Name(playerid),job_lvl(pData[playerid][job_skill][job_taxi]),result);
				SendJobMessage(pData[playerid][pJob], 0xFF8040FF, cString);
				return true;
			}
		}
	}
	foreach(new i: Player)
	{
		if(pData[playerid][pMember] != 0 && GetPVarInt(playerid,"Fraction_Duty"))
		{
			switch(pData[playerid][pMember])
			{
			case 5,6,8,9,16,20,12,13,15,11,14,17,18,24,26,29:
				{
					if(!GetPVarInt(playerid,"Fraction_Duty")) return true;
					format(cString, 128, "%s  %s: %s",GetRank(playerid), Name(playerid), result);
					SendGangFamily(pData[playerid][pMember], TEAM_AZTECAS_COLOR, cString);
					if(tipsteron == pData[playerid][pMember] && tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, cString);
				}
			case 1,2,3,4,7,10,19,21,22,33:
				{
					if(!GetPVarInt(playerid,"Fraction_Duty")) return true;
					new _tmpstr[12];
					if( GetPVarInt(playerid, !#_pDetachRank) == 0xFF )
						_tmpstr = "Ком. ";
					else if( GetPVarInt(playerid, !#_pDetachRank) == 0xF )
						_tmpstr = "Зам. Ком. ";
					if( pData[playerid][pDetachID] )
						format(cString, 128, "%s %s: [%s%s] %s", GetRank(playerid), Name(playerid), _tmpstr, pData[playerid][pszDetachName], result);
					else
						format(cString, 128, "%s %s: %s", GetRank(playerid), Name(playerid), result);
					SendGangFamily(pData[playerid][pMember], TEAM_BLUE_COLOR, cString);
					if(tipsteron == pData[playerid][pMember] && tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, cString);
				}
			}
			return true;
		}
	}
	return true;
}
CMD:r(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	new result[128];
	if(sscanf(params, "s[128]",result)) return	SCM(playerid, COLOR_GRAD2, " Введите: (/r)adio [текст]");
	if(pData[playerid][pMuted] > 0) return SendMes(playerid,COLOR_LIGHTRED," У Вас бан чата! До снятия: %i секунд(ы)",pData[playerid][pMuted]);
	if(!GetPVarInt(playerid,"Fraction_Duty")) return true;
	switch(pData[playerid][pMember])
	{
	case 5,6,8,9,16,20,12,13,15,11,14,17,18,24,26,29:
		{
			format(cString, 128, "%s %s: %s",GetRank(playerid), Name(playerid), result);
			SendFamilyMessage(pData[playerid][pMember], TEAM_AZTECAS_COLOR, cString);
			if(tipsteron == pData[playerid][pMember]) foreach(new i: Player) if(tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, cString);
			return true;
		}
	case 1,2,3,4,7,10,19,21,22,33:
		{
			if(!GetPVarInt(playerid,"Fraction_Duty")) return true;
			new _tmpstr[12];
			if( GetPVarInt(playerid, !#_pDetachRank) == 0xFF )
				_tmpstr = "Ком. ";
			else if( GetPVarInt(playerid, !#_pDetachRank) == 0xF )
				_tmpstr = "Зам. Ком.";
			if( pData[playerid][pDetachID] )
				format(cString, 128, "%s %s: [%s%s] %s", GetRank(playerid), Name(playerid), _tmpstr, pData[playerid][pszDetachName], result);
			else
				format(cString, 128, "%s %s: %s", GetRank(playerid), Name(playerid), result);
			SendFamilyMessage(pData[playerid][pMember], TEAM_BLUE_COLOR, cString);
			foreach(new i: Player) if(tipsteron == pData[playerid][pMember] && tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, cString);
			return true;
		}
	}
	if(pData[playerid][pMember] != 1 && pData[playerid][pMember] != 2 && pData[playerid][pMember] != 3 &&
			pData[playerid][pMember] != 7 && pData[playerid][pMember] != 10 && pData[playerid][pMember] != 19 && pData[playerid][pMember] != 21 &&
			pData[playerid][pMember] != 22) return true;
	format(string, 128, "%s %s: %s",GetRank(playerid), Name(playerid), result);
	SendFamilyMessage(pData[playerid][pMember], TEAM_BLUE_COLOR, string);
	if(tipsteron == pData[playerid][pMember]) foreach(new i: Player) if(tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, string);
	return true;
}

CMD:rl(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if( !pData[playerid][pDetachID] ) return true;
	new result[128];
	if(sscanf(params, "s[128]",result)) return	SCM(playerid, COLOR_GRAD2, " Введите: /rl [текст]");
	if(pData[playerid][pMuted] > 0) return SendMes(playerid,COLOR_LIGHTRED," У Вас бан чата! До снятия: %i секунд(ы)",pData[playerid][pMuted]);
	if(!GetPVarInt(playerid,"Fraction_Duty")) return true;
	switch(pData[playerid][pMember])
	{
		case 1,2,3,4,7,10,19,21,22,33:
		{
			if(!GetPVarInt(playerid,"Fraction_Duty")) return true;
			new _tmpstr[12];
			if( GetPVarInt(playerid, !#_pDetachRank) == 0xFF )
				_tmpstr = "Ком. ";
			else if( GetPVarInt(playerid, !#_pDetachRank) == 0xF )
				_tmpstr = "Зам. Ком. ";
			if( pData[playerid][pDetachID] )
				format(cString, 128, "%s %s %s: %s", _tmpstr, pData[playerid][pszDetachName], Name(playerid), result);
			SendDetachMessage(pData[playerid][pDetachID], TEAM_BLUE_COLOR, cString);
			foreach(new i: Player) if(tipsteron == pData[playerid][pMember] && tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, cString);
			return true;
		}
	}
	return true;
}

CMD:plinvite(playerid, params[])
{
	if(pData[playerid][pLogin] == false || !pData[playerid][pDetachID] ) return true;
	if( !IsAArm(playerid) && !IsACop(playerid) ) return SCM(playerid, COLOR_GREY, " Вам недоступна данная функция");
	if( !GetPVarInt(playerid,"Fraction_Duty") ) return SCM(playerid, COLOR_GREY, " Вам недоступна данная функция");

	for(new i = 0; i < strlen(params); i++)
		if(params[i] == '+' || params[i] == '@' || params[i] == '\'' || params[i] == '\"' || params[i] == '=')
			return SCM(playerid, COLOR_GREY, " Вы использовали запрещенные символы");

	if(GetPVarInt(playerid, !#_pDetachRank) >= 0xF)
	{
		if( sscanf(params, "d", params[0]) ) return SCM(playerid, COLOR_GRAD2, " Введите: /plinvite [id игрока]");
		if(params[0] == playerid) return true;
		if(!ProxDetectorS(8.0, playerid, params[0])) 
			return SCM(playerid,COLOR_GREY," Игрок должен быть рядом с вами");

		if(pData[params[0]][pMember] != pData[playerid][pMember])
			return SCM(playerid,COLOR_GREY," Игрок не член вашей организации");

		if( !GetPVarInt(params[0], "Fraction_Duty") ) 
			return SCM(playerid, COLOR_GREY, " Игрок не начал рабочий день");

		if( GetPVarInt(params[0], !#_pDetachRank) )
			return SCM(playerid, COLOR_GREY, " Игрок Глава\\Заместитель Главы другого взвода");

		if( pData[params[0]][pDetachID] )
		{
			new szQuery[79+24];
			mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `firstdeputy`='Нет' WHERE `firstdeputy`='%e'", pData[params[0]][pName]);
			mysql_query(DATABASE, szQuery);
			mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `seconddeputy`='Нет' WHERE `seconddeputy`='%e'", pData[params[0]][pName]);
			mysql_query(DATABASE, szQuery);
			mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `member`='Нет' WHERE `member`='%e'", pData[params[0]][pName]);
			mysql_query(DATABASE, szQuery);
		}
	
		pData[params[0]][pDetachID] = pData[playerid][pDetachID];
		strmid(pData[params[0]][pszDetachName], pData[playerid][pszDetachName], 0, strlen(pData[playerid][pszDetachName])); 
		SetPlayerToTeamColor(params[0]);

		new _tmpstr[12];
		if( GetPVarInt(playerid, !#_pDetachRank) == 0xFF )
			_tmpstr = "Ком.";
		else if( GetPVarInt(playerid, !#_pDetachRank) == 0xF )
			_tmpstr = "Зам. Ком.";

		format(cString, 128, "%s%s %s принял %s в взвод %s", _tmpstr, pData[playerid][pszDetachName], Name(playerid), pData[params[0]][pName], pData[params[0]][pszDetachName]);
		SendFamilyMessage(pData[playerid][pMember], TEAM_BLUE_COLOR, cString);
	}
	else 
		return SCM(playerid, COLOR_GREY, " Вам недоступна данная функция");

	return 1;
}

CMD:pluninvite(playerid, params[])
{
	if(pData[playerid][pLogin] == false || !pData[playerid][pDetachID] ) return true;
	if( !IsAArm(playerid) && !IsACop(playerid) ) return SCM(playerid, COLOR_GREY, " Вам недоступна данная функция");
	if( !GetPVarInt(playerid,"Fraction_Duty") ) return SCM(playerid, COLOR_GREY, " Вам недоступна данная функция");

	for(new i = 0; i < strlen(params); i++)
		if(params[i] == '+' || params[i] == '@' || params[i] == '\'' || params[i] == '\"' || params[i] == '=')
			return SCM(playerid, COLOR_GREY, " Вы использовали запрещенные символы");

	if(pData[playerid][pRank] > 10 || pData[playerid][pLeader] > 0 || GetPVarInt(playerid, !#_pDetachRank) >= 0xF)
	{
		if( sscanf(params, "d", params[0]) ) return SCM(playerid, COLOR_GRAD2, " Введите: /pluninvite [id игрока]");
		if(params[0] == playerid) return true;
		if(!ProxDetectorS(8.0, playerid, params[0])) 
			return SCM(playerid,COLOR_GREY," Игрок должен быть рядом с вами");

		if(pData[params[0]][pMember] != pData[playerid][pMember])
			return SCM(playerid,COLOR_GREY," Игрок не член вашей организации");

		if( GetPVarInt(playerid, !#_pDetachRank) >= 0xF && pData[playerid][pLeader] <= 0 &&  pData[playerid][pRank] < 11 )
			if(pData[params[0]][pDetachID] != pData[playerid][pDetachID])
				return SCM(playerid,COLOR_GREY," Игрок не член вашего взвода");

		if( !GetPVarInt(params[0], "Fraction_Duty") ) 
			return SCM(playerid, COLOR_GREY, " Игрок не начал рабочий день");

		if(GetPVarInt(playerid, !#_pDetachRank) == 0xF && GetPVarInt(params[0], !#_pDetachRank) == 0xFF )
			return SCM(playerid, COLOR_GREY, " Вы не можете совершить это действие!");

		if( pData[params[0]][pDetachID] )
		{
			new szQuery[79+24];
			mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `firstdeputy`='Нет' WHERE `firstdeputy`='%e'", pData[params[0]][pName]);
			mysql_query(DATABASE, szQuery);
			mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `seconddeputy`='Нет' WHERE `seconddeputy`='%e'", pData[params[0]][pName]);
			mysql_query(DATABASE, szQuery);
			mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `member`='Нет' WHERE `member`='%e'", pData[params[0]][pName]);
			mysql_query(DATABASE, szQuery);
		}
	
		pData[params[0]][pDetachID] = 0;
		//strmid(pData[params[0]][pszDetachName], pData[playerid][pszDetachName], 0, strlen(pData[playerid][pszDetachName])); 
		DeletePVar(params[0], !#_pDetachColor);
		DeletePVar(params[0], !#_pDetachRank);
		SetPlayerToTeamColor(params[0]);

		if( GetPVarInt(playerid, !#_pDetachRank))
		{
			new _tmpstr[12];
			if( GetPVarInt(playerid, !#_pDetachRank) == 0xFF )
				_tmpstr = "Ком. ";
			else if( GetPVarInt(playerid, !#_pDetachRank) == 0xF )
				_tmpstr = "Зам. Ком. ";

			format(cString, 128, "%s%s %s исключил %s из взвода %s", _tmpstr, pData[playerid][pszDetachName], Name(playerid), pData[params[0]][pName], pData[params[0]][pszDetachName]);
		}
		else
			format(cString, 128, "%s %s исключил %s из взвода %s", GetRank(playerid), Name(playerid), pData[params[0]][pName], pData[params[0]][pszDetachName]);

		SendFamilyMessage(pData[playerid][pMember], TEAM_BLUE_COLOR, cString);
	}
	else 
		return SCM(playerid, COLOR_GREY, " Вам недоступна данная функция");

	return 1;
}

CMD:plgiverank(playerid, params[])
{
	if(pData[playerid][pLogin] == false || !pData[playerid][pDetachID] ) return true;
	if( !IsAArm(playerid) && !IsACop(playerid) ) return SCM(playerid, COLOR_GREY, " Вам недоступна данная функция");
	if( !GetPVarInt(playerid,"Fraction_Duty") ) return SCM(playerid, COLOR_GREY, " Вам недоступна данная функция");

	for(new i = 0; i < strlen(params); i++)
		if(params[i] == '+' || params[i] == '@' || params[i] == '\'' || params[i] == '\"' || params[i] == '=')
			return SCM(playerid, COLOR_GREY, " Вы использовали запрещенные символы");

	if(GetPVarInt(playerid, !#_pDetachRank) == 0xFF)
	{
		if( sscanf(params, "dd", params[0], params[1]) ) return SCM(playerid, COLOR_GRAD2, " Введите: /plgiverank [id игрока] [слот 0\\1]");
		if(params[1] < 0 || params[1] > 1) return SCM(playerid, COLOR_GRAD2, " Введите: /plgiverank [id игрока] [слот 0\\1]");
		if(!ProxDetectorS(8.0, playerid, params[0])) 
			return SCM(playerid,COLOR_GREY," Игрок должен быть рядом с вами");
		if(params[0] == playerid) return true;
		if(pData[params[0]][pMember] != pData[playerid][pMember])
			return SCM(playerid,COLOR_GREY," Игрок не член вашей организации");

		if(pData[params[0]][pDetachID] != pData[playerid][pDetachID])
			return SCM(playerid,COLOR_GREY," Игрок не член вашего взвода");

		if( !GetPVarInt(params[0], "Fraction_Duty") ) 
			return SCM(playerid, COLOR_GREY, " Игрок не начал рабочий день");

		//if(GetPVarInt(playerid, !#_pDetachRank) == 0xF && GetPVarInt(params[0], !#_pDetachRank) == 0xFF )
		//	return SCM(playerid, COLOR_GREY, " Вы не можете совершить это действие!");

		if( pData[params[0]][pDetachID] )
		{
			new szQuery[98+24+24+11];
			if(params[1] == 0)
				format(szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `firstdeputy`='%s' WHERE `fractionid`=%d and `name`='%s' LIMIT 1", pData[params[0]][pName], pData[params[0]][pMember], pData[params[0]][pszDetachName]);
			else 
				format(szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `seconddeputy`='%s' WHERE `fractionid`=%d and `name`='%s' LIMIT 1", pData[params[0]][pName], pData[params[0]][pMember], pData[params[0]][pszDetachName]);
			mysql_query(DATABASE, szQuery);
		}
		SetPVarInt(params[0], !#_pDetachRank, 0xF);

		if( GetPVarInt(playerid, !#_pDetachRank) )
		{
			new _tmpstr[12];
			if( GetPVarInt(playerid, !#_pDetachRank) == 0xFF )
				_tmpstr = "Ком. ";
			else if( GetPVarInt(playerid, !#_pDetachRank) == 0xF )
				_tmpstr = "Зам. Ком. ";

			format(cString, 128, "%s%s %s назначил %s заместителем взвода %s", _tmpstr, pData[playerid][pszDetachName], Name(playerid), pData[params[0]][pName], pData[params[0]][pszDetachName]);
		}
		SendFamilyMessage(pData[playerid][pMember], TEAM_BLUE_COLOR, cString);
	}
	else 
		return SCM(playerid, COLOR_GREY, " Вам недоступна данная функция");

	return 1;
}

CMD:pldemote(playerid, params[])
{
	if(pData[playerid][pLogin] == false || !pData[playerid][pDetachID] ) return true;
	if( !IsAArm(playerid) && !IsACop(playerid) ) return SCM(playerid, COLOR_GREY, " Вам недоступна данная функция");
	if( !GetPVarInt(playerid,"Fraction_Duty") ) return SCM(playerid, COLOR_GREY, " Вам недоступна данная функция");

	if( sscanf(params, "d", params[0]) ) return SCM(playerid, COLOR_GRAD2, " Введите: /pldemote [id игрока]");
	if(!ProxDetectorS(8.0, playerid, params[0])) 
		return SCM(playerid,COLOR_GREY," Игрок должен быть рядом с вами");
	if(pData[params[0]][pMember] != pData[playerid][pMember])
		return SCM(playerid,COLOR_GREY," Игрок не член вашей организации");
	if( !GetPVarInt(params[0], "Fraction_Duty") ) 
		return SCM(playerid, COLOR_GREY, " Игрок не начал рабочий день");
	if(!GetPVarInt(params[0], !#_pDetachRank))
		return SCM(playerid, COLOR_GREY, " Вы не можете понизить этого игрока!");
	
	new szQuery[156+24+24];
	if(GetPVarInt(playerid, !#_pDetachRank) == 0xFF && pData[playerid][pRank] < 12)
	{
		if(pData[params[0]][pDetachID] != pData[playerid][pDetachID])
			return SCM(playerid,COLOR_GREY," Игрок не член вашего взвода");
		if( pData[params[0]][pDetachID] )
		{
			format(szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `firstdeputy`='Нет' WHERE `fractionid`=%d and `name`='%s' and `firstdeputy`='%s' LIMIT 1", pData[params[0]][pMember], pData[params[0]][pszDetachName], pData[params[0]][pName]);
			mysql_query(DATABASE, szQuery);
			format(szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `seconddeputy`='Нет' WHERE `fractionid`=%d and `name`='%s' and `seconddeputy`='%s' LIMIT 1", pData[params[0]][pMember], pData[params[0]][pszDetachName], pData[params[0]][pName]);
			mysql_query(DATABASE, szQuery);
		}
		//SetPVarInt(params[0], !#_pDetachRank, 0xF);

		if( GetPVarInt(playerid, !#_pDetachRank) )
		{
			new _tmpstr[12];
			if( GetPVarInt(playerid, !#_pDetachRank) == 0xFF )
				_tmpstr = "Ком. ";
			else if( GetPVarInt(playerid, !#_pDetachRank) == 0xF )
				_tmpstr = "Зам. Ком. ";
			SetPVarInt(params[0], !#_pDetachRank, 0x0);
			format(cString, 128, "%s%s %s понизил %s до Бойца взвода %s", _tmpstr, pData[playerid][pszDetachName], Name(playerid), pData[params[0]][pName], pData[params[0]][pszDetachName]);
		}
		SendFamilyMessage(pData[playerid][pMember], TEAM_BLUE_COLOR, cString);
	}
	else if(pData[playerid][pRank] > 11) 
	{
		if(GetPVarInt(params[0], !#_pDetachRank) == 0xF)
		{
			format(szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `firstdeputy`='Нет' WHERE `fractionid`=%d and `name`='%s' and `firstdeputy`='%s' LIMIT 1", pData[params[0]][pMember], pData[params[0]][pszDetachName], pData[params[0]][pName]);
			mysql_query(DATABASE, szQuery);
			format(szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `seconddeputy`='Нет' WHERE `fractionid`=%d and `name`='%s' and `seconddeputy`='%s' LIMIT 1", pData[params[0]][pMember], pData[params[0]][pszDetachName], pData[params[0]][pName]);
			mysql_query(DATABASE, szQuery);
			format(cString, 128, "%s %s понизил %s до Бойца взвода %s", GetRank(playerid), Name(playerid), pData[params[0]][pName], pData[params[0]][pszDetachName]);
			SetPVarInt(params[0], !#_pDetachRank, 0x0);
		}
		if(GetPVarInt(params[0], !#_pDetachRank) == 0xF)
		{
			format(szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `member`='Нет' WHERE `fractionid`=%d and `name`='%s' and `member`='%s' LIMIT 1", pData[params[0]][pMember], pData[params[0]][pszDetachName], pData[params[0]][pName]);
			mysql_query(DATABASE, szQuery);
			format(cString, 128, "%s %s понизил %s до Заместителя взвода %s", GetRank(playerid), Name(playerid), pData[params[0]][pName], pData[params[0]][pszDetachName]);
			SetPVarInt(params[0], !#_pDetachRank, 0xF);
		}
		SendFamilyMessage(pData[playerid][pMember], TEAM_BLUE_COLOR, cString);
	}
	else	
		return SCM(playerid, COLOR_GREY, " Вам недоступна данная функция");

	return 1;
}

CMD:plmembers(playerid)
{
	if(pData[playerid][pLogin] == false || !pData[playerid][pDetachID] ) return SCM(playerid, COLOR_GREY, " Вам недоступна данная функция");
	if( !IsAArm(playerid) && !IsACop(playerid) ) return SCM(playerid, COLOR_GREY, " Вам недоступна данная функция");
	if( !GetPVarInt(playerid,"Fraction_Duty") ) return SCM(playerid, COLOR_GREY, " Вам недоступна данная функция");

	string = "";

	foreach(new player:Player)
	{
		if(pData[playerid][pDetachID] == pData[player][pDetachID] && (IsAArm(player) || IsACop(player)) ) 
		{
			new _tmpstr[34+24+24+1];
			if(GetPVarInt(player, !#_pDetachRank) == 0xFF)
				format(_tmpstr, sizeof _tmpstr, "%s\t%s\tГлава взвода\n", pData[player][pName], GetRank(player));
			else if(GetPVarInt(player, !#_pDetachRank) == 0xF)
				format(_tmpstr, sizeof _tmpstr, "%s\t%s\tЗаместитель Командира взвода\n", pData[player][pName], GetRank(player));
			else
				format(_tmpstr, sizeof _tmpstr, "%s\t%s\tБоец\n", pData[player][pName], GetRank(player));
			strcat(string, _tmpstr);
		}
		else
			continue;
	}

	ShowPlayerDialog(playerid, DIALOG_DETACHMENT_BASE-1, DIALOG_STYLE_TABLIST, "Члены взвода онлайн", string, "><", "");
	return 1;
}


CMD:departments(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	new result[128];
	if(sscanf(params, "s[128]",result)) return SCM(playerid, COLOR_WHITE, " Введите: (/d)epartments [текст]");
	if(pData[playerid][pMuted] > 0)
	{
		format(string, 128, " У Вас бан чата! До снятия: %i секунд(ы)",pData[playerid][pMuted]);
		SCM(playerid, COLOR_LIGHTRED, string);
		return true;
	}
	if(pData[playerid][pRank] < 2 && !IsAFbi(playerid)) return SCM(playerid, COLOR_GRAD1, "");
	if(!GetPVarInt(playerid,"Fraction_Duty")) return true;
	if(GetSVarInt("d_timer") > gettime()) return SCM(playerid, COLOR_GREY, " Посылать объявление можно раз в 10 секунд!");
	SetSVarInt("d_timer", gettime() + 10);
	switch(pData[playerid][pMember])
	{
	case 1: format(string, 128, "[Police LS] %s %s: %s",GetRank(playerid), Name(playerid), result);
	case 2: format(string, 128, "[FBI] %s %s: %s",GetRank(playerid), Name(playerid), result);
	case 3: format(string, 128, "[Army SF] %s %s: %s",GetRank(playerid), Name(playerid), result);
	case 22: format(string, 128, "[Medic] %s %s: %s",GetRank(playerid), Name(playerid), result);
	case 7: format(string, 128, "[Mayor] %s %s: %s",GetRank(playerid), Name(playerid), result);
	case 10: format(string, 128, "[Police SF] %s %s: %s",GetRank(playerid), Name(playerid), result);
	case 19: format(string, 128, "[Army LV] %s %s: %s",GetRank(playerid), Name(playerid), result);
	case 21: format(string, 128, "[Police LV] %s %s: %s",GetRank(playerid), Name(playerid), result);
	case 11: format(string, 128, "[Instructors] %s %s: %s",GetRank(playerid), Name(playerid), result);
	default: return SCM(playerid,COLOR_GREY," Вам недоступна данная функция");
	}
	SendTeamMessage(pData[playerid][pMember], COLOR_ALLDEPT, string);
	return true;
}
CMD:sms(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	else if(sms_timer[playerid] > 0 && pData[playerid][pLevel] < 3) return SCM(playerid, COLOR_GREY, " Для игроков с уровнем ниже 3, работает лимит 1 смс в 30 секунд!");
	else if(sscanf(params, "ds[64]",params[0],params[1])) return SCM(playerid, COLOR_WHITE, " Введите: /sms [playerid / phonenumber] [текст]");
	else if(pData[playerid][pMuted] > 0) return SendMes(playerid,COLOR_LIGHTRED,"  У Вас бан чата! До снятия: %i секунд(ы)",pData[playerid][pMuted]);
	if(PhoneOnline[playerid])return SCM(playerid, COLOR_WHITE, " Ваш телефон выключен!");
	new is1=1;
	new r=0;
	while(strlen(params[is1]))
	{
		if('0'<=params[is1]<='9')
		{
			new is2=is1+1;
			new p=0;
			while(p==0)
			{
				if('0'<=params[is2]<='9'&&strlen(params[is2])) is2++;
				else
				{
					strmid(strR[r],params,is1,is2,255);
					if(strval(strR[r])<255) r++;
					is1=is2;
					p=1;
					sms_timer[playerid] = 30;
				}
			}
		}
		is1++;
	}
	if(Rekl[playerid] == 1 && strfind(params[1],"www",true)!=-1 || Rekl[playerid] == 1 && strfind(params[1],".ru",true)!=-1
			|| Rekl[playerid] == 1 && strfind(params[1],".net",true)!=-1 || Rekl[playerid] == 1 && strfind(params[1],".com",true)!=-1
			|| Rekl[playerid] == 1 && strfind(params[1],"7777",true)!=-1)
	{
		SCM(playerid, COLOR_LIGHTRED, " Вы получили бан чата на 3 часа. /mm - репорт");
		pData[playerid][pMuted] = 10800;
		return true;
	}
	AntiCheatGetPos(playerid,CallInfo[playerid][callx],CallInfo[playerid][cally],CallInfo[playerid][callz]);
	CallInfo[playerid][callused] = 1;
	switch (params[0])
	{
	case 11888:
		{
			
			if !OnSmsNews[0] *then return SendClientMessage(playerid,COLOR_GREY,"Приём звонков/смс отключен!");
			foreach(new i: Player)
			{
				if(OnPlayerEther[i] && pData[i][pMember] == 16)
				{
					format(cString, sizeof(cString), "[Эфир] %s. Отправитель: %s[%i]",params[1],Name(playerid), playerid);
					SendClientMessage(i, COLOR_YELLOW, cString);
				}
			}
			format(cString, sizeof(cString), "SMS: %s. Получатель: LS NEWS",params[1]);
			SendClientMessage(playerid,  COLOR_YELLOW, cString);
			pData[playerid][pMobile] -= SmsPriceNews[0];
			FracBank[0][fSfnews] += SmsPriceNews[0];
		}
	case 11555:
		{
			if !OnSmsNews[1] *then return SendClientMessage(playerid,COLOR_GREY,"Приём звонков/смс отключен!");
			foreach(new i: Player)
			{
				if(OnPlayerEther[i] && pData[i][pMember] == 9)
				{
					format(cString, sizeof(cString), "[Эфир] %s. Отправитель: %s[%i]",params[1],Name(playerid), playerid);
					SendClientMessage(i, COLOR_YELLOW, cString);
				}
			}
			format(cString, sizeof(cString), "SMS: %s. Получатель: SF NEWS",params[1]);
			SendClientMessage(playerid,  COLOR_YELLOW, cString);
			pData[playerid][pMobile] -= SmsPriceNews[1];
			FracBank[0][fLsnews] += SmsPriceNews[1];
		}
	case 11333:
		{
			if !OnSmsNews[2] *then return SendClientMessage(playerid,COLOR_GREY,"Приём звонков/смс отключен!");
			foreach(new i: Player)
			{
				if(OnPlayerEther[i] && pData[i][pMember] == 20)
				{
					format(cString, sizeof(cString), "[Эфир] %s. Отправитель: %s[%i]",params[1],Name(playerid), playerid);
					SendClientMessage(i, COLOR_YELLOW, cString);
				}
			}
			format(cString, sizeof(cString), "SMS: %s. Получатель: LV NEWS",params[1]);
			SendClientMessage(playerid,  COLOR_YELLOW, cString);
			pData[playerid][pMobile] -= SmsPriceNews[2];
			FracBank[0][fLvnews] += SmsPriceNews[2];
		}
	default:
		{
			foreach(new i: Player)
			{
				if(IsPlayerConnected(params[0]))
				{
					if(PhoneOnline[params[0]] > 0)
					{
						SCM(playerid, COLOR_GREY, " Телефон абонента выключен.");
						format(YCMDstr, sizeof(YCMDstr), " %s достает телефон",Name(playerid));
						ProxDetector(5.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						return true;
					}
					format(YCMDstr, sizeof(YCMDstr), " SMS: %s. Отправитель: %s[%i]",params[1],Name(playerid), playerid);
					SCM(params[0], COLOR_YELLOW, YCMDstr);
					PlayerPlaySound(params[0], 1052, 0.0, 0.0, 0.0);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					format(YCMDstr, sizeof(YCMDstr), " %s достает мобильник",Name(playerid));
					ProxDetector(5.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					format(YCMDstr, sizeof(YCMDstr), " SMS: %s. Получатель: %s[%i]",params[1],Name(params[0]),params[0]);
					SCM(playerid,  COLOR_YELLOW, YCMDstr);
					SCM(playerid,  COLOR_WHITE, " Сообщение доставлено");
					pData[playerid][pMobile] += 2;
					return true;
				}
				else if(params[0] == pData[i][pPnumber])
				{	
					if(PhoneOnline[i] > 0)
					{
						SCM(playerid, COLOR_GREY, " Телефон абонента выключен.");
						format(YCMDstr, sizeof(YCMDstr), " %s достает телефон",Name(playerid));
						ProxDetector(5.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						return true;
					}
					pData[playerid][pMobile] +=20;
					format(YCMDstr, sizeof(YCMDstr), " SMS: %s. Отправитель: %s[%i]",params[1],Name(playerid), playerid);
					SCM(i, 0xFDE640AA, YCMDstr);
					PlayerPlaySound(i, 1052, 0.0, 0.0, 0.0);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					format(YCMDstr, sizeof(YCMDstr), " SMS: %s. Получатель: %s[%i]",params[1],Name(i), i);
					SCM(playerid,  0xFDE640AA, YCMDstr);
					SCM(playerid,  COLOR_WHITE, "- Сообщение доставлено");
					format(YCMDstr, sizeof(YCMDstr), " %s достает мобильник",Name(playerid));
					ProxDetector(5.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return true;
				}
			}
		}
	}
	return true;
}
CMD:pm(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] == 0 && pData[playerid][pHelper] == 0) return SCM(playerid, COLOR_GREY, " Вам недоступна эта функция");
	if(dostup[playerid] != 1 && pData[playerid][pHelper] == 0) return true;
	if(sscanf(params, "us[64]",params[0],params[1])) return SCM(playerid, COLOR_WHITE, " Введите: /pm [ид] [текст]");
	if(!IsPlayerConnected(params[0])) return true;
	if(pData[playerid][pAdmin] > 0)
	{
		format(YCMDstr, sizeof(YCMDstr), " Ответ от %s[%i]: %s",Name(playerid),playerid,params[1]);
		SCM(params[0], 0xD97700AA, YCMDstr);
		format(YCMDstr, sizeof(YCMDstr), "<-Ответ К %s[%i]: %s",Name(params[0]),params[0],params[1]);
		SendAdminMessage(0xD97700AA,YCMDstr);

	}
	else if(pData[playerid][pHelper] >=1 && SDuty[playerid] == 1)
	{
		format(YCMDstr, sizeof(YCMDstr), " Ответ от %s[%i]: %s",Name(playerid),playerid,params[1]);
		SCM(params[0], 0xE9A52800, YCMDstr);
		format(YCMDstr, sizeof(YCMDstr), "<-%s[%i] to %s[%i]: %s",Name(playerid),playerid, Name(params[0]),params[0],params[1]);
		HelperMessage(0xE9A52800,YCMDstr);
		if(params[0] != playerid) pData[playerid][pRatingSupport]++;
	}
	return true;
}

CMD:sduty(playerid, params[])
{
	if(pData[playerid][pHelper] != 1 && !dostup[playerid]) return SCM(playerid,COLOR_GREY," Вы не саппорт");
	switch(SDuty[playerid])
	{
	case 0: SDuty[playerid] = 1,SCM(playerid,-1," Рабочий день начат");
	case 1: SDuty[playerid] = 0,SCM(playerid,-1," Рабочий день окончен");
	}
	return true;
}

CMD:call(playerid, params[])
{
	if(sscanf(params, "d",params[0]))
	{
		format(cString, sizeof(cString), " %s достает телефон",Name(playerid));
		ProxDetector(30.0, playerid, cString, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
		ShowPlayerDialog(playerid, 9956, DIALOG_STYLE_LIST, "Выберите сервис", "1. Полиция \n2. Скорая помощь \n3. Таксопарк\n4. Автомастерская\n5. Доставка еды", "Выбор", "Отмена");
		return true;
	}
	if(Mobile[playerid] != 9999) return SCM(playerid, COLOR_GRAD2, "  Вы уже разговариваете по телефону ");
	AntiCheatGetPos(playerid,CallInfo[playerid][callx],CallInfo[playerid][cally],CallInfo[playerid][callz]);
	CallInfo[playerid][callused] = 1;
	
	if(params[0] == pData[playerid][pPnumber])
	{
		SCM(playerid, COLOR_GRAD2, " Линия занята");
		SetPlayerSpecialAction(playerid,13);
		return true;
	}
	else if(params[0] == 11888)
	{
		if pData[playerid][pMember] == 16 *then return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вам нельзя звонить в эфир. Используйте команду /npanel");
		if !OnSmsNews[0] *then return SendClientMessage(playerid,COLOR_GREY,"Приём звонков/смс отключен!");
		format(cString, sizeof(cString), "В студию звонит: %s. Введите /yes [%i], чтобы ответить",Name(playerid), playerid);
		SendFamilyMessage(16, COLOR_YELLOW, cString);
		SetPlayerSpecialAction(playerid,11);
		FracBank[0][fSfnews] -= SmsPriceNews[0];
		pData[playerid][pMobile] += SmsPriceNews[0];
		
		Mobile[playerid] = 11888;
	}
	else if(params[0] == 11555)
	{
		if pData[playerid][pMember] == 9 *then return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вам нельзя звонить в эфир. Используйте команду /npanel");
		if !OnSmsNews[1] *then return SendClientMessage(playerid,COLOR_GREY,"Приём звонков/смс отключен!");
		format(cString, sizeof(cString), "В студию звонит: %s. Введите /yes [%i], чтобы ответить",Name(playerid), playerid);
		SendFamilyMessage(9, COLOR_YELLOW, cString);
		SetPlayerSpecialAction(playerid,11);
		pData[playerid][pMobile] -= SmsPriceNews[1];
		FracBank[0][fLsnews] += SmsPriceNews[1];
		
		Mobile[playerid] = 11555;
	}
	else if(params[0] == 11333)
	{
		if pData[playerid][pMember] == 20 *then return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вам нельзя звонить в эфир. Используйте команду /npanel");
		if !OnSmsNews[2] *then return SendClientMessage(playerid,COLOR_GREY,"Приём звонков/смс отключен!");
		format(cString, sizeof(cString), "В студию звонит: %s. Введите /yes [%i], чтобы ответить",Name(playerid), playerid);
		SendFamilyMessage(20, COLOR_YELLOW, cString);
		SetPlayerSpecialAction(playerid,11);
		pData[playerid][pMobile] -= SmsPriceNews[2];
		FracBank[0][fLvnews] += SmsPriceNews[2];
		
		Mobile[playerid] = 11333;
	}
	else 
	{
		foreach(new i: Player)
		{
			if(pData[i][pPnumber] == params[0] && params[0] != 0)
			{
				if(PhoneOnline[i] > 0) return SCM(playerid, COLOR_GREY, " Телефон абонента выключен...");
				if(Mobile[i] == 9999)
				{
					Mobile[playerid] = i;
					format(cString, sizeof(cString), " Ваш мобильник звонит. Введите (/P)ickup. Звонит: %s",Name(playerid));
					SCM(Mobile[playerid], COLOR_WHITE, cString);
					PlayerPlaySound(Mobile[playerid], 20600, 0.0, 0.0, 0.0);
					format(cString, sizeof(cString), " У %s звонит мобильник",Name(i));
					ProxDetector(30.0, i, cString, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerSpecialAction(playerid,11);
					SetPlayerAttachedObject(playerid,1,18867,6,0.090000,0.019999,-0.011000,88.900032,-176.400070,0.499997,0.787002,0.753001,0.562001);
					CellTime[playerid] = 1;
					
					format(cString, sizeof(cString), " %s достает телефон",Name(playerid));
					ProxDetector(30.0, playerid, cString, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SCM(playerid,COLOR_WHITE," (( Введите (/H)ungup если хотите закончить разговор ))");
					return true;
				}
				else SCM(playerid, COLOR_GREY, " Телефон абонента занят...");
			}
		}
		if(Mobile[playerid] == 9999)
		{
			SCM(playerid, COLOR_GRAD2, " Телефон вне зоны доступа сети");
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
			return true;
		}
	}
	return true;
}
CMD:pickup(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(Mobile[playerid] != 9999) return SCM(playerid, COLOR_GRAD2, "  Вы уже разговариваете по телефону");
	foreach(new i: Player)
	{
		if(Mobile[i] == playerid)
		{
			Mobile[playerid] = i;
			format(cString, sizeof(cString), " %s ответил на звонок",Name(playerid));
			ProxDetector(20.0, playerid, cString, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SendMes(Mobile[playerid],COLOR_WHITE," %s ответил на звонок",Name(playerid));
			SetPlayerSpecialAction(playerid,11);
			Tel[playerid] = 1;
			Tel[Mobile[playerid]] = 1;
			SetPlayerAttachedObject(playerid,1,18867,6,0.090000,0.019999,-0.011000,88.900032,-176.400070,0.499997,0.787002,0.753001,0.562001);
		}
	}
	return true;
}
CMD:hangup(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(Mobile[playerid] < 1000)
	{
		SCM(Mobile[playerid], COLOR_GRAD2, " Абонент положил(a) трубку");
		SetPlayerSpecialAction(Mobile[playerid],SPECIAL_ACTION_STOPUSECELLPHONE);
		RemovePlayerAttachedObject(Mobile[playerid], 1);
		CellTime[Mobile[playerid]] = 0;
		SCM(playerid, COLOR_GRAD2, " Вы повесили трубку");
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
		RemovePlayerAttachedObject(playerid, 1);
		Tel[playerid] = 255;
		Tel[Mobile[playerid]] = 255;
		Mobile[Mobile[playerid]] = 9999;
		CellTime[playerid] = 0;
	}
	else if(Mobile[playerid] > 9999)
	{
		if OnPlayerEther[playerid] > 0 *then
		{
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
			Tel[playerid] = 255;
			OnPlayerEther[playerid] = 0;
		}
	}
	else SCM(playerid,COLOR_GREY," Ваш телефон в кармане");
	
	Mobile[playerid] = 9999;
	Tel[playerid] = 255;
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
	return true;
}

stock NameMonth(moooonth)
{
    new mtext[10];
    if(moooonth == 1) { mtext = "January"; }
	else if(moooonth == 2) { mtext = "February"; }
	else if(moooonth == 3) { mtext = "March"; }
	else if(moooonth == 4) { mtext = "April"; }
	else if(moooonth == 5) { mtext = "May"; }
	else if(moooonth == 6) { mtext = "June"; }
	else if(moooonth == 7) { mtext = "July"; }
	else if(moooonth == 8) { mtext = "August"; }
	else if(moooonth == 9) { mtext = "September"; }
	else if(moooonth == 10) { mtext = "October"; }
	else if(moooonth == 11) { mtext = "November"; }
	else if(moooonth == 12) { mtext = "December"; }
	return mtext;
}
CMD:time(playerid)
{
	if(pData[playerid][pState] == PLAYER_STATE_ONFOOT && PlayerCuffedTime[playerid] == 0)
		 ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_watch",4.1,0,0,0,0,0);
		 
	SetPlayerChatBubble (playerid, "взглянул на часы", COLOR_PURPLE, 30.0, 10000);
	
	if(pData[playerid][pJailTime] > 0)
	{
		format(YCMDstr, sizeof(YCMDstr), "~y~%02i %s~n~~g~~w~%02i:%02i~n~~w~Jail Time Left: %i sec~n~~g~Server 01", ServerDay, ServerNameMonth, ServHour, ServMinute, pData[playerid][pJailTime]);
	}
	else
	{
		format(YCMDstr, sizeof(YCMDstr), "~y~%02i %s~n~~g~~w~%02i:%02i~n~~g~Server 01", ServerDay, ServerNameMonth, ServHour, ServMinute);
	}
	GameTextForPlayer(playerid, YCMDstr, 5000, 1);
	return true;
}
CMD:house(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /house [housenumber]");
	SetPlayerPos(playerid,HouseInfo[params[0]][hEntrancex],HouseInfo[params[0]][hEntrancey],HouseInfo[params[0]][hEntrancez]);
	GameTextForPlayer(playerid, "~w~HOUSE", 5000, 1);
	return true;
}

CMD:promocode(playerid)
{
	if(pData[playerid][pLogin] == false) return 1;
	if(pData[playerid][pAdmin] < 10) return 1;

	DeletePVar(playerid, !#_dCodeEditName);
	DeletePVar(playerid, !#_dPromoCodes);
	DeletePVar(playerid, !#_dCodeEditLvl);
	DeletePVar(playerid, !#_dCodeEditMoney);
	DeletePVar(playerid, !#_dCodeEditBoostMoney);
	DeletePVar(playerid, !#_dCodeEdit);

	string[0] = '\0';
	strcat(string, "Промокод\tУровень\tДеньги\tДеньги(Boost)\n");
	new Cache:result = mysql_query(DATABASE, "SELECT * FROM `promocode`");
	new rows = cache_num_rows(); 
	if(rows)
	{
		for(new __ = 0; __ < rows; __++)
		{
			new code[24+1];

			cache_get_value_name(__,"code", code);

			
			new lvl, money, boostmoney;
			cache_get_value_name_int(__, "lvl", lvl);
			cache_get_value_name_int(__, "money", money);
			cache_get_value_name_int(__, "boostmoney", boostmoney);

			new tmpstr[sizeof code + 5 + 11 + 11];
			format(tmpstr, sizeof(tmpstr), "%s\t%d\t%d\t%d\n", code, lvl, money, boostmoney);
			strcat(string, tmpstr);
			SetPVarInt(playerid, !#_dPromoCodes, GetPVarInt(playerid, !#_dPromoCodes)+1);
		}
	}
	else
	{
		strcat(string, "Промокоды не найдены!\n");
	}
	cache_delete(result);
	strcat(string, "{00BF2B}Добавить промокод");
	
	ShowPlayerDialog(playerid, 11111, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Noxe-Rp >{00BF2B} Промокоды", 
		string, "Выбрать", "Отмена");
	return 1;
}

CMD:recon(playerid, const params[])
{
	if(pData[playerid][pLogin] == false) return true;
	else if(pData[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	else if(!strcmp(params,"OFF",true) && Spectate[playerid]) return StopSpectate(playerid);
	else if(!Spectate[playerid] && !strcmp(params,"OFF",true)) return SCM(playerid, COLOR_GREY, " Вы не в режиме наблюдения!");
	else if(sscanf(params, "u",params[0]))
	{
		if(Spectate[playerid]) return StopSpectate(playerid);
		else return SendClientMessage(playerid, COLOR_WHITE, " Используйте: /re(con) [playerid]");
		
	}
	else if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, " Игрок оффлайн / не залогинен");
	else if(pData[params[0]][pAdmin] != 0 && pData[playerid][pAdmin] != 10) return SCM(playerid, COLOR_GREY, " Наблюдение за администрацией запрещено!");
	//if(Spectate[playerid]) return SCM(playerid, COLOR_GREY, " Вы уже наблюдете!");
	else if(SpecID[params[0]] != 65535) return SCM(playerid, COLOR_GREY, " Этот игрок уже под наблюдением");
	else if(!Spectate[playerid])
	{
		AntiCheatGetPos(playerid,SpecPlayer[playerid][0],SpecPlayer[playerid][1],SpecPlayer[playerid][2]);
		SpecPlayerInt[playerid] = GetPlayerInterior(playerid);
		SpecPlayerWorld[playerid] = GetPlayerVirtualWorld(playerid);
		GetPlayerFacingAngle(playerid, SpecPlayerAngle[playerid]);
	}
	if(SpecAd[playerid] != INVALID_PLAYER_ID) SpecID[SpecAd[playerid]] = 65535;
	SpecAd[playerid] = 65535;
	SpecAd[playerid] = params[0];
	SpecID[params[0]] = playerid;
	//ShowMenuForPlayer(Admin,playerid);
	//PlayerTextDrawShow(playerid, NikPlayer);
	ReconSelect[playerid] = 7;
	ReconSelectSub[playerid] = INVALID_TEXT_DRAW;

	for(new i = 7; i < 35; i++)
	DisableEnableReconButton(playerid, i, 0, 0);

	for(new i = 0; i < 16; i++)
	PlayerTextDrawShow(playerid, ReconPlayer[i]);

	DisableEnableReconButton(playerid, ReconSelect[playerid], 1);

	SelectTextDraw(playerid, COLOR_ORANGE);
	Spectate[playerid] = 1;
	SetTimerEx("SpecPlayers", 100, false, "i", playerid);
	return true;
}

CMD:sc(playerid, params[])
{
	if(!pData[playerid][pLogin]) return SCM(playerid,COLOR_WHITE," Вы не авторизованы!");
	if(!dostup[playerid] && SDuty[playerid] == 0) return SCM(playerid, COLOR_GREY, " Вам недоступна эта команда");
	if(sscanf(params, "s[128]",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /sc [текст]");
	format(cString, sizeof(cString), " <SUPPORT-CHAT> %s: %s",Name(playerid),params[0]);
	HelperMessage(0xFF9933,cString);
	return true;
}
forward OnCheatWarning(playerid, ip_address[], type, code, code2, count);
public OnCheatWarning(playerid, ip_address[], type, code, code2, count)
{
	new cheat_warn[123];
	format(cheat_warn, sizeof(cheat_warn), " <AC> %s: type = %d, code = %d, code2 = %d, count = %d",pData[playerid][pName],type, code, code2, count);
	ABroadCast(COLOR_YELLOW,cheat_warn,1);
}
CMD:admin(playerid, params[])
{
	if(!pData[playerid][pLogin]) return SCM(playerid,COLOR_WHITE," Вы не авторизированы");
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	if(sscanf(params, "s[128]",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: (/a)dmin [текст]");
	format(cString, sizeof(cString), " <ADM-CHAT> %s: %s",pData[playerid][pName],params[0]);
	ABroadCast(COLOR_YELLOW,cString,1);
	return true;
}
CMD:jail(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	if(sscanf(params, "ud",params[0],params[1])) return SCM(playerid, COLOR_WHITE, " Введите: /jail [id] [минуты], /unjail [id] - вытащить из тюрьмы");
	if(!IsPlayerConnected(params[0])) return true;
	format(cString, 64, " Вы посадили %s в тюрьму на %i минут",Name(params[0]),params[1]);
	SCM(playerid, COLOR_LIGHTRED, cString);
	ResetPlayerWeaponEx(params[0]);
	SetPlayerInterior(params[0], 6);
	SetPlayerPos(params[0],264.1425,77.4712,1001.0391);
	SetPlayerFacingAngle(params[0], 263.0160);
	pData[params[0]][pMestoJail] = 1;
	pData[params[0]][pJailTime] = params[1]*60;
	format(cString, 72, " Вы посажены администратором "NameServer" на %i минут(ы)",params[1]);
	SCM(params[0], COLOR_LIGHTRED, cString);
	return true;
}
CMD:prison(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	new nouse;
	if(sscanf(params, "u",nouse,params[1])) return SCM(playerid, COLOR_WHITE, " Введите: /prison [ID] [Время]");
	sscanf(params, "ud",params[0],params[1]);
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, " Игрок не найден!");
	pData[params[0]][pMestoJail] = 4;
	SetPlayerVirtualWorld(params[0], 1);
	if(!strlen(params[1])) params[1] = 60;
	pData[params[0]][pJailTime] = params[1]*60;
	SetPlayerVirtualWorld(params[0], 1);
	SpawnPlayer(params[0]);
	ResetPlayerWeaponEx(params[0]);
	SendMes(playerid,COLOR_LIGHTRED," Вы поместили %s в форт ДеМорган на %d минут",Name(params[0]),params[1]);
	GameTextForPlayer(params[0], "~w~YOU ARE IN ~r~PRISON", 5000, 4);
	SendMes(params[0],COLOR_LIGHTRED," Вы помещены в форт ДеМорган администратором Noxe-Rp на %d минут",params[1]);
	return true;
}
CMD:settime(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return	SCM(playerid, COLOR_WHITE, " Введите: /settime [час] (0-23)");
	SetWorldTime(params[0]);
	format(cString, 32, " Время установлено на %i часов.",params[0]);
	ABroadCast(COLOR_WHITE, cString,1);
	return true;
}
CMD:plmenu(playerid)
{
	if( pData[playerid][pLogin] == false || !GetPVarInt(playerid,"Fraction_Duty") ) return true;
	if( !IsACop(playerid) && !IsAArm(playerid) ) return true;
	if(pData[playerid][pRank] <= 13) return true;
	//
	playerShowDialog(playerid, DIALOG_DETACHMENT_BASE);
	return 1;
}

CMD:invite(playerid, params[])
{
	if(pData[playerid][pLogin] == false || !GetPVarInt(playerid,"Fraction_Duty")) return true;
	new para1;
	new ftext[32];
	if(sscanf(params, "u",para1)) return	SCM(playerid, COLOR_WHITE, " Введите: /invite [id]");
	if(!IsPlayerConnected(para1) || !pData[playerid][pLogin]) return SCM(playerid,COLOR_GREY," Игрок оффлайн");
	if(GetDistanceBetweenPlayerss(playerid, para1) < 5.0)
	{
		if(pData[para1][pLevel] < 2) return SCM(playerid,COLOR_GREY," У игрока 1 уровень");
		if(IsPlayerInAnyVehicle(para1)) return SCM(playerid, COLOR_GREY, " Игрок в машине!");
		else if(pData[para1][pMember] != 0) return SCM(playerid, COLOR_GREY, " Игрок состоит в организации");
		else if(pData[para1][pWarns] >= 1) return SCM(playerid, COLOR_GRAD1, " У игрока Warn.");
		if (IsACop(playerid) && pData[playerid][pRank] == 14)
		{
			return SCM(playerid,COLOR_GREY," Только переводом из армии (/iinvite)");
		}
		if (pData[playerid][pLeader] == 3 || pData[playerid][pMember] == 3 && pData[playerid][pRank] == 14)
		{
			ftext = "Army SF", InviteSkin[para1] = 287;
			pData[para1][pMember] = 3;
			pData[para1][pModel] = 287;
		}
		else if (pData[playerid][pLeader] == 5 || pData[playerid][pMember] == 5 && pData[playerid][pRank] == 9)
		{
			ftext = "La Cosa Nostra", InviteSkin[para1] = 223;
			SetPlayerSkin(para1, 223);
			pData[para1][pMember] = 5;
			pData[para1][pModel] = 124;
			SetPlayerToTeamColor(para1);
			//SpawnPlayer(para1);
		}
		else if (pData[playerid][pLeader] == 6 || pData[playerid][pMember] == 6 && pData[playerid][pRank] == 9)
		{
			ftext = "Yakuza", InviteSkin[para1] = 120;
			SetPlayerSkin(para1, 123);
			pData[para1][pMember] = 6;
			pData[para1][pModel] = 123;
			SetPlayerToTeamColor(para1);
			//SpawnPlayer(para1);
		}
		else if (pData[playerid][pLeader] == 7 || pData[playerid][pMember] == 7 && pData[playerid][pRank] == 5)
		{
			ftext = "Mayor", InviteSkin[para1] = 57;
			pData[para1][pMember] = 7;
			pData[para1][pModel] = 57;
		}
		else if (pData[playerid][pLeader] == 8 || pData[playerid][pMember] == 8 && pData[playerid][pRank] == 2)
		{
			ftext = "Casino Caligula", InviteSkin[para1] = 171;
			SetPlayerSkin(para1, 287);
			pData[para1][pMember] = 8;
			pData[para1][pModel] = 287;
			SetPlayerToTeamColor(para1);
		}
		else if (pData[playerid][pLeader] == 9 || pData[playerid][pMember] == 9 && pData[playerid][pRank] == 9)
		{
			ftext = "SF News", InviteSkin[para1] = 250;
			pData[para1][pMember] = 9;
			pData[para1][pModel] = 188;
		}
		else if (pData[playerid][pLeader] == 11 || pData[playerid][pMember] == 11 && pData[playerid][pRank] == 9)
		{
			ftext = "Instructors", InviteSkin[para1] = 59;
			pData[para1][pMember] = 11;
			pData[para1][pModel] = 59;
		}
		else if (pData[playerid][pLeader] == 12 || pData[playerid][pMember] == 12 && pData[playerid][pRank] == 9)
		{
			ftext = "Ballas", InviteSkin[para1] = 102;
			SetPlayerSkin(para1, 103);
			pData[para1][pMember] = 12;
			pData[para1][pModel] = 103;
			SetPlayerToTeamColor(para1);
			//SpawnPlayer(para1);
		}
		else if (pData[playerid][pLeader] == 13 || pData[playerid][pMember] == 13 && pData[playerid][pRank] == 9)
		{
			ftext = "Vagos", InviteSkin[para1] = 108;
			SetPlayerSkin(para1, 108);
			pData[para1][pMember] = 13;
			pData[para1][pModel] = 108;
			SetPlayerToTeamColor(para1);
			//SpawnPlayer(para1);
		}
		else if (pData[playerid][pLeader] == 14 || pData[playerid][pMember] == 14 && pData[playerid][pRank] == 9)
		{
			ftext = "Russian Mafia", InviteSkin[para1] = 111;
			SetPlayerSkin(para1, 112);
			pData[para1][pMember] = 14;
			pData[para1][pModel] = 111;
			SetPlayerToTeamColor(para1);
			//SpawnPlayer(para1);
		}
		else if (pData[playerid][pLeader] == 15 || pData[playerid][pMember] == 15 && pData[playerid][pRank] == 9)
		{
			ftext = "Grove Street", InviteSkin[para1] = 106;
			SetPlayerSkin(para1, 105);
			pData[para1][pMember] = 15;
			pData[para1][pModel] = 105;
			SetPlayerToTeamColor(para1);
			//SpawnPlayer(para1); 9 sf 16 ls
		}
		else if (pData[playerid][pLeader] == 16 || pData[playerid][pMember] == 16 && pData[playerid][pRank] == 9)
		{
			ftext = "LS News", InviteSkin[para1] = 261;
			pData[para1][pMember] = 16;
			pData[para1][pModel] = 188;
		}
		else if (pData[playerid][pLeader] == 17 || pData[playerid][pMember] == 17 && pData[playerid][pRank] == 9)
		{
			ftext = "Los Aztecas", InviteSkin[para1] = 115;
			SetPlayerSkin(para1, 114);
			pData[para1][pMember] = 17;
			pData[para1][pModel] = 114;
			SetPlayerToTeamColor(para1);
			//SpawnPlayer(para1);
		}
		else if (pData[playerid][pLeader] == 18 || pData[playerid][pMember] == 18 && pData[playerid][pRank] == 9)
		{
			ftext = "Rifa",InviteSkin[para1] = 174;
			SetPlayerSkin(para1, 175);
			pData[para1][pMember] = 18;
			pData[para1][pModel] = 175;
			SetPlayerToTeamColor(para1);
			//SpawnPlayer(para1);
		}
		else if (pData[playerid][pLeader] == 19 || pData[playerid][pMember] == 19 && pData[playerid][pRank] == 14)
		{
			ftext = "Army LV", InviteSkin[para1] = 287;
			pData[para1][pMember] = 19;
			pData[para1][pModel] = 287;
		}
		else if (pData[playerid][pLeader] == 20 || pData[playerid][pMember] == 20 && pData[playerid][pRank] == 9)
		{
			ftext = "LV News",InviteSkin[para1] = 261;
			pData[para1][pMember] = 20;
			pData[para1][pModel] = 188;
		}
		else if (pData[playerid][pLeader] == 24 || pData[playerid][pMember] == 24 && pData[playerid][pRank] == 8)
		{
			ftext = "Mongols MC",InviteSkin[para1] = 247;
			SetPlayerSkin(para1, 247);
			pData[para1][pMember] = 24;
			pData[para1][pModel] = 247;
			SetPlayerToTeamColor(para1);
			//SpawnPlayer(para1);
		}
		else if (pData[playerid][pLeader] == 26 || pData[playerid][pMember] == 26 && pData[playerid][pRank] == 8)
		{
			ftext = "Warlocks MC", InviteSkin[para1] = 247;
			SetPlayerSkin(para1, 247);
			pData[para1][pMember] = 26;
			pData[para1][pModel] = 247;
			SetPlayerToTeamColor(para1);
			//SpawnPlayer(para1);
		}
		else if (pData[playerid][pLeader] == 29 || pData[playerid][pMember] == 29 && pData[playerid][pRank] == 8)
		{
			if(pData[playerid][pLeader] == 29 || pData[playerid][pMember] == 29 && pData[playerid][pRank] == 8) { ftext = "Pagans MC"; InviteSkin[para1] = 247;  }
			SetPlayerSkin(para1, 247);
			pData[para1][pMember] = 29;
			pData[para1][pModel] = 247;
			SetPlayerToTeamColor(para1);
			//SpawnPlayer(para1);
		}
		else if(pData[playerid][pLeader] == 22)
		{
			if(pData[playerid][pLeader] == 22 || pData[playerid][pMember] == 22 && pData[playerid][pRank] == 9) { ftext = "Medic"; InviteSkin[para1] = 70;  }
			pData[para1][pMember] = 22;
			pData[para1][pModel] = 276;
			pData[para1][pJobHeal] = 1;
		}
		else if(pData[playerid][pMember] == 22 && pData[playerid][pRank] == 9)
		{
			if(pData[playerid][pMember] == 22 && pData[playerid][pRank] == 9) { ftext = "Medic"; InviteSkin[para1] = 70;  }
			pData[para1][pMember] = 22;
			pData[para1][pModel] = 276;
			pData[para1][pJobHeal] = pData[playerid][pJobHeal];
		}
		else return SCM(playerid, COLOR_GRAD1, " Вам недоступна эта функция");
		format(string, 128, " Вы пригласили %s присоеденится к %s", Name(para1),ftext);
		SCM(playerid, 0x6BB3FFAA, string);
		format(string, 128, " Вы приглашены в %s лидером %s", ftext, Name(playerid));
		SCM(para1, COLOR_BLUE, string);
		DeletePVar(para1,"Fraction_Duty");
		pData[para1][pRank] = 1;
		pData[para1][pJob] = 0;
		MoneyLog(pData[playerid][pName],Name(para1), pData[playerid][pMember], "InviteToFraction");
	}
	return true;
}
CMD:iinvite(playerid, params[])
{
	new para1;
	if(sscanf(params,"d",para1)) return SCM(playerid, COLOR_WHITE, "  Введите: /iinvite [ID]");
	new ftext[25];
	if(para1 == INVALID_PLAYER_ID || !IsPlayerConnected(para1)) return SCM(playerid, COLOR_GREY, " Игрок не найден!");
	if(!ProxDetectorS(8.0, playerid, para1)) return SCM(playerid, COLOR_GREY, " Рядом с вами никого нет!");
	if(pData[para1][pLevel] < 2) return SCM(playerid, COLOR_GREY, " Требуется 2 уровень");
	if(pData[para1][pLeader] > 0) return SCM(playerid, COLOR_GREY, " Нельзя пригласить лидера.");
	if(pData[playerid][pLeader] == 1 || pData[playerid][pMember] == 1 && pData[playerid][pRank] >= 13)
	{
		if(IsAArm(para1) && pData[para1][pRank] >= 3) { ftext = "Полицию ЛС"; ChosenSkin[para1] = 280; }
		else return SCM(playerid, COLOR_GREY, " Этот игрок не отслужил");
	}
	else if (pData[playerid][pLeader] == 2 || pData[playerid][pMember] == 2 && pData[playerid][pRank] >= 9)
	{
		if(IsAArm(para1) && pData[para1][pRank] >= 10 || IsACop(para1) && pData[para1][pRank] >= 5) { ftext = "FBI"; ChosenSkin[para1] = 286; }
		else return SCM(playerid, COLOR_GREY, " Этот игрок не отслужил");
	}
	else if (pData[playerid][pLeader] == 10 || pData[playerid][pMember] == 10 && pData[playerid][pRank] >= 13)
	{
		if(IsAArm(para1) && pData[para1][pRank] >= 3) { ftext = "Полицию СФ"; ChosenSkin[para1] = 280; }
		else return SCM(playerid, COLOR_GREY, " Этот игрок не отслужил");
	}
	else if (pData[playerid][pLeader] == 21 || pData[playerid][pMember] == 21 && pData[playerid][pRank] >= 13)
	{
		if(IsAArm(para1) && pData[para1][pRank] >= 3) { ftext = "Полицию ЛВ"; ChosenSkin[para1] = 280; }
		else return SCM(playerid, COLOR_GREY, " Этот игрок не отслужил");
	}
	else return SCM(playerid,COLOR_GREY," Вам не доступна данная функция.");
	pData[para1][pMember] = pData[playerid][pMember];
	pData[para1][pRank] = 1;
	SendMes(playerid, 0x6AB1FFAA, "Вы пригласили %s присоедениться к %s", pData[para1][pName],ftext);
	SendMes(para1, 0x6AB1FFAA, "Вы были приглашены в %s лидером %s", ftext, pData[playerid][pName]);
	pData[para1][pJob] = 0;
	SCM(para1, COLOR_BLUE, " Рабочий день окончен");
	SetPlayerSkin(para1, pData[para1][pChar][0]);
	SetPlayerColor(para1, TEAM_HIT_COLOR);
	DeletePVar(para1,"Fraction_Duty");
	pData[para1][pModel] = ChosenSkin[para1];
	return true;
}
CMD:report(playerid, params[])
{
	if(!pData[playerid][pLogin]) return true;
	else if(pData[playerid][pRMuteTime] > gettime()) return SendClientMessage(playerid, COLOR_GRAD1, " Вам запрещено писать в репорт на определенное время");
	else if(GetPVarInt(playerid,"FloodRep") > 0) return SCM(playerid, COLOR_GRAD1, " Запрещено писать в репорт чаще чем раз в 2 минуты. Пожалуйста, сформулируйте свою жалобу адекватно");
	else if(!IsPlayerConnected(playerid)) return true;
	else if(sscanf(params, "us[128]",params[0],params[1])) return SCM(playerid, COLOR_WHITE, " Введите: /report [id] [причина]");
	else if(!IsPlayerConnected(params[0])) return true;
	SendMes(playerid, COLOR_YELLOW, " Жалоба от %s[%i] на %s[%i]: %s",Name(playerid),playerid, Name(params[0]),params[0], params[1]);
	format(string, 512, " Жалоба от %s[%i] на %s[%i]: %s", Name(playerid),playerid, Name(params[0]),params[0], params[1]);
	SendAdminMessage(0xD97700AA,string);
	SetPVarInt(playerid,"FloodRep",120);
	return true;
}
CMD:rmute(playerid, params[])
{
	if(pData[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	else if(sscanf(params, "ui",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE,!" Введите: /rmute [ID] [Время. 0 - РАЗМУТ]");
	else if(params[0] == INVALID_PLAYER_ID) return true;
	else if(params[0] < 0) return SendClientMessage(playerid, COLOR_GRAD1," Запрещено использовать отрицательные значения");
	if(params[1])
	{
		pData[params[0]][pRMuteTime] = gettime()+(params[1]*60);
		SendMes(playerid,COLOR_LIGHTRED," Вы запретили %s писать в репорт на %i минут",pData[params[0]][pName],params[1]);
		SendMes(params[0],COLOR_LIGHTRED," Администратор %s запретил Вам писать в репорт на %i минут",pData[playerid][pName],params[1]);
	}
	else
	{
		pData[params[0]][pRMuteTime] = 0;
		SendMes(playerid,COLOR_LIGHTRED," Вы сняли запрет на репорт у %s",pData[params[0]][pName]);
		SendMes(params[0],COLOR_LIGHTRED," Администратор %s снял запрет на репорт",pData[playerid][pName]);
	}
	return true;
}
CMD:auninvite(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if(sscanf(params, "us[128]",params[0],params[1])) return SCM(playerid, COLOR_WHITE, " Введите: /auninvite [playerid] [причина]");
	if(!IsPlayerConnected(params[0]) || !pData[params[0]][pLogin]) return SCM(playerid,COLOR_GREY," Игрок не найден");
	if(pData[params[0]][pMember] == 0) return true;
	format(cString, sizeof(cString), " %s выгнал вас из организации. Причина: %s",Name(playerid),params[1]);
	SCM(params[0], 0x6BB3FFAA, cString);
	format(cString, sizeof(cString), " Вы выгнали %s из организации. Причина: %s",Name(params[0]),params[1]);
	SCM(playerid, 0x6BB3FFAA, cString);
	SCM(params[0], COLOR_BLUE, " Вы снова гражданский");
	SCM(params[0], COLOR_BLUE, " Рабочий день окончен");
	if(GetPVarInt(params[0],"capture_on"))
	{
		DeletePVar(params[0],"capture_on");
		PlayerTextDrawHide(playerid, Capture[params[0]]);
		for(new i_ = 0; i_ < 5; i_++) { SendDeathMessageToPlayer(params[0],INVALID_PLAYER_ID-1, INVALID_PLAYER_ID-1, 0); }
	}
	if(GetPVarInt(params[0],"mWar_on"))
	{
		DeletePVar(params[0],"mWar_on");
		PlayerTextDrawHide(params[0], mWar[params[0]]);
		for(new i_ = 0; i_ < 5; i_++) { SendDeathMessageToPlayer(params[0],INVALID_PLAYER_ID-1, INVALID_PLAYER_ID-1, 0); }
	}
	if(GetPVarInt(params[0],"bWar_on"))
	{
		PlayerTextDrawHide(params[0], bWar[params[0]]);
		DestroyDynamic3DTextLabel(LabelBwar[params[0]]);
		DeletePVar(params[0],"bWar_on");
	}
	pData[params[0]][pMember] = 0;
	pData[params[0]][pLeader] = 0;
	pData[params[0]][pRank] = 0;
	pData[params[0]][pJobHeal] = 0;
	pData[params[0]][pSpawnChange] = 1;
	pData[params[0]][pDetachID] = 0;
	new szQuery[128];
	mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `firstdeputy`='Нет' WHERE `firstdeputy`='%e'", pData[params[0]][pName]);
	mysql_query(DATABASE, szQuery);
	mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `seconddeputy`='Нет' WHERE `seconddeputy`='%e'", pData[params[0]][pName]);
	mysql_query(DATABASE, szQuery);
	mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `member`='Нет' WHERE `member`='%e'", pData[params[0]][pName]);
	mysql_query(DATABASE, szQuery);
	DeletePVar(params[0], !#_pDetachRank);
	DeletePVar(params[0], !#_pDetachColor);
	SetAccountInfo(params[0], pData[params[0]][pSpawnChange], "pSpawnChange");
	DeletePVar(params[0],"Fraction_Duty");
	SetPlayerArmour(params[0],0);
	ResetPlayerWeaponEx(params[0]);
	//SpawnPlayer(params[0]);
	SetPlayerColor(params[0], TEAM_HIT_COLOR);
	SetPlayerSkin(params[0],pData[params[0]][pChar][0]);
	return true;
}
CMD:gc(playerid, params[])
{
	if(pData[playerid][pAdmin] < 4) return true;
	new Float:mesto[3];
	if(sscanf(params,"fff",mesto[0],mesto[1],mesto[2])) return SendClientMessage(playerid, -1,!" Использование: /gc [x] [y] [z]");
	SetPlayerPos(playerid,mesto[0],mesto[1],mesto[2]);
	new message[70];
	format(message, sizeof(message),"Вы телепортировались на координаты %f %f %f", mesto[0],mesto[1],mesto[2]);
	SendClientMessage(playerid,-1, message);
	return true;
}
CMD:gi(playerid, params[])
{
	if(pData[playerid][pAdmin] < 4) return true;
	else if(sscanf(params,"i",params[0])) return SendClientMessage(playerid, -1,!" Использование: /gi [интерьер]");

	SetPlayerInterior(playerid, params[0]);
	new message[20];
	format(message, sizeof(message),"Вы в инетере %i", params[0]);
	SendClientMessage(playerid,-1, message);
	return true;
}

CMD:gv(playerid, params[])
{
	if(pData[playerid][pAdmin] < 4) return true;
	else if(sscanf(params,"i",params[0])) return SendClientMessage(playerid, -1,!" Использование: /gv [$уальный мир]");

	SetPlayerVirtualWorld(playerid, params[0]);
	new message[20];
	format(message, sizeof(message),"Вы в мире %i", params[0]);
	SendClientMessage(playerid,-1, message);
	return true;
}
CMD:gotocar(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /gotocar [carid]");
	new Float:x, Float:y, Float:z;
	AntiCheatGetVehiclePos(params[0], x, y, z);
	SetPlayerVirtualWorld(playerid, GetVehicleVirtualWorld(params[0]));
	if(IsPlayerInAnyVehicle(playerid))
	{
		SetVehiclePos(GetPlayerVehicleID(playerid), x+1,y+1,z);
		return true;
	}
	SetPlayerPos(playerid, x+1, y+1, z);
	return true;
}
CMD:addmoderation(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	new name[32];
	if(sscanf(params, "s[32]i", name, params[1])) return SCM(playerid, COLOR_WHITE, " Введите: /addmoderation [ник] [уровень модератора]");
	if((params[1] > 5 || params[1] < 0) && pData[playerid][pAdmin] < 10) return SCM(playerid, COLOR_GREY, " Вы допустили оишбку");
	else if((params[1] > 10 || params[1] < 0) && pData[playerid][pAdmin] > 9) return SCM(playerid, COLOR_GREY, " Вы допустили оишбку");
	SendMes(playerid,0x6495EDFF," Вы установили %s %d уровень администрирования",name,params[1]);
	new szQuery[128];
	mysql_format(DATABASE,szQuery, 128, "SELECT * FROM "TABLE_ADMIN" WHERE `name` = '%e'", name);
	mysql_tquery(DATABASE,szQuery,"OnMySQL_QUERY","iis",17,params[1],name);

	mysql_format(DATABASE,szQuery, 128, "SELECT * FROM "TABLE_ACCOUNTS" WHERE `name` = '%e'", name);
	mysql_tquery(DATABASE,szQuery,"OnMySQL_QUERY","iis",17,params[1],name);
	return true;
}
CMD:splist(playerid,params[])
{
	if(pData[playerid][pAdmin] < 4 || !dostup[playerid]) return true; // Проверка на админку
	return mysql_tquery(DATABASE,"SELECT * FROM `accounts` WHERE `pHelper` != '0'","OnMySQL_QUERY","iis",43,playerid,"");
}
CMD:myrating(playerid,params[])
{
	if(!pData[playerid][pHelper]) return true; // Проверка на support
	return SendMes(playerid,-1,"Рейтинг: %i ответов",pData[playerid][pRatingSupport]);
}
CMD:setsupport(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	if(!IsPlayerConnected(playerid)) return true;
	if(sscanf(params, "ud",params[0],params[1])) return SCM(playerid, COLOR_GRAD2, " Введите: /setsupport [playerid] [0 снять - 1 назначить]");
	if(params[1] > 1 || params[1] < 0) return SCM(playerid, COLOR_GREY, " Вы сделали ошибку");
	if(!IsPlayerConnected(params[0])) return true;
	pData[params[0]][pHelper] = params[1];
	format(cString, sizeof(cString), " Вы назначили / сняли саппорта %s",Name(params[0]),params[1]);
	SCM(playerid, COLOR_LLIGHTBLUE, cString);
	return true;
}
CMD:geton(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	if(sscanf(params, "s[63]",params[0])) return SCM(playerid,COLOR_GREY, " Введите: /geton [name]");
	new szQuery[53+24];
	mysql_format(DATABASE,szQuery, sizeof szQuery, "SELECT * FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%e'",params[0]);
	mysql_tquery(DATABASE,szQuery,"OnMySQL_QUERY","iis",18,playerid,params[0]);
	return true;
}
CMD:getleader(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /getleader [номер фракции]");
	new szQuery[56+11];
	mysql_format(DATABASE,szQuery, sizeof szQuery, "SELECT * FROM `"TABLE_ACCOUNTS"` WHERE `pLeader` = '%d'",params[0]);
	mysql_tquery(DATABASE,szQuery,"OnMySQL_QUERY","iis",19,playerid,params[0]);
	return true;
}
CMD:makeleader(playerid, params[])
{
	new para1,level;
	if(pData[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(sscanf(params, "ud",para1,level)) return SCM(playerid, COLOR_WHITE, " Введите: /makeleader [playerid] [Number(0-33)]");
	if(level > 22 || level < 0) { SCM(playerid, COLOR_GREY, " Нельзя меньше 0 или больше 32!"); return true; }
	if(!IsPlayerConnected(para1)) return true;
	if(level == 0)
	{
		
		SendClientMessage(playerid, COLOR_BLUE, "Пожалуйста используйте /auninvite");
		return 1;
	}
	if(pData[para1][pWarns] >= 1) return SCM(playerid, COLOR_GRAD1, " У игрока Warn.");
	if(pData[para1][pMember]) return SCM(playerid, COLOR_GREY," Игрок состоит во фракции");
	if(level == 1){ pData[para1][pRank] = 14; InviteSkin[para1] = 283; } //Police Force
	else if(level == 2) { pData[para1][pRank] = 10; InviteSkin[para1] = 166; } //FBI
	else if(level == 3) { pData[para1][pRank] = 15; InviteSkin[para1] = 287; } //Army
	else if(level == 4) { SCM(playerid,COLOR_GREY," Данная фракция отсуствует"); return true; } //Ambulance
	else if(level == 5) { pData[para1][pRank] = 10; InviteSkin[para1] = 113; } //La Cosa Nostra
	else if(level == 6) { pData[para1][pRank] = 10; InviteSkin[para1] = 120; } //Yakuza
	else if(level == 7) { pData[para1][pRank] = 6; InviteSkin[para1] = 147; } //Goverment
	else if(level == 8) { SCM(playerid,COLOR_GREY," За казино отвечают мафии."); return true; } //Casino
	else if(level == 9) { pData[para1][pRank] = 10; InviteSkin[para1] = 261; } //News Reporters
	else if(level == 10) { pData[para1][pRank] = 14; InviteSkin[para1] = 283; } //SFPD
	else if(level == 11) { pData[para1][pRank] = 10; InviteSkin[para1] = 240; } //Driving/Flying School
	else if(level == 12) { pData[para1][pRank] = 10; InviteSkin[para1] = 104; } //Ballas
	else if(level == 13) { pData[para1][pRank] = 10; InviteSkin[para1] = 110; } //Vagos
	else if(level == 14) { pData[para1][pRank] = 10; InviteSkin[para1] = 125; } //Russian Mafia
	else if(level == 15) { pData[para1][pRank] = 10; InviteSkin[para1] = 270; } //Groove
	else if(level == 16) { pData[para1][pRank] = 10; InviteSkin[para1] = 261; } //News Reporters
	else if(level == 17) { pData[para1][pRank] = 10; InviteSkin[para1] = 115; } //Aztecas
	else if(level == 18) { pData[para1][pRank] = 10; InviteSkin[para1] = 173; } //Rifa
	else if(level == 19) { pData[para1][pRank] = 15; InviteSkin[para1] = 287; } //Army
	else if(level == 20) { pData[para1][pRank] = 10; InviteSkin[para1] = 261; } //News Reporters
	else if(level == 21) { pData[para1][pRank] = 14; InviteSkin[para1] = 283; } //LVPD
	else if(level == 22) { pData[para1][pRank] = 10; InviteSkin[para1] = 70;  } //Медики

	pData[para1][pLeader] = level;
	pData[para1][pMember] = level;
	pData[para1][pJob] = 0;
	format(cString, sizeof(cString), " Администратор %s назначил вас контролировать данную организацию",Name(playerid));
	SCM(para1, COLOR_BLUE, cString);
	SCM(para1, COLOR_BLUE," Рабочий день начат");
	if(pData[para1][pPHouseKey] != INVALID_HOUSE_ID) pData[para1][pSpawnChange] = 1;
	else pData[para1][pSpawnChange] = 0;
	format(cString, sizeof(cString), " Вы назначили %s контролировать организацию номер %i.",Name(para1),level);
	SCM(playerid,COLOR_BLUE, cString);
	pData[para1][pModel] = InviteSkin[para1];
	SetAccountInfo(para1, pData[para1][pSpawnChange], "pSpawnChange");
	SetPlayerArmour(para1,0);
	SetPlayerHealth(para1,100);
	SetPlayerToTeamColor(para1);
	SetPlayerSkin(para1, InviteSkin[para1]);
	SetPVarInt(para1,"Fraction_Duty",1);
	//SpawnPlayer(para1);
	return true;
}
CMD:demote(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	new para1;
	new reason[24];
	if((IsAFbi(playerid) && pData[playerid][pRank] >= 6) || (IsAMayor(playerid) && pData[playerid][pRank] >= 6)) {}
	else return SCM(playerid,COLOR_GREY," Вам недоступна данная команда");
	if(sscanf(params, "us[24]",para1,reason)) return SCM(playerid, COLOR_WHITE, " Введите: /demote [ID] [Причина]");
	if(!IsPlayerConnected(para1) || pData[para1][pLogin] == false) return SCM(playerid,COLOR_GREY," Игрок оффлайн");
	if(!IsAArm(para1) && !IsACop(para1) && !IsAMedic(para1)) return SCM(playerid, COLOR_GREY, " Этот человек не состоит в Полиции / Армии / Медиках");
	new Member;
	Member = pData[para1][pMember];
	new rank = pData[para1][pRank];
	if(pData[para1][pLeader] >= 1) return SCM(playerid,COLOR_WHITE," Его нельзя уволить / понизить");
	if(Member == 1) { if(rank > 10) { SCM(playerid, COLOR_GREY, " Его нельзя уволить / понизить"); return true; } }
	else if(Member == 3) { if(rank > 8) { SCM(playerid, COLOR_GREY, " Его нельзя уволить / понизить"); return true; } }
	else if(Member == 22) { if(rank > 9) { SCM(playerid, COLOR_GREY, " Его нельзя уволить / понизить"); return true; } }
	else if(Member == 10) { if(rank > 10) { SCM(playerid, COLOR_GREY, " Его нельзя уволить / понизить"); return true; } }
	else if(Member == 19) { if(rank > 10) { SCM(playerid, COLOR_GREY, " Его нельзя уволить / понизить"); return true; } }
	else if(Member == 21) { if(rank > 10) { SCM(playerid, COLOR_GREY, " Его нельзя уволить / понизить"); return true; } }
	if(rank > 1)
	{
		if(para1 != INVALID_PLAYER_ID)
		{
			pData[para1][pRank] --;
			format(string, 128, " Вы были понижены до %i ранга Агентом FBI / Мэром %s. Причина: %s",pData[para1][pRank], Name(playerid),reason);
			SCM(para1, COLOR_BLUE, string);
			format(string, 128, " Вы понизили %s до %i ранга. Причина: %s", Name(para1),pData[para1][pRank],reason);
			SCM(playerid, COLOR_BLUE, string);
		}
	}
	else if(rank == 1)
	{
		if(para1 != INVALID_PLAYER_ID)
		{
			if(IsACop(para1))
			{
				format(string, 128, " Вы были переведены обратно в армию Агентом FBI / Мэром %s. Причина: %s", Name(playerid),reason);
				SCM(para1, COLOR_BLUE, string);
				format(string, 128, " Вы перевели %s обратно в армию. Причина: %s", Name(para1),reason);
				SCM(playerid, COLOR_BLUE, string);
				pData[para1][pMember] = 3;
				pData[para1][pRank] = 3;
				pData[para1][pModel] = 287;
				SetPlayerSkin(para1, pData[para1][pModel]);
				SetPlayerToTeamColor(para1);
				pData[para1][pSpawnChange] = 0;
				SetPVarInt(para1,"Fraction_Duty",1);
				SpawnPlayer(para1);
			}
			else if(IsAArm(para1))
			{
				format(string, 128, " Мэр / Агент FBI %s уволил вас из армии. Причина: %s", Name(playerid),reason);
				SCM(para1, COLOR_BLUE, string);
				format(string, 128, " Вы уволили %s из армии. Причина: %s", Name(para1),reason);
				SCM(playerid, COLOR_BLUE, string);
				pData[para1][pMember] = 0;
				pData[para1][pRank] = 0;
				pData[para1][pJob] = 0;
				SetPlayerArmour(para1,0);
				SetPlayerColor(para1, TEAM_HIT_COLOR);
				SetPlayerSkin(para1, pData[para1][pChar][0]);
				pData[para1][pSpawnChange] = 0;
				DeletePVar(para1,"Fraction_Duty");
				SpawnPlayer(para1);
			}
			else if(IsAMedic(para1))
			{
				format(string, 128, " Мэр / Агент FBI %s уволил вас из Medic. Причина: %s", Name(playerid),reason);
				SCM(para1, COLOR_BLUE, string);
				format(string, 128, " Вы уволили %s из Medic. Причина: %s", Name(para1),reason);
				SCM(playerid, COLOR_BLUE, string);
				pData[para1][pMember] = 0;
				pData[para1][pRank] = 0;
				pData[para1][pJob] = 0;
				SetPlayerArmour(para1,0);
				SetPlayerColor(para1, TEAM_HIT_COLOR);
				SetPlayerSkin(para1, pData[para1][pChar][0]);
				pData[para1][pSpawnChange] = 0;
				DeletePVar(para1,"Fraction_Duty");
				SpawnPlayer(para1);
			}
			SetAccountInfo(para1, pData[para1][pSpawnChange], "pSpawnChange");
		}
	}
	return true;
}
CMD:banlog(playerid, params[])
{
	if(pData[playerid][pAdmin] < 3) return true;
	new params_name[24];
	if(sscanf(params, "s[24]", params_name)) return SCM(playerid, COLOR_WHITE, " Введите: /banlog [Имя]");
	format(format_string,sizeof format_string,"SELECT * FROM `"TABLE_BAN"` WHERE `Name` = '%s'",params_name);
	new Cache:result = mysql_query(DATABASE, format_string);
	new rows = cache_num_rows();
	if(cache_num_rows())
	{
		if(!rows) return SCM(playerid, COLOR_GREY, " Информация о блокировках не найдена");
		string[0] = EOS;
		new nick2[MAX_PLAYER_NAME+1],dates[18],reason[64];
		strcat(string,"{FFFFFF}Администратор\t{FFFFFF}Причина\t{FFFFFF}Дата блокировки\t{FFFFFF}Дата разблокировки\n",sizeof string);
		for(new i = 0; i < rows; i++)
		{
			cache_get_value_name(i,	"NameAdmin",nick2);
			cache_get_value_name(i,	"Date",dates);
			cache_get_value_name(i,	"Reason",reason);
			
			strcat(string,nick2,sizeof string);
			strcat(string,"\t",sizeof string);
			
			strcat(string,reason,sizeof string);
			strcat(string,"\t",sizeof string);
			
			strcat(string,dates,sizeof string);
			strcat(string,"\t",sizeof string);
			
			strcat(string,"\n",sizeof string);
		}
		ShowPlayerDialog(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, params_name,string,"x", "");
	}
	else SCM(playerid, COLOR_WHITE, " [BAN-LIST]  Игрок не найден");
	return cache_delete(result);
}
CMD:giverank(playerid, params[])
{
	if(pData[playerid][pLogin] == false || !GetPVarInt(playerid,"Fraction_Duty")) return true;
	new para1;
	new level;
	if(sscanf(params, "ud",para1,level)) return    SCM(playerid, COLOR_WHITE, " Введите: /giverank [id] [ранг]");
	if(!IsPlayerConnected(para1) || !pData[para1][pLogin]) return SCM(playerid,COLOR_GREY," Игрок оффлайн");
	else if(pData[playerid][pMember] != pData[para1][pMember]) return SCM(playerid,COLOR_GREY," Игрок не из вашей организации");
	else if(pData[playerid][pRank] <= pData[para1][pRank]) return SCM(playerid, COLOR_GREY, " [Ошибка]  Вы не можете повысить/понизить этого игрока");
	else if(level >= pData[playerid][pRank]) return SCM(playerid,COLOR_GREY," Вы не можете повышать выше своего ранга");
	if(pData[playerid][pMember] == 1) { if(level > 13 || level < 1) { SCM(playerid, COLOR_GREY, " Нельзя меньше 1 и больше 13!"); return true; } }
	else if(pData[playerid][pMember] == 2) { if(level > 9 || level < 1) { SCM(playerid, COLOR_GREY, " Нельзя меньше 1 и больше 9!"); return true; } }
	else if(pData[playerid][pMember] == 3) { if(level > 14 || level < 1) { SCM(playerid, COLOR_GREY, " Нельзя меньше 1 и больше 14!"); return true; } }
	else if(pData[playerid][pMember] == 4) return true;
	else if(pData[playerid][pMember] == 5) { if(level > 9 || level < 1) { SCM(playerid, COLOR_GREY, " Нельзя меньше 1 и больше 9!"); return true; } }
	else if(pData[playerid][pMember] == 6) { if(level > 9 || level < 1) { SCM(playerid, COLOR_GREY, " Нельзя меньше 1 и больше 9!"); return true; } }
	else if(pData[playerid][pMember] == 7) { if(level > 5 || level < 1) { SCM(playerid, COLOR_GREY, " Нельзя меньше 1 и больше 5!"); return true; } }
	else if(pData[playerid][pMember] == 8) { if(level > 2 || level < 1) { SCM(playerid, COLOR_GREY, " Нельзя меньше 1 и больше 2!"); return true; } }
	else if(pData[playerid][pMember] == 9) { if(level > 9 || level < 1) { SCM(playerid, COLOR_GREY, " Нельзя меньше 1 и больше 9!"); return true; } }
	else if(pData[playerid][pMember] == 10) { if(level > 13 || level < 1) { SCM(playerid, COLOR_GREY, " Нельзя меньше 1 и больше 13!"); return true; } }
	else if(pData[playerid][pMember] == 11) { if(level > 9 || level < 1) { SCM(playerid, COLOR_GREY, " Нельзя меньше 1 и больше 9!"); return true; } }
	else if(pData[playerid][pMember] == 12) { if(level > 9 || level < 1) { SCM(playerid, COLOR_GREY, " Нельзя меньше 1 и больше 9!"); return true; } }
	else if(pData[playerid][pMember] == 13) { if(level > 9 || level < 1) { SCM(playerid, COLOR_GREY, " Нельзя меньше 1 и больше 10!"); return true; } }
	else if(pData[playerid][pMember] == 14) { if(level > 9 || level < 1) { SCM(playerid, COLOR_GREY, " Нельзя меньше 1 и больше 9!"); return true; } }
	else if(pData[playerid][pMember] == 15) { if(level > 9 || level < 1) { SCM(playerid, COLOR_GREY, " Нельзя меньше 1 и больше 9!"); return true; } }
	else if(pData[playerid][pMember] == 16) { if(level > 9 || level < 1) { SCM(playerid, COLOR_GREY, " Нельзя меньше 1 и больше 9!"); return true; } }
	else if(pData[playerid][pMember] == 17) { if(level > 9 || level < 1) { SCM(playerid, COLOR_GREY, " Нельзя меньше 1 и больше 9!"); return true; } }
	else if(pData[playerid][pMember] == 18) { if(level > 9 || level < 1) { SCM(playerid, COLOR_GREY, " Нельзя меньше 1 и больше 9!"); return true; } }
	else if(pData[playerid][pMember] == 19) { if(level > 14 || level < 1) { SCM(playerid, COLOR_GREY, " Нельзя меньше 1 и больше 14!"); return true; } }
	else if(pData[playerid][pMember] == 20) { if(level > 9 || level < 1) { SCM(playerid, COLOR_GREY, " Нельзя меньше 1 и больше 9!"); return true; } }
	else if(pData[playerid][pMember] == 21) { if(level > 13 || level < 1) { SCM(playerid, COLOR_GREY, " Нельзя меньше 1 и больше 13!"); return true; } }
	else if(pData[playerid][pMember] == 22) { if(level > 9 || level < 1) { SCM(playerid, COLOR_GREY, " Нельзя меньше 1 и больше 9!"); return true; } }
	else if(pData[playerid][pMember] == 24) { if(level > 8 || level < 1) { SCM(playerid, COLOR_GREY, " Нельзя меньше 1 и больше 8!"); return true; } }
	else if(pData[playerid][pMember] == 26) { if(level > 8 || level < 1) { SCM(playerid, COLOR_GREY, " Нельзя меньше 1 и больше 8!"); return true; } }
	else if(pData[playerid][pMember] == 29) { if(level > 8 || level < 1) { SCM(playerid, COLOR_GREY, " Нельзя меньше 1 и больше 8!"); return true; } }
	else if(pData[playerid][pMember] == 33) return true;
	if (pData[playerid][pMember] == 1 && pData[playerid][pRank] >= 11 || pData[playerid][pMember] == 10 && pData[playerid][pRank] >= 11 || pData[playerid][pMember] == 21 && pData[playerid][pRank] >= 11)
	{
		if(para1 == playerid) { SCM(playerid, COLOR_GREY, " [Ошибка]  Вы указали свой ID"); return true; }
		if (pData[para1][pLeader] >= 1) { SCM(playerid, COLOR_GREY, " [Ошибка] Вы указали ID лидера"); return true; }
		if(pData[playerid][pLeader] == 0 && level > 10) return SCM(playerid,COLOR_GREY," Не выше 10 ранга!");
	}
	else if(pData[playerid][pMember] == 3 && pData[playerid][pRank] >= 12 || pData[playerid][pMember] == 19 && pData[playerid][pRank] >= 12)
	{
		if(para1 == playerid) { SCM(playerid, COLOR_GREY, " Вы указали свой ID"); return true; }
		if(pData[para1][pLeader] >= 1) { SCM(playerid, COLOR_GREY, " Вы указали ID лидера"); return true; }
		if(pData[playerid][pLeader] == 0 && level > 10) return SCM(playerid,COLOR_GREY," Не выше 10 ранга!");
	}
	else if(pData[playerid][pMember] == 22 && pData[playerid][pRank] >= 7)
	{
		if(para1 == playerid) { SCM(playerid, COLOR_GREY, " [Ошибка]  Вы указали свой ID"); return true; }
		if (pData[para1][pLeader] >= 1) { SCM(playerid, COLOR_GREY, " [Ошибка] Вы указали ID лидера"); return true; }
		if(pData[playerid][pLeader] == 0 && level > 5) return SCM(playerid,COLOR_GREY," Не выше 5 ранга!");
	}
	else if((pData[playerid][pMember] == 5 || pData[playerid][pMember] == 6 || pData[playerid][pMember] == 9 || pData[playerid][pMember] == 11 || pData[playerid][pMember] == 12 || pData[playerid][pMember] == 14 || pData[playerid][pMember] == 15 || pData[playerid][pMember] == 16 || pData[playerid][pMember] == 17 || pData[playerid][pMember] == 18 || pData[playerid][pMember] == 20 || pData[playerid][pMember] == 2) && pData[playerid][pRank] >= 7)
	{
		if(para1 == playerid) { SCM(playerid, COLOR_GREY, " [Ошибка]  Вы указали свой ID"); return true; }
		if (pData[para1][pLeader] >= 1) { SCM(playerid, COLOR_GREY, " [Ошибка] Вы указали ID лидера"); return true; }
		if(pData[playerid][pLeader] == 0 && level > 6) return SCM(playerid,COLOR_GREY," Не выше 6 ранга!");
	}
	else if(pData[playerid][pMember] == 7)
	{
		if(para1 == playerid) { SCM(playerid, COLOR_GREY, " Вы указали свой ID"); return true; }
		if(pData[para1][pLeader] >= 1) { SCM(playerid, COLOR_GREY, " Вы указали ID лидера"); return true; }
		if(pData[playerid][pLeader] == 0 && level > 3) return SCM(playerid,COLOR_GREY," Не выше 3 ранга!");
	}
	else if(pData[playerid][pMember] == 8 && pData[playerid][pRank] >= 2)
	{
		if(para1 == playerid) { SCM(playerid, COLOR_GREY, " Вы указали свой ID"); return true; }
		if(pData[para1][pLeader] >= 1) { SCM(playerid, COLOR_GREY, " Вы указали ID лидера"); return true; }
	}
	else if(pData[playerid][pMember] == 13 && pData[playerid][pRank] >= 7 || pData[playerid][pMember] == 12 && pData[playerid][pRank] >= 7 || pData[playerid][pMember] == 15 && pData[playerid][pRank] >= 7 || pData[playerid][pMember] == 17 && pData[playerid][pRank] >= 7 || pData[playerid][pMember] == 18 && pData[playerid][pRank] >= 7)
	{
		if(para1 == playerid) { SCM(playerid, COLOR_GREY, " Вы указали свой ID"); return true; }
		if(pData[para1][pLeader] >= 1) { SCM(playerid, COLOR_GREY, " Вы указали ID лидера"); return true; }
		if(pData[playerid][pLeader] == 0 && level > 6) return SCM(playerid,COLOR_GREY," Не выше 7 ранга!");
	}
	else if(pData[playerid][pMember] == 22 && pData[playerid][pRank] >= 7)
	{
		if(para1 == playerid) { SCM(playerid, COLOR_GREY, " Вы указали свой ID"); return true; }
		if(pData[para1][pLeader] >= 1) { SCM(playerid, COLOR_GREY, " Вы указали ID лидера"); return true; }
		if(pData[playerid][pLeader] == 0 && level > 5) return SCM(playerid,COLOR_GREY," Не выше 5 ранга!");
	}
	else if(pData[playerid][pMember] == 24 && pData[playerid][pRank] > 5 || pData[playerid][pMember] == 26 && pData[playerid][pRank] > 5 || pData[playerid][pMember] == 29 && pData[playerid][pRank] > 5)
	{
		if(para1 == playerid) { SCM(playerid, COLOR_GREY, " Вы указали свой ID"); return true; }
		if(pData[para1][pLeader] >= 1) { SCM(playerid, COLOR_GREY, " Вы указали ID лидера"); return true; }
		if(pData[playerid][pLeader] == 0 && level > 5) return SCM(playerid,COLOR_GREY," Не выше 5 ранга!");
	}
	else return SCM(playerid,COLOR_GREY," Вам недоступна данная функция");
	format(string, 128, " %s повысил/понизил вас до %i ранга ",Name(playerid), level);
	SCM(para1, 0x6BB3FFAA, string);
	format(string, 128, " Вы повысили/понизили %s до %i ранга.", Name(para1),level);
	SCM(playerid, 0x6BB3FFAA, string);
	pData[para1][pRank] = level;
	return true;
}

CMD:agiverank(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	if(sscanf(params, "ud",params[0],params[1])) return SCM(playerid, COLOR_WHITE, " Введите: /agiverank [playerid] [ранг от 1 до 21]");
	if(params[1] > 22 || params[1] < 0) { SCM(playerid, COLOR_GREY, " Не менее 0 и не более 21!"); return true; }
	if(!IsPlayerConnected(params[0])) return true;
	pData[params[0]][pRank] = params[1];
	format(cString, sizeof(cString), " Вы были повышены/понижены в ранге модератором %s",Name(playerid));
	SCM(params[0], 0x6495EDFF, cString);
	format(cString, sizeof(cString), " Вы повысили/понизили %s до %i ранга.",Name(params[0]),params[1]);
	SCM(playerid, 0x6495EDFF, cString);
	return true;
}
CMD:tpcor(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 8) return true;
	new Float:fx, Float:fy, Float:fz;
	if(sscanf(params, "fff",fx, fy, fz)) return SCM(playerid, -1, " Введите: /tpcor [x] [y] [z]");
	SetPlayerPos(playerid, fx, fy, fz);
	SCM(playerid, -1, " Вы были телепортированы");
	return true;
}
CMD:teleport(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(dostup[playerid] == 0) return true;
	if(pData[playerid][pAdmin] < 3) return SCM(playerid, COLOR_GREY, " Доступно администраторам с 3 ранга");
	new x_tp[32];
	if(sscanf(params, "s[32]", x_tp))
	{
	    playerShowDialog(playerid, 9000);
		return true;
	}
	new szQuery[54+36];
 	mysql_format(DATABASE, szQuery, sizeof szQuery, "SELECT * FROM `"TABLE_TELEPORT"` WHERE `key` = '%s'", x_tp);
	mysql_query(DATABASE, szQuery);
	new r = cache_num_rows();
	if(!r) return playerShowDialog(playerid, 9000);
	
	new Float: tpx,
		Float: tpy,
		Float: tpz,
		interior,
		virtualworld ;

	cache_get_value_name_int(0, "interior", interior);
	cache_get_value_name_int(0, "virtualworld", virtualworld);
	cache_get_value_name_float(0, "tpx", tpx);
	cache_get_value_name_float(0, "tpy", tpy);
	cache_get_value_name_float(0, "tpz", tpz);

	if(GetPlayerState(playerid) == 2)
	{
	    new carid = GetPlayerVehicleID(playerid);
	    SetVehiclePos(carid, tpx, tpy, tpz);
	    LinkVehicleToInterior(carid, interior);
		SetVehicleVirtualWorld(carid, virtualworld);
		
	    SetPlayerInterior(playerid, interior);
	    SetPlayerVirtualWorld(playerid, virtualworld);

	}
	else
	{
		SetPlayerPos(playerid, tpx, tpy, tpz);
	    SetPlayerInterior(playerid, interior);
	    SetPlayerVirtualWorld(playerid, virtualworld);
	}
	SCM(playerid, COLOR_YELLOW, " Вы телепортированы");

	return true;
}
CMD:settp(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(dostup[playerid] == 0) return true;
	if(pData[playerid][pAdmin] < 7) return SCM(playerid, COLOR_GREY, " Вам недоступна эта функция");
	new action[32], second[32], third[32];
	if(sscanf(params, "s[32]", action)) return SCM(playerid, -1, " Введите: /settp [category|name|veh|add|dell]");
	if(!sscanf(params, "s[32]s[32]", action, second)) sscanf(params, "s[32]s[32]s[32]", action, second, third);
	if(!strcmp(action, "category", true))
	{
		new szQuery[257];
	    new todo[32], names[32];
	    if(sscanf(params, "s[32]s[32]s[32]", action, todo, names)) return SCM(playerid, -1, " Введите: /settp category [add|delete] [name]");
	    if(!strcmp(todo, "add", true))
	    {
            format(szQuery, 256, "SELECT name FROM `"TABLE_TELEPORT"` WHERE `category` = '%s'", names);
			new Cache: cache = mysql_query(DATABASE, szQuery);
			new r = cache_num_rows();
			if(r) return SCM(playerid, COLOR_GREY, " Категория уже существует!");
			cache_delete(cache);
			SetPVarString(playerid, "new_category", names);
	        SendMes(playerid, -1, " Категория '%s' создана. Для появления в списке /tp нужно добавить один пункт 'name'", names);
	    }
	    else if(!strcmp(todo, "delete", true))
	    {
			format(szQuery, 256, "SELECT name FROM `"TABLE_TELEPORT"` WHERE `category` = '%s'", names);
			new Cache: cache = mysql_query(DATABASE, szQuery);
			new r = cache_num_rows();
			if(!r)
			{
			    new strs[32];
				GetPVarString(playerid, "new_category", strs, 32);
				if(!strlen(strs) || !rus_strcmp(strs, names))
				return SCM(playerid, COLOR_GREY, " Нет такой категории");
			}
			cache_delete(cache);
			format(szQuery, 256, "DELETE FROM `"TABLE_TELEPORT"` WHERE `category` = '%s'", names);
			new Cache: i = mysql_query(DATABASE, szQuery);
			if(i)
			{
			    SendMes(playerid, -1, " Категория '%s' удалена", names);
			}
			else
			{
			    new strs[32];
				GetPVarString(playerid, "new_category", strs, 32);
				if(strlen(strs)) DeletePVar(playerid, "new_category");
				else
				return SendMes(playerid, COLOR_GREY, " Произошла ошибка удаления категории '%s'", names);
			}
	    }
	    else return SCM(playerid, -1, " Введите: /settp category [add|delete] [name]");
	}
	else if(!strcmp(action, "name", true))
	{
	    new names[32];
	    if(sscanf(params, "s[32]s[32]", action, names)) return SCM(playerid, -1, " Введите: /settp name [name]");
		SetPVarString(playerid, "tp_name", names);
		SendMes(playerid, -1, " Вы создали точку телепорта ''%s''. (( Исользуйте '/settp veh' для установки координат ))", names);
	}
	else if(!strcmp(action, "veh", true))
	{
	    new names[32];
		GetPVarString(playerid, "tp_name", names, 32);
		if(strlen(names) == 0) return SCM(playerid, COLOR_GREY, " Вы не добавили точку телепорта. {FFFFFF}(( /settp name ))");
		if(GetPlayerState(playerid) != 2) return SCM(playerid, COLOR_GREY, " Вы не в автомобиле / Не на водительском месте!");
		new Float:tpx, Float:tpy, Float:tpz;
		AntiCheatGetPos(playerid, tpx, tpy, tpz);
		SetPVarFloat(playerid, "tpx", tpx);
		SetPVarFloat(playerid, "tpy", tpy);
		SetPVarFloat(playerid, "tpz", tpz);
		SetPVarInt(playerid, "tpint", GetPlayerInterior(playerid));
		SetPVarInt(playerid, "tpvw", GetPlayerVirtualWorld(playerid));
		SCM(playerid, -1, " Координаты сохранены. Введите '/settp add' для добавления точки");
	}
	else if(!strcmp(action, "add", true))
	{
	    new cat[32], keyss[32];
		if(sscanf(params, "s[32]s[32]s[32]", action, keyss, cat)) return SCM(playerid, -1, " Введите: /settp add [key] [category]");
		if(!strcmp(cat, "Основное", true)) return SCM(playerid, COLOR_GREY, " Нельзя добавить точку в стандартный список");
		for(new i = 0; i < strlen(keyss); i++)
		{
		    switch(keyss[i])
		    {
		        case 'А'..'Я', 'а'..'я', ' ': return SCM(playerid, COLOR_GREY, " Ключ для телепорта не может состоять из русских букв или пробелов!");
		    }
		}
		new szQuery[512];
		format(szQuery, sizeof szQuery, "SELECT `category` FROM `"TABLE_TELEPORT"` WHERE `category` = '%s'", cat);
		mysql_query(DATABASE, szQuery);
		if(!cache_num_rows())
		{
		    new strs[32];
			GetPVarString(playerid, "new_category", strs, 32);
			if(strlen(strs) == 0 || (strcmp(strs, cat, true) != 0 && rus_strcmp(strs, cat) != 0))
			return SCM(playerid, COLOR_GREY, " Нет такой категории");
		}
		new names[32];
		GetPVarString(playerid, "tp_name", names, 32);
		if(strlen(names) == 0) return SCM(playerid, COLOR_GREY, " Вы не создали точку для телепорта");
		new Float:tpx = GetPVarFloat(playerid, "tpx"),
			Float:tpy = GetPVarFloat(playerid, "tpy"),
			Float:tpz = GetPVarFloat(playerid, "tpz"),
			interior = GetPVarInt(playerid, "tpint"),
			virtualworld = GetPVarInt(playerid, "tpvw");
		format(szQuery, sizeof szQuery, "INSERT INTO `"TABLE_TELEPORT"` (`category`, `name`, `key`, `tpx`, `tpy`, `tpz`, `interior`, `virtualworld`) \
		VALUES ('%s', '%s', '%s', '%f', '%f', '%f', '%d', '%d')", cat, names, keyss, tpx, tpy, tpz, interior, virtualworld);
		new Cache: i = mysql_query(DATABASE, szQuery);
		if(i)
		{
			SendMes(playerid, -1, " Точка '%s' [key:%s] успешно добавлена", names, keyss);
		}
		else
		{
		    cache_delete(i);
			SCM(playerid, COLOR_GREY, " Произошла ошибка при добавлении точки");
			mysql_format(DATABASE, szQuery, sizeof szQuery, "SELECT `key` FROM `"TABLE_TELEPORT"` WHERE `key` = '%s'", keyss);
			mysql_query(DATABASE, szQuery);
			if(cache_num_rows()) SCM(playerid, COLOR_GREY, " Такой ключ уже существует");
			return true;
		}
		DeletePVar(playerid, "tpx");
		DeletePVar(playerid, "tpy");
		DeletePVar(playerid, "tpz");
		DeletePVar(playerid, "tpint");
		DeletePVar(playerid, "tpvw");
		DeletePVar(playerid, "tpname");
	}
	else if(!strcmp(action, "dell", true))
	{
        new keyss[32];
		if(sscanf(params, "s[32]s[32]", action, keyss)) return SCM(playerid, -1, " Введите: /settp dell [key]");
		new szQuery[128];
		format(szQuery, 127, "DELETE FROM `"TABLE_TELEPORT"` WHERE `key` = '%s'", keyss);
		new Cache:i = mysql_query(DATABASE, szQuery);
		if(i)
		{
			SendMes(playerid, -1, " Точка [key:%s] успешно удалена", keyss);
		}
		else return SCM(playerid, COLOR_GREY, " Произошла ошибка при удалении точки");
	}

	return true;
}

stock rus_strcmp(const string1[], const string2[], len = cellmax)
{
	if( len != cellmax )
	{
		for(new i = 0; i < len && i < strlen(string2); i++)
	    {
			switch(string1[i])
			{
			    case 'А'..'Я', 'а'..'я', ' ': {}
				default: continue;
			}
			switch(string2[i])
			{
			    case 'А'..'Я', 'а'..'я', ' ': {}
				default: continue;
			}
	        if(string1[i] != string2[i])
	        return string1[i] - string2[i];
	    }
	}
	else 
	    for(new i = 0; i < strlen(string1) && i < strlen(string2); i++)
	    {
			switch(string1[i])
			{
			    case 'А'..'Я', 'а'..'я', ' ': {}
				default: continue;
			}
			switch(string2[i])
			{
			    case 'А'..'Я', 'а'..'я', ' ': {}
				default: continue;
			}
	        if(string1[i] != string2[i])
	        return string1[i] - string2[i];
	    }

    return 0;
}

CMD:ajob(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	ShowPlayerDialog(playerid, 10098, DIALOG_STYLE_TABLIST_HEADERS, "Выберите работу", "{FFFFFF}Вакансия\t{FFFFFF}Уровень\n Водитель Автобуса\t2+\n Таксист\t2+\n Продавец хотдогов\t2+\n Развозчик продуктов\t3+\n Механик\t3+\n Прораб\t5+\n Тренер\t6+\n Дальнобойщик\t6+", "Устроиться", "Выход");
	return true;
}
CMD:mark(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	AntiCheatGetPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
	SCM(playerid, COLOR_WHITE, " Точка телепортирования установлена");
	return true;
}
CMD:gotomark(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	if(pData[playerid][pState] == 2)
	{
		new tmpcar = GetPlayerVehicleID(playerid);
		SetVehiclePos(tmpcar, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
	}
	else SetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
	SCM(playerid, COLOR_WHITE, " Вы были телепортированы");
	SetPlayerInterior(playerid,0);
	return true;
}
CMD:goto(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /g(oto) [playerid]");
	new Float:plocx,Float:plocy,Float:plocz;
	if(!IsPlayerConnected(params[0])) return SCM(playerid,COLOR_GREY," Игрок оффлайн");
	if(pData[params[0]][pState] != 1 && pData[params[0]][pState] != 2 && pData[params[0]][pState] != 3) return SCM(playerid, COLOR_GRAD1, " Игрок оффлайн / не залогинен");
	if(pData[params[0]][pState] == PLAYER_STATE_SPECTATING) return SCM(playerid, COLOR_GRAD1, " Администратор в режиме наблюдения");
	AntiCheatGetPos(params[0], plocx, plocy, plocz);
	if (pData[playerid][pState] == 2)
	{
		new tmpcar = GetPlayerVehicleID(playerid);
		SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
	}
	else
	{
		SetPlayerPos(playerid,plocx,plocy+2, plocz);
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(params[0]));
		SetPlayerInterior(playerid, GetPlayerInterior(params[0]));
	}
	SCM(playerid, COLOR_WHITE, " Вы были телепортированы");
	
	PicCP[playerid] = 0;
	return true;
}

CMD:get(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(!IsPlayerConnected(playerid)) return true;
	new param[40];
	if( sscanf( params, "s[32]S()[64]", param, params ) ) return SCM(playerid, COLOR_WHITE, " Введите: /get [значение] Доступные значения: guns, drugs, fuel, medkit");
	if(strcmp(param, "fuel",true) == 0)
	{
		for(new b = 1; b <= TotalBizz; b++)
		{
			if(PlayerToPoint(10.0, playerid, BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]) && BizzInfo[b][bType] == 4)
			{
				if(BizzInfo[b][bProducts] <= 0 && strcmp(BizzInfo[b][bOwner],"None",true) != 0) return SCM(playerid,COLOR_GRAD1,"Заправка не работает");
				if(BizzInfo[b][bLocked] == 1) return SCM(playerid,COLOR_GRAD1, " Заправка закрыта!");
				if(pData[playerid][pFuel] != 0) return SCM(playerid, COLOR_GRAD1, " У вас уже есть канистра");
				if(pData[playerid][pCash] < BizzInfo[b][bPrice]) return SCM(playerid,COLOR_GRAD1, " Не достаточно денег!");
				BizzInfo[b][bTill] += BizzInfo[b][bPrice]/4;
				BizzPay[b] += BizzInfo[b][bPrice]/4;
				pData[playerid][pCash] -= BizzInfo[b][bPrice]/4;
				if(strcmp(BizzInfo[b][bOwner],"None",true) != 0) BizzInfo[b][bProducts] -= 20;
				format(string, 128, " Вы купили 50 литров бензина за %i вирт",BizzInfo[b][bPrice]/4);
				SCM(playerid, 0x6495EDFF, string);
				pData[playerid][pFuel] = 1;
				pData[playerid][pCash] -= BizzInfo[b][bPrice]/4;
				return true;
			}
		}
	}
	else if(strcmp(param, "drugs",true) == 0)
	{
		if(!IsAGang(playerid)) return SCM(playerid,COLOR_GRAD1, " Вы не бандит!");
		new ammo;
		if(sscanf( params, "d", ammo ) ) return SCM(playerid, COLOR_WHITE, " Введите: /get drugs [количество]");
		if(!PlayerToPoint(3.0,playerid,322.1280,1118.8314,1083.8828)) return SCM(playerid, COLOR_GRAD1, " Вы не в притоне!");
		if(pData[playerid][pCash] < ammo*20) return SCM(playerid,COLOR_GRAD1, " У вас недостаточно денег");
		if(pData[playerid][pDrugs]+ammo >= 151) { SCM(playerid, COLOR_GREY, " Нельзя купить больше"); return true; }
		if(ammo > 150 || ammo < 1) { SCM(playerid, COLOR_GREY, " Нельзя меньше 1 или больше 150!"); return true; }
		pData[playerid][pCash] -= ammo*20;
		pData[playerid][pDrugs] += ammo;
		format(string, 128, " Вы купили %i грамм наркотиков за %i вирт (У вас есть %i грамм)", ammo, ammo*20, pData[playerid][pDrugs]);
		SCM(playerid, 0x6495EDFF, string);
	}
	else if(strcmp(param,"guns",true) == 0)
	{
		if(IsAGang(playerid))
		{
			new numberof;
			if(sscanf( params, "d", numberof ) ) return SCM(playerid, COLOR_GRAD2, " Введите: /get guns [кол-во]");
			if(pData[playerid][pRank] < 4) return SCM(playerid,COLOR_GREY," Функция доступна с 4 ранга");
			new gang;
			switch(pData[playerid][pMember])
			{
			case 12: gang = 0;
			case 13: gang = 1;
			case 15: gang = 2;
			case 17: gang = 3;
			case 18: gang = 4;
			}
			if(warelock1[gang]) return SCM(playerid, COLOR_GREY,"Склад закрыт");
			if(!IsATerra(playerid)) return SCM(playerid, COLOR_GRAD1, " Вы не на своей базе");
			if((pData[playerid][pMats] + numberof) > 500) return SCM(playerid, COLOR_GRAD1,"Нельзя взять больше");
			if(numberof < 1 || numberof > 500) return SCM(playerid, COLOR_GREY, " Вы не можете взять меньше 1 и больше 500 материалов");
			if(IsAGang(playerid) && pData[playerid][pRank] >= 4)
			{
				if(pData[playerid][pMember] == 12)
				{
					if(ballasmatbi <= numberof) return SCM(playerid, COLOR_GREY, " На складе нет материалов");
					ballasmatbi -= numberof;
				}
				else if(pData[playerid][pMember] == 13)
				{
					if(vagosmatbi <= numberof) return SCM(playerid, COLOR_GREY, " На складе нет материалов");
					vagosmatbi -= numberof;
				}
				else if(pData[playerid][pMember] == 15)
				{
					if(groovmatbi <= numberof) return SCM(playerid, COLOR_GREY, " На складе нет материалов");
					groovmatbi -= numberof;
				}
				else if(pData[playerid][pMember] == 17)
				{
					if(aztekmatbi <= numberof) return SCM(playerid, COLOR_GREY, " На складе нет материалов");
					aztekmatbi -= numberof;
				}
				else if(pData[playerid][pMember] == 18)
				{
					if(rifamatbi <= numberof) return SCM(playerid, COLOR_GREY, " На складе нет материалов");
					rifamatbi -= numberof;
				}
				pData[playerid][pMats] += numberof;
				format(string, 128, " У вас %i/500 материалов с собой", pData[playerid][pMats]);
				SCM(playerid, COLOR_WHITE, string);
				format(cString, sizeof(cString), " %s взял материалы со склада", Name(playerid));
				ProxDetector(30.0, playerid, cString, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
		}
	}
	else if(strcmp(param,"medkit",true) == 0)
	{
		if((!IsAGang(playerid) && !IsAMafia(playerid)) || pData[playerid][pRank] < 9) return SCM(playerid,COLOR_GREY," Вам недоступна данная команда");
		if(!PlayerToPoint(30, playerid,372.0985,-53.2946,1076.4708))
		{
			new _null;
			switch(pData[playerid][pMember])
			{
			case 12: _null = ballashel; case 13: _null = vagoshel; case 15: _null = groovhel;
			case 17: _null = aztekhel; case 18: _null = rifahel; case 6: _null = yakuzahel;
			case 5: _null = lcnhel; case 14: _null = rmhel;
			}
			return SendMes(playerid,0x6495EDFF," На складе организации %i аптечек",_null);
		}
		new null;
		if(sscanf(params, "i",null) || null < 1 || null > 5000) return SCM(playerid, COLOR_WHITE, " Введите: /get medkit [колличество] (стоимость 1 аптечки - 4 вирт)");
		switch(pData[playerid][pMember])
		{
		case 12:
			{
				if(ballashel+null > 5000) return SCM(playerid,COLOR_GREY," Неверное колличество! (Максимум 5000)");
				if(FracBank[0][fBallas] < null*4) return SCM(playerid,COLOR_GREY," Недостаточно средств в банке организации!");
				ballashel+=null;
				FracBank[0][fBallas]-=null*4;
				SendMes(playerid,COLOR_YELLOW," Вы купили %i аптечек. Остаток в банке организации: %i вирт!",null,FracBank[0][fBallas]);
				format(YCMDstr,15,"~r~$-%i",null*4);
				GameTextForPlayer(playerid,YCMDstr, 5000, 1);
			}
		case 13:
			{
				if(vagoshel+null > 5000) return SCM(playerid,COLOR_GREY," Неверное колличество! (Максимум 5000)");
				if(FracBank[0][fVagos] < null*4) return SCM(playerid,COLOR_GREY," Недостаточно средств в банке организации!");
				vagoshel+=null;
				FracBank[0][fVagos]-=null*4;
				SendMes(playerid,COLOR_YELLOW," Вы купили %i аптечек. Остаток в банке организации: %i вирт!",null,FracBank[0][fVagos]);
				format(YCMDstr,15,"~r~$-%i",null*4);
				GameTextForPlayer(playerid,YCMDstr, 5000, 1);
			}
		case 15:
			{
				if(groovhel+null > 5000) return SCM(playerid,COLOR_GREY," Неверное колличество! (Максимум 5000)");
				if(FracBank[0][fGrove] < null*4) return SCM(playerid,COLOR_GREY," Недостаточно средств в банке организации!");
				groovhel+=null;
				FracBank[0][fGrove]-=null*4;
				SendMes(playerid,COLOR_YELLOW," Вы купили %i аптечек. Остаток в банке организации: %i вирт!",null,FracBank[0][fGrove]);
				format(YCMDstr,15,"~r~$-%i",null*4);
				GameTextForPlayer(playerid,YCMDstr, 5000, 1);
			}
		case 17:
			{
				if(aztekhel+null > 5000) return SCM(playerid,COLOR_GREY," Неверное колличество! (Максимум 5000)");
				if(FracBank[0][fAztek] < null*4) return SCM(playerid,COLOR_GREY," Недостаточно средств в банке организации!");
				aztekhel+=null;
				FracBank[0][fAztek]-=null*4;
				SendMes(playerid,COLOR_YELLOW," Вы купили %i аптечек. Остаток в банке организации: %i вирт!",null,FracBank[0][fAztek]);
				format(YCMDstr,15,"~r~$-%i",null*4);
				GameTextForPlayer(playerid,YCMDstr, 5000, 1);
			}
		case 18:
			{
				if(rifahel+null > 5000) return SCM(playerid,COLOR_GREY," Неверное колличество! (Максимум 5000)");
				if(FracBank[0][fRifa] < null*4) return SCM(playerid,COLOR_GREY," Недостаточно средств в банке организации!");
				rifahel+=null;
				FracBank[0][fRifa]-=null*4;
				SendMes(playerid,COLOR_YELLOW," Вы купили %i аптечек. Остаток в банке организации: %i вирт!",null,FracBank[0][fRifa]);
				format(YCMDstr,15,"~r~$-%i",null*4);
				GameTextForPlayer(playerid,YCMDstr, 5000, 1);
			}
		case 6:
			{
				if(yakuzahel+null > 5000) return SCM(playerid,COLOR_GREY," Неверное колличество! (Максимум 5000)");
				if(MafiaBank[0][nYakuza] < null*4) return SCM(playerid,COLOR_GREY," Недостаточно средств в банке организации!");
				yakuzahel+=null;
				MafiaBank[0][nYakuza]-=null*4;
				SendMes(playerid,COLOR_YELLOW," Вы купили %i аптечек. Остаток в банке организации: %i вирт!",null,MafiaBank[0][nYakuza]);
				format(YCMDstr,15,"~r~$-%i",null*4);
				GameTextForPlayer(playerid,YCMDstr, 5000, 1);
			}
		case 5:
			{
				if(lcnhel+null > 5000) return SCM(playerid,COLOR_GREY," Неверное колличество! (Максимум 5000)");
				if(MafiaBank[0][nLcn] < null*4) return SCM(playerid,COLOR_GREY," Недостаточно средств в банке организации!");
				lcnhel+=null;
				MafiaBank[0][nLcn]-=null*4;
				SendMes(playerid,COLOR_YELLOW," Вы купили %i аптечек. Остаток в банке организации: %i вирт!",null,MafiaBank[0][nLcn]);
				format(YCMDstr,15,"~r~$-%i",null*4);
				GameTextForPlayer(playerid,YCMDstr, 5000, 1);
			}
		case 14:
			{
				if(rmhel+null > 5000) return SCM(playerid,COLOR_GREY," Неверное колличество! (Максимум 5000)");
				if(MafiaBank[0][nRm] < null*4) return SCM(playerid,COLOR_GREY," Недостаточно средств в банке организации!");
				rmhel+=null;
				MafiaBank[0][nRm]-=null*4;
				SendMes(playerid,COLOR_YELLOW," Вы купили %i аптечек. Остаток в банке организации: %i вирт!",null,MafiaBank[0][nRm]);
				format(YCMDstr,15,"~r~$-%i",null*4);
				GameTextForPlayer(playerid,YCMDstr, 5000, 1);
			}
		}
	}
	return true;
}
CMD:fillcar(playerid)
{
	if(!pData[playerid][pLogin]) return true;
	if(!IsPlayerConnected(playerid)) return true;
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,COLOR_WHITE," Вы не в авто");
	new car = GetPlayerVehicleID(playerid);
	if(pData[playerid][pFuel] != 1) return SCM(playerid, COLOR_GREY, " У вас нет канистры");
	if(!IsPlayerInAnyVehicle(playerid) && pData[playerid][pState] == PLAYER_STATE_DRIVER || GetVehicleModel(car) == 481 || GetVehicleModel(car) == 509 || GetVehicleModel(car) == 510) return SCM(playerid,COLOR_YELLOW, " Вы не в автомобиле/Этот транспорт нельзя заправить");
	SCM(playerid, 0x6495EDFF, " Вы дозаправили свой автомобиль 50 литрами бензина");
	if(car_data[car][fuell]  < 200)
	{
		car_data[car][fuell]  += 50;
		pData[playerid][pFuel] = 0;
		if(car_data[car][fuell]  > 200) car_data[car][fuell]  = 100;
	}
	else SCM(playerid, COLOR_GREY, " Бак полный!");
	return true;
}
CMD:gethere(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new plo;
	if(sscanf(params, "u",plo)) return SCM(playerid, COLOR_WHITE, " Введите: /gethere [playerid]");
	if(!IsPlayerConnected(plo) || !pData[plo][pLogin]) return SCM(playerid,COLOR_GREY," Игрок не найден");
	if(plo == INVALID_PLAYER_ID) return SCM(playerid,COLOR_GREY," Игрок не найден");
	new Float:plocx,Float:plocy,Float:plocz;
	new inter = GetPlayerInterior(playerid);
	new worldd = GetPlayerVirtualWorld(playerid);
	if(IsPlayerConnected(plo))
	{
		if(plo != INVALID_PLAYER_ID)
		{
			if(pData[playerid][pAdmin] >= 3)
			{
				if(pData[plo][pState] != 1 && pData[plo][pState] != 2 && pData[plo][pState] != 3) return	SCM(playerid, COLOR_GRAD1, " Игрок оффлайн / не залогинен");
				if(IsPlayerInAFK(plo)) return SCM(playerid, COLOR_GREY, " Данный игрок AFK");
				AntiCheatGetPos(playerid, plocx, plocy, plocz);
				SetPlayerInterior(plo,inter);
				SetPlayerVirtualWorld(plo,worldd);
				if (pData[plo][pState] == 2)
				{
					new tmpcar = GetPlayerVehicleID(plo);
					SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
					sppos(plo,plocx, plocy+4, plocz,90.0,worldd,inter);
					PutPlayerInVehicle(plo,tmpcar,0);
				}
				else sppos(plo,plocx, plocy+2, plocz,90.0,worldd,inter);
				SCM(plo, COLOR_WHITE, " Вас телепортировал к себе администратор "NameServer"");
			}
		}
	}
	return true;
}
CMD:givegun(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(sscanf(params, "udd",params[0],params[1],params[2])) return SCM(playerid, COLOR_WHITE, " Введите: /givegun [id] [id оружия] [патроны]");
	if(params[2] < 1 || params[2] > 9999) return SCM(playerid, COLOR_GRAD1, " Нельзя меньше 1 или больше 9999 патронов!");
	GivePlayerWeaponEx(params[0],params[1],params[2]);
	SCM(playerid, COLOR_WHITE, " Оружие Выдано");
	return true;
}
CMD:hp(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	if(IsPlayerInAnyVehicle(playerid))
	{
		RepairVehicle(GetPlayerVehicleID(playerid));
		car_data[GetPlayerVehicleID(playerid)][fuell]  = 200;
		SCM(playerid, COLOR_WHITE, " Машина отремонтирована!");
		SetPlayerHealth(playerid, 100.0);
	}
	SetPlayerHealth(playerid, 100.0);
	return true;
}

CMD:satiety(playerid)
{
	if(pData[playerid][pLogin] == false) return true;
	format(cString,64, "Ваша «Сытость»: %i / 100",pData[playerid][pSatiety]);
	SCM(playerid,0x6495EDFF,cString);
	return true;
}
CMD:sethealcost(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pLeader] == 22 && GetPVarInt(playerid,"Fraction_Duty"))
	{
		if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /sethealcost [сумма]");
		if(params[0] < 1 || params[0] > 30) { SCM(playerid, COLOR_GREY, " Вы не можете поставить меньше 0 и больше 30"); return true; }
		healpric = params[0];
		SendClientMessageToAll(COLOR_WHITE, "---========== Государственные Новости==========---");
		format(cString, sizeof(cString), " Цена лечения, в размере %i вирт. установлена Глав. Врачом: %s.", healpric,Name(playerid));
		SendClientMessageToAll(0xA52A2AFF, cString);
		return true;
	}
	return true;
}
CMD:escape(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pJailTime] < 1) return SCM(playerid, COLOR_GRAD1, " Вы не в тюрьме!");
	if(pData[playerid][pMestoJail] == 4) return true;
	if(pData[playerid][pKeys] <= 0) return SCM(playerid, COLOR_GRAD1, " У вас нет ключей от камеры");
	if(pData[playerid][pMestoJail] == 1) SetPlayerInterior(playerid, 0), SetPlayerPos(playerid,1553.4962,-1675.2714,16.1953), SetPlayerFacingAngle(playerid, 95.0636);
	if(pData[playerid][pMestoJail] == 2) SetPlayerInterior(playerid, 0), SetPlayerPos(playerid,-1607.1873,721.3649,12.2721), SetPlayerFacingAngle(playerid, 2.3026);
	if(pData[playerid][pMestoJail] == 3) SetPlayerInterior(playerid, 0), SetPlayerPos(playerid,2334.8467,2454.9456,14.9688), SetPlayerFacingAngle(playerid, 115.7874);
	pData[playerid][pJailTime] = 0;
	pData[playerid][pMestoJail] = 0;
	pData[playerid][pKeys] --;
	SetPlayerVirtualWorld(playerid, 0);
	PlayerCuffed[playerid] = 0;
	SendMes(playerid, COLOR_DBLUE, " Вы совершили побег из тюрьмы {FFFFFF}(( Ключей %i / 5 ))",pData[playerid][pKeys]);
	return true;
}
CMD:getekey(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pKeys] <= 0) return SCM(playerid, COLOR_GRAD1, " У вас нет ключей от камеры");
	format(cString, 32, "У Вас %i ключей", pData[playerid][pKeys]);
	SCM(playerid, COLOR_YELLOW, cString);
	format(cString, 64, "%s достает ключи",Name(playerid));
	ProxDetector(30.0, playerid, cString, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return true;
}
CMD:givecopkeys(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	else if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /givecopkeys [id]");
	else if(!IsPlayerConnected(params[0]) || !pData[params[0]][pLogin]) return SCM(playerid,COLOR_GREY," Игрок не найден");
	else if(params[0] == INVALID_PLAYER_ID) return SCM(playerid,COLOR_GREY," Игрок не найден");
	else if(copkey[params[0]]) return SCM(playerid,COLOR_GREY," Игрок имеет ключ");
	if(pData[playerid][pMember] == 1 || pData[playerid][pMember] == 2 || pData[playerid][pMember] == 10 || pData[playerid][pMember] == 21 || pData[playerid][pAdmin] > 0)
	{
		if(pData[playerid][pRank] < 2 && pData[playerid][pAdmin] == 0) return SCM(playerid,COLOR_GREY," Вам недоступна данная функция");
		if(!ProxDetectorS(5.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, " Игрок должен находиться рядом с вами");
		copkey[params[0]] = 1;
		format(cString, sizeof(cString), " Офицер %s выдал ключи от полицейского участка %s",Name(playerid),Name(params[0]));
		ProxDetector(30.0, playerid, cString, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	return true;
}
CMD:takecopkeys(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	else if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /takecopkeys [id]");
	else if(!IsPlayerConnected(params[0]) || !pData[params[0]][pLogin]) return SCM(playerid,COLOR_GREY," Игрок не найден");
	else if(params[0] == INVALID_PLAYER_ID) return SCM(playerid,COLOR_GREY," Игрок не найден");
	else if(!copkey[params[0]]) return SCM(playerid,COLOR_GREY," Игрок не имеет ключ");
	else if(IsACop(playerid) && pData[playerid][pRank] > 4 || pData[playerid][pAdmin] >= 1)
	{
		if(!ProxDetectorS(5.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, " Игрок должен находиться рядом с вами");
		copkey[params[0]] = 0;
		
		format(format_string, sizeof format_string, " Офицер %s забрал ключи от полицейского участка %s",pData[playerid][pName],pData[params[0]][pName]);
		ProxDetector(30.0, playerid, format_string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	return true;
}
CMD:takekeys(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(IsACop(playerid) || pData[playerid][pAdmin] >= 1 || IsAFbi(playerid))
	{
		new keyparams[32];
		if(sscanf(params, "s[32]",keyparams)) return SCM(playerid, COLOR_WHITE, " Введите: /takekeys [причина]");
		if(PlayerToPoint(40.0, playerid, 268.3327,77.8972,1001.0391) || PlayerToPoint(40.0, playerid, 227.7436,114.5075,999.0156) || PlayerToPoint(40.0, playerid, 198.1339,158.4835,1003.0234)|| PlayerToPoint(40.0, playerid, 218.2263,114.9286,999.0156) || PlayerToPoint(40.0, playerid, 198.3940,157.9389,1003.0234))
		{
			if(pData[playerid][pKeys] > 0) return SCM(playerid,COLOR_GREY," У вас уже есть ключи от камеры");
			pData[playerid][pKeys] = 1;
			if(!GetPVarInt(playerid,"Fraction_Duty")) return true;
			format(string, 256, " %s взял(а) ключи от камеры. Причина: %s",Name(playerid),keyparams);
			SendFamilyMessage(pData[playerid][pMember], TEAM_BLUE_COLOR,string);
			format(string, 144, " %s взял(а) ключи от камеры. Причина: %s",Name(playerid),keyparams);
			return ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
	}
	return true;
}
CMD:heal(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pMember] == 22)
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /heal [id]");
	if(!IsPlayerConnected(params[0]) || !pData[params[0]][pLogin]) return SCM(playerid,COLOR_GREY," Игрок не найден");
	if(params[0] == INVALID_PLAYER_ID) return SCM(playerid,COLOR_GREY," Игрок не найден");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, " Игрок должен находиться рядом с вами");
	new giveambu = GetPlayerVehicleID(params[0]);
	new playambu = GetPlayerVehicleID(playerid);
	if(pData[playerid][pMember] == 22)
	{
		if(IsAnAmbulance(playambu) && playambu == giveambu || PlayerToPoint(40.0,playerid,366.9755,-60.1330,1076.4773) && ProxDetectorS(8.0, playerid, params[0]))
		{
			new healdialog[90];
			new Float:health;
			GetPlayerHealth(params[0], health);
			if(health >= 100) return SCM(playerid,COLOR_GREY," Этот человек не нуждается в лечении");
			new ttt = 100 - floatround(health, floatround_round);
			format(healdialog,sizeof(healdialog), "Медик хочет вылечить вас за %i вирт\nВы согласны?",healpric*ttt);
			ShowPlayerDialog(params[0],5522,DIALOG_STYLE_MSGBOX, "Лечение", healdialog, "Да", "Нет");
			SendMes(playerid,COLOR_BLUE," Вы предложили вылечить %s за %i вирт",Name(params[0]),healpric*ttt);
			HealOffer[params[0]] = playerid;
			HealPrice[params[0]] = healpric*ttt;
		}
	}
	return true;
}
CMD:sethp(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if (pData[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(sscanf(params, "ud",params[0],params[1])) return	SCM(playerid, COLOR_WHITE, " Введите: /sethp [id] [уровень hp]");
	if(!IsPlayerConnected(params[0])) return true;
	if(params[1] > 201) return SCM(playerid, COLOR_GREY,"Нельзя давать больше 200 хп!");
	SetPlayerHealth(params[0], params[1]);
	SCM(playerid, COLOR_WHITE, " Уровень hp игроку установлен");
	return true;
}

CMD:testparams(playerid, params[])
{
	if(pData[playerid][pAdmin] < 10) return true;
	new x[20];
	switch(TESTPARAMS)
	{
	case 0:TESTPARAMS=1,x = "активирован";
	case 1:TESTPARAMS=0,x = "деактивирован";
	}
	SendMes(playerid,COLOR_YELLOW2,"[Noxe-RP.RU] Режим тестирования %s",x);
	return true;
}

CMD:box(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if (pData[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return	SCM(playerid, COLOR_WHITE, " Введите: /box [id]");
	if(!IsPlayerConnected(params[0])) return true;
	pData[params[0]][pStyleSkill][0] = 10;
	pData[params[0]][pStyleAmmount] = 198;
	pData[params[0]][pStyleSkill][2] = 9;
	return true;
}

CMD:boxx(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if (pData[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return	SCM(playerid, COLOR_WHITE, " Введите: /boxx [id]");
	if(!IsPlayerConnected(params[0])) return true;
	pData[params[0]][pStyleSkill][2] = 9;
	return true;
}
CMD:setarm(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if (pData[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(sscanf(params, "ud",params[0],params[1])) return	SCM(playerid, COLOR_WHITE, " Введите: /setarm [id] [уровень armour]");
	if(!IsPlayerConnected(params[0])) return true;
	if(params[1] > 201) return SCM(playerid, COLOR_GREY,"Нельзя давать больше 200 armour!");
	SetPlayerArmour(params[0], params[1]);
	SCM(playerid, COLOR_WHITE, " Уровень armour игроку установлен");
	return true;
}
CMD:veh(playerid, params[])
{
	if(pData[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	if(sscanf(params, "ddd",params[0],params[1],params[2])) return	SCM(playerid, COLOR_WHITE, " Введите: /veh [id авто] [Цвет №1] [Цвет №2]");

	new intt = GetPlayerInterior(playerid);
	new mir = GetPlayerVirtualWorld(playerid);
	
	if(params[0] < 400 || params[0] > 611) return SCM(playerid, COLOR_WHITE, " Введите: /veh [id авто] [Цвет №1] [Цвет №2]");
	if(params[1] < 0 || params[1] > 235) return SCM(playerid, COLOR_WHITE, " Введите: /veh [id авто] [Цвет №1] [Цвет №2]");
	if(params[2] < 0 || params[2] > 235) return SCM(playerid, COLOR_WHITE, " Введите: /veh [id авто] [Цвет №1] [Цвет №2]");
	new Float:X,Float:Y,Float:Z;
	AntiCheatGetPos(playerid, X,Y,Z);
	
	new vehicleid = CreateVehicle_R(params[0], X,Y,Z, 0.0, params[1], params[2], 6000);
	SetVehicleVirtualWorld(vehicleid, mir);
	
	SetPlayerArmedWeapon(playerid,0);
	car_data[vehicleid][Temp] = true;
	SetVehicleParamsEx(vehicleid,true,true,false,false,false,false,false);
	UnLockCar(playerid,vehicleid);
	LinkVehicleToInterior(vehicleid, intt);
	
	format(cString, 32, "Машина установлена. ID: %i", vehicleid);
	SCM(playerid, COLOR_WHITE, cString);
	PutPlayerInVehicle(playerid, vehicleid, 0);
	return true;
}
CMD:destroycar(playerid, params[])
{
	if(pData[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	new vehicleid = GetPlayerVehicleID(playerid);
	
	if(vehicleid)	{ }
	else
	{
	    if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /destroycar [id]");
	    vehicleid = params[0];
	}
	
	if(car_data[vehicleid][Temp] != true) return SCM(playerid,-1,"Этот автомобиль нельзя удалить!");

	SetVehicleToRespawn(vehicleid);
	SCM(playerid, COLOR_GREEN, " Автомобиль успешно удален!");
	return true;
}

CMD:weather(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /weather [id погоды]");
	if(params[0] < 0||params[0] > 45) { SCM(playerid, COLOR_GREY, "ID Погоды не может быть меньше 0 и больше 45!"); return true; }
	SetWeather(params[0]);
	SCM(playerid, COLOR_WHITE, " Погода изменена!");
	return true;
}
CMD:givemoney(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 10 || dostup[playerid] == 0) return true;
	if(sscanf(params, "ud",params[0],params[1])) return	SCM(playerid, COLOR_WHITE, " Введите: /givemoney [ид] [сумма]");
	if(!IsPlayerConnected(params[0])) return true;
	format(cString, sizeof(cString), " %i вирт переведены на счёт игроку", params[1]);
	SCM(playerid, COLOR_WHITE, cString);
	pData[params[0]][pCash] += params[1];
	return true;
}
CMD:money(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if (pData[playerid][pAdmin] < 10 || dostup[playerid] == 0) return true;
	if(sscanf(params, "ud",params[0],params[1])) return	SCM(playerid, COLOR_WHITE, " Введите: /money [ид] [сумма]");
	if(!IsPlayerConnected(params[0])) return true;
	format(cString, sizeof(cString), " %i вирт переведены на счёт игроку %s",params[1],Name(params[0]));
	SCM(playerid, COLOR_WHITE, cString);
	pData[params[0]][pBank] += params[1];
	format(cString, sizeof(cString), " Пополнение счёта на сумму: %i вирт", params[1]);
	SCM(params[0], COLOR_WHITE, cString);
	format(cString, sizeof(cString), " Новый баланс в банке: %i вирт", pData[params[0]][pBank]);
	SCM(params[0], COLOR_WHITE, cString);
	return true;
}

CMD:slap(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 2 || !dostup[playerid]) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /slap [id]");
	new Float:slx, Float:sly, Float:slz;
	if(!IsPlayerConnected(params[0])) return true;

	AntiCheatGetPos(params[0], slx, sly, slz);
	SetPlayerPos(params[0], slx, sly, slz+5);
	PlayerPlaySound(params[0], 1130, slx, sly, slz+5);
	format(cString, 64, " Админ: %s дал поджопник %s",Name(playerid),Name(params[0]));
	ABroadCast(COLOR_LIGHTRED,cString,1);
	SCM(params[0],COLOR_LIGHTRED,cString);
	return true;
}
CMD:agivelicense(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	ShowPlayerDialog(playerid,555,DIALOG_STYLE_LIST, "Выдача лицензий:", "Лицензия на вождение\nЛицензия на полёты\nЛицензия на рыболовлю\nЛицензия на вождение водного транспорта\nКомплект лицензий\nЛицензия на оружие\nЛицензия на бизнес", "Продолжить", "Отмена");
	return true;
}
CMD:givelicense(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pMember] == 11 && GetPVarInt(playerid,"Fraction_Duty"))
	{
		if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /givelicense [playerid]");
		if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid,COLOR_GREY," Игрок должен находиться рядом с вами");
		if(!GetPVarInt(playerid,"Fraction_Duty")) return SCM(playerid,COLOR_GRAD1, " Вам нужно начать рабочий день в автошколе");
		new listitems[] = " [0] Водительские права\n [1] Лицензия на полёты\n [2] Лицензия на рыболовлю\n [3] Лицензия на вождение водного транспорта\n [4] Лицензия на оружие\n [5] Лицензия на бизнес\n [6] Начать урок\n [7] Завершить урок";
		ShowPlayerDialog(playerid, 7777, DIALOG_STYLE_LIST, "Выдача лицензий", listitems, "Выбрать", "Отмена");
		ChosenPlayer[playerid] = params[0];
		SetPVarInt(ChosenPlayer[playerid],"PlayerSell",playerid);
	}
	return true;
}
CMD:mute(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new mutep;
	if(sscanf(params, "ud",mutep, params[1])) return SCM(playerid, COLOR_WHITE, " Введите: /mute [playerid] [минуты]");
	if(!IsPlayerConnected(mutep)) return SCM(playerid, COLOR_GREY, " Игрок оффлайн");
	if(pData[mutep][pMuted] > 0)
	{
		pData[mutep][pMuted] = 0;
		format(cString, sizeof(cString), " Администратор %s снял бан чата у %s",Name(playerid),Name(mutep));
		SendClientMessageToAll(COLOR_LIGHTRED, cString);
		return true;
	}
	if(!strlen(params[1])) params[1] = 5;
	pData[mutep][pMuted] = params[1]*60;
	format(string, 144, " %s получил бан чата от администратора %s",Name(mutep),Name(playerid));
	SendClientMessageToAll(COLOR_LIGHTRED, string);
	return SendMes(mutep,COLOR_WHITE," Вам дали бан чата на %i минут(ы)",params[1]);
}

CMD:id(playerid, params[])
{
	new iTargetID;
	if(sscanf(params,"u", iTargetID)) return SCM(playerid, -1, " Введите: /id [ид игрока / часть ника]");
	if(iTargetID == playerid)
		return  SendClientMessage(playerid, COLOR_GRAD1,!" Вы указали свой ID");
	if(strval(params) && IsPlayerConnected(strval(params)))
	{
		format(format_string, 100, " [%i] %s | LVL: %i | PING: %i", iTargetID, pData[iTargetID][pName], pData[iTargetID][pLevel], GetPlayerPing(iTargetID));
		SendClientMessage(playerid,-1, format_string);
	}
	else if(strlen(params) < 3)  return SendClientMessage(playerid, COLOR_GRAD1,!" Введите минимум 3 символа для поиска");
	else
	{
		new count = false;
		foreach(new i: Player)
		{
			if(strfind(pData[i][pName], params, true) != -1)
			{
				count = true;
				format(format_string, 100, " [%i] %s | LVL: %i | PING: %i", i, pData[i][pName], pData[i][pLevel], GetPlayerPing(i));
				SendClientMessage(playerid,-1, format_string);
			}
		}
		if(!count) SendClientMessage(playerid, COLOR_GREY, " Игрок не найден");
	}
	return true;
}
CMD:aad(playerid, params[])
{
	if(!pData[playerid][pLogin]) return SCM(playerid,COLOR_WHITE," Вы не авторизованы!");
	if(pData[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	if(sscanf(params, "s[128]",params[0])) return	SCM(playerid, COLOR_WHITE, " Введите: /aad [сообщение]");
	format(cString, sizeof(cString), " Администратор %s: %s",Name(playerid),params[0]);
	SendClientMessageToAll(COLOR_LIGHTRED,cString);
	return true;
}
CMD:b(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	else if(pData[playerid][pMuted] > 0) return SendMes(playerid,COLOR_LIGHTRED," У Вас бан чата! До снятия: %i секунд(ы)",pData[playerid][pMuted]);
	else if(sscanf(params, "s[128]",params[0])) return	SCM(playerid, COLOR_WHITE, " Введите: /b [сообщение]");
	format(cString, sizeof(cString), " %s: (( %s ))",Name(playerid),params[0]);
	ProxDetector(20.0, playerid, cString,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
	return true;
}
CMD:whisper(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	else if(pData[playerid][pMuted] > 0) return SendMes(playerid,COLOR_LIGHTRED," У Вас бан чата! До снятия: %i секунд(ы)",pData[playerid][pMuted]);
	else if(sscanf(params, "s[128]",params[0])) return	SCM(playerid, COLOR_WHITE, " Введите: /w [сообщение]");
	format(cString, sizeof(cString), " {6E6E6E}%s шепнул(а): %s", Name(playerid),params[0]);
	ProxDetector(1.0, playerid, cString,0x6E6E6EAA,0x6E6E6EAA,0x6E6E6EAA,0x6E6E6EAA,0x6E6E6EAA);
	return true;
}
CMD:kick(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	if(sscanf(params, "us[64]",params[0],params[1])) return	SCM(playerid, COLOR_WHITE, " Введите: /kick [playerid] [причина]");
	if(Spectate[playerid] && SpecAd[playerid] == params[0]) StopSpectate(playerid);
	if(!IsPlayerConnected(params[0]) || !pData[params[0]][pLogin]) return true;
	format(cString, sizeof(cString), " Администратор: %s кикнул %s. Причина: %s",Name(playerid),Name(params[0]),params[1]);
	SendClientMessageToAll(COLOR_LIGHTRED, cString);
	L_Kick(params[0],19);
	return true;
}
CMD:skick(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /skick [playerid]");
	if(Spectate[playerid] && SpecAd[playerid] == params[0]) StopSpectate(playerid);
	if(!IsPlayerConnected(params[0])) return true;
	MoneyLog(pData[playerid][pName],Name(params[0]), Name(params[0]), "SKickPlayer");
	//if(pData[params[0]][pState] != 1 && pData[params[0]][pState] != 2 && pData[params[0]][pState] != 3) return SCM(playerid, COLOR_GRAD1, " Игрок оффлайн / не залогинен");
	L_Kick(params[0],20);
	SCM(playerid, COLOR_LIGHTRED, " Игрок кикнут");
	return true;
}
CMD:delaccount(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	if(sscanf(params, "s[128]",params[0])) return SCM(playerid,COLOR_GREY, " Введите: /delaccount [name]");
	new szQuery[69+128];
	mysql_format(DATABASE, szQuery, sizeof szQuery, "SELECT * FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%e' AND pAdmin = '0'",params[0]);
	mysql_tquery(DATABASE, szQuery, "DellAccount", "ds",playerid, params[0]);
	return true;
}
CMD:ioffban(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new year1, month1, day1, hour1, minute1, second1;
	getdate(year1, month1, day1);
	gettime(hour1, minute1, second1);
	new ban_name[24],ban_reason[60];
	if(sscanf(params, "s[24]s[60]",ban_name,ban_reason)) return SCM(playerid, COLOR_WHITE, " Введите: /ioffban [name] [reason]");
	format(cString, sizeof(cString), " IOffBan[забанил: %s][забанен: %s][Причина: %s][%i/%i/%i  %i:%i]",Name(playerid),ban_name,ban_reason, day1,month1,year1,hour1, minute1);
	ABroadCast(COLOR_LIGHTRED,cString,1);
	new szQuery[301];
	mysql_format(DATABASE,szQuery, 300, "INSERT INTO `"TABLE_BAN"` (`Text`, `Name`, `NameAdmin`, `Date`, `Unban`, `Reason`) VALUES ('IOffBan', '%s', '%s', '%i/%i/%i', '%i', '%s')",ban_name,Name(playerid),day1,month1,year1, mktimes(5,0,0,day1,month1,2037),ban_reason);
	mysql_query(DATABASE,szQuery);
	return true;
}

CMD:offprison(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new year1, month1, day1, hour1, minute1, second1;
	getdate(year1, month1, day1);
	gettime(hour1, minute1, second1);
	new dm_name[24],dm_time;
	if(sscanf(params, "s[24]d",dm_name,dm_time)) return SCM(playerid, COLOR_WHITE, " Введите: /offprison [name] [минут]");
	if(IsPlayerConnected(GetPlayerID(dm_name))) return SCM(playerid,COLOR_GREY," Игрок в сети");
	new null = dm_time*60;
	format(cString, sizeof(cString), " offPrison[поместил: %s][помещен: %s][Время: %i минут][%i/%i/%i  %i:%i]",Name(playerid),dm_name,dm_time, day1,month1,year1,hour1, minute1);
	ABroadCast(COLOR_LIGHTRED,cString,1);
	new szQuery[257];
	mysql_format(DATABASE,szQuery,256, "UPDATE "TABLE_ACCOUNTS" SET  pMestoJail = '4',pJailTime = '%i' WHERE Name = '%e'", null, dm_name);
	mysql_tquery(DATABASE,szQuery);
	return true;
}
CMD:sban(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new ban_reason[60];
	if(sscanf(params, "u[128]s[60]",params[0],ban_reason)) return	SCM(playerid, COLOR_WHITE, " Введите: /sban [id/ник] [причина]");
	if(Spectate[playerid] && SpecAd[playerid] == params[0]) StopSpectate(playerid);
	if(!IsPlayerConnected(params[0])) return true;
	if(pData[params[0]][pAdmin] > 6)  return SCM(playerid, COLOR_GREY, " Ошибка. Администратора с данным уровнем заварнить невозможно!");
	//if(pData[params[0]][pState] != 1 && pData[params[0]][pState] != 2 && pData[params[0]][pState] != 3) return SCM(playerid, COLOR_GRAD1, " Игрок оффлайн / не залогинен");
	new ip[15];
	new year1, month1, day1, hour1, minute1, second1;
	getdate(year1, month1, day1);
	gettime(hour1, minute1, second1);
	GetPlayerIp(params[0],ip,15);
	if(pData[params[0]][pAdmin] >= 1 && pData[playerid][pAdmin] < 7)
	{
		new szQuery[128];
		format(cString, 128, " Администратор %s Забанен. Обратитесь к спец-админу", Name(playerid));
		mysql_format(DATABASE,szQuery, 128, "SELECT * FROM "TABLE_ADMIN" WHERE `name` = '%s'", Name(playerid));
		mysql_tquery(DATABASE,szQuery,"OnMySQL_QUERY","iis",17,0,Name(playerid));
		ABroadCast(COLOR_LIGHTRED,cString,1);
		L_Kick(playerid,21);
	}
	format(cString, sizeof(cString), " SBan[забанил: %s][забанен: %s][причина: %s][%i/%i/%i  %i:%i]",Name(playerid), Name(params[0]), ban_reason, day1,month1,year1,hour1, minute1);
	ABroadCast(COLOR_LIGHTRED,cString,1);
	format(cString, sizeof(cString), "   Nik [%s]  R-IP [%s]  L-IP [%s]  IP [%s]",Name(params[0]),pData[params[0]][pIpReg],pData[params[0]][pvIp],ip);
	ABroadCast(COLOR_LIGHTRED,cString,2);
	new null;
	if(pData[params[0]][pDonateRank] == 0) null = 30;
	if(pData[params[0]][pDonateRank] == 1) null = 21;
	if(pData[params[0]][pDonateRank] == 2) null = 14;
	if(pData[params[0]][pDonateRank] == 3) null = 7;
	new szQuery[300];
	mysql_format(DATABASE,szQuery, 300, "INSERT INTO `"TABLE_BAN"` (`Text`, `Name`, `NameAdmin`, `Date`, `Unban`, `Reason`) VALUES ('SBAN',  '%s', '%s', '%i/%i/%i', '%i', '%s')", Name(params[0]),Name(playerid),day1,month1,year1, mktimes(5,0,0,day1+null,month1,year1),ban_reason);
	mysql_query(DATABASE,szQuery);
	L_Kick(params[0],22);
	return true;
}
CMD:offwarn(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new strlen_params;
	strlen_params = strlen(params);
	if(strlen_params < 1 || strlen_params > 84) return SCM(playerid, COLOR_WHITE, " Введите: /offwarn [name] [reason]");
	new warn_name[24], warn_reason[60];
	if(sscanf(params, "s[24]s[60]", warn_name, warn_reason)) return SCM(playerid, COLOR_WHITE, " Введите: /offwarn [name] [reason]");

	new szQuery[257];
	mysql_format(DATABASE, szQuery, sizeof szQuery, "SELECT * FROM accounts WHERE Name='%e'", warn_name);
	new Cache:result = mysql_query(DATABASE, szQuery);
	if(cache_num_rows())
	{
		new year1, month1, day1, hour1, minute1, second1;
		getdate(year1, month1, day1);
		gettime(hour1, minute1, second1);
		format(cString, sizeof(cString), " OffWarn[заварнил: %s][заварнен: %s][Причина: %s][%i/%i/%i  %i:%i]",Name(playerid),warn_name,warn_reason,day1,month1,year1,hour1, minute1);
		ABroadCast(COLOR_LIGHTRED,cString,1);
		mysql_format(DATABASE,szQuery, sizeof szQuery, "UPDATE accounts SET pLeader = '0',pMember = '0',pRank = '0',pJob = '0',OffWarns = '%i',punWarns = '%i',pWarns = pWarns+1 WHERE name = '%s'",gettime()+1218400, mktimes(0, 0, 0, day1+30, month1, year1), warn_name);
		mysql_query(DATABASE,szQuery);
	}
	else SCM(playerid, COLOR_WHITE, " Ошибка:  Игрок не найден");
	return cache_delete(result);
}

CMD:offban(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new strlen_params;
	strlen_params = strlen(params);
	if(strlen_params < 1 || strlen_params > MAX_PLAYER_NAME+60) return SCM(playerid, COLOR_WHITE, " Введите: /offban [name] [reason] [дней]");
	new ban_name[24],ban_reason[60];
	if(sscanf(params, "s[24]s[60]d",ban_name,ban_reason,params[2])) return SCM(playerid, COLOR_WHITE, " Введите: /offban [name] [reason] [дней]");
	new year1, month1, day1, hour1, minute1, second1;
	getdate(year1, month1, day1);
	gettime(hour1, minute1, second1);
	format(cString, sizeof(cString), " OffBan[забанил: %s][забанен: %s][Причина: %s][дней: %i][%i/%i/%i  %i:%i]",Name(playerid),ban_name,ban_reason,params[2],day1,month1,year1,hour1, minute1);
	ABroadCast(COLOR_LIGHTRED,cString,1);
	new szQuery[301];
	mysql_format(DATABASE,szQuery, 300, "INSERT INTO `"TABLE_BAN"` (`Text`, `Name`, `NameAdmin`, `Date`, `Unban`,`Reason`) VALUES ('OffBan', '%s', '%s', '%i/%i/%i', '%i', '%s')",ban_name,Name(playerid),day1,month1,year1, mktimes(5,0,0,day1+params[2],month1,year1),ban_reason);
	mysql_query(DATABASE,szQuery);
	return true;
}

CMD:unban(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(sscanf(params, "s[24]",params[0])) return SCM(playerid, COLOR_GRAD1, " Введите: /unban [name]");
	new szQuery[128];
	mysql_format(DATABASE,szQuery,128, "DELETE FROM `"TABLE_BAN"` WHERE `Name` = '%s'",params[0]);
	mysql_query(DATABASE,szQuery);
	format(cString, sizeof(cString), " Admin: %s unbanned: %s",Name(playerid),params[0]);
	ABroadCast(COLOR_YELLOW,cString,1);
	MoneyLog(pData[playerid][pName],params[0], params[0], "UnBanPlayer");
	return true;
}
CMD:offleader(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(sscanf(params, "s[24]",params[0])) return SCM(playerid, COLOR_GRAD1, " Введите: /offleader [name]");
	new szQuery[257];
	mysql_format(DATABASE,szQuery, 256, "UPDATE accounts SET pLeader = '0',pMember = '0',pRank = '0',pText = '4',pJobHeal = '0' WHERE name = '%e'",params[0]);
	mysql_query(DATABASE,szQuery);
	format(cString, sizeof(cString), " Admin: %s offLeader: %s",Name(playerid),params[0]);
	ABroadCast(COLOR_YELLOW,cString,1);
	return true;
}
CMD:offip(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	if(sscanf(params, "s[24]",params[0])) return SCM(playerid, COLOR_GRAD1, " Введите: /offip [name]");
	new szQuery[128];
	mysql_format(DATABASE,szQuery,128, "UPDATE accounts SET pCheckIp = '0' WHERE name = '%e'",params[0]);
	mysql_query(DATABASE,szQuery);
	format(cString, sizeof(cString), " Администратор: %s снял IP проверку с %s",Name(playerid),params[0]);
	ABroadCast(COLOR_LIGHTRED,cString,1);
	return true;
}
CMD:realodbans(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 9 || dostup[playerid] == 0) return true;
	SendRconCommand("reloadbans");
	SCM(playerid, COLOR_WHITE, " Бан-лист перезагружен.");
	return true;
}
CMD:warn(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	if(sscanf(params, "us[128]",params[0],params[1])) return SCM(playerid, COLOR_WHITE, " Введите: /warn [id/ник] [причина]");
	if(Spectate[playerid] && SpecAd[playerid] == params[0]) StopSpectate(playerid);
	if(!IsPlayerConnected(params[0])) return true;
	if(pData[params[0]][pAdmin] > 6)  return SCM(playerid, COLOR_GREY, " Ошибка. Администратора с данным уровнем заварнить невозможно!");
	new year, month,day;
	getdate(year, month, day);
	if(pData[params[0]][pAdmin] >= 1 && pData[playerid][pAdmin] < 7)
	{
		format(YCMDstr, 128, "Администратор %s Забанен. Обратитесь к спец-админу", Name(playerid));
		new szQuery[128];
		mysql_format(DATABASE,szQuery, 128, "SELECT * FROM "TABLE_ADMIN" WHERE `name` = '%e'", Name(playerid));
		mysql_tquery(DATABASE,szQuery,"OnMySQL_QUERY","iis",17,0,Name(playerid));
		ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
		L_Kick(playerid,23);
	}
	new null = 14;
	pData[params[0]][pWarns] += 1;
	if(pData[params[0]][pWarns] >= 3)
	{
		new ip[32];
		format(cString, sizeof(cString), " Администратор: %s забанил %s [3 Предупреждения]. Причина: %s",Name(playerid),Name(params[0]),params[1]);
		SendClientMessageToAll(COLOR_LIGHTRED, cString);
		GetPlayerIp(params[0],ip,sizeof(ip));
		format(cString, sizeof(cString), "   Nik [%s]  R-IP [%s]  L-IP [%s]  IP [%s]",Name(params[0]),pData[params[0]][pIpReg],pData[params[0]][pvIp],ip);
		ABroadCast(COLOR_LIGHTRED,cString,2);
		pData[params[0]][pMember] = 0;
		pData[params[0]][pJobHeal] = 0;
		pData[params[0]][pLeader] = 0;
		pData[params[0]][pJob] = 0;
		new szQuery[256];
		mysql_format(DATABASE,szQuery, 256, "INSERT INTO `"TABLE_BAN"` (`Text`, `Name`, `NameAdmin`, `Date`, `Unban`) VALUES ('3 WARNS', '%s', '%s', '%i/%i/%i', '%i')",Name(params[0]),Name(playerid),day,month,year,mktimes(5,0,0,day+null,month,year));
		mysql_query(DATABASE,szQuery);
		L_Kick(params[0],24);
		return true;
	}
	format(cString, sizeof(cString), " Администратор: %s выдал warn %s. Причина: %s",Name(playerid),Name(params[0]),params[1]);
	SendClientMessageToAll(COLOR_LIGHTRED,cString);
	pData[params[0]][pMember] = 0;
	pData[params[0]][pJobHeal] = 0;
	pData[params[0]][pLeader] = 0;
	pData[params[0]][pJob] = 0;
	if(pData[params[0]][pDonateRank] == 0) pData[params[0]][OffWarns] = gettime()+1218400;
	if(pData[params[0]][pDonateRank] == 1) pData[params[0]][OffWarns] = gettime()+900000;
	if(pData[params[0]][pDonateRank] == 2) pData[params[0]][OffWarns] = gettime()+550000;
	if(pData[params[0]][pDonateRank] == 3) pData[params[0]][OffWarns] = gettime()+280000;
	pData[params[0]][punWarns] = mktimes(0,0,0,day+null,month,year);
	MoneyLog(pData[playerid][pName],Name(params[0]), Name(params[0]), "WarnPlayer");
	L_Kick(params[0],25);
	return true;
}
CMD:unwarn(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /unwarn [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(pData[params[0]][pWarns] <= 0) {SCM(playerid, COLOR_RED, " Варнов нет"); return true;}
	pData[params[0]][pWarns] = 0;
	pData[params[0]][punWarns] = 0;
	format(cString, sizeof(cString), " Admin: %s unwarned: %s",Name(playerid),Name(params[0]));
	ABroadCast(0xFFFF00AA,cString,1);
	MoneyLog(pData[playerid][pName],Name(params[0]), Name(params[0]), "UnWarnPlayer");
	return true;
}
CMD:ban(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	new ban_reason[60];
	if(sscanf(params, "u[128]s[60]",params[0],ban_reason)) return SCM(playerid, COLOR_WHITE, " Введите: /ban [id/ник] [причина]");
	if(Spectate[playerid] && SpecAd[playerid] == params[0]) StopSpectate(playerid);
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, " Игрок оффлайн!");
	if(pData[params[0]][pAdmin] > 6)  return SCM(playerid, COLOR_GREY, " Ошибка. Администратора с данным уровнем забанить невозможно!");
	new ip[15];
	new year, month,day;
	getdate(year, month, day);
	new null;
	switch(pData[params[0]][pDonateRank])
	{
	case 0: null = 21;
	case 1: null = 17;
	case 2: null = 14;
	case 3: null = 7;
	}
	if(pData[params[0]][pAdmin] >= 1 && pData[playerid][pAdmin] < 7)
	{
		format(YCMDstr, 128, "Администратор %s Забанен. Обратитесь к спец-админу", Name(playerid));
		new szQuery[300];
		mysql_format(DATABASE,szQuery, sizeof szQuery, "SELECT * FROM "TABLE_ADMIN" WHERE `name` = '%e'", Name(playerid));
		mysql_tquery(DATABASE,szQuery,"OnMySQL_QUERY","iis",17,0,Name(playerid));
		mysql_format(DATABASE,szQuery, sizeof szQuery, "INSERT INTO `"TABLE_BAN"` (`Text`, `Name`, `NameAdmin`, `Date`, `Unban`, `Reason`) VALUES ('BAN','%s', '%s', '%i/%i/%i', '%i', 'snyat')",Name(playerid),Name(playerid),day,month,year, mktimes(5,0,0,day+null,month,2037));
		mysql_query(DATABASE,szQuery);
		ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
		L_Kick(playerid,26);
	}
	format(cString, sizeof(cString), " Администратор: %s забанил %s. Причина: %s ",Name(playerid),Name(params[0]),ban_reason);
	SendClientMessageToAll(COLOR_LIGHTRED,cString);
	GetPlayerIp(params[0],ip,sizeof(ip));
	format(cString, sizeof(cString), "   Nik [%s]  R-IP [%s]  L-IP [%s]  IP [%s]",Name(params[0]),pData[params[0]][pIpReg],pData[params[0]][pvIp],ip);
	ABroadCast(COLOR_LIGHTRED,cString,2);
	new szQuery[300];
	mysql_format(DATABASE,szQuery, 300, "INSERT INTO `"TABLE_BAN"` (`Text`, `Name`, `NameAdmin`, `Date`, `Unban`, `Reason`) VALUES ('BAN','%s', '%s', '%i/%i/%i', '%i', '%s')",Name(params[0]),Name(playerid),day,month,year, mktimes(5,0,0,day+null,month,year),ban_reason);
	mysql_query(DATABASE,szQuery);
	L_Kick(params[0],27);
	return true;
}
CMD:ttime(playerid, params[])
{
	new year, month,day;
	getdate(year, month, day);
	SendMes(playerid,COLOR_WHITE," Год: %i, Месяц: %i, День: %i",year, month, day);
}
stock mktimes(uhour,uminute,usecond,uday,umonth,uyear)
{
	new timestamp2;
	timestamp2 = usecond + (uminute * 60) + (uhour * 3600);
	new days_of_month[12] = { 31,28,31,30,31,30,31,31,30,31,30,31 };
	if ( ((uyear % 4 == 0) && (uyear % 100 != 0)) || (uyear % 400 == 0) )
	{
		days_of_month[1] = 29;
	}
	else
	{
		days_of_month[1] = 28;
	}
	new days_this_year = 0;
	days_this_year = --uday;
	if(umonth > 1)
	{
		for(new i=0; i<umonth-1;i++)
		{
			days_this_year += days_of_month[i];
		}
	}
	timestamp2 += days_this_year * 86400;
	for(new j=1970;j<uyear;j++)
	{
		timestamp2 += 31536000;
		if ( ((j % 4 == 0) && (j % 100 != 0)) || (j % 400 == 0) ) timestamp2 += 86400;
	}
	return timestamp2;
}
CMD:boost(playerid)
{
	if(pData[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	YCMDstr[0] = EOS;
	strcat(YCMDstr,"{FFFFFF}Наименование\t{FFFFFF}Статус\n",sizeof YCMDstr);
	strcat(YCMDstr,"Ускоренная прокачка\t", sizeof YCMDstr);
	
	if(gettime() > booston) strcat(YCMDstr,"Выключено", sizeof YCMDstr);
	else strcat(YCMDstr,UnixDate(booston), sizeof YCMDstr);
	
	strcat(YCMDstr,"\n", sizeof YCMDstr);
	strcat(YCMDstr,"Прокачка новичкам\t", sizeof YCMDstr);
	
	if(gettime() > booston2) strcat(YCMDstr,"Выключено", sizeof YCMDstr);
	else strcat(YCMDstr,UnixDate(booston2), sizeof YCMDstr);
	strcat(YCMDstr,"\n", sizeof YCMDstr);
	
	strcat(YCMDstr,"Выборы\t", sizeof YCMDstr);
	if(Pick) strcat(YCMDstr,UnixDate(PickDate), sizeof YCMDstr);
	else strcat(YCMDstr,"Выключено", sizeof YCMDstr);
	
	
	
	ShowPlayerDialog(playerid, 1971, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Бонус |{ae433d}Сервер",YCMDstr,"Вперед", "Закрыть");
	return true;
}
CMD:x2donate(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(!dostup[playerid]) return true;
	if(donates == 2)
	{
		donates = 1;
		SCM(playerid,COLOR_WHITE," X2 Донат выключен");
	}
	else
	{
		donates = 2;
		SCM(playerid,COLOR_WHITE," X2 Донат включен");
	}
	return true;
}
CMD:uninvite(playerid, params[])
{
	if(pData[playerid][pLogin] == false || !GetPVarInt(playerid,"Fraction_Duty")) return true;
	if(sscanf(params, "us[128]",params[0],params[1])) return SCM(playerid, COLOR_WHITE, " Введите: /uninvite [id] [причина]");
	if(!IsPlayerConnected(params[0]) || !pData[params[0]][pLogin]) return SCM(playerid,COLOR_GREY," Игрок не найден");
	if(pData[playerid][pRank] <= pData[params[0]][pRank]) return SCM(playerid, COLOR_GREY, " [Ошибка]  Вы не можете уволить этого игрока");
	if(params[0] == playerid) return SCM(playerid,-1,"Себя невозможно уволить");
	if(pData[params[0]][pMember] == pData[playerid][pLeader] || pData[params[0]][pMember] == pData[playerid][pMember])
	{
		if(!IsPlayerConnected(params[0])) return true;
		if(!CanUninviteforeach(playerid,params[0])) return true;
		if(pData[params[0]][pMember] <= 0) return true;
		format(cString, sizeof(cString), " %s выгнал вас из организации. Причина: %s",Name(playerid),params[1]);
		SCM(params[0], 0x6BB3FFAA, cString);
		format(cString, sizeof(cString), " Вы выгнали %s из организации. Причина: %s",Name(params[0]),params[1]);
		SCM(playerid, 0x6BB3FFAA, cString);
		SCM(params[0], COLOR_BLUE, " Вы снова гражданский");
		SCM(params[0], COLOR_BLUE, " Рабочий день окончен");
		if(GetPVarInt(params[0],"capture_on"))
		{
			DeletePVar(params[0],"capture_on");
			PlayerTextDrawHide(params[0], Capture[params[0]]);
			for(new i_ = 0; i_ < 5; i_++) { SendDeathMessageToPlayer(params[0],INVALID_PLAYER_ID-1, INVALID_PLAYER_ID-1, 0); }
		}
		if(GetPVarInt(params[0],"mWar_on"))
		{
			DeletePVar(params[0],"mWar_on");
			PlayerTextDrawHide(params[0], mWar[params[0]]);
			for(new i_ = 0; i_ < 5; i_++) { SendDeathMessageToPlayer(params[0],INVALID_PLAYER_ID-1, INVALID_PLAYER_ID-1, 0); }
		}
		if(GetPVarInt(params[0],"bWar_on"))
		{
			PlayerTextDrawHide(params[0], bWar[params[0]]);
			DestroyDynamic3DTextLabel(LabelBwar[params[0]]);
			DeletePVar(params[0],"bWar_on");
		}
		pData[params[0]][pMember] = 0;
		pData[params[0]][pLeader] = 0;
		pData[params[0]][pJobHeal] = 0;
		pData[params[0]][pRank] = 0;
		pData[params[0]][pJobHeal] = 0;


		pData[params[0]][pDetachID] = 0;
		new szQuery[128+13];
		mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `firstdeputy`='Нет' WHERE `firstdeputy`='%e'", pData[params[0]][pName]);
		mysql_query(DATABASE, szQuery);
		mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `seconddeputy`='Нет' WHERE `seconddeputy`='%e'", pData[params[0]][pName]);
		mysql_query(DATABASE, szQuery);
		mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `member`='Нет' WHERE `member`='%e'", pData[params[0]][pName]);
		mysql_query(DATABASE, szQuery);
		DeletePVar(params[0], !#_pDetachRank);
		DeletePVar(params[0], !#_pDetachColor);
		DeletePVar(params[0],"Fraction_Duty");
		SetPlayerArmour(params[0],0);
		ResetPlayerWeaponEx(params[0]);
		//SpawnPlayer(params[0]);
		SetPlayerColor(params[0], TEAM_HIT_COLOR);
		SetPlayerSkin(params[0], pData[params[0]][pChar][0]);
	}
	return true;
}
CMD:iban(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new ban_reason[60];
	if(sscanf(params, "u[128]s[60]",params[0],ban_reason)) return SCM(playerid, COLOR_WHITE, " Введите: /iban [id/ник] [причина]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, " Игрок оффлайн / не залогинен");
	if(Spectate[playerid] && SpecAd[playerid] == params[0]) StopSpectate(playerid);
	//if(pData[params[0]][pState] != 1 && pData[params[0]][pState] != 2 && pData[params[0]][pState] != 3) return SCM(playerid, COLOR_GRAD1, " Игрок оффлайн / не залогинен");
	new ip[15];
	GetPlayerIp(params[0],ip,15);
	new year, month,day;
	getdate(year, month, day);
	if(pData[params[0]][pAdmin] >= 1 && pData[playerid][pAdmin] < 7)
	{
		new szQuery[300];
		format(YCMDstr, 128, "Администратор %s Забанен. Обратитесь к спец-админу", Name(playerid));
		mysql_format(DATABASE,szQuery, sizeof(szQuery), "SELECT * FROM "TABLE_ADMIN" WHERE `name` = '%e'", Name(playerid));
		mysql_tquery(DATABASE,szQuery,"OnMySQL_QUERY","iis",17,0,Name(playerid));
		mysql_format(DATABASE,szQuery, sizeof szQuery, "INSERT INTO `"TABLE_BAN"` (`Text`, `Name`, `NameAdmin`, `Date`, `Unban`, `Reason`) VALUES ('IBAN','%s', '%s', '%i/%i/%i', '%i', 'snyat')",Name(playerid),Name(playerid),day,month,year, mktimes(5,0,0,day,month,2037));
		mysql_query(DATABASE,szQuery);
		ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
		L_Kick(playerid,28);
	}
	format(cString, 128, " Администратор: %s забанил %s. Причина: %s ",Name(playerid),Name(params[0]),ban_reason);
	SendClientMessageToAll(COLOR_LIGHTRED,cString);
	GetPlayerIp(params[0],ip,sizeof(ip));
	format(cString, 128, "   Nik [%s]  R-IP [%s]  L-IP [%s]  IP [%s]",Name(params[0]),pData[params[0]][pIpReg],pData[params[0]][pvIp],ip);
	ABroadCast(COLOR_LIGHTRED,cString,2);
	new szQuery[300];
	mysql_format(DATABASE,szQuery, 300, "INSERT INTO `"TABLE_BAN"` (`Text`, `Name`, `NameAdmin`, `Date`, `Unban`, `Reason`) VALUES ('IBAN', '%s', '%s', '%i/%i/%i', '%i', '%s')",Name(params[0]),Name(playerid),day,month,year, mktimes(5,0,0,day,month,2037),ban_reason);
	mysql_query(DATABASE,szQuery);
	L_Kick(params[0],29);
	return true;
}
CMD:dmgac(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	switch(dmgex)
	{
	case false: dmgex = true,SCM(playerid,COLOR_YELLOW2,"Античит на Damager активирован");
	case true: dmgex = false,SCM(playerid,COLOR_YELLOW2,"Античит на Damager ДеАктивирован");
	}
	return true;
}
CMD:hpac(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	switch(chkhp)
	{
	case false: chkhp = true,SCM(playerid,COLOR_YELLOW2,"Античит на UltraGM активирован");
	case true: chkhp = false,SCM(playerid,COLOR_YELLOW2,"Античит на UltraGM ДеАктивирован");
	}
	return true;
}

CMD:freeze(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return	SCM(playerid, COLOR_WHITE, " Введите: /freeze [playerid]");
	if(!IsPlayerConnected(params[0])) return true;
	if(pData[params[0]][pAdmin] > pData[playerid][pAdmin]) return SCM(playerid, COLOR_GREY, " Адмнистратор не может быть заморожен");
	TogglePlayerControllable(params[0], 0);
	format(cString, 72, " %s был заморожен администратором %s",Name(params[0]),Name(playerid));
	ABroadCast(COLOR_LIGHTRED,cString,1);
	return true;
}
CMD:unfreeze(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return	SCM(playerid, COLOR_WHITE, " Введите: /unfreeze [playerid]");
	if(!IsPlayerConnected(params[0])) return true;
	TogglePlayerControllable(params[0], 1);
	format(cString, 64, " Администратор: %s разморозил %s",Name(playerid),Name(params[0]));
	ABroadCast(COLOR_LIGHTRED,cString,1);
	return true;
}
CMD:camera(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pMember] != 19) return SCM(playerid, COLOR_GREY, " Вы не состоите в рядах Зоны 51");
	if(!PlayerToPoint(2.0,playerid,212.2816,1812.2374,21.8672)) return SCM(playerid, COLOR_GRAD1, " Вы не у точки наблюдения");
	new listitems[] = "Сектор - 1\nСектор - 2\nСектор - 3\nСектор - 4";
	ShowPlayerDialog(playerid, 7724, DIALOG_STYLE_LIST, "Выберите камеру", listitems, "Выбрать", "Закрыть");
	return true;
}
CMD:cameraoff(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pMember] != 19) return SCM(playerid, COLOR_GREY, " Вы не состоите в рядах Зоны 51");
	SetCameraBehindPlayer(playerid);
	TogglePlayerControllable(playerid, 1);
	return true;
}
CMD:warnmans(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new countmute = 0;
	foreach(new i: Player)
	{
		if(pData[i][pWarns] >= 1 && IsPlayerConnected(i))
		{
			format(cString, sizeof(cString), " %s [ID: %i] | Warns: %i ",Name(i),i,pData[i][pWarns]);
			countmute++;
			SCM(playerid, COLOR_LIGHTGREEN, cString);
		}
	}
	if(countmute == 0) SCM(playerid, COLOR_GRAD1, " Нет игроков с Варнами");
	else
	{
		format(cString, sizeof(cString), " Всего: %i человек!", countmute);
		SCM(playerid, COLOR_WHITE, cString);
	}
	return true;
}
CMD:vipmans(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new countmute = 0;
	foreach(new i: Player)
	{
		if(pData[i][pDonateRank] >= 1 && IsPlayerConnected(i))
		{
			format(cString, sizeof(cString), " %s [ID: %i] | Vip: %i ",Name(i),i,pData[i][pDonateRank]);
			countmute++;
			SCM(playerid, COLOR_LIGHTGREEN, cString);
		}
	}
	if(countmute == 0) SCM(playerid, COLOR_GRAD1, " Нет игроков с Vip");
	else
	{
		format(cString, 24, "Всего: %i человек!", countmute);
		SCM(playerid, COLOR_WHITE, cString);
	}
	return true;
}
CMD:mutelist(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new countmute = 0;
	foreach(new i: Player)
	{
		if(pData[i][pMuted] > 0 && IsPlayerConnected(i))
		{
			format(cString, sizeof(cString), " %s [ID: %i] | %i секунд",Name(i),i,pData[i][pMuted]);
			countmute++;
			SCM(playerid, COLOR_LIGHTGREEN, cString);
		}
	}
	if(countmute == 0) SCM(playerid, COLOR_GRAD1, " Нет игроков с Баном чата");
	else
	{
		format(cString, 24, "Всего: %i человек!", countmute);
		SCM(playerid, COLOR_WHITE, cString);
	}
	return true;
}
CMD:unbanip(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if(sscanf(params, "s[24]",params[0])) return SCM(playerid,COLOR_GREY, " Введите: /unbanip [IP адрес]");
	new szQuery[37+25];
	mysql_format(DATABASE,szQuery,37+24, "DELETE FROM `banip` WHERE `IP` = '%e'",params[0]);
	mysql_query(DATABASE,szQuery);
	format(cString, 64, "%s разбанил IP: %s",Name(playerid),params[0]);
	ABroadCast(COLOR_GREEN,cString,1);
	return true;
}
CMD:banip(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	if(sscanf(params, "s",params[0])) return SCM(playerid,COLOR_WHITE, " Введите: /banip [IP адрес]");
	new szQuery[128];
	mysql_format(DATABASE,szQuery, 128, "INSERT INTO `banip` (`IP`) VALUES ('%s')",params[0]);
	mysql_query(DATABASE,szQuery);
	format(cString, 64, " %s забанил IP: %s",Name(playerid),params[0]);
	ABroadCast(COLOR_LIGHTRED,cString,1);
	return true;
}
CMD:unjail(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /unjail [playerid]");
	if(!IsPlayerConnected(params[0])) return true;
	SCM(playerid, COLOR_WHITE, " Вы сократили срок!");
	SCM(params[0], COLOR_WHITE, " Вам сократили срок!");
	pData[params[0]][pJailTime] = 2;
	return true;
}

CMD:saveall(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if (pData[playerid][pAdmin] < 9 || dostup[playerid] == 0) return true;
	SaveOthers();
	foreach(new i: Player) if(pData[i][pLogin]) SaveMySQL(2,i),SaveMySQL(10,i);
	for(new i = 1; i <= TOTALCASINO; i++) SaveMySQL(1,i);
	for(new i = 1; i <= TOTALSHOPS; i++) SaveMySQL(3,i);
	for(new i = 1; i <= TotalBizz; i++) SaveMySQL(4,i);
	for(new i = 1; i <= TOTALFARM; i++) SaveMySQL(9,i);
	SCM(playerid,COLOR_GRAD1, " Все данные сохранены");
	return true;
}
CMD:hcounter(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pJob] != 3) return true;
	if(GetPVarInt(playerid,"h_stall"))
	{
		UpdateDynamic3DTextLabelText(StallInfo[GetPVarInt(playerid,"h_stall")][stText], 0xFF8C37FF,"Не работает");
		DeletePVar(playerid,"h_stall");
		SetPlayerSkin(playerid,pData[playerid][pChar][0]);
		return SCM(playerid,0x6495EDFF," Работа закончена");
	}
	if(!GetPVarInt(playerid,"h_contract")) return SCM(playerid,COLOR_GREY," Заключите контракт с закусочной!");
	new null, null_;
	for(new i = 1; i <= TOTALSTALL; i++) if(IsPlayerInRangeOfPoint(playerid, 3, StallInfo[i][stPos][0], StallInfo[i][stPos][1], StallInfo[i][stPos][2])) null = i;
	if(!null) return SCM(playerid,COLOR_GREY," В данном месте  Вы не можете начать работу");
	foreach(new x: Player)
	{
		if(GetPVarInt(x,"h_stall") == null)
		{
			null_++;
			break;
		}
	}
	if(null_ != 0) return SCM(playerid,COLOR_GREY," Данное место занято!");
	SetPVarInt(playerid,"h_stall",null);
	SetPlayerSkin(playerid,209);
	format(string,30,"Цена Хот Дога: %i",GetPVarInt(playerid,"h_price"));
	return UpdateDynamic3DTextLabelText(StallInfo[GetPVarInt(playerid,"h_stall")][stText], TEAM_GROVE_COLOR,string);
}
CMD:hcontract(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pJob] != 3) return true;
	if(GetPVarInt(playerid,"h_contract"))
	{
		DeletePVar(playerid,"h_contract");
		DeletePVar(playerid,"h_price");
		if(GetPVarInt(playerid,"h_stall"))
		{
			UpdateDynamic3DTextLabelText(StallInfo[GetPVarInt(playerid,"h_stall")][stText], 0xFF8C37FF,"Не работает");
			DeletePVar(playerid,"h_stall");
		}
		return SCM(playerid,COLOR_WHITE," Контракт с закусочной расторгнут!");
	}
	for(new b = 1; b <= TotalBizz; b++)
	{
		if(PlayerToPoint(10.0, playerid, BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]) && BizzInfo[b][bType] == 2)
		{
			if(strcmp(BizzInfo[b][bOwner],"None",true) == 0 || BizzInfo[b][bLocked]) return SCM(playerid,COLOR_GREY," Закусочная не работает");
			SetPVarInt(playerid,"h_contract",b);
			SetPVarInt(playerid,"h_price",BizzInfo[b][bPrice]/2);
			SendMes(playerid,0x6495EDFF, "Вы заключили контракт с закусочной %s",BizzInfo[b][bMessage]);
			SendMes(playerid,0x6495EDFF, "Цена хот дога: %i (( Продать: /selleat ))",BizzInfo[b][bPrice]/2);
			break;
		}
	}
	return true;
}
CMD:mcontract(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	new Veh = GetPlayerVehicleID(playerid);
	if(pData[playerid][pJob] != 2) return true;
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 525) return SCM(playerid,COLOR_GREY, " Вы не в машине механика!");
	if(gcontract[playerid] >= 1)
	{
		if(Meh3d[Veh] != Text3D:INVALID_3DTEXT_ID) DestroyDynamic3DTextLabel(Meh3d[Veh]);
		cenabenza[playerid] = 0;
		gcontract[playerid] = 0;
		SCM(playerid,COLOR_WHITE, " Контракт с заправкой рассторгнут!");
		return true;
	}
	for(new b = 1; b <= TotalBizz; b++)
	{
		if(PlayerToPoint(10.0, playerid, BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]) && BizzInfo[b][bType] == 4)
		{
			if(BizzInfo[b][bLocked]) return SCM(playerid,COLOR_GREY," Заправка не работает!");
			//Delete3DTextLabel(Meh3d[Veh]);
			gcontract[playerid] = b;
			cenabenza[playerid] = BizzInfo[b][bPrice] / 2;
			format(cString, 52, "<< 300 литров. Цена: %i вирт >>", cenabenza[playerid]);
			//Meh3d[Veh] = Create3DTextLabel(cString, COLOR_REDD, 9999.0, 9999.0, 9999.0, 30.0,0,1);
			//Attach3DTextLabelToVehicle(Meh3d[Veh], Veh, 0, 0, 1.5);
			format(cString, 52, "<< 300 литров. Цена: %i вирт >>", cenabenza[playerid]);
			Meh3d[Veh] = CreateDynamic3DTextLabel(cString, COLOR_REDD, 0.0, 0.0, 1.5, 30.0, INVALID_PLAYER_ID, Veh);
			format(cString,sizeof(cString)," Вы заключили контракт с бензозаправкой: %s",BizzInfo[b][bMessage]);
			SCM(playerid,0x6495EDFF,cString);
			format(cString,64,"Цена заправки: %d (( Заправить: /refill ))",cenabenza[playerid]);
			SCM(playerid,0x6495EDFF,cString);
		}
	}
	return true;
}
CMD:fill(playerid)
{
	if(pData[playerid][pLogin] == false) return true;
	for(new b = 1; b <= TotalBizz; b++)
	{
		if(PlayerToPoint(10.0, playerid, BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]) && BizzInfo[b][bType] == 4)
		{
			if(car_data[GetPlayerVehicleID(playerid)][fuell] >= 200) return SCM(playerid,COLOR_GREY," Ваш автомобиль не нуждается в заправке");
			new Float:test = 200-car_data[GetPlayerVehicleID(playerid)][fuell];
			if(BizzInfo[b][bProducts] < floatround(test)) return SCM(playerid,COLOR_GRAD1, " Заправка не работает"), BizzInfo[b][bProducts] = 0;
			if(BizzInfo[b][bLocked] == 1) return SCM(playerid,COLOR_GRAD1, " Заправка закрыта");
			new car = GetPlayerVehicleID(playerid);
			if(pData[playerid][pCash] < BizzInfo[b][bPrice]) return SCM(playerid,COLOR_GRAD1, "  У вас нет столько денег");
			if(!IsPlayerInAnyVehicle(playerid) && pData[playerid][pState] == PLAYER_STATE_DRIVER || GetVehicleModel(car) == 481 || GetVehicleModel(car) == 509 || GetVehicleModel(car) == 510) return SCM(playerid,COLOR_YELLOW, " Вы не в автомобиле или этот транспорт нельзя заправить.");
			BizzInfo[b][bTill] += BizzInfo[b][bPrice]/200*floatround(test);
			BizzPay[b] += BizzInfo[b][bPrice]/200*floatround(test);
			pData[playerid][pCash] -= BizzInfo[b][bPrice]/200*floatround(test);
			BizzInfo[b][bProducts] -= floatround(test);
			car_data[car][fuell] = 200;
			format(cString,64,"Вы дозаправили свой автомобиль за %i вирт",BizzInfo[b][bPrice]/200*floatround(test));
			SCM(playerid,COLOR_BLUE,cString);
			if(BizzInfo[b][bProducts] < 0) BizzInfo[b][bProducts] = 0;
		}
	}
	return true;
}

CMD:lock(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(house_car[playerid] == -1 && garage_car[playerid][0] == -1 && garage_car[playerid][1] == -1 && garage_car[playerid][5] == -1 &&
			garage_car[playerid][2] == -1 && garage_car[playerid][3] == -1 && garage_car[playerid][4] == -1) return SendClientMessage(playerid, COLOR_GRAD1, " У Вас отсутствует автомобиль");

	new carid;

	if(IsPlayerNearVehicle(playerid, house_car[playerid], 3.0)) carid = house_car[playerid];
	else if(IsPlayerNearVehicle(playerid, garage_car[playerid][0], 3.0)) carid = garage_car[playerid][0];
	else if(IsPlayerNearVehicle(playerid, garage_car[playerid][1], 3.0)) carid = garage_car[playerid][1];
	else if(IsPlayerNearVehicle(playerid, garage_car[playerid][2], 3.0)) carid = garage_car[playerid][2];
	else if(IsPlayerNearVehicle(playerid, garage_car[playerid][3], 3.0)) carid = garage_car[playerid][3];
	else if(IsPlayerNearVehicle(playerid, garage_car[playerid][4], 3.0)) carid = garage_car[playerid][4];
	else if(IsPlayerNearVehicle(playerid, garage_car[playerid][5], 3.0)) carid = garage_car[playerid][5];
	if(carid)
	{

		GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
		switch (doors)
		{
		case 0:
			{
				GameTextForPlayer(playerid, "~w~CAR ~r~LOCK", 5000, 3);
				PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
				LockCar(playerid,carid);
			}
		case 1:
			{
				GameTextForPlayer(playerid, "~w~CAR ~g~UNLOCK", 5000, 3);
				PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
				UnLockCar(playerid,carid);
			}
		}
	}
	else SendClientMessage(playerid,COLOR_GREY," Вы должны находиться возле своего автомобиля");
	return true;
}
CMD:rlock(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	new carid;
	foreach(new cari: Vehicle)
	{
		if(!IsPlayerNearVehicle(playerid, cari, 3.0)) continue;
		if(cari == job_car[playerid])
		{
			carid = cari;
			break;
		}
	}
	if(!carid) return true;
	GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
	switch (doors)
	{
	case 0:
		{
			GameTextForPlayer(playerid, "~w~CAR ~r~LOCK", 5000, 3);
			PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
			LockCar(playerid,carid);
		}
	case 1:
		{
			GameTextForPlayer(playerid, "~w~CAR ~g~UNLOCK", 5000, 3);
			PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
			UnLockCar(playerid,carid);
		}
	}
	return true;
}

CMD:alogin(playerid, params[])
{
	if(!pData[playerid][pLogin]) return true;
	SetPVarInt(playerid, "Alogin", 3);
	ShowPlayerDialog(playerid, 1227, DIALOG_STYLE_PASSWORD, "Админ авторизация", "Введите пароль\n\nПароль должен состоять из латинских букв и цифр\n	размером от 6 до 15 символов", "Вход", "Отмена");
	new szQuery[50+24];
	mysql_format(DATABASE,szQuery, sizeof(szQuery) ,"SELECT * FROM `"TABLE_ADMIN"` WHERE `Name` = '%e'",pData[playerid][pName]);
	mysql_tquery(DATABASE,szQuery,"OnMySQL_QUERY","iis",14,playerid,"");
	return true;
}

CMD:alogout(playerid)
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 1) return true;
	format(string, sizeof(string), " <ALogout> вышел с админ-панели %s[%i]", pData[playerid][pName], playerid);
	if(pData[playerid][pAdmin] < 6) SendAdminMessage(0xF5B900AA, string);
	else ABroadCast(0xF5B900AA,string,8);
	pData[playerid][pAdmin] = 0;
	dostup[playerid] = 0;
	return true;
}

CMD:biz(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_GRAD2, " Введите: /biz [biznumber]");
	if(BizzInfo[params[0]][bType] != 4)
	{
		
		SetPlayerInterior(playerid,BizzInfo[params[0]][bInterior]);
		SetPlayerPos(playerid,BizzInfo[params[0]][bExitX],BizzInfo[params[0]][bExitY],BizzInfo[params[0]][bExitZ]);
		SetPlayerVirtualWorld(playerid,BizzInfo[params[0]][bVirtualWorld]);
	}
	else
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,BizzInfo[params[0]][bEntranceX],BizzInfo[params[0]][bEntranceY],BizzInfo[params[0]][bEntranceZ]);
		SetPlayerVirtualWorld(playerid,0);
	}
	return true;
}
CMD:asellbiz(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if (pData[playerid][pAdmin] < 9 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return	SCM(playerid, COLOR_GRAD1, " Введите: /asellbiz [bizid]");
	if(IsPlayerConnected(GetPlayerID(BizzInfo[params[0]][bOwner]))) pData[GetPlayerID(BizzInfo[params[0]][bOwner])][pPBizzKey] = 0, SCM(GetPlayerID(BizzInfo[params[0]][bOwner]),COLOR_RED,"Ваш бизнес был продан администратором");
	BizzInfo[params[0]][bLocked] = 1;
	strmid(BizzInfo[params[0]][bOwner], "None", 0, strlen("None"), 24);
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	SCM(playerid, COLOR_GRAD1,"Бизнес продан");
	format(YCMDstr, 78, "%s\nПродаётся", BizzInfo[params[0]][bMessage],BizzInfo[params[0]][bBuyPrice]);
	UpdateDynamic3DTextLabelText(BizzInfo[params[0]][bLabel], COLOR_GREEN, YCMDstr);
	GameTextForPlayer(playerid, YCMDstr, 10000, 3);
	return true;
}
CMD:aselltune(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if (pData[playerid][pAdmin] < 9 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return	SCM(playerid, COLOR_GRAD1, " Введите: /aselltune [tuneid]");
	if(IsPlayerConnected(GetPlayerID(WorkshopInfo[params[0]][wOwner]))) pData[GetPlayerID(WorkshopInfo[params[0]][wOwner])][pPBizzKey] = 0, SCM(GetPlayerID(WorkshopInfo[params[0]][wOwner]),COLOR_RED,"Ваш бизнес был продан администратором");
	strmid(WorkshopInfo[params[0]][wOwner], "None", 0, strlen("None"), 24);
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	SCM(playerid, COLOR_GRAD1,"Мастерская продана");
	return true;
}
CMD:asellhouse(playerid, params[])
{
	if (pData[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) 
		return	SCM(playerid, COLOR_GRAD1, " Введите: /asellhouse [houseid]");

	// if(IsPlayerConnected(GetPlayerID(HouseInfo[params[0]][hOwner]))) 
	// {
	// 	pData[GetPlayerID(HouseInfo[params[0]][hOwner])][pPHouseKey] = 0; 
	// 	SCM(GetPlayerID(HouseInfo[params[0]][hOwner]),COLOR_RED,"Ваш дом был продан администратором");
	// }
	HouseInfo[params[0]][hHel] = 0;
	HouseInfo[params[0]][hLock] = true;
	for(new h = 0; h < 10; h++) HouseInfo[params[0]][hSafe][h] = 0;
	SCM(playerid, COLOR_GREY, " Дом продан");
	strmid(HouseInfo[params[0]][hOwner], "None", 0, strlen("None"), 24);
	BuyHouse(params[0]);

	return true;
}
CMD:safe(playerid, params[])
{
	if(pData[playerid][pPHouseKey] == INVALID_HOUSE_ID) 
		return SCM(playerid,COLOR_WHITE," У вас нет дома");

//	new bouse = pData[playerid][pPHouseKey];
	//if(!PlayerToPoint(50, playerid,HouseInfo[bouse][hExitx], HouseInfo[bouse][hExity], HouseInfo[bouse][hExitz]) || GetPlayerVirtualWorld(playerid) != bouse+50) return true;
	//if(!IsASafe(playerid)) return SCM(playerid,COLOR_WHITE," Вы далеко от сейфа!");
	//if(GetPlayerVirtualWorld(playerid) != bouse+50) return true;
	ShowPlayerDialog(playerid,1054,DIALOG_STYLE_LIST, "Сейф","Взять\nПоложить", "Выбор", "Отмена");
	return true;
}
CMD:open(playerid)
{
	if(pData[playerid][pPHouseKey] == INVALID_HOUSE_ID) 
		return SCM(playerid,COLOR_WHITE," У вас нет дома");

	if(GetPVarInt(playerid, !#pPickHouseId)-1 != pData[playerid][pPHouseKey])
		return SCM(playerid, COLOR_GREY, "Вы можете открыть/закрыть только свой дом!");

	new house = GetPVarInt(playerid, !#pPickHouseId)-1;
	if(HouseInfo[house][hLock])
	{
		HouseInfo[house][hLock] = false;
		GameTextForPlayer(playerid,"~w~House ~g~UNLOCK", 5000, 3);
		PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
		return true;
	}
	else
	{
		HouseInfo[house][hLock] = true;
		GameTextForPlayer(playerid, "~w~House ~r~LOCK", 5000, 3);
		PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
		return true;
	}
}
CMD:sellhouse(playerid)
{
	if(pData[playerid][pPHouseKey] == INVALID_HOUSE_ID) 
		return SCM(playerid, COLOR_GREY, "У вас нет дома!");

	if(GetPVarInt(playerid, !#pPickHouseId)-1 != pData[playerid][pPHouseKey])
		return SCM(playerid, COLOR_GREY, "Вы должны находиться рядом или внутри своего дома!");

	ShowPlayerDialog(playerid,5032,DIALOG_STYLE_MSGBOX, "Продажа имущества", "Внимание! Вы собираетесь продать дом\n\nПродать дом?", "Да", "Нет");
	return true;
}
CMD:healme(playerid)
{
	if(pData[playerid][pLogin] == false) return true;
	if(GetPVarInt(playerid, "id_kvart_enter"))
	{
		new kv_id = GetPVarInt(playerid, "id_kvart_enter") - 1;
		
		if(kvart_info[kv_id][k_heal] == 0)
			return SCM(playerid, COLOR_GRAD1, " В этом доме нет аптечек");

	 	if(GetPVarInt(playerid,"_Hel") >= 10) 
	 		return SCM(playerid,COLOR_GREY," Только 10 штук в час!");

	 	new Float:health;
		GetPlayerHealth(playerid, health);
	 	if(health >= 100) 
	 		return SCM(playerid, COLOR_GREY," Вы здоровы");

	 	SCM(playerid, COLOR_WHITE, " Вы были вылечены на 25 процентов");
	 	format(cString, 32, " Осталось %i аптечек", HouseInfo[kv_id][hHel]-1);
	 	SCM(playerid, COLOR_BLUE, cString);
	 	kvart_info[kv_id][k_heal] -= 1;
	 	SetPlayerHealth(playerid, health + 25.0);
	
	 	SetPlayerChatBubble(playerid, " использовал(а) аптечку", COLOR_PURPLE, 30.0, 10000);
	 	SetPVarInt(playerid,"_Hel",GetPVarInt(playerid,"_Hel")+1);
		//SetHouseInfo(house, HouseInfo[house][hHel] , "hHel"); 
	 	return true;
	}
	if(GetPVarInt(playerid, !#pPickHouseId))
	{
		new house = GetPVarInt(playerid, !#pPickHouseId)-1;

		if(HouseInfo[house][hHel] == 0)
			return SCM(playerid, COLOR_GRAD1, " В этом месте нет аптечек");

	 	if(GetPVarInt(playerid,"_Hel") >= 10) 
	 		return SCM(playerid,COLOR_GREY," Только 10 штук в час!");

	 	new Float:health;
		GetPlayerHealth(playerid, health);
	 	if(health >= 100) 
	 		return SCM(playerid, COLOR_GREY," Вы здоровы");

	 	SCM(playerid, COLOR_WHITE, " Вы были вылечены на 25 процентов");
	 	format(cString, 32, " Осталось %i аптечек", HouseInfo[house][hHel]-1);
	 	SCM(playerid, COLOR_BLUE, cString);
	 	HouseInfo[house][hHel] -= 1;
	 	SetPlayerHealth(playerid, health + 25.0);
	
	 	SetPlayerChatBubble(playerid, " использовал(а) аптечку", COLOR_PURPLE, 30.0, 10000);
	 	SetPVarInt(playerid,"_Hel",GetPVarInt(playerid,"_Hel")+1);
		SetHouseInfo(house, HouseInfo[house][hHel] , "hHel"); 
	 	return true;
 	}
	if(IsAMedKit(playerid))
	{
		new _null;
		switch(pData[playerid][pMember])
		{
		case 12: _null = ballashel; case 13: _null = vagoshel; case 15: _null = groovhel;
		case 17: _null = aztekhel; case 18: _null = rifahel; case 6: _null = yakuzahel;
		case 5: _null = lcnhel; case 14: _null = rmhel;
		}
		if(_null <= 0) return SCM(playerid, COLOR_GRAD1, " На базе нет аптечек");
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health >= 100) return SCM(playerid, COLOR_GREY," Вы здоровы");
		SCM(playerid, COLOR_WHITE, " Вы были вылечены на 25 процентов");
		format(cString, 32, " Осталось %i аптечек", _null-1);
		SCM(playerid, COLOR_BLUE, cString);
		switch(pData[playerid][pMember])
		{
		case 12: ballashel--; case 13: vagoshel--; case 15: groovhel--;
		case 17: aztekhel--; case 18: rifahel--; case 6: yakuzahel--;
		case 5: lcnhel--; case 14: rmhel--;
		}
		SetPlayerHealth(playerid, health + 25.0);
		if(health > 100) SetPlayerHealth(playerid, 100.0);
		SetPlayerChatBubble(playerid, " использовал(а) аптечку", COLOR_PURPLE, 30.0, 10000);
	}
	return true;
}
CMD:robhouse(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(!IsAGang(playerid)) return SCM(playerid,COLOR_GREY," Вы не бандит!");
	for(new h = 0; h<TotalHouse;h++)
	{
		for(new i =1; i <= TOTALGZ; i++)
		{
			if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) && pData[playerid][pMember] == GZInfo[i][gFrakVlad])
			{
				if(!PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez])) continue;
				if(robhouse[h] != false) return SCM(playerid, COLOR_GREY, " Этот дом уже был ограблен в этом часу");
				if(strcmp(HouseInfo[h][hOwner],"None",true) == 0) return SCM(playerid, COLOR_GREY, " У дома нет владельца");
				if(!IsPlayerConnected(GetPlayerID(HouseInfo[h][hOwner]))) return SCM(playerid, COLOR_GREY, " Владелец дома OFF-LINE");
				if(pData[GetPlayerID(HouseInfo[h][hOwner])][pMember] == pData[playerid][pMember]) return SCM(playerid,COLOR_GREY," Владелец дома из вашел банды");
				SCM(playerid, COLOR_GREEN, " Вы ограбили дом, везите материалы в доки (( /gps >> [0] Важное >> [6] Приём металла ))");
				SCM(GetPlayerID(HouseInfo[h][hOwner]),COLOR_REDD," Вам дом ограбили! С вашего счета было списано 500 вирт на востановление труб и оплату энергии");
				pData[playerid][pZakonp] -= 1;
				robh[playerid] = true;
				robhouse[h] = true;
				HouseInfo[h][hTakings] -= 500;

			}
		}
	}
	return true;
}
CMD:getskill(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	if(sscanf(params, "i",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /getskill [id]");
	new points[6],percent[2] = "%";
	points[0] = 100 - pData[params[0]][pGunSkill][0];
	points[1] = 100 - pData[params[0]][pGunSkill][1];
	points[2] = 100 - pData[params[0]][pGunSkill][2];
	points[3] = 100 - pData[params[0]][pGunSkill][3];
	points[4] = 100 - pData[params[0]][pGunSkill][4];
	points[5] = 100 - pData[params[0]][pGunSkill][5];
	format(string,sizeof(string), "<< Навыки владения оружием >>\n\nSDPistol:\t[%s]%i%s\nDeagle:\t[%s]%i%s\nShotGun:\t[%s]%i%s\nMP5\t\t[%s]%i%s\nAK47:\t\t[%s]%i%s\nM4A1:\t\t[%s]%i%s",
	ToDevelopSkills(pData[params[0]][pGunSkill][0],points[0]),pData[params[0]][pGunSkill][0],percent,
	ToDevelopSkills(pData[params[0]][pGunSkill][1],points[1]),pData[params[0]][pGunSkill][1],percent,
	ToDevelopSkills(pData[params[0]][pGunSkill][2],points[2]),pData[params[0]][pGunSkill][2],percent,
	ToDevelopSkills(pData[params[0]][pGunSkill][3],points[3]),pData[params[0]][pGunSkill][3],percent,
	ToDevelopSkills(pData[params[0]][pGunSkill][4],points[4]),pData[params[0]][pGunSkill][4],percent,
	ToDevelopSkills(pData[params[0]][pGunSkill][5],points[5]),pData[params[0]][pGunSkill][5],percent);
	ShowPlayerDialog(playerid,1100,DIALOG_STYLE_MSGBOX, " ",string, "Готово", "");
	return true;
}
CMD:jskill(playerid)
{
	new job_skill_str[1028], job_str[250];
	new exp;

	exp = floatround(pData[playerid][job_skill][job_delivery]-floatround(pData[playerid][job_skill][job_delivery]/100,floatround_floor)*100);
	format(job_str,sizeof(job_str), "{009688}Доставщик еды:\t{ffffff}Уровень - {009688}%d{ffffff}, Опыт - {009688}%s %d/100\n",
	job_lvl(pData[playerid][job_skill][job_delivery]),ToDevelopSkills(exp, 100-exp), exp);
	strcat(job_skill_str, job_str);

	exp = floatround(pData[playerid][job_skill][job_taxi]-floatround(pData[playerid][job_skill][job_taxi]/100,floatround_floor)*100);
	format(job_str,sizeof(job_str), "{fdd835}Таксист:\t\t{ffffff}Уровень - {fdd835}%d{ffffff}, Опыт - {fdd835}%s %d/100\n",
	job_lvl(pData[playerid][job_skill][job_taxi]),ToDevelopSkills(exp, 100-exp), exp);
	strcat(job_skill_str, job_str);

	exp = floatround(pData[playerid][job_skill][job_ugon]-floatround(pData[playerid][job_skill][job_ugon]/100,floatround_floor)*100);
	format(job_str,sizeof(job_str), "{1565c0}Автоугонщик:\t\t{ffffff}Уровень - {1565c0}%d{ffffff}, Опыт - {1565c0}%s %d/100\n",
	job_lvl(pData[playerid][job_skill][job_ugon]),ToDevelopSkills(exp, 100-exp), exp);
	strcat(job_skill_str, job_str);

	exp = floatround(pData[playerid][job_skill][job_loader]-floatround(pData[playerid][job_skill][job_loader]/100,floatround_floor)*100);
	format(job_str,sizeof(job_str), "{388e3c}Грузчик:\t\t{ffffff}Уровень - {388e3c}%d{ffffff}, Опыт - {388e3c}%s %d/100\n",
	job_lvl(pData[playerid][job_skill][job_loader]),ToDevelopSkills(exp, 100-exp), exp);
	strcat(job_skill_str, job_str);

	ShowPlayerDialog(playerid,1100,DIALOG_STYLE_MSGBOX, " ",job_skill_str, "Готово", "");
	return 1;
}

CMD:myskill(playerid)
{
	if(pData[playerid][pLogin] == false) return true;
	new points[6],percent[2] = "%";
	points[0] = 100 - pData[playerid][pGunSkill][0];
	points[1] = 100 - pData[playerid][pGunSkill][1];
	points[2] = 100 - pData[playerid][pGunSkill][2];
	points[3] = 100 - pData[playerid][pGunSkill][3];
	points[4] = 100 - pData[playerid][pGunSkill][4];
	points[5] = 100 - pData[playerid][pGunSkill][5];
	format(string,sizeof(string), "<< Навыки владения оружием >>\n\nSDPistol:\t[%s]%i%s\nDesert eagle:\t[%s]%i%s\nShotGun:\t[%s]%i%s\nMP5\t\t[%s]%i%s\nAK47:\t\t[%s]%i%s\nM4A1:\t\t[%s]%i%s",
	ToDevelopSkills(pData[playerid][pGunSkill][0],points[0]),pData[playerid][pGunSkill][0],percent,
	ToDevelopSkills(pData[playerid][pGunSkill][1],points[1]),pData[playerid][pGunSkill][1],percent,
	ToDevelopSkills(pData[playerid][pGunSkill][2],points[2]),pData[playerid][pGunSkill][2],percent,
	ToDevelopSkills(pData[playerid][pGunSkill][3],points[3]),pData[playerid][pGunSkill][3],percent,
	ToDevelopSkills(pData[playerid][pGunSkill][4],points[4]),pData[playerid][pGunSkill][4],percent,
	ToDevelopSkills(pData[playerid][pGunSkill][5],points[5]),pData[playerid][pGunSkill][5],percent);
	ShowPlayerDialog(playerid,1100,DIALOG_STYLE_MSGBOX, " ",string, "Готово", "");
	return true;
}
CMD:pskill(playerid)
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pJob] != 5) return true;
	new points[1],percent[2] = "%";
	points[0] = 100 - pData[playerid][pPProc];
	format(string,512, "{FFFFFF}Уровень: %d\n{2E8F1A}Опыт:\t[%s]%i%s\n{FFFFFF}Макс.Груз: %d",
	pData[playerid][pPSkill],
	ToDevelopSkills(pData[playerid][pPProc],points[0]),pData[playerid][pPProc],percent,
	pData[playerid][pPMGruz]);
	ShowPlayerDialog(playerid,1100,DIALOG_STYLE_MSGBOX, "Статистика",string, "Готово", "");
	return true;
}
CMD:atune(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if (pData[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	if(pData[playerid][pState] != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_GREY, " Вы не за рулем");
	ShowPlayerDialog(playerid, 8004, 2, "Тюнинг меню", "Диски \nГидравлика \nАрхангел Тюнинг \nЦвет \nВинилы \nАзот", "Выбрать", "Назад");
	return true;
}
CMD:savetuning(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if (pData[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(pData[playerid][pState] != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_GREY, " Вы не за рулем");
	if(vehicleforeach(GetPlayerVehicleID(playerid)) == -1) return SCM(playerid, COLOR_GREY, " Данный автомобиль не пренадлежит никому");
	SaveTuning(vehicleforeach(GetPlayerVehicleID(playerid)),house_car[vehicleforeach(GetPlayerVehicleID(playerid))]);
	return SendMes(playerid,COLOR_GOLD,"Тюнинг сохранен! Владелец автомобиля %s",pData[vehicleforeach(GetPlayerVehicleID(playerid))][pName]);
}
CMD:setskill(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	if(sscanf(params, "udd",params[0],params[1],params[2]))
	{
		SCM(playerid, COLOR_GRAD1, " Введите: /setskill [playerid/часть ника] [номер] [количество]");
		SCM(playerid, COLOR_GRAD4, " [0] Slinced Pistol |[1] Desert Eagle |[2] ShotGun |[3] MP5 |[4] AK47 |[5] M4A1");
		return true;
	}
	if(params[1] > 6 || params[1] < 0) return SCM(playerid,COLOR_GREY," Неизвестное значение");
	if(!IsPlayerConnected(params[0])) return true;
	pData[params[0]][pGunSkill][params[1]] = params[2];
	SCM(playerid, COLOR_GRAD1, " Уровень владения оружием игроку установлен");
	return true;
}
CMD:sellgrib(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	for(new i = 1; i <= TotalBizz; i++)
	{
		if(pData[playerid][pMushrooms] == 0) return SCM(playerid, COLOR_WHITE, " У вас нет грибов");
		if (PlayerToPoint(10, playerid,BizzInfo[i][bBarX], BizzInfo[i][bBarY], BizzInfo[i][bBarZ]) && BizzInfo[i][bType] == 2 && GetPlayerVirtualWorld(playerid) == BizzInfo[i][bVirtualWorld])
		{
			pData[playerid][pCash] +=pData[playerid][pMushrooms]*25;
			BizzInfo[i][bProducts]+=pData[playerid][pMushrooms];
			format(cString,64, "Вы продали %i грибов. Выручка: %i вирт",pData[playerid][pMushrooms],pData[playerid][pMushrooms]*25);
			SCM(playerid,COLOR_WHITE,cString);
			pData[playerid][pMushrooms] = 0;
		}
	}
	return true;
}
CMD:paint(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(paint_info[1] == 1) return SCM(playerid,COLOR_GREY," Пейнтболл уже запущен");
	paint_info[0] = 121;
	paint_info[1] = 1;
	return true;
}

CMD:arace(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(race_info[1] == 1) return SCM(playerid,COLOR_GREY," Гонка уже запущена");
	race_info[0] = 121;
	race_info[1] = 1;
	return true;
}
CMD:fixcar(playerid, const params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pPHouseKey] == INVALID_HOUSE_ID) return true;
	if(GetPVarInt(playerid,"CarOffer") || CarOffer[playerid] != 9999) return true;
	if(pData[playerid][pCash] < 1000) return SCM(playerid, COLOR_WHITE, " Не достаточно денег!");
	if(IsVehicleOccupied(house_car[playerid]) != -1) return SCM(playerid,COLOR_GREY," Транспорт занят игроком");
	new bool:null = false;
	foreach(new i: Player) if(house_car[playerid] != -1 && GetPVarInt(i,"job_auto_seat") == house_car[playerid]) null = true;
	if(null) return SCM(playerid,COLOR_GREY," В данный момент мы не можем доставить ваш транспорт");
	if(pData[playerid][pPHouseKey] != INVALID_HOUSE_ID)
	{
		if(GetPVarInt(playerid, "CarsInGarage") == 1 && HouseInfo[pData[playerid][pPHouseKey]][hKlass] > 1 && !GetPVarInt(playerid, !#_buyCar)) return SCM(playerid,COLOR_GREY," Все ваши автомобили находятся в гараже");
		DestroyHouseCars(playerid);
		SpawnHouseCars(playerid);
		GameTextForPlayer(playerid, "~g~car at your home~n~~r~$-1000", 5000, 1);
		pData[playerid][pCash] -= 1000;
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	}
	else if(pData[playerid][pKvartiraKey])
	{
		if(house_car[playerid] == -1) return SCM(playerid,COLOR_GREY," Автомобиль уже на парковке");
		if(pData[playerid][pCash] < 2500) return SCM(playerid,COLOR_GREY," У вас недостаточно денег");
		DestroyVehicleEX(house_car[playerid]);
		house_car[playerid] = -1;
		pData[playerid][pCash] -= 2500;
		GameTextForPlayer(playerid, "~g~car at your entryway~n~~r~$-2500", 5000, 1);
	}
	return true;
}
CMD:carpass(playerid, const params[])
{
	if(pData[playerid][pLogin] == false) return true;
	new textcar[64];
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_GRAD2, " Вы не в машине!");
	if(vehicleforeach(GetPlayerVehicleID(playerid)) == -1 && caroff[GetPlayerVehicleID(playerid)] == false) return SCM(playerid,COLOR_GREY," В бардачке этого транспортного средства нет документов / Вы находитесь в гараже");
	if(sscanf(params, "u",params[0]))
	{
		if(IsPlayerConnected(vehicleforeach(GetPlayerVehicleID(playerid))) && caroff[GetPlayerVehicleID(playerid)] == false)
		{
			SCM(playerid,0x0AA8DAFF, "-------========[ VEHICLE PASSPORT ]========-------");
			format(textcar,sizeof(textcar), " Модель: %s",VehicleNames[GetVehicleModel(GetPlayerVehicleID(playerid))-400]);
			SCM(playerid,0xC0E1EEFF, textcar);
			format(textcar,sizeof(textcar), " Владелец: %s",Name(vehicleforeach(GetPlayerVehicleID(playerid))));
			SCM(playerid,0xC0E1EEFF, textcar);
			format(textcar,sizeof(textcar), " Состояние: %i процентов",CarInfo[vehicleforeach(GetPlayerVehicleID(playerid))][carPercent][GetPVarInt(vehicleforeach(GetPlayerVehicleID(playerid)),"chosencar")]);
			SCM(playerid,0xC0E1EEFF, textcar);
			SCM(playerid,0x0AA8DAFF, "-------====================================-------");
			SetPlayerChatBubble(playerid," достал(а) документы из бардачка",COLOR_PURPLE,30.0,10000);
			format(cString, 102, " %s достал(а) документы из бардачка",Name(playerid));
			ProxDetector(10.0, playerid, cString, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return true;
		}
		else return SCM(playerid,COLOR_REDD," Владелеца машины нет в сети.");
	}
	if(!IsPlayerConnected(params[0])) return SCM(playerid,-1," Игрок не в сети");
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	SCM(params[0],0x0AA8DAFF, "-------========[ VEHICLE PASSPORT ]========-------");
	format(textcar,sizeof(textcar), " Модель: %s",VehicleNames[GetVehicleModel(GetPlayerVehicleID(playerid))-400]);
	SCM(params[0],0xC0E1EEFF, textcar);
	format(textcar,sizeof(textcar), " Владелец: %s",Name(vehicleforeach(GetPlayerVehicleID(playerid))));
	SCM(params[0],0xC0E1EEFF, textcar);
	format(textcar,sizeof(textcar), " Состояние: %i процентов",CarInfo[vehicleforeach(GetPlayerVehicleID(playerid))][carPercent][GetPVarInt(vehicleforeach(GetPlayerVehicleID(playerid)),"chosencar")]);
	SCM(params[0],0xC0E1EEFF, textcar);
	SCM(params[0],0x0AA8DAFF, "-------====================================-------");
	format(cString,102, " достал(а) документы из бардачка и показал их %s",Name(params[0]));
	SetPlayerChatBubble(playerid,cString,COLOR_PURPLE,30.0,10000);
	format(cString, 102, " %s достал(а) документы из бардачка и показал их %s",Name(playerid),Name(params[0]));
	ProxDetector(10.0, playerid, cString, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return true;
}
CMD:sellcar(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	new null = -1;
	if(GetPVarInt(playerid,"CarOffer") || CarOffer[playerid] != 9999) return true;
	if(pData[playerid][pLimitSellCar] > 3) return SCM(playerid,COLOR_GREY," Можно продать  Не более 3-х автомобилей в сутки");
	if(house_car[playerid] == -1) return SCM(playerid,COLOR_RED, " У вас нет автомобиля");
	if(CarInfo[playerid][carModel][GetPVarInt(playerid,"chosencar")] == 462) return SCM(playerid,COLOR_GRAD1, "  Вы не можете продать мопед");
	if(GetPVarInt(playerid,"CarOffer") || CarOffer[playerid] != 9999) return SCM(playerid,COLOR_GREY," В данный момент  Вы не можете продать свой автомобиль!");
	for(new i = 0; i < sizeof(ShopCar); i++) if(CarInfo[playerid][carModel][GetPVarInt(playerid,"chosencar")] == ShopCar[i][0]) null = i;
	if(null == -1) return SCM(playerid,COLOR_GREY," Вы не можете продать данный автомобиль!");
	ShowPlayerDialog(playerid,8446,DIALOG_STYLE_MSGBOX, " ", "Вы уверены, что хотите продать свой автомобиль?", "Далее", "Отмена");
	return true;
}
CMD:pgetip(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if(sscanf(params, "s",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /pgetip [ip]");
	SCM(playerid, 0xC21D00AA, " Список IP:");
	new playersip[32];
	foreach(new i: Player)
	{
		GetPlayerIp(i,playersip,sizeof(playersip));
		if(!strcmp(playersip, params[0]))
		{
			format(cString, 64, " Nik [%s] IP [%s]", Name(i),playersip);
			SCM(playerid, 0x6BB3FFAA, cString);
		}
	}
	return true;
}
CMD:sellzone(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(!pData[playerid][pLeader]) return SendClientMessage(playerid,COLOR_GREY,"Вам недоступна данная функция");
	for(new i = 1; i <= TOTALGZ; i++)
	{
		if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
		{
			if(pData[playerid][pLeader] != GZInfo[i][gFrakVlad]) return SendClientMessage(playerid, COLOR_GRAD1, " Вы не на своей зоне!");
			if(IsARespawn(playerid)) return SendClientMessage(playerid,COLOR_WHITE," Нельзя продать эту территорию");
			if(sscanf(params, "ud",params[0],params[1])) return SendClientMessage(playerid, COLOR_WHITE, " Введите: /sellzone [id] [цена]");
			if(!IsPlayerConnected(params[0]) || !pData[params[0]][pLogin]) return true;
			if(!IsAGang(params[0])) return SendClientMessage(playerid, COLOR_GREY, " Продать территорию можно только другой банде!");
			if(!(50000 <= params[1] <= 500000)) return SendClientMessage(playerid, COLOR_GREY, " Цена должна быть: от 50000 до 500000!");
			if(!ProxDetectorS(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, " Вы должны находиться рядом с игроком, которому хотите продать территорию!");
			if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, " Нельзя продать территорию самому себе!");
			format(cString, 78, " Вы предложили %s купить территорию за %i вирт",Name(params[0]),params[1]);
			SendClientMessage(playerid, 0x6495EDFF, cString);
			format(cString, sizeof(cString), " %s предлагает Вам купить территорию за %i вирт. (( Введите: /accept zone для покупки))",Name(playerid),params[1]);
			SendClientMessage(params[0], 0x6495EDFF, cString);
			ZoneOffer[params[0]] = playerid;
			sellzone[params[0]] = pData[playerid][pMember];
			ZonePrice[params[0]] = params[1];
		}
	}
	return true;
}
CMD:agetip(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if(sscanf(params, "s[24]",params[0])) return	SCM(playerid, COLOR_WHITE, " Введите: /agetip [Ник]");
	new szQuery[52+24];
	mysql_format(DATABASE,szQuery, sizeof szQuery, "SELECT * FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%s'",params[0]);
	mysql_tquery(DATABASE,szQuery,"OnMySQL_QUERY","iis",20,playerid,params[0]);
	return true;
}
CMD:agetipreg(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if(sscanf(params, "s[24]",params[0])) return	SCM(playerid, COLOR_WHITE, " Введите: /agetip [Ник]");
	new szQuery[52+24];
	mysql_format(DATABASE,szQuery, 256, "SELECT * FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%s'",params[0]);
	mysql_tquery(DATABASE,szQuery,"OnMySQL_QUERY","iis",21,playerid,params[0]);
	return true;
}
CMD:atm(playerid)
{
	if(pData[playerid][pLogin] == false) return true;
	if(IsPlayerInDynamicArea(playerid, bankarea[0]) || IsPlayerInDynamicArea(playerid, bankarea[1]) || IsPlayerInDynamicArea(playerid, bankarea[2]))
	{
		ShowPlayerDialog(playerid, 8900, DIALOG_STYLE_LIST, "ATM","[0] Пополнить счет\n[1] Снять со счета\n[2] Баланс\n[3] Оплатить квартплату", "Далее", "Выход");
		return 1;
	}
	if(GetPVarInt(playerid, "vozle_atm") )
	{
		ClearAnim(playerid);
		ShowPlayerDialog(playerid, 8900, DIALOG_STYLE_LIST, "ATM","[0] Пополнить счет\n[1] Снять со счета\n[2] Баланс\n[3] Оплатить квартплату", "Далее", "Выход");
		return 1;
	}
	return true;
}

CMD:sadmin(playerid, params[])
{
	if(!pData[playerid][pLogin]) return true;//SCM(playerid,-1," Вы не авторизированы");
	if(pData[playerid][pAdmin] < 7) return true;

	if(sscanf(params, "s[128]",params[0])) return SCM(playerid, -1, " Введите: (/sa)dmin [текст]");
	format(YCMDstr, sizeof(YCMDstr), " <ADM-CHAT> %s: %s",pData[playerid][pName],params[0]);
	ABroadCast(0x40BF80FF,YCMDstr,7);
	return true;
}

CMD:admins(playerid)
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 1 && pData[playerid][pDonateRank] < 2 && pData[playerid][pHelper] == 0) return SCM(playerid,COLOR_GRAD1, " Доступно администрации / VIP 2 уровня / саппортам");
	SCM(playerid, COLOR_YELLOW, " Админы Online:");
	foreach(new i: Player)
	{
		if(!IsPlayerConnected(i) || (!pData[i][pLogin])) continue;
		if(pData[i][pAdmin] < 1 || pData[i][pAdmin] > 6 && pData[playerid][pAdmin] < 7) continue;
		if(IsPlayerInAFK(i)) format(cString, 128, " %s[ID: %i] [lvl: %i] [AFK: %i сек]",Name(i),i,pData[i][pAdmin], gettime() - pData[i][pAFK]);
		else format(cString, 128, " %s[ID: %i] [lvl: %i]",Name(i),i,pData[i][pAdmin]);
		SCM(playerid, COLOR_YELLOW2, cString);
	}
	return true;
}
CMD:instructors(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	SCM(playerid, 0x6495EDFF, " Инструкторы Online:");
	foreach(new i: Player)
	{
		if(!IsPlayerConnected(i)) continue;
		if(pData[i][pMember] != 11) continue;
		format(cString, 78, "Инструктор: %s тел: %i", Name(i), pData[i][pPnumber]);
		SCM(playerid, COLOR_WHITE, cString);
	}
	return true;
}
CMD:supports(playerid)
{
	if(pData[playerid][pLogin] == false) return true;
	SCM(playerid, COLOR_YELLOW, " Саппорты Online:");
	foreach(new i: Player)
	{
		if(!IsPlayerConnected(i)) continue;
		if(!pData[i][pHelper] || !SDuty[i] || pData[i][pAdmin]) continue;
		if(IsPlayerInAFK(i)) format(cString, 128, " %s[ID: %i] [AFK: %i сек]",Name(i),i, gettime() - pData[i][pAFK]);
		else format(cString, 128, " %s[ID: %i]",Name(i),i);
		SCM(playerid, COLOR_YELLOW2, cString);
	}
	return true;
}
CMD:tmembers(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	new chislo = 0;
	if(pData[playerid][pJob] != 99) return SCM(playerid, COLOR_GREY, " Вам недоступна эта функция");
	SCM(playerid, 0x059BD3FF, "Дальнобойщики Online:");
	foreach(new i: Player)
	{
		if(IsPlayerConnected(i))
		{
			format(string, 128, " ");
			if(IsPlayerInAFK(i) && pData[i][pJob] == 99) format(string, 128, " [%i] %s:  T.LVL / %i | {FFFFFF} [AFK]: %i секунд",i,Name(i),pData[i][pDLevel],gettime() - pData[i][pAFK]), chislo++;
			else if(pData[i][pJob] == 99) format(string, 128, " [%i] %s:  T.LVL / %i",i,Name(i), pData[i][pDLevel]), chislo++;
			if(strlen(string) > 1) SCM(playerid, 0x059BD3FF, string);
		}
	}
	format(string,128," Всего: %i человек",chislo);
	SCM(playerid,COLOR_YELLOW,string);
	return true;
}
CMD:members(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	new chislo = 0, teamnumber;
	if(pData[playerid][pLeader] != 0) teamnumber = pData[playerid][pLeader];
	else if(pData[playerid][pMember] != 0) teamnumber = pData[playerid][pMember];
	else
	{
		SCM(playerid, COLOR_GRAD1, " Вам недоступна эта функция");
		return true;
	}
	SCM(playerid, 0x059BD3FF, "Члены организации Online:");
	if(!IsAMafia(playerid) && !IsAGang(playerid))
	SCM(playerid, TEAM_GROVE_COLOR, " На работе:");
	foreach(new i: Player)
	{
		if (IsPlayerConnected(i))
		{
			format(string, 128, " ");
			if(IsPlayerInAFK(i))
			{
				if(pData[i][pLeader] == teamnumber && GetPVarInt(i,"Fraction_Duty")) format(string, 128, " [%i] %s  ранг: Лидер {FFFFFF}[AFK: %i сек]",i,Name(i),gettime() - pData[i][pAFK]),chislo++;
				else if(pData[i][pMember] == pData[playerid][pMember] && GetPVarInt(i,"Fraction_Duty")) format(string, 144, " [%i] %s  ранг: %i [%s] {FFFFFF}[AFK: %i сек]",i,Name(i), pData[i][pRank],GetRank(i),gettime() - pData[i][pAFK]),chislo++;
				if(strlen(string) > 1) SCM(playerid, 0x059BD3FF, string);
			}
			else
			{
				if(pData[i][pLeader] == teamnumber && GetPVarInt(i,"Fraction_Duty")) format(string, 128, " [%i] %s  ранг: Лидер",i,Name(i), chislo++);
				else if(pData[i][pMember] == pData[playerid][pMember] && GetPVarInt(i,"Fraction_Duty")) format(string, 144, " [%i] %s  ранг: %i [%s]",i,Name(i), pData[i][pRank],GetRank(i)), chislo++;
				if(strlen(string) > 1) SCM(playerid, 0x059BD3FF, string);
			}
		}
	}
	if(!IsAMafia(playerid) && !IsAGang(playerid))
	SCM(playerid, COLOR_LIGHTRED, " Выходные:");
	foreach(new i: Player)
	{
		if (IsPlayerConnected(i))
		{
			format(string, 128, " ");
			if(pData[i][pLeader] == teamnumber && !GetPVarInt(i,"Fraction_Duty")) format(string, 128, " [%i] %s  ранг: Лидер",i,Name(i), chislo++);
			else if(pData[i][pMember] == pData[playerid][pMember] && !GetPVarInt(i,"Fraction_Duty")) format(string, 144, " [%i] %s ранг: %i [%s]",i,Name(i), pData[i][pRank],GetRank(i)), chislo++;
			if(strlen(string) > 1) SCM(playerid, 0x059BD3FF, string);
		}
	}
	format(string,128,"Всего: %i человек",chislo);
	SCM(playerid,COLOR_YELLOW,string);
	return true;
}
CMD:amembers(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /amembers [1-23]");
	if(params[0] > 26 || params[0] < 0) return SCM(playerid, COLOR_GREY, " Нельзя меньше 1 или больше 23");
	SCM(playerid, 0x059BD3FF, "Члены организации Online:");
	foreach(new i: Player)
	{
		format(string, 128, " ");
		if(pData[i][pLeader] == params[0]) format(string, 128, " [%i] %s  ранг: Лидер",i,pData[i][pName]);
		else if(pData[i][pMember] == params[0]) format(string, 128, " [%i] %s  ранг: %i",i,pData[i][pName], pData[i][pRank]);
		if(strlen(string) > 1) SCM(playerid, 0x059BD3FF, string);
	}
	return true;
}
CMD:offmembers(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 5 || dostup[playerid] == 0)
	{
		if(pData[playerid][pLeader] == 0) return SCM(playerid, COLOR_GRAD1, " Вам недоступна эта функция!");
		SCM(playerid, 0x059BD3FF, "Список игроков: [Ник] [Ранг] [Последний вход] [Время игры]");
		new szQuery[62];
		mysql_format(DATABASE,szQuery,62,"SELECT * FROM `accounts` WHERE `pMember` = '%i'",pData[playerid][pMember]);
		return mysql_tquery(DATABASE,szQuery,"OnMySQL_QUERY","iis",40,playerid,"");
	}
	else
	{
		if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /offmembers [id фракции]");
		if(params[0] < 1 || params[0] > 33) return SCM(playerid,COLOR_GREY," Неверный ID фракции");
		SCM(playerid, 0x059BD3FF, "Список игроков: [Ник] [Ранг] [Последний вход] [Время игры]");
		new szQuery[62];
		mysql_format(DATABASE,szQuery,62,"SELECT * FROM `accounts` WHERE `pMember` = '%i'",params[0]);
		return mysql_tquery(DATABASE,szQuery,"OnMySQL_QUERY","iis",40,playerid,"");
	}
}
CMD:pdd(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	new pdddialog[1748];
	format(pdddialog,sizeof(pdddialog), "%s%s%s%s%s%s%s%s%s%s%s%s%s",
	pdddialogMSG[0],pdddialogMSG[1],pdddialogMSG[2],pdddialogMSG[3],pdddialogMSG[4],pdddialogMSG[5],pdddialogMSG[6],pdddialogMSG[7],pdddialogMSG[8],pdddialogMSG[9],pdddialogMSG[10],pdddialogMSG[11],pdddialogMSG[12]);
	ShowPlayerDialog(playerid,5444,DIALOG_STYLE_MSGBOX, "Правила дорожного движения", pdddialog, "Готово", "");
	format(cString, sizeof(cString), " %s читает Правила Дорожного Движения",Name(playerid));
	ProxDetector(30.0, playerid, cString, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return true;
}
CMD:clist(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(GetPVarInt(playerid,"capture_on") || GetPVarInt(playerid,"mWar_on")) return SCM(playerid,COLOR_GREY," Нельзя использовать во время войны");
	if(sscanf(params, "d",params[0]))
	{
		string[0] = EOS;
		strcat(string, "[0]	Выключить цвет\n[1]	Зелёный\n[2]	Светло зелёный\n[3]	Ярко зелёный\n[4]	Бирюзовый\n[5]	Жёлто-зелёный\n[6]	Тёмно-зелёный\n[7]	Серо-зелёный\n[8]	Красный\n[9]	Ярко-красный\n[10]	Оранжевый\n[11]	Коричневый\n[12]	Тёмно-красный\n[13]	Cеро-красный\n[14]	Жёлто-оранжевый\n[15]	Малиновый\n[16]	Розовый\n[17]	Синий\n[18]	Голубой\n[19]	Синяя сталь\n[20]	Сине-зелёный\n[21]	Тёмно-синий\n[22]	Фиолетовый\n");
		strcat(string, "[23]	Индиго\n[24]	Серо-синий\n[25]	Жёлтый\n[26]	Кукурузный\n[27]	Золотой\n[28]	Старое золото\n[29]	Оливковый\n[30]	Серый\n[31]	Серебро\n[32]	Чёрный\n[33]	Белый");
		return ShowPlayerDialog(playerid,2001,DIALOG_STYLE_LIST, "Цвет",string, "Выбрать", "Отмена");
	}
	else
	{
		if(params[0] > 33) return SCM(playerid,COLOR_GREY," Неверный цвет");
		SetPlayerColor(playerid, g_szColorsTable[params[0]]);
	}
	return true;
}
CMD:exit(playerid)
{

	new i = (GetPVarInt(playerid, !#pPickHouseId)-1);
	new int = HouseInfo[i][hInt];
	if(!IsPlayerInRangeOfPoint(playerid, 2, interior_info[int][int_x],interior_info[int][int_y],interior_info[int][int_z]))return 1;
	switch(HouseInfo[i][hKlass])
	{
		case 0,1: // Дом N Klass
		{
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerPos(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez]);
		}
		case 2..5: // Дома от C класса до домов S класса
		{
			ShowPlayerDialog(playerid, 1008, 2, "Выход","Выйти на улицу\nВойти в гараж", "Готово", "Отмена");
		}
	}
	return true;
}

CMD:directory(playerid)
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pDirectory] == 0) return SCM(playerid, COLOR_GRAD1, " У вас нет телефонного справочника");
	ShowPlayerDialog(playerid,5454,DIALOG_STYLE_LIST, "Телефонный справочник", " Таксисты\n Механики\n Прорабы\n Медики\n Лидеры\n Адвокаты\n Развозчики продуктов\n Тренеры\n Инструкторы", "Просмотр", "Отмена");
	return true;
}
CMD:mainmenumode(playerid)
{
	if(!pData[playerid][pLogin]) return true;
	return show_main_menu(playerid, 0);
}
CMD:switchskin(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(!IsAGang(playerid)) return true;
	if(forma[playerid] != 1) return SCM(playerid, COLOR_GRAD1, " У вас нет формы армейца");
	SetPlayerSkin(playerid,287);
	SetPlayerColor(playerid, 0x51964DFF);
	forma[playerid] = 0;
	proverkaforma[playerid] = 1;
	return true;
}
CMD:carm(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pMember] != 19 && proverkaforma[playerid] != 1) return true;
	if(pData[playerid][pMember] == 19) ShowPlayerDialog(playerid, 9653, DIALOG_STYLE_LIST, "Развозка материалов","Загрузка\nРазгрузить на гл.склад\nРазгрузить на склад ЛСПД\nРазгрузить на склад СФПД\nРазгрузить на склад ЛВПД\nРазгрузить на склад ФБР\nРазгрузить на склад Армии СФ", "Выбрать", "Отмена");
	else ShowPlayerDialog(playerid, 9653, DIALOG_STYLE_LIST, "Развозка материалов","Загрузка\nРазгрузить на гл.склад", "Выбрать", "Отмена");
	return true;
}
CMD:tie(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(!IsAMafia(playerid)) return true;
	if(pData[playerid][pRank] < 3) return SCM(playerid, COLOR_GREY, " Вы должны быть 3 рангом");
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /tie [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PlayerTied[params[0]] > 0) return SCM(playerid, COLOR_GREY, " Человек уже связан!");
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	new car = GetPlayerVehicleID(playerid);
	if(params[0] == playerid) { SCM(playerid, COLOR_GREY, " Нельзя связать самого себя!"); return true; }
	if(IsPlayerInAnyVehicle(playerid) && pData[playerid][pState] == 2 && IsPlayerInVehicle(params[0], car))
	{
		format(cString, 48, " Вас связал %s.",Name(playerid));
		SCM(params[0], 0x6495EDFF, cString);
		format(cString, 64, " %s связал %s", Name(playerid) ,Name(params[0]));
		ProxDetector(30.0, playerid, cString, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		TogglePlayerControllable(params[0], 0);
		TieTime[params[0]] = 300;
		PlayerTied[params[0]] = 1;
	}
	else return SCM(playerid, COLOR_GREY, " Человек не в машине!");
	return true;
}
CMD:repaydebt(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pJob] == 0) return true;
	if(pData[playerid][pDolg] < 50) return SCM(playerid, COLOR_GRAD1, " Не достаточная сумма, для возврата долга!");
	switch(pData[playerid][pKrisha])
	{
	case 6:
		{
			SCM(playerid, COLOR_YELLOW, " Долг был возвращён мафии Yakuza!");
			format(cString, sizeof(cString), " %s вернул долг в размере %s вирт",pData[playerid][pName],pData[playerid][pDolg]);
			SendFamilyMessage(6,COLOR_YELLOW2, cString);
			MafiaBank[0][nYakuza] +=pData[playerid][pDolg] ;
			pData[playerid][pDolg] = 0;
		}
	case 5:
		{
			if(pData[playerid][pDolg] < 50) return SCM(playerid, COLOR_GRAD1, " Не достаточная сумма, для возврата долга!");
			SCM(playerid, COLOR_YELLOW, " Долг был возвращён LCN!");
			format(cString, sizeof(cString), " %s вернул долг в размере %s вирт",pData[playerid][pName],pData[playerid][pDolg]);
			SendFamilyMessage(5,COLOR_YELLOW2, cString);
			MafiaBank[0][nLcn] +=pData[playerid][pDolg];
			pData[playerid][pDolg] = 0;
		}
	case 14:
		{
			if(pData[playerid][pDolg] < 50) return SCM(playerid, COLOR_GRAD1, " Не достаточная сумма, для возврата долга!");
			SCM(playerid, COLOR_YELLOW, " Долг был возвращён Русской мафии!");
			format(cString, sizeof(cString), " %s вернул долг в размере %s вирт",pData[playerid][pName],pData[playerid][pDolg]);
			SendFamilyMessage(14,COLOR_YELLOW2, cString);
			MafiaBank[0][nRm] +=pData[playerid][pDolg] ;
			pData[playerid][pDolg] = 0;
		}
	}
	return true;
}
CMD:mydebts(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pJob] == 0) return true;
	new mafiatext[20];
	if(pData[playerid][pKrisha] == 6) { mafiatext = "Yakuza"; }
	else if(pData[playerid][pKrisha] == 14) { mafiatext = "RM"; }
	else if(pData[playerid][pKrisha] == 5) { mafiatext = "LCN"; }
	else if(pData[playerid][pKrisha] == 0) { mafiatext = "Нет"; }
	format(cString,sizeof(cString), "Крыша: %s\nДолг: %i вирт",
	mafiatext,pData[playerid][pDolg]);
	ShowPlayerDialog(playerid,69,DIALOG_STYLE_MSGBOX, "Информация о себе",cString, "Готово", "");
	return true;
}
CMD:debtors(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(!IsAMafia(playerid)) return true;
	if(pData[playerid][pRank] < 6) return SendClientMessage(playerid, COLOR_GREY, "Вам не доступна данная команда");
	
	new wlevel[2];
	new szQuery[1024];
	szQuery[0] = EOS;
	strcat(szQuery,"{FFFFFF}Псевдоним\t{FFFFFF}Долг\n",1024);
	foreach(new i: Player)
	{
		if(pData[i][pKrisha] == pData[playerid][pMember])
		{
			format(wlevel,sizeof(wlevel),"%i",pData[i][pDolg]);
			strcat(szQuery,Name(i),1024);
			strcat(szQuery,"\t",1024);
			strcat(szQuery,wlevel,1024);
			strcat(szQuery,"\n",1024);
		}
	}
	ShowPlayerDialog(playerid, 0,DIALOG_STYLE_TABLIST_HEADERS, "Должники", szQuery, "Закрыть", "");
	return true;
}
CMD:setdebt(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(!IsAMafia(playerid)) return true;
	if(pData[playerid][pRank] < 3) return SCM(playerid, COLOR_GREY, " Вам не доступна данная команда");
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /setdebt [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, " Игрок должен находиться рядом с вами");
	if(pData[params[0]][pJob] == 0) return SCM(playerid, COLOR_GREY, " Данный человек не работает");
	if(params[0] == playerid) { SCM(playerid, COLOR_GREY, " Нельзя себе!"); return true; }
	format(cString, sizeof(cString), " %s предлагает вам Крышу ((  Введите: /accept debt, чтобы принять ))",Name(playerid));
	SCM(params[0], 0x6495EDFF, cString);
	format(cString, sizeof(cString), " %s предлагает крышу %s'у", Name(playerid) ,Name(params[0]));
	ProxDetector(30.0, playerid, cString, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	Krisha[params[0]] = pData[playerid][pMember];
	KrishaOffer[params[0]] = playerid;
	return true;
}
CMD:untie(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(!IsAMafia(playerid) && pData[playerid][pMember] != 2) return true;
	if(pData[playerid][pRank] < 3) return SCM(playerid, COLOR_GREY, " Вы должны быть 3 рангом");
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /untie [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PlayerTied[params[0]] != 1) return SCM(playerid, COLOR_GREY, " Человек уже связан!");
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	if(params[0] == playerid) { SCM(playerid, COLOR_GREY, " Нельзя связать самого себя!"); return true; }
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	format(cString, sizeof(cString), " Вы были развязаны %s.",Name(playerid));
	SCM(params[0], 0x6495EDFF, cString);
	format(cString, sizeof(cString), " %s развязал %s", Name(playerid) ,Name(params[0]));
	ProxDetector(30.0, playerid, cString, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	TogglePlayerControllable(params[0], 1);
	TieTime[params[0]] = 0;
	PlayerTied[params[0]] = 0;
	return true;
}
CMD:showpass(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	new giveplayerid;
	if(sscanf(params, "u",giveplayerid)) return  	SCM(playerid, COLOR_WHITE, " Введите: /showpass [id]");
	if(!IsPlayerConnected(giveplayerid) || !pData[giveplayerid][pLogin]) return SCM(playerid,COLOR_GREY," Игрок оффлайн");
	if(!ProxDetectorS(8.0, playerid, giveplayerid)) return SCM(playerid,COLOR_GREY," Игрок должен быть рядом с вами");
	new ttext[32];

	switch(pData[playerid][pMember])
	{
		case 1:  ttext = "LSPD";
		case 2:  ttext = "ФБР";
		case 3:  ttext = "Армия СФ";
		case 7:  ttext = "Мэрия";
		case 9:  ttext = "SF News";
		case 10: ttext = "SFPD";
		case 11: ttext = "Автошкола";
		case 16: ttext = "LS News";
		case 19: ttext = "Армия ЛВ";
		case 20: ttext = "LV News";
		case 21: ttext = "LVPD";
		case 22: ttext = "Медики";
		default: ttext = "Неизвестно";
	}
	new jtext[32];
	if(pData[playerid][pJob] == 1) { jtext = "Водитель автобуса"; }
	else if(pData[playerid][pJob] == 2) { jtext = "Механик"; }
	else if(pData[playerid][pJob] == 3) { jtext = "Продавец хотдогов"; }
	else if(pData[playerid][pJob] == 4) { jtext = "Таксист"; }
	else if(pData[playerid][pJob] == 6) { jtext = "Тренер"; }
	else if(pData[playerid][pJob] == 8) { jtext = "Инкассатор"; }
	else if(pData[playerid][pJob] == 9) { jtext = "Прораб"; }
	else if(pData[playerid][pJob] == 99) { jtext = "Дальнобойщик"; }
	else { jtext = "Безработный"; }
	new rangz[40];
	if(IsAGang(playerid) || IsAMafia(playerid) || !pData[playerid][pMember]) rangz = "Неизвестно";
	else strmid(rangz,GetRank(playerid), 0, strlen(GetRank(playerid)), 32);
	new level = pData[playerid][pLevel];
	new af[] = "---------===[PASSPORT]===---------";
	format(string, 128, af);
	SCM(giveplayerid, COLOR_YELLOW, string);
	new msg[] = "Имя: %s";
	format(string, 128, msg, Name(playerid));
	SCM(giveplayerid, COLOR_YELLOW2, string);
	format(string, 128, " Возраст: %i  Телефон: %i",level,pData[playerid][pPnumber]);
	SCM(giveplayerid, COLOR_YELLOW2, string);
	format(string, 128, " Фракция: %s  Должность: %s",ttext,rangz);
	SCM(giveplayerid, COLOR_YELLOW2, string);
	format(string, 128, " Работа: %s   Разрешение на оружие: %s",jtext,(!PlayerLicenses(playerid, LICENSES_GET, LIC_WEAPONS))?("Нет") : ("Есть"));
	SCM(giveplayerid, COLOR_YELLOW2, string);
	format(string, 128, " Преступлений: %i",pData[playerid][pCrimes]);
	SCM(giveplayerid, COLOR_YELLOW2, string);
	format(string, 128, " Законопослушность: %i",pData[playerid][pZakonp]);
	SCM(giveplayerid, COLOR_YELLOW2, string);
	format(string, 128, " ========================");
	SCM(giveplayerid, COLOR_YELLOW, string);
	if(pData[playerid][pWantedLevel] > 0) SCM(giveplayerid, COLOR_REDD, " Внимание!  Этот человек в розыске!");
	format(string,128, " показал свой паспорт %s'у",Name(giveplayerid));
	SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
	format(string, 128, " %s показал(a) свой паспорт", Name(playerid));
	return ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
}
CMD:showudost(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(!IsACop(playerid)) return true;
	if(sscanf(params, "u",params[0])) return	SCM(playerid, COLOR_WHITE, " Введите: /showudost [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	new ttext[32];
	if(pData[playerid][pMember] == 0) { ttext = "Гражданин"; }
	else if(pData[playerid][pMember] == 1) { ttext = "LSPD"; }
	else if(pData[playerid][pMember] == 2) { ttext = "ФБР"; }
	else if(pData[playerid][pMember] == 10) { ttext = "SFPD"; }
	else if(pData[playerid][pMember] == 21) { ttext = "LVPD"; }
	new rank = pData[playerid][pRank];
	new level = pData[playerid][pLevel];
	new msg[] = "Имя: %s\nТелефон: %i\nВозраст: %i\nПодразделение: %s\nРанг: %i";
	format(YCMDstr, sizeof(YCMDstr), msg,Name(playerid),pData[playerid][pPnumber],level,ttext,rank);
	ShowPlayerDialog(params[0], 69, DIALOG_STYLE_MSGBOX, "Удостоверение",YCMDstr, "Готово", "");
	format(YCMDstr, sizeof(YCMDstr), "%s показал своё удостоверение %s'у",Name(playerid),Name(params[0]));
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	format(YCMDstr,sizeof(YCMDstr), "показал своё удостоверение %s'у",Name(params[0]));
	SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
	return true;
}
CMD:gzcolor(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 10 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid,-1, " Введите: /gzcolor [банда]");
	for(new i = 1; i <= TOTALGZ; i++)
	{
		if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
		{
			GZInfo[i][gFrakVlad] = params[0];
			GangZoneStopFlashForAll(GZInfo[i][gZone]);
			GangZoneHideForAll(GZInfo[i][gZone]);
			GangZoneShowForAll(GZInfo[i][gZone],GetGangZoneColor(i));
			UpdateTable_int(TABLE_GANGZONE,"gang_owner",GZInfo[i][gFrakVlad],"id",GZInfo[i][gID]);
			return true;
		}
	}
	return true;
}
CMD:sellekey(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(sscanf(params, "udd", params[0],params[1])) return SCM(playerid, COLOR_WHITE, " Введите: /sellekey [playerid] [Цена]");
	if(params[1] < 1 || params[1] > 20000) { SCM(playerid, COLOR_GREY, " Цена не может быть меньше 1 и больше 20000 вирт!"); return true; }
	if(pData[params[0]][pCash] < params[1]) return SCM(playerid, COLOR_GREY, " У этого человека нет столько денег");
	if(pData[playerid][pKeys] < 1) { SCM(playerid, COLOR_GREY, " У вас нет ключей от камеры"); return true; }
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid,COLOR_GREY," Рядом с вами никого нет");
	if(pData[params[0]][pKeys] >= 5)return SCM(playerid,COLOR_GREEN, " У игрока уже имеется 5 ключей!");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, " Ошибка.  Вы указали свой ID");
	format(cString, sizeof(cString), " Вы предложили %s купить ключ от тюремной камеры за %i вирт",Name(params[0]),params[1]);
	SCM(playerid, 0x0073B7AA, cString);
	format(cString, sizeof(cString), "  %s предложил(а) вам ключ от тюремной камеры за %i вирт. {FFFFFF}(( Введите (/ac)cept ekey для покупки ))",Name(playerid),params[1]);
	SCM(params[0], 0x0073B7AA, cString);
	KeysOffer[params[0]] = playerid;
	KeysPrice[params[0]] = params[1];
	return true;
}
CMD:tazerall(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pMember] != 2 || pData[playerid][pMember] == 2 && pData[playerid][pRank] < 3 && pData[playerid][pAdmin] < 1) return true;
	params[0] = GetClosestforeach(playerid);
	if(!ProxDetectorS(6.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, " Нет никого рядом");
	if(IsPlayerInAnyVehicle(playerid)) return  SCM(playerid, COLOR_GREY, " Невозможно использовать в машине");
	format(cString, 64, " Агент FBI %s оглушил всех на 15 секунд",Name(playerid));
	ProxDetector(30.0, playerid, cString, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	TogglePlayerControllable(params[0], 0);
	SetPlayerSpecialAction(params[0],SPECIAL_ACTION_HANDSUP);
	PlayerCuffed[params[0]] = 1;
	PlayerCuffedTime[params[0]] = 15;
	return true;
}
CMD:atazer(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(!dostup[playerid]) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid,COLOR_WHITE," Введите: /atazer [1/2/3]");
	if(params[0] == 1)
	{
		format(cString, 52, " %s оглушил всех",Name(playerid));
		ProxDetector(20.0, playerid, cString, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		foreach(new i: Player)
		{
			new Float:X,Float:Y,Float:Z;
			AntiCheatGetPos(playerid,X,Y,Z);
			if(IsPlayerInRangeOfPoint(i,20,X,Y,Z) && i != playerid)
			{
				TogglePlayerControllable(i,0);
				SCM(i,-1," Вы заморожены на 10 секунд");
				SetPlayerSpecialAction(i,SPECIAL_ACTION_HANDSUP);
				SetTimerEx("UnFreeze", 10000, 0, "i", i);
			}
		}
	}
	else if(params[0] == 2)
	{
		format(cString, 64, " %s оглушил всех рядомстоящих законников",Name(playerid));
		ProxDetector(20.0, playerid, cString, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		foreach(new i: Player)
		{
			new Float:X,Float:Y,Float:Z;
			AntiCheatGetPos(playerid,X,Y,Z);
			if(IsPlayerInRangeOfPoint(i,20,X,Y,Z) && i != playerid)
			{
				if(pData[i][pMember] == 1 || pData[i][pLeader] == 1 ||pData[i][pMember] == 2 || pData[i][pLeader] == 2 ||pData[i][pMember] == 3 || pData[i][pLeader] == 3)
				{
					TogglePlayerControllable(i,0);
					SCM(i,-1," Вы заморожены на 10 секунд");
					SetPlayerSpecialAction(i,SPECIAL_ACTION_HANDSUP);
					SetTimerEx("UnFreeze", 10000, 0, "i", i);
				}
			}
		}
	}
	else if(params[0] == 3)
	{
		format(cString, sizeof(cString), " %s оглушил всех рядомстоящих жителей", Name(playerid));
		ProxDetector(20.0, playerid, cString, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		foreach(new i: Player)
		{
			new Float:X,Float:Y,Float:Z;
			AntiCheatGetPos(playerid,X,Y,Z);
			if(IsPlayerInRangeOfPoint(i,20,X,Y,Z) && i != playerid)
			{
				TogglePlayerControllable(i,0);
				SCM(i,-1," Вы заморожены на 10 секунд");
				SetPlayerSpecialAction(i,SPECIAL_ACTION_HANDSUP);
				SetTimerEx("UnFreeze", 10000, 0, "i", i);
			}
		}
	}
	else return SCM(playerid,COLOR_GREY," Неверное число");
	return true;
}
CMD:ftazer(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pMember] != 2 && pData[playerid][pLeader] != 2) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid,COLOR_WHITE," Введите: /ftazer [1/2/3]");
	if(params[0] == 1)
	{
		format(cString, sizeof(cString), " Агент FBI %s оглушил всех",Name(playerid));
		ProxDetector(20.0, playerid, cString, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		foreach(new i: Player)
		{
			new Float:X,Float:Y,Float:Z;
			AntiCheatGetPos(playerid,X,Y,Z);
			if(IsPlayerInRangeOfPoint(i,20,X,Y,Z) && i != playerid)
			{
				TogglePlayerControllable(i,0);
				SCM(i,-1," Вы заморожены на 10 секунд");
				SetPlayerSpecialAction(i,SPECIAL_ACTION_HANDSUP);
				SetTimerEx("UnFreeze", 10000, 0, "i", i);
			}
		}
	}
	else if(params[0] == 2)
	{
		format(cString, sizeof(cString), " Агент FBI %s оглушил всех рядомстоящих законников",Name(playerid));
		ProxDetector(20.0, playerid, cString, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		foreach(new i: Player)
		{
			new Float:X,Float:Y,Float:Z;
			AntiCheatGetPos(playerid,X,Y,Z);
			if(IsPlayerInRangeOfPoint(i,20,X,Y,Z) && i != playerid)
			{
				if(IsAArm(i) || IsAFbi(i) || IsACop(i))
				{
					TogglePlayerControllable(i,0);
					SCM(i,-1," Вы заморожены на 10 секунд");
					SetPlayerSpecialAction(i,SPECIAL_ACTION_HANDSUP);
					SetTimerEx("UnFreeze", 10000, 0, "i", i);
				}
			}
		}
	}
	else if(params[0] == 3)
	{
		format(cString, sizeof(cString), " Агент FBI %s оглушил всех рядомстоящих жителей", Name(playerid));
		ProxDetector(20.0, playerid, cString, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		foreach(new i: Player)
		{
			new Float:X,Float:Y,Float:Z;
			AntiCheatGetPos(playerid,X,Y,Z);
			if(IsPlayerInRangeOfPoint(i,20,X,Y,Z) && i != playerid)
			{
				if(!IsAArm(i) && !IsAFbi(i) && !IsACop(i))
				{
					TogglePlayerControllable(i,0);
					SCM(i,-1," Вы заморожены на 10 секунд");
					SetPlayerSpecialAction(i,SPECIAL_ACTION_HANDSUP);
					SetTimerEx("UnFreeze", 10000, 0, "i", i);
				}
			}
		}
	}
	else return SCM(playerid,COLOR_GREY," Неверное число");
	return true;
}
CMD:tazer(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(IsACop(playerid) || IsAFbi(playerid) || IsAMayor(playerid))
	{
		if( !(GetPlayerWeapon(playerid) == 24 || GetPlayerWeapon(playerid) == 25) )
			return 1;
		if(NewTazer[playerid] == false)
		{
			NewTazer[playerid] = true;
			SCM(playerid,COLOR_BLUE," Вы поменяли пули на резиновые");
			SCM(playerid,COLOR_BLUE," Для быстрой смены пуль, зажмите клавижу ПРОБЕЛ");
		}
		else
		{
			NewTazer[playerid] = false;
			SCM(playerid,COLOR_BLUE," Вы поменяли пули на обычные");
			SCM(playerid,COLOR_BLUE," Для быстрой смены пуль, зажмите клавижу ПРОБЕЛ");
		}
	}
	return true;
}
CMD:itazer(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pMember] != 11 || !GetPVarInt(playerid,"Fraction_Duty")) return SCM(playerid,COLOR_GREY," Вам не доступна данная команда");
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_GREY, " Невозможно использовать в машине");
	new suspect = GetClosestforeach(playerid);
	if(PlayerCuffed[suspect] > 0) return SCM(playerid, COLOR_GREY, " Игрок уже в наручниках!");
	if(GetDistanceBetweenPlayerss(playerid,suspect) < 5)
	{
		if(IsACop(suspect)) return SCM(playerid, COLOR_GREY, " Вы не можете ударить тазером законника");
		if(IsPlayerInAnyVehicle(suspect)) return SCM(playerid, COLOR_GREY, " Человек в машине!");
		format(cString, sizeof(cString), " Вас обездвижил электрошокером %s на 15 секунд",Name(playerid));
		SCM(suspect, 0x6495EDFF, cString);
		format(cString, sizeof(cString), " Вы обездвижили электрошокером %s на 15 секунд",Name(suspect));
		SCM(playerid, 0x6495EDFF, cString);
		format(cString, sizeof(cString), " Инуструктор %s обезвредил %s", Name(playerid) ,Name(suspect));
		ProxDetector(30.0, playerid, cString, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		TogglePlayerControllable(suspect, 0);
		SetPlayerSpecialAction(suspect,SPECIAL_ACTION_HANDSUP);
		PlayerCuffed[suspect] = 1;
		PlayerCuffedTime[suspect] = 15;
	}
	return true;
}
CMD:breathalyser(playerid, params[])
{
	if(!IsPlayerConnected(playerid)) return true;
	if(!IsACop(playerid)) return true;
	if(sscanf(params, "u", params[0])) return SCM(playerid, -1, " Введите: (/bh) /breathalyser [ид]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, " Игрок оффлайн");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, " Необходимо находиться рядом друг с другом");
	new bh[64], patrol[144];
	if(GetPlayerDrunkLevel(params[0]) > 0) format(bh, sizeof(bh), " %s пьяный", pData[params[0]][pName]);
	else format(bh, sizeof(bh), " %s трезвый", pData[params[0]][pName]);
	SCM(playerid, 0x6ab1ffaa, bh), SCM(params[0], 0x6ab1ffaa, bh);
	format(patrol, sizeof(patrol), " Патрульный %s протянул(а) %s алкометр для проверки", pData[playerid][pName], pData[params[0]][pName]);
	ProxDetector(30.0, playerid, patrol, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return true;
}
CMD:follow(playerid,params[])
{
	if(GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 1 || GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 2 || GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 10 || GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 21)
	{
		if(sscanf(params,"d",params[0])) return SCM(playerid,COLOR_WHITE, " Введите: /follow [playerid]");
		if(playerid == params[0]) return SCM(playerid, COLOR_GREY, " Нельзя использовать на себе");
		if(!ProxDetectorS(3.0,playerid,params[0]) || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SCM(playerid,COLOR_GREY, " Необходимо находится рядом друг с другом");
		if(IsPlayerInAnyVehicle(params[0])) return SCM(playerid, COLOR_GREY, " Игрок не должен находиться в автомобиле");
		if(PlayerCuffed[params[0]] != 2) return SCM(playerid, COLOR_GREY, " Игрок должен быть в наручниках");
		new konv = GetPVarInt(playerid, "TempConvoi");
		if(TimerForPlayer[params[0]] != -1) KillTimer(TimerForPlayer[params[0]]);
		if(params[0] == konv)
		{
			SetPVarInt(playerid, "TempConvoi", -1);
			Convoi[params[0]] = 9999;
			TimerForPlayer[params[0]] = -1;
			ClearAnim(params[0]);
			TogglePlayerControllable(params[0], 0);
			return 	GameTextForPlayer(params[0],"~g~unfollow", 5000, 3);
		}
		if(konv != -1) return SCM(playerid, COLOR_GREY, " Вы уже кого-то сопровождаете");
		Convoi[params[0]] = playerid;
		SetPVarInt(playerid, "TempConvoi", params[0]);

		TimerForPlayer[params[0]] = SetTimerEx("ConvoiToPlayer", 250, 1, "i", params[0]);
		GameTextForPlayer(params[0],"~r~follow", 5000, 3);
		TogglePlayerControllable(params[0], 1);
	}
	return true;
}
CMD:cuff(playerid, params[])
{
	if(GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 1 || GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 2 || GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 10 || GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 21)
	{
		if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /cuff [playerid]");
		if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid,COLOR_GREY," Вы находитесь в автомобиле");
		if(!IsPlayerConnected(params[0])) return true;
		if(pData[params[0]][pWantedLevel] < 1) return SCM(playerid,COLOR_GREY," Этот человек не в розыске");
		if(IsACop(params[0]) || IsAFbi(params[0])) return SCM(playerid, COLOR_GREY, " Вы не можете надеть наручники на законника");
		if(PlayerCuffed[params[0]] == 2) return    SCM(playerid, COLOR_GREY, " Игрок уже в наручниках");
		if(!ProxDetectorS(8.0, playerid, params[0])) return true;
		if(params[0] == playerid) { SCM(playerid, COLOR_GREY, " Нельзя надеть на себя наручники"); return true; }
		format(cString, sizeof(cString), " %s надел вам наручники",Name(playerid));
		SCM(params[0], 0x6495EDFF, cString);
		GameTextForPlayer(params[0],"~r~cuffed", 5000, 3);
		format(cString, sizeof(cString), " Вы надели наручники на %s", Name(params[0]));
		SCM(playerid, 0x6495EDFF, cString);
		format(cString, sizeof(cString), " %s надел наручники %s",Name(playerid),Name(params[0]));
		SetPlayerAttachedObject(params[0], 0, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
		SetPlayerSpecialAction(params[0],SPECIAL_ACTION_CUFFED);
		ProxDetector(30.0, playerid, cString, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		TogglePlayerControllable(params[0], 0);
		PlayerCuffed[params[0]] = 2;
		PlayerCuffedTime[params[0]] = 3600;
		cuffto[playerid] = params[0];
	}
	return true;
}
CMD:uncuff(playerid, params[])
{
	if(GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 1 || GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 2 || GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 10 || GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 21)
	{
		if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /uncuff [playerid]");
		if(!IsPlayerConnected(params[0])) return true;
		if(IsACop(params[0])) return SCM(playerid, COLOR_GREY, " Вы не можете снять наручники с законника");
		if(PlayerCuffed[params[0]] != 2) return    SCM(playerid, COLOR_GREY, " Игрок не в наручниках");
		if(!ProxDetectorS(8.0, playerid, params[0])) return true;
		if(params[0] == playerid) { SCM(playerid, COLOR_GREY, " Вы не можете снять наручники с самого себя"); return true; }
		GameTextForPlayer(params[0],"~g~uncuffed", 5000, 3);
		format(cString, sizeof(cString), " Вы сняли наручники с %s", Name(params[0]));
		SCM(playerid, 0x6495EDFF, cString);
		new konv = GetPVarInt(playerid, "TempConvoi");
		if(params[0] == konv)
		{
			SetPVarInt(playerid, "TempConvoi", -1);
			Convoi[params[0]] = 9999;
			if(TimerForPlayer[params[0]] != -1) KillTimer(TimerForPlayer[params[0]]);
			TimerForPlayer[params[0]] = -1;
			TogglePlayerControllable(params[0], 0);
		}
		TogglePlayerControllable(params[0], 1);
		SetPlayerSpecialAction(params[0],SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(params[0],0);
		PlayerCuffed[params[0]] = 0;
		PlayerCuffedTime[params[0]] = 0;
		cuffto[playerid] = 9999;
	}
	return true;
}


CMD:cput(playerid, params[])
{
	if(!IsACop(playerid) && !IsAFbi(playerid)) return true;
	if(sscanf(params, "ui", params[0], params[1])) return SCM(playerid, COLOR_WHITE, " Введите: /cput [playerid] [1 - 3]");
	else if(params[0] == INVALID_PLAYER_ID) return true;
	else if(params[0] == playerid) return true;
	else if(!(1 <= params[1] <= 3)) return SCM(playerid, COLOR_WHITE, " Введите: /cput [playerid] [1 - 3]");
	else if(pData[playerid][pState] != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_GRAD1, " [Ошибка] Вы должны находиться в автомобиле");
	else if(pData[params[0]][pState] != PLAYER_STATE_ONFOOT) return SCM(playerid, COLOR_GRAD1, " [Ошибка] Человек в автомобиле");
	else if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_GRAD1, " [Ошибка] Человек далеко от вас");
	
	new tmpcar = GetPlayerVehicleID(playerid);
	if(!IsACopCar(tmpcar) && !IsAFbiCar(tmpcar)) return SCM(playerid, COLOR_GRAD1, " [Ошибка] Вы должны находиться в патрульной машине");
	
	SetPlayerSpecialAction(params[0],SPECIAL_ACTION_NONE);
	PutPlayerInVehicle(params[0],GetPlayerVehicleID(playerid) , params[1]);// античит
	SetPlayerArmedWeapon(params[0],0);
	
	format(cString,sizeof(cString), " Вы были посажены в машину офицером / агентом FBI %s",Name(playerid));
	SCM(params[0],0x64E96EDFF,cString);
	format(cString,sizeof(cString), "  Вы посадили в машину преступника %s",Name(params[0]));
	SCM(playerid,0x64E96EDFF,cString);
	return true;
}

CMD:deject(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 1 || GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 2 || GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 10 || GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 21)
	{
		new giveplayerid;
		if(sscanf(params, "u",giveplayerid)) return  SCM(playerid, COLOR_WHITE, " Введите: /deject [playerid]");
		if(!IsPlayerConnected(giveplayerid)) return true;
		if(giveplayerid == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GRAD1, " [Ошибка] Человек не был найден");
		if(!IsPlayerInAnyVehicle(giveplayerid)) return SCM(playerid, COLOR_GRAD1, " [Ошибка] Человек не в машине");
		new Float:x,Float:y,Float:z;
		AntiCheatGetPos(giveplayerid,x,y,z);
		if(!IsPlayerInRangeOfPoint(playerid,7.0,x,y,z)) return SCM(playerid, COLOR_GRAD1, " [Ошибка] Человек далеко от вас!");
		RemovePlayerFromVehicle(giveplayerid);
		format(string,128, " Вас вытащил %s",Name(playerid));
		SCM(giveplayerid,0x64E96EDFF,string);
		format(string,128, " Вы вытащили из машины %s",Name(giveplayerid));
		SCM(playerid,0x64E96EDFF,string);
		format(string,128, " Вытащил(а) из машины %s",Name(giveplayerid));
		SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
	}
	return true;
}

CMD:ceject(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 1 || GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 2 || GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 10 || GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] == 21)
	{
		new giveplayerid;
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 596 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 597 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 598 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 490 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 560 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 415 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 521) return SCM(playerid, COLOR_GRAD1, " [Ошибка] Вы не в патрульной машине");
		if(sscanf(params, "u",giveplayerid)) return  SCM(playerid, COLOR_WHITE, " Введите: /ceject [playerid]");
		if(!IsPlayerConnected(giveplayerid)) return true;
		if(giveplayerid == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GRAD1, " [Ошибка] Человек не был найден");
		if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(giveplayerid)) return SCM(playerid, COLOR_GRAD1, " [Ошибка] Человек не в вашей машине");
		RemovePlayerFromVehicle(giveplayerid);
		if(IsPlayerInRangeOfPoint(giveplayerid,5.0,1568.6144,-1689.9901,6.2188))
		{
			SetPlayerInterior(giveplayerid,6);
			SetPlayerPos(giveplayerid,268.4186,77.6443,1001.0391);
			SetPlayerFacingAngle(giveplayerid, 85.7670);
			format(string,128, " Вы были высажены с машины офицером %s в участок Лос Сантоса",Name(playerid));
			SCM(giveplayerid,0x64E96EDFF,string);
			format(string,128, " Вы высадили подозреваемого %s в полицейский участок Лос Сантоса",Name(giveplayerid));
			SCM(playerid,0x64E96EDFF,string);
			format(string,128, " Затолкал(а) подозреваемого %s в полицейский участок",Name(giveplayerid));
			SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
		}
		else if(IsPlayerInRangeOfPoint(giveplayerid,5.0,-1594.2096,716.1803,-4.9063))
		{
			SetPlayerInterior(giveplayerid,10);
			SetPlayerPos(giveplayerid,220.1259,114.6476,999.0156);
			SetPlayerFacingAngle(giveplayerid, 95.3400);
			format(string,128, " Вы были высажены с машины офицером %s в участок Сан Фиеро",Name(playerid));
			SCM(giveplayerid,0x64E96EDFF,string);
			format(string,128, " Вы высадили подозреваемого %s в полицейский участок Сан Фиерро",Name(giveplayerid));
			SCM(playerid,0x64E96EDFF,string);
			format(string,128, " Затолкал(а) подозреваемого %s в полицейский участок",Name(giveplayerid));
			SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
		}
		else if(IsPlayerInRangeOfPoint(giveplayerid,5.0,2297.1138,2451.4346,10.8203))
		{
			SetPlayerInterior(giveplayerid,3);
			SetPlayerVirtualWorld(giveplayerid, 122);
			SetPlayerPos(giveplayerid,198.1339,158.4835,1003.0234);
			SetPlayerFacingAngle(giveplayerid, 354.8164);
			format(string,128, " Вы были высажены с машины офицером %s в участок Лас Вентурас",Name(playerid));
			SCM(giveplayerid,0x64E96EDFF,string);
			format(string,128, " Вы высадили подозреваемого %s в полицейский участок Лас Вентурас",Name(giveplayerid));
			SCM(playerid,0x64E96EDFF,string);
			format(string,128, " Затолкал(а) подозреваемого %s в полицейский участок",Name(giveplayerid));
			SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
		}
		else
		{
			format(string,128, "Вы были высажены с машины офицером/агентом ФБР %s",Name(playerid));
			SCM(giveplayerid,0x64E96EDFF,string);
			format(string,128, "Вы вытащили с машины подозреваемого %s",Name(giveplayerid));
			SCM(playerid,0x64E96EDFF,string);
			format(string,128, "Вытащил(а) из машины подозреваемого %s",Name(giveplayerid));
			SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
		}
	}
	return true;
}
CMD:find(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pMember] != 2)return SCM(playerid, COLOR_GREY, " Вы не агент FBI");
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /find [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, " [Ошибка]  Вы указали свой ID");
	if(CallInfo[params[0]][callused] == 0 || PhoneOnline[params[0]] > 0) return SCM(playerid,COLOR_GREY," Не удается соединиться!");
	if(pData[params[0]][pWantedLevel] < 1) return SCM(playerid, COLOR_GREY, " Этот человек не в розыске!");
	
	{
	    new
		Float:X,
		Float:Y,
		Float:Z;
		
		AntiCheatGetPos(params[0], X, Y, Z);
		GPS_ON(playerid, X, Y, Z);
	}
	return true;
}
CMD:spy(playerid, params[])
{
	if(pData[playerid][pMember] != 2 || pData[playerid][pRank] < 6) return SCM(playerid, -1, "Доступно с 6 ранга");
	if(sscanf(params, "d", params[0])) return SCM(playerid, -1, " Введите: /spy [id] - /spyoff чтобы забрать возможность шпионить");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, -1, " Игрок не найден");
	if(!IsAFbi(params[0])) return SCM(playerid, -1, "Разрешить шпионить можно только агентам FBI");
	SmenaSkina[playerid] = params[0];
	format(cString, 80, " %s собирается дать %s возможность шпионить", pData[playerid][pName], pData[params[0]][pName]);
	SendFamilyMessage(2, 0x00b953ff, cString);
	ShowPlayerDialog(playerid, 50, DIALOG_STYLE_LIST, "Выберите фракцию", "Бомжи\nПолиция\nАрмия\nМЧС\nМэрия\nАвтошкола\nNews\nLCN\nYakuza\nRussian Mafia\nRifa\nGrove street\nBallas\nVagos\nAztec", "Выбрать", "Отмена");
	return true;
}
CMD:spyoff(playerid, params[])
{
	if(pData[playerid][pMember] != 2 || pData[playerid][pRank] < 6) return SCM(playerid, -1, "Доступно с 6 ранга");
	if(sscanf(params, "d", params[0])) return SCM(playerid, -1, " Введите: /spyoff [id]");
	if(pData[params[0]][pMember] != 2) return SCM(playerid,COLOR_GREY," Данный игрок не состоит в FBI");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, -1, " Игрок не найден");
	format(cString, 80, " %s забрал у %s возможность шпионить", pData[playerid][pName], pData[params[0]][pName]);
	SendFamilyMessage(2, 0x00b953ff, cString);
	SetPlayerSkin(params[0], pData[params[0]][pModel]);
	SetPlayerToTeamColor(params[0]);
	SetPlayerArmour(params[0],0.0);
	return true;
}
CMD:tjail(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(!IsPlayerConnected(playerid)) return true;
	if(pData[playerid][pAdmin] < 1) return true;
	if(dostup[playerid] != 1) return true;
	if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /tjail [playerid]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, " Игрок не найден");
	format(cString, 42, " Игрок выйдет из тюрьмы через %i секунд", pData[params[0]][pJailTime]-10);
	SCM(playerid, COLOR_WHITE, cString);
	return true;
}
CMD:atipster(playerid, params[])
{
	if(dostup[playerid] != 1) return true;
	if(pData[playerid][pAdmin] < 1) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /atisper [id фракции]");
	if(params[0] > 23 || params[0] < 0) return SCM(playerid, COLOR_GREY, " Нельзя меньше 0 или больше 23");
	SetPVarInt(playerid,"Atisper",params[0]);
	if(params[0] == 0) SCM(playerid, COLOR_WHITE, " Прослушка отключена");
	else SCM(playerid, COLOR_WHITE, " Прослушка включена, для отключения введите /atisper 0");
	return true;
}
CMD:tipster(playerid, params[])
{
	new param[40];
	if(pData[playerid][pLogin] == false) return true;
	if(!IsAFbi(playerid))return SCM(playerid, COLOR_GREY, " Вы не полицейский/агент FBI");
	if(sscanf( params, "s[32]S()[64]", param, params ))
	{
		SCM(playerid, COLOR_WHITE, " Введите: /tipster [действие]. Доступные действия:");
		SCM(playerid, COLOR_WHITE, "  GET - Взять жучёк.");
		SCM(playerid, COLOR_WHITE, "  SET - Прикрепить жучёк к игроку");
		SCM(playerid, COLOR_WHITE, "  REMOVE - Деактивировать жучёк");
		SCM(playerid, COLOR_WHITE, "  LISTEN - Начать прослушивание чата фракции");
		return true;
	}
	if(!strcmp(param, "get",true))
	{
		if(GetPlayerVehicleID(playerid) >= fbicar[0] && GetPlayerVehicleID(playerid) <= fbicar[16]) {}
		else return SCM(playerid,COLOR_GREY," Вы должны находиться в автомобиле FBI");
		if(tipster[playerid]) return SCM(playerid,COLOR_ISPOLZUY," У вас уже есть жучёк");
		tipster[playerid] = 1;
		format(cString,48,"%s взял(а) жучёк",Name(playerid));
		SendRadioMessage(2,0x00b953ff, cString);
	}
	else if(!strcmp(param, "set",true))
	{
		new ammo;
		if(sscanf( params, "u", ammo ) ) return SCM(playerid, COLOR_WHITE, " Введите: /tipster SET [playerid]");
		if(!tipster[playerid]) return SCM(playerid,COLOR_ISPOLZUY," У вас нет жучка");
		if(!ProxDetectorS(2.0, playerid, ammo)) return SCM(playerid,COLOR_ISPOLZUY," Игрок далеко от вас");
		if(tipsteron != -1) return SCM(playerid,COLOR_ISPOLZUY," Жучёк уже прикреплен! Используйте /tipster REMOVE");
		if(!pData[ammo][pMember]) return SCM(playerid,COLOR_ISPOLZUY," Игрок не состоит в организации");
		tipster[playerid] = 0;
		tipsteron = pData[ammo][pMember];
		tipsterplayer = ammo;
		format(cString,sizeof(cString)," %s установил(а) жучёк на %s. Чтобы подключиться к волне, введите /tipster listen",Name(playerid),Name(ammo));
		SendRadioMessage(2,0x00b953ff, cString);
	}
	else if(!strcmp(param, "remove",true))
	{
		if(tipsteron == -1) return SCM(playerid,COLOR_ISPOLZUY," Жучёк не прикреплен!");
		tipsteron = -1;
		tipsterplayer = -1;
		SCM(playerid,0x00b953ff," Вы отключили жучёк!");
	}
	else if(!strcmp(param, "listen",true))
	{
		if(tipsteron == -1) return SCM(playerid,0x00b953ff," Жучёк не прикреплен!");
		if(!tipsterlisten[playerid])
		{
			tipsterlisten[playerid] = 1;
			SCM(playerid,0x00b953ff," Вы включили прослушивание!");
		}
		else
		{
			tipsterlisten[playerid] = 0;
			SCM(playerid,0x00b953ff," Вы отключили прослушивание!");
		}
	}
	return true;
}
CMD:cancel(playerid, params[])
{
	if(!pData[playerid][pLogin]) return true;
	return ShowPlayerDialog(playerid,1757,DIALOG_STYLE_LIST,"Отменить","Нарко (/selldrugs)\nИнтервью\nВызов полиции\nВызов медика\nВызов механика\nВызов такси\nОбмен транспортом (/changecar)\nАвтоугон\nОтмена ставки\nОбмен домом (/changehouse)", "Готово", "Отмена");
}
CMD:accept(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	new x_job[64];
	if(sscanf(params, "s[32]",x_job)) return SCM(playerid, COLOR_WHITE, " Введите: /(ac)cept [значение]");
	if(strcmp(x_job,"gun",true) == 0)
	{
		if(GetPVarInt(playerid,"Sell_Gun") <= 0) return SCM(playerid,COLOR_GREY," Вам не предлагали купить оружие!");
		if(!ProxDetectorS(4.0, playerid, GetPVarInt(playerid,"Sell_GunId"))) return SCM(playerid, COLOR_GREY,"Игрок слишком далеко!");
		if(pData[playerid][pCash] < GetPVarInt(playerid,"Sell_GunPrice")) return SCM(playerid,COLOR_GRAD1, " У вас недостаточно денег");
		pData[playerid][pCash]-=GetPVarInt(playerid,"Sell_GunPrice");
		pData[GetPVarInt(playerid,"Sell_GunId")][pCash]+=GetPVarInt(playerid,"Sell_GunPrice");
		pData[GetPVarInt(playerid,"Sell_GunId")][pMats]-=GetPVarInt(playerid,"Sell_GunMats");
		if(booston == 0) GivePlayerWeaponEx(playerid,GetPVarInt(playerid,"Sell_Gun"),GetPVarInt(playerid,"Sell_GunAmmo"));
		else GivePlayerWeaponEx(playerid,GetPVarInt(playerid,"Sell_Gun"),GetPVarInt(playerid,"Sell_GunAmmo")*3);
		format(string, 128, " %s сделал оружие из материалов %s",Name(GetPVarInt(playerid,"Sell_GunId")),Name(playerid));
		ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		SendMes(GetPVarInt(playerid,"Sell_GunId"),-1,"(( Остаток: %i ))",pData[GetPVarInt(playerid,"Sell_GunId")][pMats]);
		DeletePVar(playerid,"Sell_Gun");
		DeletePVar(playerid,"Sell_GunId");
		DeletePVar(playerid,"Sell_GunAmmo");
		DeletePVar(playerid,"Sell_GunPrice");
		DeletePVar(playerid,"Sell_GunMats");
		return true;
	}
	else if(strcmp(x_job,"livels",true) == 0)
	{
		if(LiveOfferls[playerid] >= 999) return SendClientMessage(playerid, COLOR_GREY, "Вам никто не предлагал дать интервью");
		if(!IsPlayerConnected(LiveOfferls[playerid]) || !pData[LiveOfferls[playerid]][pLogin]) return SendClientMessage(playerid,COLOR_GREY,"Игрок оффлайн");
		if(!ProxDetectorS(5.0, playerid, LiveOfferls[playerid])) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться рядом с репортером");
		OnPlayerEther[playerid] = 17;
		SelectWavesRadio[playerid] = 2;
		LiveOfferls[playerid] = 999;
		SendClientMessage(LiveOfferls[playerid], COLOR_WHITE, " Введите: /live чтобы закончить интервью");
		return SendClientMessage(playerid, COLOR_YELLOW, " Вы даёте интервью в прямом эфире радио Los Santos");
	}
	else if(strcmp(x_job,"livesf",true) == 0)
	{
		if(LiveOffer[playerid] >= 999) return SendClientMessage(playerid, COLOR_GREY, "Вам никто не предлагал дать интервью");
		if(!IsPlayerConnected(LiveOffer[playerid]) || !pData[LiveOffer[playerid]][pLogin]) return SendClientMessage(playerid,COLOR_GREY,"Игрок оффлайн");
		if(!ProxDetectorS(5.0, playerid, LiveOffer[playerid])) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться рядом с репортером");
		SendClientMessage(LiveOffer[playerid], COLOR_WHITE, " Введите: /live чтобы закончить интервью");
		OnPlayerEther[playerid] = 10;
		SelectWavesRadio[playerid] = 1;
		LiveOffer[playerid] = 999;
		return SendClientMessage(playerid, COLOR_YELLOW, " Вы даёте интервью в прямом эфире радио San Fierro");
	}
	else if(strcmp(x_job,"livelv",true) == 0)
	{
		if(LiveOfferlv[playerid] >= 999) return SendClientMessage(playerid, COLOR_GREY, "Вам никто не предлагал дать интервью");
		if(!IsPlayerConnected(LiveOfferlv[playerid]) || !pData[LiveOfferlv[playerid]][pLogin]) return SendClientMessage(playerid,COLOR_GREY,"Игрок оффлайн");
		if(!ProxDetectorS(5.0, playerid, LiveOfferlv[playerid])) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться рядом с репортером");
		SendClientMessage(LiveOfferlv[playerid], COLOR_WHITE, " Введите: /live чтобы закончить интервью");
		OnPlayerEther[playerid] = 21;
		SelectWavesRadio[playerid] = 3;
		LiveOfferlv[playerid] = 999;
		return SendClientMessage(playerid, COLOR_YELLOW, " Вы даёте интервью в прямом эфире радио Las Venturas");
	}
	else if(strcmp(x_job, "debt",true) == 0)
	{
		if(KrishaOffer[playerid] >= 999) return SCM(playerid, COLOR_GREY, " Вам ни кто не предлагал крышу");
		format(string, 128, " Вы приняли крышу от %s'a", Name(KrishaOffer[playerid]));
		SCM(playerid, 0x6495EDFF, string);
		format(string, 128, " %s согласился на вашу крышу", Name(playerid));
		SCM(KrishaOffer[playerid], 0x6495EDFF, string);
		KrishaOffer[playerid] = 999;
		pData[playerid][pKrisha] = Krisha[playerid];
		return true;
	}
	else if(strcmp(x_job, "marriage",true) == 0)
	{
		if(ProposeOffer[playerid] >= 999) return SCM(playerid,COLOR_GREY," Вам никто не предлагал жениться");
		if(!PlayerToPoint(10.0, playerid, -1988.6638,1117.8837,54.4726)) return SCM(playerid, COLOR_GREY, " Вы не у церкви в San Fierro!");
		if(!IsPlayerConnected(ProposeOffer[playerid]) || !pData[ProposeOffer[playerid]][pLogin]) return SCM(playerid, COLOR_GREY, " Игрок оффлайн");
		if(!ProxDetectorS(10.0, playerid, ProposeOffer[playerid])) return SCM(playerid, COLOR_GREY, " Человек должен находиться рядом с вами");
		format(string, 128, " Вы приняли предложение от %s's", Name(ProposeOffer[playerid]));
		SCM(playerid, 0x6495EDFF, string);
		format(string, 128, " %s приняла Ваш запрос быть Вашей Женой.", Name(playerid));
		SCM(ProposeOffer[playerid], 0x6495EDFF, string);
		strmid (pData[playerid][pMarriedTo],Name(ProposeOffer[playerid]), 0, strlen(Name(ProposeOffer[playerid])), 24);
		strmid (pData[ProposeOffer[playerid]][pMarriedTo],Name(playerid), 0, strlen(Name(playerid)), 24);
		pData[ProposeOffer[playerid]][pCash] -= 100000;
		ProposedTo[playerid] = 999;
		ProposeOffer[playerid] = 999;
	}
	else if(strcmp(x_job, "fight",true) == 0)
	{
		if(!GetPVarInt(playerid,"fight_offer")) return SCM(playerid,COLOR_GREY," Никто не предлагал тебе участвовать в бою");
		new i = GetPVarInt(playerid,"fight_offer")-1;
		if(pData[i][pCash] < GetPVarInt(playerid,"fight_price") || pData[playerid][pCash] < GetPVarInt(playerid,"fight_price"))
		{
			SCM(playerid,COLOR_GREY," У Игрока/Вас  Недостаточно средств");
			DeletePVar(playerid,"fight_offer");
			return DeletePVar(playerid,"fight_price");
		}
		if(!ProxDetectorS(5.0, playerid, i))
		{
			SCM(playerid,COLOR_GREY," Игрок слишком далеко");
			DeletePVar(playerid,"fight_offer");
			return DeletePVar(playerid,"fight_price");
		}
		if(!GetPVarInt(playerid,"style_clothes") || !GetPVarInt(i,"style_clothes"))
		{
			SCM(playerid,COLOR_GREY," Вы не в спортзале");
			DeletePVar(playerid,"fight_offer");
			return DeletePVar(playerid,"fight_price");
		}
		strmid(StyleList[TOTALSTYLELIST][slName],pData[i][pName], 0, strlen(pData[i][pName]), MAX_PLAYER_NAME);
		strmid(StyleList[TOTALSTYLELIST][slName_two],pData[playerid][pName], 0, strlen(pData[playerid][pName]), MAX_PLAYER_NAME);
		StyleList[TOTALSTYLELIST][slPrice] = GetPVarInt(playerid,"fight_price");
		TOTALSTYLELIST++;
		SendMes(playerid,0x6495EDFF," Вы записались на бой. Противник %s. Ставка %i вирт",pData[i][pName],GetPVarInt(playerid,"fight_price"));
		SendMes(i,0x6495EDFF,"%s принял ваше предложение. Ставка %i вирт",pData[playerid][pName], GetPVarInt(playerid,"fight_price"));
		DeletePVar(playerid,"fight_offer");
		return DeletePVar(playerid,"fight_price");
	}
	
	else if(strcmp(x_job, "taxi",true) == 0)
	{
		if(!GetPVarInt(playerid, "taxi_duty")) 		return SCM(playerid, COLOR_GREY, " Вы не таксист.");
		if(TaxiCallTime[playerid] > 0) 				return SCM(playerid, COLOR_GREY, " Вы уже приняли вызов.!");
		if(TaxiCall >= 999) 						return SCM(playerid,COLOR_GREY," Диспетчер: никто не нуждается в такси");
		if(!pData[TaxiCall][pLogin]) 				return SCM(playerid,COLOR_GREY," Игрок оффлайн");
		
		format(string, 128, " Вы приняли вызов от %s,его местонахождение помечено на карте красной меткой",Name(TaxiCall));
		SCM(playerid, 0x6495EDFF, string);
		format(string, 128, " Таксист %s принял ваш вызов, пожалуйста ждите на месте.",Name(playerid));
		SCM(TaxiCall, 0x6495EDFF, string);
		new Float:X, Float:Y, Float:Z;
		AntiCheatGetPos(TaxiCall, X, Y, Z);
		SetPlayerCheckpoint(playerid, X, Y, Z, 5);
		updatecheck[playerid] = TaxiCall;
		
		if(kekovichs[playerid] != -1)
		{
			KillTimer(kekovichs[playerid]);
			kekovichs[playerid] = -1;
		}
		kekovichs[playerid] = SetTimerEx("kekovich" , 1000, true, "i", playerid);
		CP[playerid] = 777;
		return TaxiCall = 999;
	}
	else if(strcmp(x_job, "ticket",true) == 0)
	{
		if(TicketOffer[playerid] >= 999) return SCM(playerid, COLOR_GREY, " Вам не выписывали штраф");
		if(!IsPlayerConnected(TicketOffer[playerid]) || !pData[TicketOffer[playerid]][pLogin]) return SCM(playerid, COLOR_GREY, " Игрок оффлайн");
		if(!ProxDetectorS(5.0, playerid, TicketOffer[playerid])) return  SCM(playerid, COLOR_GREY, " Полицейскйи не рядом с вами!");
		format(string, 128, " Вы оплатили штраф в размере %i вирт офицеру %s.", TicketMoney[playerid], Name(TicketOffer[playerid]));
		SCM(playerid, COLOR_BLUE, string);
		format(string, 128, " %s оплатил штраф в размере %i вирт.", Name(playerid), TicketMoney[playerid]);
		SCM(TicketOffer[playerid], COLOR_BLUE, string);
		pData[playerid][pCash] -=TicketMoney[playerid];
		pData[TicketOffer[playerid]][pCash] +=TicketMoney[playerid];
		TicketOffer[playerid] = 999;
		return TicketMoney[playerid] = 0;
	}
	else if(strcmp(x_job, "drugs",true) == 0)
	{
		if(DrugOffer[playerid] >= 999) return SCM(playerid, COLOR_GREY, " Вам никто не предлагал купить наркотики!");
		if(pData[playerid][pCash] < DrugPrice[playerid]) return SCM(playerid, COLOR_GREY, " У вас недостаточно денег");
		if(pData[playerid][pDrugs]+DrugGram[playerid] > 150) return SCM(playerid, COLOR_GREY, " У Вас и так достаточно наркотиков!");
		if(pData[DrugOffer[playerid]][pDrugs] < DrugGram[playerid]) return SCM(playerid, COLOR_GREY, " У игрока нет столько наркотиков");
		if(!IsPlayerConnected(DrugOffer[playerid]) || !pData[DrugOffer[playerid]][pLogin]) return SCM(playerid, COLOR_GREY, " Игрок оффлайн");
		format(string, 128, " Вы купили %i грамм наркотиков за %i вирт у %s.",DrugGram[playerid],DrugPrice[playerid],Name(DrugOffer[playerid]));
		SCM(playerid, 0x6495EDFF, string);
		format(string, 128, " %s купил у вас %i грамм наркотиков за %i вирт",Name(playerid),DrugGram[playerid],DrugPrice[playerid]);
		SCM(DrugOffer[playerid], 0x6495EDFF, string);
		pData[playerid][pCash] -=DrugPrice[playerid];
		GiveMoney(DrugOffer[playerid], DrugPrice[playerid]);
		pData[playerid][pDrugs] += DrugGram[playerid];
		pData[DrugOffer[playerid]][pDrugs] -= DrugGram[playerid];
		DrugOffer[playerid] = 999;
		DrugPrice[playerid] = 999;
		DrugGram[playerid] = 999;
	}
	
	else if(strcmp(x_job, "medic",true) == 0)
	{
		if(!IsAMedic(playerid)) return SCM(playerid, COLOR_GREY, " Вы не медик!");
		if(MedicCallTime[playerid] > 0) return SCM(playerid, COLOR_GREY, " Вы уже приняли вызов!");
		if(MedicCall >= 999) return SCM(playerid, COLOR_GREY, " Диспетчер: никто не нуждается в медике");
		if(!IsPlayerConnected(MedicCall) || !pData[MedicCall][pLogin]) return SCM(playerid,COLOR_GREY," Игрок оффлайн");
		format(string, 128, " Вы приняли вызов от %s, его местонахождение помечено на карте красной меткой",Name(MedicCall));
		SCM(playerid, 0x6495EDFF, string);
		format(string, 128, " Медик %s принял ваш вызов, пожалуйста ждите на месте.",Name(playerid));
		SCM(MedicCall, 0x6495EDFF, string);
		new Float:X, Float:Y, Float:Z;
		AntiCheatGetPos(MedicCall, X, Y, Z);
		SetPlayerCheckpoint(playerid, X, Y, Z, 5);
		updatecheck[playerid] = MedicCall;
		if(kekovichs[playerid] != -1)
		{
			KillTimer(kekovichs[playerid]);
			kekovichs[playerid] = -1;
		}
		kekovichs[playerid] = SetTimerEx("kekovich" , 1000, true, "i", playerid);
		CP[playerid] = 777;
		return MedicCall = 999;
	}
	else if(strcmp(x_job, "police",true) == 0)
	{
		if(!IsACop(playerid)) return SCM(playerid, COLOR_GREY, " Вы не полицейский!");
		if(PoliceCallTime[playerid] > 0) return SCM(playerid, COLOR_GREY, " Вы уже приняли вызов!");
		if(PoliceCall >= 999) return SCM(playerid, COLOR_GREY, " Диспетчер: никто не нуждается в полицейском");
		if(!IsPlayerConnected(PoliceCall) || !pData[PoliceCall][pLogin]) return SCM(playerid,COLOR_GREY," Игрок оффлайн");
		format(string, 128, " Вы приняли вызов от %s, его местонахождение помечено на карте красной меткой",Name(PoliceCall));
		SCM(playerid, 0x6495EDFF, string);
		format(string, 128, " Сотрудник %s принял ваш вызов, пожалуйста ждите на месте.",Name(playerid));
		SCM(PoliceCall, 0x6495EDFF, string);
		new Float:X, Float:Y, Float:Z;
		AntiCheatGetPos(PoliceCall, X, Y, Z);
		SetPlayerCheckpoint(playerid, X, Y, Z, 5);
		updatecheck[playerid] = PoliceCall;
		if(kekovichs[playerid] != -1)
		{
			KillTimer(kekovichs[playerid]);
			kekovichs[playerid] = -1;
		}
		kekovichs[playerid] = SetTimerEx("kekovich" , 1000, true, "i", playerid);
		CP[playerid] = 777;
		return PoliceCall = 999;
	}
	else if(strcmp(x_job, "mechanic",true) == 0)
	{
		if(pData[playerid][pJob] != 2) return SCM(playerid, COLOR_GREY, " Вы не механик!");
		if(MechanicCallTime[playerid] > 0) return SCM(playerid, COLOR_GREY, " Вы уже приняли вызов!");
		if(MechanicCall >= 999) return 	SCM(playerid, COLOR_GREY, " Диспетчер: никто не нуждается в механнике");
		if(!IsPlayerConnected(MechanicCall) || !pData[MechanicCall][pLogin]) return SCM(playerid,COLOR_GREY," Игрок оффлайн");
		format(string, 128, " Вы приняли вызов от %s, его местонахождение помечено на карте красной меткой",Name(MechanicCall));
		SCM(playerid, 0x6495EDFF, string);
		format(string, 128, " Механник %s принял ваш вызов, пожалуйста ждите на месте.",Name(playerid));
		SCM(MechanicCall, 0x6495EDFF, string);
		new Float:X, Float:Y, Float:Z;
		AntiCheatGetPos(MechanicCall, X, Y, Z);
		SetPlayerCheckpoint(playerid, X, Y, Z, 5);
		updatecheck[playerid] = MechanicCall;
		if(kekovichs[playerid] != -1)
		{
			KillTimer(kekovichs[playerid]);
			kekovichs[playerid] = -1;
		}
		kekovichs[playerid] = SetTimerEx("kekovich" , 1000, true, "i", playerid);
		CP[playerid] = 777;
		return MechanicCall = 999;
	}
	else if(strcmp(x_job, "zone",true) == 0) //метка 
	{
		if(ZoneOffer[playerid] >= 999) return SCM(playerid, COLOR_GREY, " Вам ни кто не предлагал территорию!");
		if(!IsPlayerConnected(ZoneOffer[playerid]) || !pData[ZoneOffer[playerid]][pLogin]) return SCM(playerid,COLOR_GREY," Игрок оффлайн");
		if(pData[playerid][pCash] < ZonePrice[playerid]) return SCM(playerid, COLOR_GREY, " У вас недостаточно денег!");
		for(new i = 1; i <= TOTALGZ; i++)
		{
			if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
			{
				if(GZInfo[i][gFrakVlad] != sellzone[playerid]) return SCM(playerid, COLOR_WHITE, " Вам не предлагали купить эту территорию");
				GZInfo[i][gFrakVlad] = pData[playerid][pMember];
				GangZoneStopFlashForAll(GZInfo[i][gZone]);
				GangZoneHideForAll(GZInfo[i][gZone]);
				GangZoneShowForAll(GZInfo[i][gZone],GetGangZoneColor(i));
				UpdateTable_int(TABLE_GANGZONE,"gang_owner",GZInfo[i][gFrakVlad],"id",GZInfo[i][gID]);
			}
		}
		format(string, 128, " Вы купили территорию у %s за %i вирт.",Name(ZoneOffer[playerid]), ZonePrice[playerid]);
		SCM(playerid, 0x6495EDFF, string);
		format(string, 128, " Вы продали территорию %s за %i вирт.",Name(playerid),ZonePrice[playerid]);
		SCM(ZoneOffer[playerid], 0x6495EDFF, string);
		pData[playerid][pCash] -= ZonePrice[playerid];
		pData[ZoneOffer[playerid]][pCash]+= ZonePrice[playerid];
		ZoneOffer[playerid] = 999;
		ZonePrice[playerid] = 0;
		return sellzone[playerid] = 0;
	}
	else if(strcmp(x_job, "hotdog",true) == 0)
	{
		if(!GetPVarInt(playerid,"h_id")) return true;
		new i = GetPVarInt(playerid,"h_id")-1;
		if(!IsPlayerConnected(i)) return SCM(playerid,COLOR_GREY," Игрок не в сети"), DeletePVar(playerid,"h_id");
		if(pData[playerid][pCash] < GetPVarInt(i,"h_price")) return SCM(playerid,COLOR_GREY," Недостаточно средств"), DeletePVar(playerid,"h_id");
		UpdatePlayerHunger(playerid, 100);
		SendMes(playerid,0x6495EDFF," Вы купили ХотДог у %s за %i вирт.",pData[i][pName],GetPVarInt(i,"h_price"));
		SendMes(playerid,-1,"«Сытость» пополнена до %i",pData[playerid][pSatiety]);
		ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0,1);
		SetPlayerChatBubble(playerid,"съел(a) ХотДог",COLOR_PURPLE,30.0,10000);
		SendMes(i,0x6495EDFF,"Вы продали ХотДог %s за %i вирт.",pData[playerid][pName],GetPVarInt(i,"h_price"));
		pData[playerid][pCash] -= GetPVarInt(i,"h_price");
		pData[i][pPayCheck] += GetPVarInt(i,"h_price")/2;
		BizzInfo[GetPVarInt(i,"h_contract")][bTill] += GetPVarInt(i,"h_price")/2;
		BizzPay[GetPVarInt(i,"h_contract")] += GetPVarInt(i,"h_price")/2;
		format(string, 16, "~g~+$%i",GetPVarInt(i,"h_price")/2);
		GameTextForPlayer(i, string, 5000, 1);
		format(string, 16, "~r~-$%i",GetPVarInt(i,"h_price"));
		GameTextForPlayer(playerid, string, 5000, 1);
		return DeletePVar(playerid,"h_id");
	}


	else if(strcmp(x_job, "ekey",true) == 0)
	{
		if(KeysOffer[playerid] >= 999) return SCM(playerid,COLOR_GREY," Вам никто не предлагал ключи");
		if(pData[playerid][pCash] < KeysPrice[playerid]) return SCM(playerid,COLOR_GREY," У вас недостаточно денег");
		if(!IsPlayerConnected(KeysOffer[playerid]) || !pData[KeysOffer[playerid]][pLogin]) return SCM(playerid,COLOR_GREY," Игрок оффлайн");
		format(string, 144, "%s передал(а) ключи от камеры %s", Name(KeysOffer[playerid]),Name(playerid));
		ProxDetector(10.0, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		pData[playerid][pCash] -= KeysPrice[playerid];
		pData[KeysOffer[playerid]][pCash] += KeysPrice[playerid];
		pData[playerid][pKeys]++;
		pData[KeysOffer[playerid]][pKeys]--;
		MoneyLog(pData[playerid][pName],Name(KeysOffer[playerid]), KeysPrice[playerid], "(-)BuyKey");
		SendMes(KeysOffer[playerid],COLOR_YELLOW," Вы продали ключ от тюремной камеры %s {FFFFFF}(( Ключей: %i / 5 ))",Name(playerid),pData[KeysOffer[playerid]][pKeys]);
		KeysOffer[KeysOffer[playerid]] = 999;
		KeysOffer[playerid] = 999;
		return KeysPrice[playerid] = 0;
	}
	else if(strcmp(x_job, "vehicle",true) == 0)
	{
		if(CarOffer[playerid] == 9999) return SCM(playerid,COLOR_GREY," Вам никто не предлогал обмен автомобилями");
		format(YCMDstr, 256, "{FFFFFF}Вы собираетесь обменяться своим личным транспортом с %s\n\n{F1E100}Вы отдаете:\n\t{FFFFFF}%s[%i]\tPercent: (%i)\n\t%i вирт\n\n{F1E100}Вы получаете:\n\t{FFFFFF}%s[%i]\tPercent: (%i)\n\t0 вирт\n\nВы согласны на сделку?",
		Name(CarOffer[playerid]), VehicleNames[GetVehicleModel(house_car[playerid])-400],GetVehicleModel(house_car[playerid]),CarInfo[playerid][carPercent][GetPVarInt(playerid,"chosencar")],CarPrice[playerid],VehicleNames[GetVehicleModel(house_car[CarOffer[playerid]])-400],GetVehicleModel(house_car[CarOffer[playerid]]),CarInfo[CarOffer[playerid]][carPercent][GetPVarInt(CarOffer[playerid],"chosencar")]);
		ShowPlayerDialog(playerid,7205,DIALOG_STYLE_MSGBOX, "Подтверждение", YCMDstr, "Согласен", "Отмена");
		SetPVarInt(playerid,"Resolut_Vehicle",1);
	}
	else return true;
	return true;
}

CMD:changecar(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(sscanf(params, "ud", params[0], params[1])) return SCM(playerid, COLOR_WHITE, " Введите: /changecar [ID] [доплата]");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, " Вы указали свой ID");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid,COLOR_GREY," Игрок должен находиться рядом с вами");

	if(GetPVarInt(playerid,"CarOffer")) return SCM(playerid,COLOR_GREY," Вы уже предложили кому-то обменяться автомобилями");
	if(params[1] <= 0 || params[1] > 10000000) return SCM(playerid, COLOR_GREY, " Доплата должна быть от 1 до 10000000 вирт");
	SetPVarInt(playerid,"CarOffer",params[0]+1);
	CarOffer[params[0]] = playerid;
	CarPrice[params[0]] = params[1];
	DeletePVar(params[0],"Resolut_Vehicle");
	format(YCMDstr, sizeof(YCMDstr), " %s предложил(а) обменяться транспортом %s.",Name(playerid) ,Name(params[0]));
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	SCM(playerid,COLOR_WHITE," (( Введите ''/cancel'' и выберите в меню пункт ''vehicle'' чтобы отменить обмен ))");
	SCM(params[0],COLOR_WHITE," (( Введите ''/(ac)cept vehicle'' для продолжения ))");
	return true;
}
CMD:refill(playerid, params[])
{
	if(pData[playerid][pJob] != 2) return SCM(playerid, COLOR_GREY, " Вы не механик!");
	if(!gcontract[playerid]) return SCM(playerid, COLOR_GREY, " У Вас не подписан контракт с заправкой!");
	if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_WHITE, " Введите: /refill [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 525) return SCM(playerid, COLOR_GREY, " Вы не в машине механика");
	if(!ProxDetectorS(10.0, playerid, params[0]) || !IsPlayerInAnyVehicle(params[0])) return true;
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, " [Ошибка]  Вы указали свой ID");
	if(GetPVarInt(params[0], "refillcar")) return SCM(playerid, COLOR_GREY, " [Ошибка]  Вы уже предложили данному игроку заправку");

	SetPVarInt(params[0], "refillcar", playerid+1);
    new strFuel[150];
    format(strFuel, sizeof strFuel,"{8FD660}%s {ffffff}предложил заправить ваш автомобиль\n - Стоимость: %d вирт\n\n{BABABA}Вы согласны?",Name(playerid),cenabenza[playerid]);
    ShowPlayerDialog(params[0],167,DIALOG_STYLE_MSGBOX,"{FFFFFF}Подтверждение",strFuel,"Согласен","Отмена");
    format(strFuel,sizeof(strFuel),"Вы предложили %s заправить его транспорт за %d вирт",Name(params[0]),cenabenza[playerid]);
	SendClientMessage(playerid,COLOR_BLUE,strFuel);
	return true;
}
CMD:repair(playerid, params[])
{
	if(pData[playerid][pJob] != 2) 
		return SCM(playerid, COLOR_GREY, " Вы не механик!");

	if(sscanf(params, "ud", params[0],params[1])) 
		return SCM(playerid, COLOR_GRAD2, " Введите: /repair [id] [цена]");

	if(params[1] < 1 || params[1] > 10000) 
		return SCM(playerid, COLOR_GREY, " Нельзя меньше 1, и больше 10000 вирт");

	if(!IsPlayerConnected(params[0])) 
		return true;

	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 525) 
		return SCM(playerid, COLOR_GREY, " Вы не на эвакуаторе!");

	if(!ProxDetectorS(10.0, playerid, params[0])|| !IsPlayerInAnyVehicle(params[0])) 
		return true;

	if(params[0] == playerid) 
		return SCM(playerid, COLOR_GREY, " Вы не можете чинить машину самому себе");

	if(GetPVarInt(params[0], "repaircar"))
		return SCM(playerid, COLOR_GREY, "[Ошибка] Вы уже предложили данному игроку починку");
	
	SetPVarInt(params[0], "repaircar", playerid+1);
    SetPVarInt(params[0], "repairprice", params[1]);
    new str[150];
    format(str, sizeof str,"{8FD660}%s {ffffff}предложил починить ваш автомобиль\n - Стоимость: %d вирт\n\n{BABABA}Вы согласны?",Name(playerid),params[1]);
    ShowPlayerDialog(params[0],165,DIALOG_STYLE_MSGBOX,"{FFFFFF}Подтверждение",str,"Согласен","Отмена");
    format(str,sizeof(str),"Вы предложили %s отремонтировать его транспорт за %d вирт",Name(params[0]),params[1]);
	SendClientMessage(playerid,COLOR_BLUE,str);
	return true;
}
CMD:eject(playerid, params[])
{
	if(pData[playerid][pState]!= PLAYER_STATE_DRIVER) 	return SCM(playerid,COLOR_GREY, " Вы не водитель!");
	if(sscanf(params, "u", params[0])) 					return SCM(playerid,COLOR_GREY, " Введите: /eject [id]");
	if(params[0] == playerid) 							return SCM(playerid, COLOR_GREY," Вы не можете выкинуть из машины себя!");

	if(!IsPlayerConnected(params[0])) return true;
	if(!IsPlayerInVehicle(params[0],GetPlayerVehicleID(playerid))) return true;
	
	new strEject[78];
	format(strEject, sizeof strEject, "Вы выкинули из машины %s",Name(params[0]));
	SCM(playerid, 0x6495EDFF, strEject);
	
	format(strEject, sizeof strEject, "Вас выкинул из машины %s",Name(playerid));
	SCM(params[0], 0x6495EDFF, strEject);
	
	RemovePlayerFromVehicle(params[0]);
	return true;
}
CMD:helmet(playerid)
{
	if(!IsAArm(playerid)) return true;
	if(GetPVarInt(playerid,"helmet")) return RemovePlayerAttachedObject(playerid, 3), DeletePVar(playerid,"helmet"),SCM(playerid, COLOR_GREEN," Вы сняли военную каску.");
	SetPlayerAttachedObject(playerid,3 , 19101, 2,0.13,0.013,0.00);
	SCM(playerid, COLOR_GREEN," Вы надели военную каску. Чтобы снять введите команду еще раз.");
	return SetPVarInt(playerid,"helmet",1);
}
CMD:glasses(playerid, params[])
{
	if(!pData[playerid][pLogin]) return true;
	if(pData[playerid][pMember] != 2) return SCM(playerid,COLOR_GREY," Вам недоступна данная функция");
	if(GetPVarInt(playerid,"fbiglass")) return RemovePlayerAttachedObject(playerid, 5), DeletePVar(playerid,"fbiglass");
	switch(GetPlayerSkin(playerid))
	{
	case 286: SetPlayerAttachedObject(playerid, 5, 19033, 2, 0.087062, 0.021779, -0.003307, 89.675476, 88.636062, 0.000000);
	case 163: SetPlayerAttachedObject(playerid, 5, 19033, 2, 0.088934, 0.023302, -0.004153, 90.928329, 80.393875, 0.000000);
	case 164: SetPlayerAttachedObject(playerid, 5, 19033, 2, 0.088934, 0.023302, -0.004153, 90.928329, 80.393875, 0.000000);
	case 165: SetPlayerAttachedObject(playerid, 5, 19033, 2, 0.087018, 0.051364, 0.000484, 90.928329, 94.584838, 0.000000);
	case 166: SetPlayerAttachedObject(playerid, 5, 19033, 2, 0.087018, 0.051364, 0.000484, 90.928329, 94.584838, 0.000000);
	case 141: SetPlayerAttachedObject(playerid, 5, 19033, 2, 0.058717, 0.043547, -0.000436, 90.928329, 87.209770, 0.000000);
	default: return SCM(playerid,COLOR_GREY," Вы не переоделись!");
	}
	return SetPVarInt(playerid,"fbiglass",1);
}

CMD:vw(playerid, params[])
{
	if(pData[playerid][pAdmin] < 7) return true;
	new texts;
	texts = GetPlayerVirtualWorld(playerid);
	format(cString, 25, " Виртуальный мир %d",texts);
	SCM(params[0], 0x6495EDFF, cString);
	return true;
}

CMD:amafiawar(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 6 || !dostup[playerid]) return true;
	if(ZoneTimer) return SendMes(playerid,-1," Секунд до окончания территории: %i",ZoneTimer);
	else return SCM(playerid,-1," Не идет война за бизнес");
}

CMD:mzfinish(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 6 || !dostup[playerid]) return true;
	SendMes(playerid,-1,"WarStart = %i",WarStart);
	if(!ZoneTimer) return SCM(playerid,-1," Не идет ни одна война");
	for(new i = 1;i <= TotalBizz; i++)
	{
		if(BizzInfo[i][bCapture] != 0)
		{
			if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_GRAD2, " Введите: /mzfinish [1/2] 1 - Capture Win 2 - bMafia Win");
			switch(params[0])
			{
			case 1: CountOnZone[BizzInfo[i][bCapture]] = 9999;
			case 2: CountOnZone[BizzInfo[i][bMafia]] = 9999;
			default: SCM(playerid,-1,"Неверное значение");
			}
			ZoneTimer = 3;
		}
	}
	return true;
}

CMD:giveroses(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		new giveplayerid;
		if(sscanf(params,"u",giveplayerid)) return SCM(playerid, COLOR_GRAD2, " Введите:  /giveroses [ID]");
		if(IsPlayerConnected(giveplayerid) && pData[giveplayerid][pLogin] != false)
		if(!ProxDetectorS(3.0, giveplayerid, playerid)) return SCM(playerid,COLOR_GREY, " Вы слишком далеко!");
		if(GetPlayerWeapon(playerid) != 14) return SCM(playerid,COLOR_GREY, "  У вас нет цветов!");
		if(pData[giveplayerid][pLevel] < 2) return SCM(playerid,COLOR_GREY, " Доступно для игроков со 2-го уровня");
		format(cString, 78, "Передал(а) букет %s",Name(giveplayerid));
		SetPlayerChatBubble(playerid,cString,COLOR_PURPLE,10.0,4000);
		GivePlayerWeaponEx(giveplayerid, 14, 1);
		GivePlayerWeaponEx(playerid, 14, 0);
	}
	return true;
}

// Замены
CMD:n(playerid) return cmd_npanel(playerid);
CMD:ad(playerid, params[]) return cmd_advertise(playerid, params);
CMD:sp(playerid, params[]) return cmd_spawn(playerid, params);
CMD:o(playerid, params[]) return cmd_ooc(playerid, params);
CMD:gov(playerid, params[]) return cmd_goverment(playerid, params);
CMD:s(playerid, params[]) return cmd_shout(playerid, params);
CMD:su(playerid, params[]) return cmd_suspect(playerid, params);
CMD:m(playerid, params[]) return cmd_megaphone(playerid, params);
CMD:am(playerid, params[]) return cmd_amegaphone(playerid, params);
CMD:f(playerid, params[]) return cmd_family(playerid, params);
CMD:d(playerid, params[]) return cmd_departments(playerid, params);
CMD:t(playerid, params[]) return cmd_sms(playerid, params);
CMD:txt(playerid, params[]) return cmd_sms(playerid, params);
CMD:c(playerid, params[]) return cmd_call(playerid, params);
CMD:p(playerid, params[]) return cmd_pickup(playerid, params);
CMD:h(playerid, params[]) return cmd_hangup(playerid, params);
CMD:re(playerid, const params[]) return cmd_recon(playerid, params);
CMD:bh(playerid, params[]) return cmd_breathalyser(playerid, params);
CMD:delacc(playerid, params[]) return cmd_delaccount(playerid, params);
CMD:a(playerid, params[]) return cmd_admin(playerid, params);
CMD:sa(playerid, params[]) return cmd_sadmin(playerid, params);
CMD:online(playerid, params[]) return cmd_geton(playerid, params);
CMD:tp(playerid, params[]) return cmd_teleport(playerid, params);
CMD:g(playerid, params[]) return cmd_goto(playerid, params);
CMD:agl(playerid, params[]) return cmd_agivelicense(playerid, params);
CMD:w(playerid, params[]) return cmd_whisper(playerid, params);
CMD:addtq(playerid, params[]) return cmd_addtunnequeue(playerid, params);
CMD:spskin(playerid, params[]) return cmd_setplayerskin(playerid, params);
CMD:fid(playerid, params[]) return cmd_fractionid(playerid, params);
CMD:dir(playerid) return cmd_directory(playerid);
CMD:mm(playerid) return cmd_mainmenumode(playerid);
CMD:conveyingarms(playerid, params[]) return cmd_carm(playerid, params);
CMD:ac(playerid, params[]) return cmd_accept(playerid, params);
CMD:pmenu(playerid) return cmd_prodmenu(playerid);
CMD:v(playerid, params[]) return cmd_veh(playerid, params);
CMD:ids(playerid, params[]) return cmd_id(playerid, params);

CMD:advertise(playerid, params[])
{
	if(sscanf(params, "s[128]",params[0])) return SendClientMessage(playerid, COLOR_WHITE, " Введите: (/ad)vertise [текст]");
	else if(pData[playerid][pMuted] > 0) return SendMes(playerid,COLOR_LIGHTRED," У Вас бан чата! До снятия: %i секунд(ы)",pData[playerid][pMuted]);
	else if(pData[playerid][pLevel] < 2) return SendClientMessage(playerid, COLOR_GREY, " Подать обьявление можно с 2 уровня");
	else if(strlen(params[0]) > 80) return SendClientMessage(playerid, COLOR_GREY, " Сократите количество символов");
	else if !SelectWavesRadio[playerid] *then SendClientMessage(playerid, COLOR_GREY, " Сначала включите радио (( /radio ))");
	else if adCheck > gettime() *then return SendClientMessage(playerid, COLOR_GREY, " Посылать объявление можно раз в 15 секунд!");
	strmid (ReportQ[playerid],params[0], 0, strlen(params[0]), 128);
	if(SelectWavesRadio[playerid] == 2)
	{
		format(YCMDstr,sizeof(YCMDstr),"{B8B8B8}Вы собираетесь отправить объявление:\n\t{00FF5E}%s\n\n{B8B8B8}Стоимость:{00FF5E} %i вирт\n\n\n{56839C}Объявление будет подано после проверки!\nСпасибо что воспользовались услугами LS News",params[0],strlen(params[0])*addd[0]);
		ShowPlayerDialog(playerid,8454,DIALOG_STYLE_MSGBOX,"{FFFFFF}Проверка | {ae433d}Объявление",YCMDstr,"»","x");
	}
	else if(SelectWavesRadio[playerid] == 1)
	{
		format(YCMDstr,sizeof(YCMDstr),"{B8B8B8}Вы собираетесь отправить объявление:\n\t{00FF5E}%s\n\n{B8B8B8}Стоимость:{00FF5E} %i вирт\n\n\n{56839C}Объявление будет подано после проверки!\nСпасибо что воспользовались услугами SF News",params[0],strlen(params[0])*addd[1]);
		ShowPlayerDialog(playerid,8455,DIALOG_STYLE_MSGBOX,"{FFFFFF}Проверка | {ae433d}Объявление",YCMDstr,"»","x");
	}
	else if(SelectWavesRadio[playerid] == 3)
	{
		format(YCMDstr,sizeof(YCMDstr),"{B8B8B8}Вы собираетесь отправить объявление:\n\t{00FF5E}%s\n\n{B8B8B8}Стоимость:{00FF5E} %i вирт\n\n\n{56839C}Объявление будет подано после проверки!\nСпасибо что воспользовались услугами LV News",params[0],strlen(params[0])*addd[2]);
		ShowPlayerDialog(playerid,8456,DIALOG_STYLE_MSGBOX,"{FFFFFF}Проверка | {ae433d}Объявление",YCMDstr,"»","x");
	}
	return true;
}
CMD:radio(playerid, params[])
{
	if(sscanf(params, "d", params[0]))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Введите: /radio [номер]");
		SendClientMessage(playerid, COLOR_WHITE, " [0] Выключить");
		SendClientMessage(playerid, COLOR_WHITE, " [1] SF News");
		SendClientMessage(playerid, COLOR_WHITE, " [2] LS News");
		SendClientMessage(playerid, COLOR_WHITE, " [3] LV News");
		return true;
	}
	SelectWavesRadio[playerid] =  params[0];
	switch (params[0])
	{
	case 0: SendClientMessage(playerid, COLOR_WHITE, "Вы выключили радио");
	case 1: SendClientMessage(playerid, COLOR_WHITE, "Волна переключена на SF News");
	case 2:	SendClientMessage(playerid, COLOR_WHITE, "Волна переключена на LS News");
	case 3:	SendClientMessage(playerid, COLOR_WHITE, "Волна переключена на LV News");
	}
	return true;
}
CMD:ratingnews(playerid)
{
	if(pData[playerid][pLogin] == false) return true;
	new procRating[4],points[4],rating[4]; // [0] SF, 1 LS 3 LV
	foreach(new i: Player)
	{
		if(SelectWavesRadio[i] == 1) rating[0]++;
		else if(SelectWavesRadio[i] == 2) rating[1]++;
		else if(SelectWavesRadio[i] == 3) rating[2]++;
		else rating[3]++;
	}
	new p = rating[0]+rating[1]+rating[2]+rating[3];
	new Float: xf[4],x[4];
	xf[0] = rating[0]*100/p;
	xf[1] = rating[1]*100/p;
	xf[2] = rating[2]*100/p;
	xf[3] = rating[3]*100/p;
	//SendMes(playerid,-1,"x = %i * 100 / %i = %i",rating[0],p,rating[0]*100/p);
	x[0] = floatround(xf[0]);
	x[1] = floatround(xf[1]);
	x[2] = floatround(xf[2]); 
	x[3] = floatround(xf[3]);
	procRating[0] = x[0],points[0] = 100-procRating[0];
	procRating[1] = x[1],points[1] = 100-procRating[1];
	procRating[2] = x[2],points[2] = 100-procRating[2];
	procRating[3] = x[3],points[3] = 100-procRating[3];
	format(string,sizeof string,"{FFFFFF}« Количество слушателей »\n\nLS News:\t[%s]\t[%i%% - %i чел.]\nSF News:\t[%s]\t[%i%% - %i чел.]\nLV News:\t[%s]\t[%i%% - %i чел.]",
	ToDevelopSkills(procRating[1],points[1]),procRating[1],rating[1],
	ToDevelopSkills(procRating[0],points[0]),procRating[0],rating[0],
	ToDevelopSkills(procRating[2],points[2]),procRating[2],rating[2]);
	ShowPlayerDialog(playerid,1100,DIALOG_STYLE_MSGBOX," ",string,"x","");
	return true;
}
CMD:yes(playerid, params[])
{
	if(pData[playerid][pMember] == 16 || pData[playerid][pMember] == 9 || pData[playerid][pMember] == 20)
	{
		if(sscanf(params, "u",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /yes [id]");
		else if(!IsPlayerConnected(params[0])) return true;
		else if(Mobile[params[0]] != 11888 && Mobile[params[0]] != 11555 && Mobile[params[0]] != 11333) return SendClientMessage(playerid, COLOR_GRAD1, "Этот человек не звонил в студию!");
		else if OnPlayerEther[params[0]] *then return  SendClientMessage(playerid, COLOR_GRAD1, "Этот человек уже в прямом эфире!");
		format(cString, sizeof(cString), "Вы приняли звонок от %s",Name(params[0]));
		SendClientMessage(playerid, COLOR_WHITE, cString);
		Tel[params[0]] = 1;
		SendClientMessage(params[0], COLOR_YELLOW, "Вы попали в эфир, говорите.");
		if(pData[playerid][pMember] == 9)
		{
			SelectWavesRadio[params[0]] = 1;
			pData[params[0]][pMobile] -= SmsPriceNews[0];
			FracBank[0][fSfnews] += SmsPriceNews[0];
		}
		if(pData[playerid][pMember] == 16)
		{
			SelectWavesRadio[params[0]] = 2;
			pData[params[0]][pMobile] -= SmsPriceNews[1];
			FracBank[0][fLsnews] += SmsPriceNews[1];
		}
		if(pData[playerid][pMember] == 20)
		{
			SelectWavesRadio[params[0]] = 3;
			pData[params[0]][pMobile] -= SmsPriceNews[2];
			FracBank[0][fLvnews] += SmsPriceNews[2];
		}
		OnPlayerEther[params[0]] = pData[playerid][pMember];
	}
	return true;
}
CMD:npanel(playerid)
{
	if(pData[playerid][pLogin] == false || !GetPVarInt(playerid,"Fraction_Duty")) return true;
	if pData[playerid][pMember] != 16 && pData[playerid][pMember] != 9 && pData[playerid][pMember] != 20 *then return SendClientMessage(playerid,COLOR_GREY,"Вам недоступна данная команда");
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 582 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 488 && !PlayerToPoint(10.0,playerid,1448.1249,-1048.9841,1717.9939)) return SendClientMessage(playerid, COLOR_GRAD1, "Вы не в репортёрской машине / вертолёте / офисе!");
	ShowPlayerDialog(playerid,2223, DIALOG_STYLE_LIST, "{FFFFFF}Панель | {ae433d}Новости", "[ 1 ] Прямой эфир\n[ 2 ] Выйти из прямого эфира\n[ 3 ] Начать принимать звонки / смс\n[ 4 ] Завершить принимать звонки / смс\n[ 5 ] Объявления\n[ 6 ] Банк\n[ 7 ] Раздел лидера", "»", "x");
	return true;
}
CMD:live(playerid, params[])
{
	if pData[playerid][pLogin] == false *then return true;
	else if pData[playerid][pMuted] > 0 *then return SendMes(playerid,COLOR_LIGHTRED," У Вас бан чата! До снятия: %i секунд(ы)",pData[playerid][pMuted]);
	else if sscanf(params, "u", params[0]) *then return SendClientMessage(playerid, COLOR_WHITE, " Введите: /live [id/name]");
	else if params[0] == playerid *then return SendClientMessage(playerid, COLOR_GREY, " Вы не можете брать интервью у себя!"); 
	else if !ProxDetectorS(5.0, playerid, params[0]) *then return SendClientMessage(playerid, COLOR_GREY, " Человек далеко от вас!"); 
	else if params[0] == INVALID_PLAYER_ID *then return SendClientMessage(playerid, COLOR_GREY, " [Ошибка] Человек не найден!"); 
	else if pData[params[0]][pMember] == 9 || pData[params[0]][pMember] == 16 || pData[params[0]][pMember] == 20 *then return SendClientMessage(playerid, COLOR_GREY, " [Ошибка] Нельзя брать интерьвью у сотрудника NEWS!");
	else if OnPlayerEther[params[0]] != 0 && OnPlayerEther[params[0]] != pData[playerid][pMember]+1 *then return SendClientMessage(playerid, COLOR_GREY, " Вы уже берете интервью у этого человека");
	switch(pData[playerid][pMember])
	{
	case 9:
		{
			new newcar = GetPlayerVehicleID(playerid);
			if(newcar >= cnncar[0] && newcar <= cnncar[4] || newcar == cnnmav || PlayerToPoint(10.0,playerid,1448.1249,-1048.9841,1717.9939)) { } else { SendClientMessage(playerid, COLOR_GREY, " Вы не в репортёрской машине / вертолёте / офисе!"); return true;}
			if(OnPlayerEther[params[0]])
			{
				SendClientMessage(playerid, 0x6495EDFF, " Прямой эфир завершён");
				SendClientMessage(params[0], 0x6495EDFF, " Прямой эфир завершён");
				TogglePlayerControllable(playerid, 1);
				TogglePlayerControllable(params[0], 1);
				OnPlayerEther[params[0]] = 0;
				return true;
			}
			format(cString, 64, " Вы предложили %s снять интервью",Name(params[0]));
			SendClientMessage(playerid, 0x6495EDFF, cString);
			format(cString, 64, " %s предлагает вам снять интервью",pData[playerid][pName]);
			SendClientMessage(params[0], 0x6495EDFF, cString);
			SendClientMessage(params[0], COLOR_WHITE, " Введите /accept livesf, чтобы согласиться");
			LiveOffer[params[0]] = playerid;
			SetPVarInt(playerid,"LiveOffer",params[0]);
		}
	case 16:
		{
			new newcar = GetPlayerVehicleID(playerid);
			if(newcar >= lsnewscar[0] && newcar <= lsnewscar[5] || PlayerToPoint(30.0,playerid,1639.6208,-1619.5801,96.0863)) { } else { SendClientMessage(playerid, COLOR_GREY, "Вы не в репортёрской машине / вертолёте / офисе!"); return true;}
			if(OnPlayerEther[params[0]])
			{
				SendClientMessage(playerid, 0x6495EDFF, " Прямой эфир завершён");
				SendClientMessage(params[0], 0x6495EDFF, " Прямой эфир завершён");
				TogglePlayerControllable(playerid, 1);
				TogglePlayerControllable(params[0], 1);
				OnPlayerEther[params[0]] = 0;
				return true;
			}
			format(cString, 64, " Вы предложили %s снять интервью",Name(params[0]));
			SendClientMessage(playerid, 0x6495EDFF, cString);
			format(cString, 64, " %s предлагает вам снять интервью",pData[playerid][pName]);
			SendClientMessage(params[0], 0x6495EDFF, cString);
			SendClientMessage(params[0], COLOR_WHITE, " Введите /accept livels, чтобы согласиться");
			LiveOfferls[params[0]] = playerid;
			SetPVarInt(playerid,"LiveOffer",params[0]);
		}
	case 20:
		{
			new newcar = GetPlayerVehicleID(playerid);
			if(newcar >= lvnewscar[0] && newcar <= lvnewscar[5] || PlayerToPoint(30.0,playerid,2630.0166,1228.8519,50.1059)) { } else { SendClientMessage(playerid, COLOR_GREY, "Вы не в репортёрской машине / вертолёте / офисе!"); return true;}
			if(OnPlayerEther[params[0]])
			{
				SendClientMessage(playerid, 0x6495EDFF, " Прямой эфир завершён");
				SendClientMessage(params[0], 0x6495EDFF, " Прямой эфир завершён");
				TogglePlayerControllable(playerid, 1);
				TogglePlayerControllable(params[0], 1);
				OnPlayerEther[params[0]] = 0;
				return true;
			}
			format(cString, sizeof(cString), " Вы предложили %s снять интервью",Name(params[0]));
			SendClientMessage(playerid, 0x6495EDFF, cString);
			format(cString, sizeof(YCMDstr), " %s предлагает вам снять интервью",pData[playerid][pName]);
			SendClientMessage(params[0], 0x6495EDFF, cString);
			SendClientMessage(params[0], COLOR_WHITE, " Введите /accept livelv, чтобы согласиться");
			LiveOfferlv[params[0]] = playerid;
			SetPVarInt(playerid,"LiveOffer",params[0]);
		}
	}
	return true;
}
CMD:off(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pMember] == 16 || pData[playerid][pMember] == 9 || pData[playerid][pMember] == 20)
	{
		if(sscanf(params, "u",params[0])) return SendClientMessage(playerid, COLOR_WHITE, " Введите: /off [id]");
		else if(!IsPlayerConnected(params[0])) return true;
		else if(Mobile[params[0]] != 11888 && Mobile[params[0]] != 11555 && Mobile[params[0]] != 11333) return SendClientMessage(playerid, COLOR_GRAD1, " Этот человек не звонил в студию!");
		format(cString, sizeof(cString), " Вы завершили звонок от %s",Name(params[0]));
		SendClientMessage(playerid, COLOR_BLUE, cString);
		SetPlayerSpecialAction(params[0],SPECIAL_ACTION_STOPUSECELLPHONE);
		SendClientMessage(params[0], COLOR_YELLOW, " Звонок завершён.");
		Tel[params[0]] = 255;
		OnPlayerEther[params[0]] = 0;
		switch(pData[playerid][pMember])
		{
		case 9: ViborNews = 0;
		case 16: ViborNews = 1;
		case 20: ViborNews = 2;
		}
		Tel[params[0]] = 255;
		Mobile[params[0]] = 9999;
	}
	return true;
}
stock ProxDetector(Float:radi, playerid, const str[],col1,col2,col3,col4,col5)
{
	new Float:posx, Float:posy, Float:posz;
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new Float:tempposx, Float:tempposy, Float:tempposz;
	AntiCheatGetPos(playerid, oldposx, oldposy, oldposz);
	SendClientMessage(playerid,col1,str);
	foreach(new i: OnPlayersStream[playerid])
	{
		if(GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i))
		{
			AntiCheatGetPos(i, posx, posy, posz);
			tempposx = (oldposx -posx);
			tempposy = (oldposy -posy);
			tempposz = (oldposz -posz);
			
			if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
			{
				SendClientMessage(i, col1, str);
			}
			else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
			{
				SendClientMessage(i, col2, str);
			}
			else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
			{
				SendClientMessage(i, col3, str);
			}
			else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
			{
				SendClientMessage(i, col4, str);
			}
			else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
			{
				SendClientMessage(i, col5, str);
			}
		}
	}
	return true;
}
publics: ProxDetectorNew(Float:radi, playerid, str[],col1,col2,col3,col4,col5)
{
	new Float:posx, Float:posy, Float:posz;
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new Float:tempposx, Float:tempposy, Float:tempposz;
	AntiCheatGetPos(playerid, oldposx, oldposy, oldposz);
	SendClientMessage(playerid,col1,str);
	foreach(new i: OnPlayersStream[playerid])
	{
		if(GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i))
		{
			AntiCheatGetPos(i, posx, posy, posz);
			tempposx = (oldposx -posx);
			tempposy = (oldposy -posy);
			tempposz = (oldposz -posz);
			
			if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
			{
				SendClientMessage(i, col1, str);
			}
			else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
			{
				SendClientMessage(i, col2, str);
			}
			else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
			{
				SendClientMessage(i, col3, str);
			}
			else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
			{
				SendClientMessage(i, col4, str);
			}
			else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
			{
				SendClientMessage(i, col5, str);
			}
		}
	}
	return true;
}

publics: ProxDetectorS(Float:radi, playerid, targetid)
{
	if(playerid != INVALID_PLAYER_ID && targetid != INVALID_PLAYER_ID)
	{
		new Float:posx, Float:posy, Float:posz;
		AntiCheatGetPos(targetid, posx, posy, posz);
		if(IsPlayerInRangeOfPoint(playerid, radi, posx, posy, posz)) return true;
	}
	return false;
}
publics: ClearMarriage(playerid)
{
	if(!IsPlayerConnected(playerid))
	{
		new szQuery[56+24];
		mysql_format(DATABASE,szQuery, sizeof szQuery, "UPDATE accounts SET pMarriedTo = '-' WHERE name = '%s'",pData[playerid][pName]);
		mysql_query(DATABASE,szQuery);
	}
	else strmid(pData[playerid][pMarriedTo],"-", 0, strlen("-"), 24);
	return true;
}
public OnPlayerText(playerid, text[])
{
	if(!pData[playerid][pLogin]) return false;
	else if(pData[playerid][pMuted] > 0) 
	{ 
		SendMes(playerid,COLOR_LIGHTRED," У Вас бан чата! До снятия: %i секунд(ы)",pData[playerid][pMuted]);
		return false;
	}

	if OnPlayerEther[playerid] > 0 *then
	{
		switch(pData[playerid][pMember])
		{
		case 9: format(string, 128, " < SF News > Ведущий %s: %s", Name(playerid), text), NewsEither(pData[playerid][pMember], string, 0x0073B7AA);
		case 16: format(string, 128, " < LS News > Ведущий %s: %s", Name(playerid), text), NewsEither(pData[playerid][pMember], string, 0x0073B7AA);
		case 20: format(string, 128, " < LV News > Ведущий %s: %s", Name(playerid), text), NewsEither(pData[playerid][pMember], string, 0x0073B7AA);
		default:
			{
				switch(OnPlayerEther[playerid])
				{
				case 9: format(string, 128, " < [Тел] SF News > %s: %s", Name(playerid), text);
				case 10: format(string, 128, " < SF News > Гость %s: %s", Name(playerid), text);
				case 16: format(string, 128, " < [Тел] LS News > %s: %s", Name(playerid), text);
				case 17: format(string, 128, " < LS News > Гость %s: %s", Name(playerid), text);
				case 20: format(string, 128, " < [Тел] LV News > %s: %s", Name(playerid), text);
				case 21: format(string, 128, " < LV News > Гость %s: %s", Name(playerid), text);
				}
				NewsEither(OnPlayerEther[playerid], string, 0x0073B7AA);
			}
		}
		return false;
	}
	if(Tel[playerid] == 1)
	{
		if(pData[playerid][pMuted] > 0) { SCM(playerid, TEAM_CYAN_COLOR, " У Вас бан чата!"); return false; }
		format(string, 156, " [Телефон] %s: %s", Name(playerid), text);
		ProxDetector(10.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	}
	if(Mobile[playerid] < 1000)
	{
		if(pData[playerid][pMuted] > 0) { SCM(playerid, TEAM_CYAN_COLOR, " У Вас бан чата!"); return false; }
		format(string, 156, " [Телефон] %s: %s", Name(playerid), text);
		if(IsPlayerConnected(Mobile[playerid]) && Mobile[Mobile[playerid]] == playerid) SCM(Mobile[playerid], COLOR_YELLOW,string);
		return false;
	}
	if(strcmp(text, "ку", true) == 0|| strcmp(text, "й", true) == 0 || strcmp(text, "q", true) == 0)
	{
		new rtext[24];
		switch(pData[playerid][pMember])
		{
		case 13: rtext = "Los Santos Vagos Gang";
		case 15: rtext = "Grove Street Gang";
		case 17: rtext = "Varios Los Aztecas Gang";
		case 12: rtext = "The Ballas Gang";
		case 18: rtext = "The Rifa Gang";
		case 24: rtext = "Mongols MC";
		case 26: rtext = "Warlocks MC";
		case 29: rtext = "Pagans MC";
		case 3,19:
			{
				if(!GetPVarInt(playerid,"Fraction_Duty")) return false;
				format(string,156, "Выполнил воинское приветствие");
				SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
				format(string,156, " %s выполнил воинское приветствие", Name(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(playerid, "VENDING", "VEND_Drink_P",4.1, 0, 1, 1, 1, 1);
				SetTimerEx("ClearAnim", 1300, false, "d", playerid);
				return false;
			}
		default:
			{
				format(string,156, "- %s: %s", Name(playerid), text);
				SetPlayerChatBubble(playerid, text, 0x6495EDFF, 20.0, 10000);
				ProxDetector(20.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
				return false;
			}
		}
		new x = GetClosestforeach(playerid);
		if(IsPlayerConnected(x) && ProxDetectorS(2.0, playerid, x) && !IsPlayerInAnyVehicle(x) && pData[x][pMember] == pData[playerid][pMember])
		{
			new Float:angle;
			GetPlayerFacingAngle(playerid, angle);
			SetPlayerFacingAngle(x, angle + 180);
			format(cString, 64, "%s пожал руку %s'у",Name(playerid),Name(x));
			ProxDetector(10.0, playerid, cString, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			ApplyAnimation(playerid, "GANGS", "hndshkfa",4.0,0,0,0,0,0,1);
			ApplyAnimation(x, "GANGS", "hndshkfa",4.0,0,0,0,0,0,1);
			return false;
		}
		format(string,64, "показал(a) распальцовку %s",rtext);
		SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
		format(string,64, " %s показал(a) распальцовку %s", Name(playerid),rtext);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		ApplyAnimation(playerid, "GHANDS", "gsign1LH",4.1, 0, 1, 1, 1, 1);
		SetTimerEx("ClearAnim", 2000, false, "d", playerid);
		return false;
	}
	else if(strcmp(text, "xD", true) == 0 || strcmp(text, "хД", true) == 0 || strcmp(text, "хД", true) == 0 || strcmp(text, "хД", true) == 0 )
	{
		if(pData[playerid][pMuted] > 0) { SCM(playerid, TEAM_CYAN_COLOR, " У Вас бан чата!"); return true; }
		format(string,90, " %s смеется", Name(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		SetPlayerChatBubble(playerid, "смеется", COLOR_PURPLE, 30.0, 10000);
		return false;
	}
	else if(strcmp(text, "чВ", true) == 0 || strcmp(text, "хДД", true) == 0 || strcmp(text, "хДД", true) == 0 || strcmp(text, "xDD", true) == 0)
	{
		if(pData[playerid][pMuted] > 0) { SCM(playerid, TEAM_CYAN_COLOR, " У Вас бан чата!"); return true; }
		format(string,156, " %s валяется от смеха", Name(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		SetPlayerChatBubble(playerid, "валяется от смеха",COLOR_PURPLE,30.0,10000);
		return false;
	}
	else if(strcmp(text, ")", true) == 0 || strcmp(text, "))", true) == 0)
	{
		if(pData[playerid][pMuted] > 0) { SCM(playerid, TEAM_CYAN_COLOR, " У Вас бан чата!"); return true; }
		format(string,90, " %s улыбается", Name(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		SetPlayerChatBubble(playerid, "улыбается",COLOR_PURPLE,30.0,10000);
		return false;
	}
	else if(strcmp(text, ":D", true) == 0)
	{
		if(pData[playerid][pMuted] > 0) { SCM(playerid, TEAM_CYAN_COLOR, " У Вас бан чата!"); return true; }
		format(string,156, " %s хохочет во весь голос", Name(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		SetPlayerChatBubble(playerid, "хохочет во весь голос",COLOR_PURPLE,30.0,10000);
		return false;
	}
	if(GetPVarInt(playerid,"BoneStol"))
	{
		if(pData[playerid][pLogin] == false) return false;
		format(string,156,"- %s: %s",pData[playerid][pName],text);
		foreach(new i: Player)
		{
			if(GetPVarInt(i,"BoneStol") == GetPVarInt(playerid,"BoneStol")) SCM(i,0x9856A9FF,string);
		}
		if(pData[playerid][pState] == PLAYER_STATE_ONFOOT)
		{
			if(PlayerCuffedTime[playerid] == 0) ApplyAnimation(playerid,"PED","IDLE_chat",4.1,0,1,1,1,1);
			if(PlayerCuffedTime[playerid] == 0) SetTimerEx("ClearAnim", 3600, 0, "d", playerid);
		}
		SetPlayerChatBubble(playerid, text, 0x6495EDFF, 20.0, 10000);
		return false;
	}
	else if(realchat)
	{
		if(pData[playerid][pLogin] == false) return false;
		if(pData[playerid][pMuted] > 0){ SendMes(playerid,COLOR_LIGHTRED," У Вас бан чата! До снятия: %i секунд(ы)",pData[playerid][pMuted]); return false;}
		if(pData[playerid][pState] == PLAYER_STATE_ONFOOT && !PlayerCuffedTime[playerid])
		{
			numtext = strlen(text);
			ApplyAnimation(playerid,"PED","IDLE_chat",4.1,0,1,1,1,1,1);
			if(numtext > 50) numtext = 50;
			SetTimerEx("ClearAnim", numtext * 60, false, "d", playerid);
		}
		format_string[0] = EOS;
		strcat(format_string,"- ",sizeof format_string);
		strcat(format_string,pData[playerid][pName],sizeof format_string);
		strcat(format_string,": ",sizeof format_string);
		strcat(format_string,text,sizeof format_string);
		SetPlayerChatBubble(playerid, text, 0x6495EDFF, 20.0, 10000);
		ProxDetectorNew(20.0, playerid, format_string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
		return false;
	}
	return true;
}
publics: Reconkeys(playerid)
{
	new Keys,ud,lr;
	GetPlayerKeys(playerid,Keys,ud,lr);
	if(LastReconClick[playerid][0] != ud) LastReconClick[playerid][0] = 0;
	if(LastReconClick[playerid][1] != lr) LastReconClick[playerid][1] = 0;
	if(Spectate[playerid] && lr == KEY_LEFT && !LastReconClick[playerid][1])
	{
		LastReconClick[playerid][1] = lr;
		PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
		SubTextDelete(playerid);
		DisableEnableReconButton(playerid, ReconSelect[playerid], 1);
		return true;
	}
	if(Spectate[playerid] && lr == KEY_RIGHT && !LastReconClick[playerid][1])
	{
		LastReconClick[playerid][1] = lr;
		PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);

		if(ReconSelectSub[playerid] == INVALID_TEXT_DRAW) OnPlayerClickPlayerTextDraw(playerid, ReconPlayer[ReconSelect[playerid]]);
		else OnPlayerClickPlayerTextDraw(playerid, ReconPlayer[ReconSelectSub[playerid]]);
		return true;
	}
	if(Spectate[playerid] && ud == KEY_UP && !LastReconClick[playerid][0])
	{
		PlayerPlaySound(playerid, 1083, 0.0, 0.0, 0.0);
		LastReconClick[playerid][0] = ud;
		if(ReconSelectSub[playerid] == INVALID_TEXT_DRAW)
		{
			DisableEnableReconButton(playerid, ReconSelect[playerid], 0);
			if(ReconSelect[playerid] <= 7)
			{
				ReconSelect[playerid] = 15;
				DisableEnableReconButton(playerid, ReconSelect[playerid], 1);
			}
			else
			{
				ReconSelect[playerid]--;
				DisableEnableReconButton(playerid, ReconSelect[playerid], 1);
			}
			return true;
		}
		else
		{
			DisableEnableReconButton(playerid, ReconSelectSub[playerid], 0);
			if(ReconSelectSub[playerid] <= ReconBounds[playerid][0])
			{
				ReconSelectSub[playerid] = ReconBounds[playerid][1];
				DisableEnableReconButton(playerid, ReconSelectSub[playerid], 1);
			}
			else
			{
				ReconSelectSub[playerid]--;
				DisableEnableReconButton(playerid, ReconSelectSub[playerid], 1);
			}
		}
	}
	if(Spectate[playerid] && ud == KEY_DOWN && !LastReconClick[playerid][0])
	{
		PlayerPlaySound(playerid, 1083, 0.0, 0.0, 0.0);
		LastReconClick[playerid][0] = ud;
		if(ReconSelectSub[playerid] == INVALID_TEXT_DRAW)
		{
			DisableEnableReconButton(playerid, ReconSelect[playerid], 0);
			if(ReconSelect[playerid] >= 15)
			{
				ReconSelect[playerid] = 7;
				DisableEnableReconButton(playerid, ReconSelect[playerid], 1);
			}
			else
			{
				ReconSelect[playerid]++;
				DisableEnableReconButton(playerid, ReconSelect[playerid], 1);
			}
			return true;
		}
		else
		{
			DisableEnableReconButton(playerid, ReconSelectSub[playerid], 0);
			if(ReconSelectSub[playerid] >= ReconBounds[playerid][1])
			{
				ReconSelectSub[playerid] = ReconBounds[playerid][0];
				DisableEnableReconButton(playerid, ReconSelectSub[playerid], 1);
			}
			else
			{
				ReconSelectSub[playerid]++;
				DisableEnableReconButton(playerid, ReconSelectSub[playerid], 1);
			}
		}
	}
	if(Spectate[playerid] && SpecAd[playerid] != INVALID_PLAYER_ID) return PlayerTextDrawShow(playerid, ReconPlayer[34]);
	return true;
}

publics: ClearAnim(playerid) return ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,0,0,0,0,1);
public OnPlayerUpdate(playerid)
{
	pData[playerid][pAFK] = gettime();
	
	
	if(RouletStol[playerid] > 0 && !RouletBet[playerid])
	{
		new Keys, up, dn, Float:p;
		GetPlayerKeys(playerid,Keys,up,dn);
		GetPlayerFacingAngle(playerid,p);
		switch(RouletStol[playerid])
		{
		case 1..4:
			{
				if(p >= 0.0 && p <= 190.0)
				{
					if(dn < 0) Down(playerid);
					else if(dn > 0) Up(playerid);
					else if(up < 0) Left(playerid);
					else if(up > 0) Right(playerid);
				}
				else
				{
					if(dn > 0) Down(playerid);
					else if(dn < 0) Up(playerid);
					else if(up > 0) Left(playerid);
					else if(up < 0) Right(playerid);
				}
			}
		default:
			{
				if(p >= 0.0 && p <= 130.0 || p >= 290.0 && p <= 360.0)
				{
					if(dn > 0) Down(playerid);
					else if(dn < 0) Up(playerid);
					else if(up > 0) Left(playerid);
					else if(up < 0) Right(playerid);
				}
				else
				{
					if(dn < 0) Down(playerid);
					else if(dn > 0) Up(playerid);
					else if(up < 0) Left(playerid);
					else if(up > 0) Right(playerid);
				}
			}
		}
	}
	if(Spectate[playerid])
	{
		new Keys, up, dn;
		GetPlayerKeys(playerid,Keys,up,dn);
		if(LastReconClick[playerid][0] != up) LastReconClick[playerid][0] = 0;
		if(LastReconClick[playerid][1] != dn) LastReconClick[playerid][1] = 0;
		if(dn == KEY_LEFT && !LastReconClick[playerid][1])
		{
			LastReconClick[playerid][1] = dn;
			PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
			SubTextDelete(playerid);
			DisableEnableReconButton(playerid, ReconSelect[playerid], 1);
			return true;
		}
		if(dn == KEY_RIGHT && !LastReconClick[playerid][1])
		{
			LastReconClick[playerid][1] = dn;
			PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);

			if(ReconSelectSub[playerid] == INVALID_TEXT_DRAW) OnPlayerClickPlayerTextDraw(playerid, ReconPlayer[ReconSelect[playerid]]);
			else OnPlayerClickPlayerTextDraw(playerid, ReconPlayer[ReconSelectSub[playerid]]);
			return true;
		}
		if(up == KEY_UP && !LastReconClick[playerid][0])
		{
			PlayerPlaySound(playerid, 1083, 0.0, 0.0, 0.0);
			LastReconClick[playerid][0] = up;
			if(ReconSelectSub[playerid] == INVALID_TEXT_DRAW)
			{
				DisableEnableReconButton(playerid, ReconSelect[playerid], 0);
				if(ReconSelect[playerid] <= 7)
				{
					ReconSelect[playerid] = 15;
					DisableEnableReconButton(playerid, ReconSelect[playerid], 1);
				}
				else
				{
					ReconSelect[playerid]--;
					DisableEnableReconButton(playerid, ReconSelect[playerid], 1);
				}
				return true;
			}
			else
			{
				DisableEnableReconButton(playerid, ReconSelectSub[playerid], 0);
				if(ReconSelectSub[playerid] <= ReconBounds[playerid][0])
				{
					ReconSelectSub[playerid] = ReconBounds[playerid][1];
					DisableEnableReconButton(playerid, ReconSelectSub[playerid], 1);
				}
				else
				{
					ReconSelectSub[playerid]--;
					DisableEnableReconButton(playerid, ReconSelectSub[playerid], 1);
				}
			}
		}
		if(up == KEY_DOWN && !LastReconClick[playerid][0])
		{
			PlayerPlaySound(playerid, 1083, 0.0, 0.0, 0.0);
			LastReconClick[playerid][0] = up;
			if(ReconSelectSub[playerid] == INVALID_TEXT_DRAW)
			{
				DisableEnableReconButton(playerid, ReconSelect[playerid], 0);
				if(ReconSelect[playerid] >= 15)
				{
					ReconSelect[playerid] = 7;
					DisableEnableReconButton(playerid, ReconSelect[playerid], 1);
				}
				else
				{
					ReconSelect[playerid]++;
					DisableEnableReconButton(playerid, ReconSelect[playerid], 1);
				}
				return true;
			}
			else
			{
				DisableEnableReconButton(playerid, ReconSelectSub[playerid], 0);
				if(ReconSelectSub[playerid] >= ReconBounds[playerid][1])
				{
					ReconSelectSub[playerid] = ReconBounds[playerid][0];
					DisableEnableReconButton(playerid, ReconSelectSub[playerid], 1);
				}
				else
				{
					ReconSelectSub[playerid]++;
					DisableEnableReconButton(playerid, ReconSelectSub[playerid], 1);
				}
			}
		}
	}
	if(Spectate[playerid] && SpecAd[playerid] != INVALID_PLAYER_ID) return PlayerTextDrawShow(playerid, ReconPlayer[34]);
	return true;
}


public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{//	
//	SendMes(playerid,-1,"%d",newkeys);
	if(pData[playerid][pState] == PLAYER_STATE_DRIVER)
	{
	    if(newkeys == KEY_ANALOG_UP) //переключение радио вперед
	    {
	       // PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0);
	        SelectOnlineRadio[playerid] ++;
	        SetPVarInt(playerid, "anti_lag_radio", 2);
	        if(SelectOnlineRadio[playerid] > sizeof(radioOnline)-1)
	        {
	            SelectOnlineRadio[playerid] = -1;
	            PlayerTextDrawSetString(playerid,SpeedRadio[playerid],"Radio: OFF");
	            GameTextForPlayer(playerid, "~y~Radio: OFF", 5000, 6);
	        }
	        else {
		        
		        PlayerTextDrawSetString(playerid,SpeedRadio[playerid],radioOnline[SelectOnlineRadio[playerid]][1][0]);
		        new RadioStr[25];
		        format(RadioStr, sizeof RadioStr, "~y~%s", radioOnline[SelectOnlineRadio[playerid]][1][0]);
		        GameTextForPlayer(playerid, RadioStr, 5000, 6);
			}
	    }
	    if(newkeys == KEY_ANALOG_DOWN) //переключение радио назад
	    {
	       // PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0);
	        SelectOnlineRadio[playerid] --;
	        SetPVarInt(playerid, "anti_lag_radio", 2);
	        if(SelectOnlineRadio[playerid] == -1)
	        {
	           // SelectOnlineRadio[playerid] = -1;
	            PlayerTextDrawSetString(playerid,SpeedRadio[playerid],"Radio: OFF");
	            GameTextForPlayer(playerid, "~y~Radio: OFF", 5000, 6);
	        }
	        else {
		        if(SelectOnlineRadio[playerid] < -1) SelectOnlineRadio[playerid] = sizeof(radioOnline)-1;
		        PlayerTextDrawSetString(playerid,SpeedRadio[playerid],radioOnline[SelectOnlineRadio[playerid]][1][0]);
		        new RadioStr[25];
		        format(RadioStr, sizeof RadioStr, "~y~%s", radioOnline[SelectOnlineRadio[playerid]][1][0]);
		        GameTextForPlayer(playerid, RadioStr, 5000, 6);
			}
	    }
	}
	
	new targetid = GetPlayerTargetPlayer(playerid);
	
	if ( (newkeys & KEY_SPRINT) && (targetid != INVALID_PLAYER_ID) ) {
		if(pData[playerid][pMember] == 11 && GetPVarInt(playerid,"Fraction_Duty"))
		{
			if(!ProxDetectorS(8.0, playerid, targetid)) return SCM(playerid,COLOR_GREY," Игрок должен находиться рядом с вами");
			new listitems[] = " [0] Водительские права\n [1] Лицензия на полёты\n [2] Лицензия на рыболовлю\n [3] Лицензия на вождение водного транспорта\n [4] Лицензия на оружие\n [5] Лицензия на бизнес\n [6] Начать урок\n [7] Завершить урок";
			ShowPlayerDialog(playerid, 7777, DIALOG_STYLE_LIST, "Выдача лицензий", listitems, "Выбрать", "Отмена");
			ChosenPlayer[playerid] = targetid;
			SetPVarInt(ChosenPlayer[playerid],"PlayerSell",playerid);
		}
	}
	if(newkeys & KEY_HANDBRAKE && newkeys & KEY_SECONDARY_ATTACK )
	{
		if(PlayerToPoint(1.0,playerid,768.5205,-2.8860,1000.7214) || PlayerToPoint(1.0,playerid,769.8723,14.4393,1000.6978) || PlayerToPoint(1.0,playerid,2542.0918,-1302.5072,2166.2754) || PlayerToPoint(1.0,playerid,2535.7253,-1302.2716,2166.2754))
		{
			if(GetPVarInt(playerid,"style_clothes") || pData[playerid][pMember] == 19)
			{
				if(pData[playerid][pStyleSkill][1] >= 3) return true;
				if(floatround(pData[playerid][pStyleAmmount]) < 199) pData[playerid][pStyleAmmount] += 0.4;
				else if(floatround(pData[playerid][pStyleAmmount]) == 199)
				{
					if(pData[playerid][pStyleSkill][0] < 10)
					{
						pData[playerid][pStyleAmmount] = 0;
						pData[playerid][pStyleSkill][0]++;
						SendMes(playerid,TEAM_GROVE_COLOR,"Ваш навык боя повышен, осталось %i заходов по 200 ударов",10-pData[playerid][pStyleSkill][0]);
					}
					else
					{
						if(pData[playerid][pStyleSkill][2] >= 10)
						{
							pData[playerid][pStyleSkill][0] = 0;
							pData[playerid][pStyleAmmount] = 0;
							pData[playerid][pStyleSkill][1]++;
							pData[playerid][pStyleSkill][2] = 0;
							SCM(playerid,TEAM_GROVE_COLOR,"Отлично! Вы изучили новое боевое искусство");
							switch(pData[playerid][pStyleSkill][1])
							{
							case 0: SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
							case 1: SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
							default: SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
							}
						}
						else
						{
							pData[playerid][pStyleAmmount] = 0;
							SendMes(playerid,TEAM_GROVE_COLOR,"Вы навык боя повышен, проведите %i боев на ринге для освоения стиля боя",10-pData[playerid][pStyleSkill][2]);
						}
					}
				}
				format(string,32,"~g~NEED: ~w~%i",200-floatround(pData[playerid][pStyleAmmount]));
				GameTextForPlayer(playerid,string, 5000, 3);
			}
		}
	}
	if(newkeys & KEY_SECONDARY_ATTACK && Spectate[playerid])
	{
		DisableEnableReconButton(playerid, ReconSelect[playerid], 0);
		return SelectTextDraw(playerid, 0xD97700AA);
	}
	else if(newkeys & KEY_SUBMISSION && pData[playerid][pState] == PLAYER_STATE_DRIVER)
	{
		cmd_en(playerid);
		if(GetPVarInt(playerid,"PlayerInGarage") && GetPlayerVirtualWorld(playerid) == pData[playerid][pPHouseKey]+100) // если он в гараже
		{
			if(GetPVarInt(playerid,"CarsInGarage") == -1) return SCM(playerid,COLOR_GREY," Все ваши автомобили должны находиться в гараже");
			new house = pData[playerid][pPHouseKey];
			if(IsPlayerInVehicle(playerid, garage_car[playerid][0]))
			{
				SetPVarInt(playerid,"chosencar",0); // Выставляем игроку значение (Выбрана машина №0)
			}
			else if(IsPlayerInVehicle(playerid, garage_car[playerid][1]))
			{
				SetPVarInt(playerid,"chosencar",1); // Выставляем игроку значение (Выбрана машина №1)
			}
			else if(IsPlayerInVehicle(playerid, garage_car[playerid][2]))
			{
				SetPVarInt(playerid,"chosencar",2); // Выставляем игроку значение (Выбрана машина №2)
			}
			else if(IsPlayerInVehicle(playerid, garage_car[playerid][3]))
			{
				SetPVarInt(playerid,"chosencar",3); // Выставляем игроку значение (Выбрана машина №3)
			}
			else if(IsPlayerInVehicle(playerid, garage_car[playerid][4]))
			{
				SetPVarInt(playerid,"chosencar",4); // Выставляем игроку значение (Выбрана машина №4)
			}
			else if(IsPlayerInVehicle(playerid, garage_car[playerid][5]))
			{
				SetPVarInt(playerid,"chosencar",5); // Выставляем игроку значение (Выбрана машина №4)
			}
			else return true;
			house_car[playerid] = GetPlayerVehicleID(playerid); // Выставим значение машине игрока (house_car)
			SetPVarInt(playerid, "CarsInGarage", -1); // Выставим значение игроку (Не все машины игрока в гараже)
			SetVehiclePos(house_car[playerid], HouseInfo[house][hCarx], HouseInfo[house][hCary], HouseInfo[house][hCarz]);
			SetVehicleZAngle(house_car[playerid], HouseInfo[house][hCarc]);
			SetVehicleVirtualWorld(house_car[playerid], 0);
			LinkVehicleToInterior(house_car[playerid], 0);
			SetPlayerWeather(playerid, ServWeather);
			SetPlayerTime(playerid, ServHour,ServMinute);
			foreach(new i: Player)
			{
				if(IsPlayerInVehicle(i, house_car[playerid]))
				{
					//new her = GetPlayerVehicleSeat(i);
					SetPlayerInterior(i,0);
					SetPlayerVirtualWorld(i,0);
					//SetPlayerPos(i,HouseInfo[house][hCarx], HouseInfo[house][hCary], HouseInfo[house][hCarz]);
					//PutPlayerInVehicle(i, house_car[playerid], her);
					SetPlayerWeather(i, ServWeather);
					SetPlayerTime(i, ServHour,ServMinute);
				}
			}
		}
	}
	else if(newkeys & KEY_YES)
	{
 		if(pData[playerid][pState] == PLAYER_STATE_ONFOOT || pData[playerid][pState] == PLAYER_STATE_DRIVER)
		{
			if(EnterGarage[playerid] > gettime()) return true;
			
			EnterGarage[playerid] = gettime()+(pData[playerid][pState]*2);
			EnterExitGarage(playerid);
		}
	}
	else if(newkeys & KEY_NO)
	{
	}
	if(newkeys & KEY_SPRINT && Spectate[playerid])
	{
		PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
		if(ReconSelectSub[playerid] == INVALID_TEXT_DRAW) OnPlayerClickPlayerTextDraw(playerid, ReconPlayer[ReconSelect[playerid]]);
		else OnPlayerClickPlayerTextDraw(playerid, ReconPlayer[ReconSelectSub[playerid]]);
		return true;
	}
	if(PRESSED(8))
	{
		if(GetPVarInt(playerid,"job_auto") && GetVehicleModel(GetNearestVehicle(playerid)) == GetPVarInt(playerid,"job_auto"))
		{
			if(IsPlayerInAnyVehicle(playerid)) return true;
			if(GetPVarInt(playerid,"PlayerInGarage")) return SCM(playerid,COLOR_GREY," Автомобили, находящиеся в гараже нельзя угонять!");
			GetVehicleParamsEx(GetNearestVehicle(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
			if(doors == 0) return SCM(playerid,COLOR_GREY," Замок автомобиля уже открыт!");
			ApplyAnimation(playerid,"BD_FIRE","wash_up",4.1,1,1,1,1,0);
			if(job_auto_timer_check[playerid] != -1)
			{
				KillTimer(job_auto_timer_check[playerid]);
				job_auto_timer_check[playerid] = -1;
			}
			job_auto_timer_check[playerid] = SetTimerEx("Ugon", 20000, false, "ii", playerid,GetNearestVehicle(playerid));
			SetPVarInt(playerid,"job_auto_check",1);
			SCM(playerid,COLOR_BLUE," Вы пытаетесь взломать замок автомобиля (( Не отпускайте клавишу 20 секунд )) ");
		}
	}
	else if (RELEASED(8))
	{
		if(IsPlayerInAnyVehicle(playerid) || !GetPVarInt(playerid,"job_auto_check")) return true;
		if(job_auto_timer_check[playerid] != -1)
		{
			KillTimer(job_auto_timer_check[playerid]);
			job_auto_timer_check[playerid] = -1;
		}
		ClearAnim(playerid);
		DeletePVar(playerid,"job_auto_check");
	}
	if(newkeys & KEY_CROUCH)
	{
		if(PlayerToPoint(3.0,playerid,-2438.7942,524.3234,29.6306))
		{
			if (pData[playerid][pState] == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, -2501.9170,524.2781,491.5463);
				SetPlayerPos(playerid, -2501.9170,524.2781,491.5463);
				PutPlayerInVehicle(playerid,tmpcar,0);
				SetVehicleZAngle(tmpcar, 273.4404);
			}
		}
		else if(PlayerToPoint(3.0,playerid,-2500.6748,534.4558,491.7077))
		{
			if (pData[playerid][pState] == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, -2443.1113,524.0466,29.6310);
				SetPlayerPos(playerid, -2443.1113,524.0466,29.6310);
				PutPlayerInVehicle(playerid,tmpcar,0);
				SetVehicleZAngle(tmpcar, 180.2442);
			}
		}
		else if(PlayerToPoint(8.0,playerid,-2074.50000000,-94.90000153,35.00000000))
		{
			if(pData[playerid][pState] != PLAYER_STATE_DRIVER) return true;
			cmd_instopen(playerid);
		}
		else if(PlayerToPoint(10.0,playerid,2203.7639160156,-2252.0620117188,13.5))
		{
			if(pData[playerid][pState] != PLAYER_STATE_DRIVER) return true;
			cmd_prodopen(playerid);
		}
	}
	if(newkeys & KEY_CROUCH)
	{
		if(pData[playerid][pMember] == 19 || pData[playerid][pLeader] == 19 || IsAFbi(playerid) || proverkaforma[playerid] == 1)
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 416 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 432 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 433) return SCM(playerid,COLOR_GREY, " Попробуйте в объезд!");
			if(PlayerToPoint(8.0,playerid,290.2172,1822.6295,17.6406) && GetPlayerState(playerid) == 2)
			{
				SetVehiclePos(tmpcar, 282.0428, 1822.5503, 17.6406);
			}
			else if(PlayerToPoint(8.0,playerid,282.0428,1822.5503,17.6406) && GetPlayerState(playerid) == 2)
			{
				SetVehiclePos(tmpcar, 290.2172,1822.6295,17.6406);
			}
		}
		else if(pData[playerid][pState] == PLAYER_STATE_ONFOOT || pData[playerid][pState] == PLAYER_STATE_DRIVER)
		{
			if(EnterGarage[playerid] > gettime()) return true;

			EnterGarage[playerid] = gettime()+(pData[playerid][pState]*2);
			EnterExitGarage(playerid);
		}
	}
	if(newkeys & 16)
	{
		if(SERIU[playerid][sID] != INVALID_PLAYER_ID)
		{
			SelectTextDraw(playerid, 0xFF9933FF);
		}
	}
	if(newkeys == 1024)
	{
		if(GetPVarInt(playerid,"fish_began"))
		{
			switch(GetPVarInt(playerid,"fish_ready"))
			{
			case 0:
				{
					
					if(!GetPVarInt(playerid,"fish_gear")) return SCM(playerid,0x81DA99AA," У вас нет снастей");
					else
					{
						ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 6.1, 0, 0, 0, 0, 0,1);
						SCM(playerid,0x81DA99AA," Вы оснастили удочку");
						SetPVarInt(playerid,"fish_gear",GetPVarInt(playerid,"fish_gear")-1);
						SetPVarInt(playerid,"fish_ready",1);
						UpdateFish(playerid);
					}
				}
			case 1:
				{
					if(!GetPVarInt(playerid,"fish_worms")) return SCM(playerid,0x81DA99AA," У вас нет червей");
					else
					{
						ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 6.1, 0, 0, 0, 0, 0,1);
						SCM(playerid,0x81DA99AA," Вы наживили червя");
						SetPVarInt(playerid,"fish_worms",GetPVarInt(playerid,"fish_worms")-1);
						SetPVarInt(playerid,"fish_ready",2);
						UpdateFish(playerid);
					}
				}
			case 2:
				{
					SetPVarInt(playerid,"fish_time", gettime() + 3);
					ApplyAnimation(playerid,"SWORD","sword_IDLE",50.0,0,1,1,1,1);
					SetPVarInt(playerid,"fish_ready",3);
					SetPVarInt(playerid,"fish_chanse",99);
					SCM(playerid,0x81DA99AA," Вы закинули удочку. Следите за поплавком, когда он опустится - подсекайте");
					GameTextForPlayer(playerid,"~b~!",4000,6);
					UpdateFish(playerid);
				}
			case 3:
				{
					new kg, info = random(10);
					if(GetPVarInt(playerid,"fish_chanse") < 3)
					{
						ClearAnim(playerid);
						DeletePVar(playerid,"fish_chanse");
						SetPVarInt(playerid,"fish_ready",1);
						ApplyAnimation(playerid,"SWORD","sword_part",50.0,0,0,0,0,0);
						if(info == 1) return SCM(playerid,0x81DA99AA," Рыба сорвалась");
						switch(GetPVarInt(playerid,"fish_chanse"))
						{
						case 0:
							{
								ApplyAnimation(playerid,"SWORD","sword_part",50.0,0,0,0,0,0);
								kg = 0;
								GameTextForPlayer(playerid,"~g~~n~!", 100, 6);
							}
						case 1:
							{
								ApplyAnimation(playerid,"SWORD","sword_part",50.0,0,0,0,0,0);
								if(info == 2) return SCM(playerid,0x81DA99AA," Рыба сорвалась и оборвала снасти"), SetPVarInt(playerid,"fish_ready",0);
								kg = 10;
								GameTextForPlayer(playerid,"~n~~n~~y~!", 100, 6);
							}
						case 2:
							{
								ApplyAnimation(playerid,"SWORD","sword_part",50.0,0,0,0,0,0);
								if(info == 2) return SCM(playerid,0x81DA99AA," Рыба сорвалась и оборвала снасти"), SetPVarInt(playerid,"fish_ready",0);
								kg = 20;
								GameTextForPlayer(playerid,"~n~~n~~r~~n~!", 100, 6);
							}
						}
						ApplyAnimation(playerid,"SWORD","sword_part",50.0,0,0,0,0,0);
						format(YCMDstr,24,"%i.%i",random(40)+kg,random(99));
						new Float:kg_ = floatstr(YCMDstr);
						SendMes(playerid,0x81DA99AA," Вы поймали %s весом %.2f кг",FishNames[random(18)],kg_);
						pData[playerid][pFishes]+=kg_;
						Sonar[IsAtFishPlace(playerid)]-=kg_;
						if(Sonar[IsAtFishPlace(playerid)] < 0) Sonar[IsAtFishPlace(playerid)] = 0;
						UpdateFish(playerid);
						if(!PlayerLicenses(playerid, LICENSES_GET, LIC_FISHING) && pData[playerid][pWantedLevel] < 6)
						{
							SetPlayerWantedLevelEx(playerid, 1);
							pData[playerid][pZakonp] -= 1;
							SetPlayerCriminal(playerid,"Неизвестный", "Нелегальная рыбалка");
						}
					}
					else SCM(playerid,0x81DA99AA," Вы ничего не поймали");ApplyAnimation(playerid,"SWORD","sword_part",50.0,0,0,0,0,0);
				}
			}
		}
	}
	if(newkeys == 1024)
	{
		if(GetPlayerVirtualWorld(playerid) >= 50000)
		{
			if(GetPlayerVirtualWorld(playerid) >= 50000)
			{// меню квартиры
				cmd_kmenu(playerid);
				return 1;
			}
		}
		if(GetPVarInt(playerid, !#pPickHouseId)) 
		{
			new int = HouseInfo[(GetPVarInt(playerid, !#pPickHouseId)-1)][hInt];
			if(IsPlayerInRangeOfPoint(playerid, 3,interior_info[int][int_x],interior_info[int][int_y],interior_info[int][int_z]))
			{
				cmd_hmenu(playerid);
				return 1;
			}
		}

	}
	
	if (!(newkeys & KEY_SECONDARY_ATTACK) && oldkeys & KEY_SECONDARY_ATTACK)
	{	
		if(GetPVarInt(playerid, "id_kvart_enter"))
		{
			new id_kv = GetPVarInt(playerid, "id_kvart_enter")-1;
			if(GetPlayerVirtualWorld(playerid) >= 50000)
			{// выход из квартиры
				new padik = kvart_info[id_kv][k_padik];
				new p_int = podeezd_info[padik][p_hint];
				new n_kv = kvart_info[id_kv][k_number];	

				SetPlayerPos(playerid, kvar_pos[p_int][n_kv][0],kvar_pos[p_int][n_kv][1],kvar_pos[p_int][n_kv][2]);
				SetPlayerFacingAngle(playerid, podeezd_ints[p_int][3]);
				SetPlayerInterior(playerid, floatround(podeezd_ints[p_int][4]) );
				SetPlayerVirtualWorld(playerid, podeezd_info[padik][p_word]+ kvart_info[id_kv][k_floor]);
			}
			else
			{//вход 
				new kv_int = kvart_info[id_kv][k_int];
				SetPlayerInterior(playerid,interior_info[kv_int][int_int]);
				SetPlayerVirtualWorld(playerid,50000+id_kv);
				SetPlayerPos(playerid,interior_info[kv_int][int_x],interior_info[kv_int][int_y],interior_info[kv_int][int_z]);
			}
		}
		if(GetPVarInt(playerid, !#pPickHouseId))cmd_exit(playerid);
		
	}
	if(newkeys == KEY_SPRINT) // метка
	{
		if(RouletStol[playerid] && !RouletBet[playerid] && !RouletPlay[RouletStol[playerid]]) 
		{
			switch(RouletStol[playerid])
			{
			case 1,5,12: ShowPlayerDialog(playerid,5576,DIALOG_STYLE_INPUT,"Ставка","Минимальная ставка: 500 вирт\nМаксимальняа ставка: 5000 вирт\nВведите сумму:","Играть","Закрыть");
			case 2,7,10: ShowPlayerDialog(playerid,5576,DIALOG_STYLE_INPUT,"Ставка","Минимальная ставка: 2000 вирт\nМаксимальняа ставка: 20000 вирт\nВведите сумму:","Играть","Закрыть");
			case 3,8,11: ShowPlayerDialog(playerid,5576,DIALOG_STYLE_INPUT,"Ставка","Минимальная ставка: 5000 вирт\nМаксимальняа ставка: 50000 вирт\nВведите сумму:","Играть","Закрыть");
			case 4,6,9: ShowPlayerDialog(playerid,5576,DIALOG_STYLE_INPUT,"Ставка","Минимальная ставка: 10000 вирт\nМаксимальняа ставка: 100000 вирт\nВведите сумму:","Играть","Закрыть");
			}
		}

	}
	else if(HOLD(KEY_SPRINT | KEY_HANDBRAKE) && pData[playerid][pState] == PLAYER_STATE_ONFOOT)
	{

		if(IsACop(playerid) || IsAFbi(playerid) || IsAMayor(playerid))
		{
			if( (GetPlayerWeapon(playerid) == 24 || GetPlayerWeapon(playerid) == 25) )
			{
				if(NewTazer[playerid] == false)
				{
					NewTazer[playerid] = true;
					SCM(playerid,COLOR_BLUE," Вы поменяли пули на резиновые");
					SCM(playerid,COLOR_BLUE," Для быстрой смены пуль, зажмите клавижу ПРОБЕЛ");
				}
				else
				{
					NewTazer[playerid] = false;
					SCM(playerid,COLOR_BLUE," Вы поменяли пули на обычные");
					SCM(playerid,COLOR_BLUE," Для быстрой смены пуль, зажмите клавижу ПРОБЕЛ");
				}
			}
		}
	}
	else if((newkeys & KEY_HANDBRAKE) && !(oldkeys & 128)) // mols,medls,ammols
	{
		if(PlayerToPoint(15,playerid,206.3746,-8.2411,1001.2109)) // магазин одежды 2 - LS, 1 - SF
		{
			if(IsAGang(playerid))
			{
				new virt = GetPlayerVirtualWorld(playerid);
				new unixtime = gettime();
				
				if((virt == 2 && RobTimer[rMOLS] > unixtime) || (virt == 1 && RobTimer[rMOSF] > unixtime)) return true;
				
				new ActorTarget = GetPlayerCameraTargetActor(playerid);
				
				if(ActorTarget != INVALID_ACTOR_ID)
				{	
					new allgang = 0;
					foreach(new i: Player)
					{
						if(PlayerToPoint(15,i,206.3746,-8.2411,1001.2109) && GetPlayerVirtualWorld(i) == virt && pData[i][pMember] == pData[playerid][pMember])
						{
							allgang++;
						}
					}
					new PlayerWeapon = GetPlayerWeapon(playerid);
					if(23 <= PlayerWeapon <= 25 || 29 <= PlayerWeapon <= 32)
					{
						if(allgang > 2)
						{
							if(virt == 2) RobTimer[rMOLS] = unixtime + 1800;
							else RobTimer[rMOSF] = unixtime + 1800;
							
							ApplyActorAnimation(ActorTarget, "SHOP", "SHP_HandsUp_Scr",4.1,0,0,0,1,0);
							RobTickRTC[playerid] = 30;
							robscdtimer[playerid] = SetTimerEx("RobTickRTSC", 1000, true, "dddi", playerid, 0, virt, ActorTarget);
						}
						else SCM(playerid, COLOR_GREY, " Для начала ограбления нужно минимум 2 напарника");
					}
				}
			}
		}
		else if(PlayerToPoint(15,playerid,313.8442,-132.5220,999.6016)) //оружейный магазин 0. LS
		{
			if(IsAMafia(playerid))
			{
				new virt = GetPlayerVirtualWorld(playerid);
				new unixtime = gettime();
				
				if(RobTimer[rAmmoLS] > unixtime) return true;
				
				new ActorTarget = GetPlayerCameraTargetActor(playerid);
				
				if(ActorTarget != INVALID_ACTOR_ID)
				{	
					new allgang = 0;
					foreach(new i: Player)
					{
						if(PlayerToPoint(15,i,313.8442,-132.5220,999.6016) && GetPlayerVirtualWorld(i) == virt && pData[i][pMember] == pData[playerid][pMember])
						{
							allgang++;
						}
					}
					new PlayerWeapon = GetPlayerWeapon(playerid);
					if(23 <= PlayerWeapon <= 25 || 29 <= PlayerWeapon <= 32)
					{
						if(allgang > 2)
						{
							RobTimer[rAmmoLS] = unixtime + 1800;
							
							ApplyActorAnimation(ActorTarget, "SHOP", "SHP_HandsUp_Scr",4.1,0,0,0,1,0);
							RobTickRTC[playerid] = 30;
							robscdtimer[playerid] = SetTimerEx("RobTickRTSC", 1000, true, "dddi", playerid, 1, virt, ActorTarget);
						}
						else SCM(playerid, COLOR_GREY, " Для начала ограбления нужно минимум 2 напарника");
					}
				}
			}
		} 
	}
	if(!(newkeys & KEY_SECONDARY_ATTACK) && oldkeys & KEY_SECONDARY_ATTACK)
	{
	    if(IsPlayerInDynamicArea(playerid, Fortune[0]) || IsPlayerInDynamicArea(playerid, Fortune[1]) || IsPlayerInDynamicArea(playerid, Fortune[2]))
		{
	    	ShowPlayerDialog(playerid,2255,DIALOG_STYLE_LIST,"Сделайте ставку","X2\nX4\nX8\nX16\nX32","Выбрать","Отмена");
		}
		for(new i = 1;i <= TotalBizz; i++)
		{
			if(PlayerToPoint(2, playerid,BizzInfo[i][bBarX], BizzInfo[i][bBarY], BizzInfo[i][bBarZ]) && BizzInfo[i][bType] == 1 && GetPlayerVirtualWorld(playerid) == BizzInfo[i][bVirtualWorld])
			{
				if(strcmp(BizzInfo[i][bOwner],"None",true) == 0 || BizzInfo[i][bLocked]) return SCM(playerid, COLOR_GREY, " Бизнес закрыт");
				format(YCMDstr,sizeof(YCMDstr), "Вода\t\t[%i вирт]\nСода\t\t[%i вирт]\nТоник\t\t[%i вирт]\nКока-кола\t[%i вирт]\nПиво\t\t[%i вирт]\nСаке\t\t[%i вирт]\nВодка\t\t[%i вирт]\nВино\t\t[%i вирт]\nВиски\t\t[%i вирт]\nКоньяк\t\t[%i вирт]\nАбсент\t\t[%i вирт]",
				BizzInfo[i][bPrice],BizzInfo[i][bPrice],BizzInfo[i][bPrice],BizzInfo[i][bPrice]*2,BizzInfo[i][bPrice]*2,BizzInfo[i][bPrice]*3,BizzInfo[i][bPrice]*3,BizzInfo[i][bPrice]*4,BizzInfo[i][bPrice]*5,BizzInfo[i][bPrice]*5,BizzInfo[i][bPrice]*6);
				ShowPlayerDialog(playerid, 2289, DIALOG_STYLE_LIST, "Меню Бара", YCMDstr, "Выбрать", "Отмена");
			}
			else if(PlayerToPoint(2, playerid,BizzInfo[i][bBarX], BizzInfo[i][bBarY], BizzInfo[i][bBarZ]) && BizzInfo[i][bType] == 3 && GetPlayerVirtualWorld(playerid) == BizzInfo[i][bVirtualWorld]) cmd_buy(playerid);
		}
		if(GetRoulet(playerid))
		{
			if(RouletStol[playerid] > 0) return ShowPlayerDialog(playerid,5490,DIALOG_STYLE_MSGBOX,"Рулетка: Выход","Вы действительно хотите выйти из-за стола?","Выход","Отмена");
			if(GetPVarInt(playerid,"CasinoRank") > 0) return SCM(playerid,COLOR_GREY," Крупье не может играть!");
			new null = 0;
			foreach(new i: Player) if(RouletStol[i] == GetRoulet(playerid)) null++;
			if(null > 4) return SCM(playerid,COLOR_GREY," За этим столом нет свободных мест!");
			switch(GetRoulet(playerid))
			{
			case 1: SetPVarFloat(playerid,"RX",1962.96), SetPVarFloat(playerid,"RY",1026.88), SetPVarFloat(playerid,"RZ",992.33);
			case 2: SetPVarFloat(playerid,"RX",1958.36), SetPVarFloat(playerid,"RY",1026.88), SetPVarFloat(playerid,"RZ",992.33);
			case 3: SetPVarFloat(playerid,"RX",1958.36), SetPVarFloat(playerid,"RY",1008.88), SetPVarFloat(playerid,"RZ",992.33);
			case 4: SetPVarFloat(playerid,"RX",1962.96), SetPVarFloat(playerid,"RY",1008.88), SetPVarFloat(playerid,"RZ",992.33);

			case 5: SetPVarFloat(playerid,"RX",2230.31), SetPVarFloat(playerid,"RY",1619.56), SetPVarFloat(playerid,"RZ",1006.06);
			case 6: SetPVarFloat(playerid,"RX",2241.89), SetPVarFloat(playerid,"RY",1619.56), SetPVarFloat(playerid,"RZ",1006.06);
			case 7: SetPVarFloat(playerid,"RX",2230.31), SetPVarFloat(playerid,"RY",1613.56), SetPVarFloat(playerid,"RZ",1006.06);
			case 8: SetPVarFloat(playerid,"RX",2241.89), SetPVarFloat(playerid,"RY",1613.56), SetPVarFloat(playerid,"RZ",1006.06);

			case 9: SetPVarFloat(playerid,"RX",2230.31), SetPVarFloat(playerid,"RY",1594.56), SetPVarFloat(playerid,"RZ",1006.06);
			case 10: SetPVarFloat(playerid,"RX",2241.89), SetPVarFloat(playerid,"RY",1594.56), SetPVarFloat(playerid,"RZ",1006.06);
			case 11: SetPVarFloat(playerid,"RX",2230.31), SetPVarFloat(playerid,"RY",1588.56), SetPVarFloat(playerid,"RZ",1006.06);
			case 12: SetPVarFloat(playerid,"RX",2241.89), SetPVarFloat(playerid,"RY",1588.56), SetPVarFloat(playerid,"RZ",1006.06);
			}
			new Float:pos[6];
			AntiCheatGetPos(playerid,pos[0],pos[1],pos[2]);
			RouletBet[playerid] = 0;
			RouletStol[playerid] = GetRoulet(playerid);
			SetPVarFloat(playerid,"RXONE",GetPVarFloat(playerid,"RX"));
			SetPVarFloat(playerid,"RYONE",GetPVarFloat(playerid,"RY"));
			SetPVarFloat(playerid,"RZONE",GetPVarFloat(playerid,"RZ"));
			SetPVarFloat(playerid,"RNumber",0);
			new obj = CreateObject(random(5) + 1912,GetPVarFloat(playerid,"RX"),GetPVarFloat(playerid,"RY"),GetPVarFloat(playerid,"RZ"),0.00,0.00,0.00);
			RouletObject[playerid] = obj;
			GetObjectPos(obj, pos[3], pos[4], pos[5]);
			SetPlayerCameraPos(playerid,pos[0],pos[1],pos[2]+0.8);
			SetPlayerCameraLookAt(playerid,pos[3],pos[4],pos[5]);
			SCM(playerid,COLOR_WHITE," Игра начата. Сделайте ставку");
			TogglePlayerControllable(playerid, 0);
			PlayerTextDrawShow(playerid,RouletText[playerid]);
			return PlayerTextDrawSetString(playerid,RouletText[playerid],"~<~~>~~up~~down~~n~~g~Money: none~n~~y~Bet: none");
		}
		else if(IsPlayerNearBone(playerid) != -1)
		{
			new null = -1;
			for(new i = 0; i != 5; i++) if(BoneInfo[IsPlayerNearBone(playerid)][Gamer][i] == INVALID_PLAYER_ID) { null = i; break; }
			if(GetPVarInt(playerid,"CasinoRank") && BoneInfo[IsPlayerNearBone(playerid)][Crupie] != INVALID_PLAYER_ID) return SCM(playerid,COLOR_GREY," Тут уже работает крупье!");
			if(GetPVarInt(playerid,"BoneStol")) return SCM(playerid,COLOR_GREY," Ты уже зарегистрирован на другом столе!");
			if(null == -1 && !GetPVarInt(playerid,"CasinoRank")) return SCM(playerid,COLOR_GREY," За этим столом нет свободных мест!");
			if(!GetPVarInt(playerid,"CasinoRank")) BoneInfo[IsPlayerNearBone(playerid)][Gamer][null] = playerid;
			else BoneInfo[IsPlayerNearBone(playerid)][Crupie] = playerid;
			for(new i; i != 4; i++) TextDrawShowForPlayer(playerid,Bone[i]), PlayerTextDrawShow(playerid,PlayerBone[playerid][i]);
			SetPVarInt(playerid,"BoneStol",IsPlayerNearBone(playerid)+1);
			SelectTextDraw(playerid,0x33AAFFFF);
			return UpdateBone(IsPlayerNearBone(playerid));
		}
	}
	if(newkeys & KEY_FIRE || PRESSED(KEY_FIRE) || PRESSED(132)) button_fire[playerid] = true;
	if( (newkeys & KEY_FIRE) || ( (newkeys & KEY_AIM) && (oldkeys & KEY_AIM) && (newkeys & KEY_SECONDARY_ATTACK) ) )
	{
		new weaponid = GetPlayerWeapon(playerid);
		if(weaponid == 17 && pData[playerid][pState] == PLAYER_STATE_ONFOOT)
		{
			if(IsAFbi(playerid))
			{
				foreach(new i: Player)
				{
					new Float:x, Float:y, Float:z;
					AntiCheatGetPos(playerid,x,y,z);
					GetXYInFrontOfPlayer(playerid,x,y,15.0);
					if(PlayerToPoint(15.0,i, x,y,z) && GetPlayerInterior(i) == GetPlayerInterior(playerid)
							&& GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid) && PlayerCuffed[i] == 0 && i != playerid) SetTimerEx("gas",2500,0,"i",i);
				}
			}
		}
	}
	if( (newkeys & KEY_FIRE) || ( (newkeys & KEY_AIM) && (oldkeys & KEY_AIM) && (newkeys & KEY_SECONDARY_ATTACK) ) )
	{
		if(IsAArm(playerid) || IsACop(playerid) || IsAMayor(playerid) || IsAFbi(playerid) || pData[playerid][pAdmin] > 0) return true;
		if(!GetPVarInt(playerid, "in_anti_dm_zone")) return true;
		if(IsPlayerInAnyVehicle(playerid)) return true;
		ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,7000,1);
	}
	if(newkeys & KEY_SPRINT && newkeys & KEY_JUMP && pData[playerid][pState] != 2 && PlayerSpeed(playerid) >= 18 && GetPVarInt(playerid,"AntiBunny") < 1) ApplyAnimation(playerid,"PED","getup_front",6.0,0,0,0,0,0),SetPVarInt(playerid,"AntiBunny",2); // Anti Bunny
	if((newkeys & 1 && !(oldkeys & 1)) && pData[playerid][pState] == PLAYER_STATE_DRIVER) cmd_slimit(playerid);

	if(!(newkeys & KEY_SECONDARY_ATTACK) && oldkeys & KEY_SECONDARY_ATTACK)
	{
		if(GetPVarInt(playerid, "vozle_atm") )
		{
			if(!IsPlayerInAnyVehicle(playerid)) cmd_atm(playerid);
		}
		
	}
	if(2 <= pData[playerid][pState] <= 3 && (newkeys & 2)) // окно открыть
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if(!vehicleid) return true;
		new seat = GetPlayerVehicleSeat(playerid);
		
		if (~(pDWindow[vehicleid] >> seat) & 1)
		{
			pDWindow[vehicleid] |= (1 << seat);
			SetVehicleParamsCarWindows(vehicleid, (pDWindow[vehicleid] >> 0) & 1, (pDWindow[vehicleid] >> 1) & 1, (pDWindow[vehicleid] >> 2) & 1, (pDWindow[vehicleid] >> 3) & 1);
		}
		else
		{
			pDWindow[vehicleid] &= ~(1 << seat);
			SetVehicleParamsCarWindows(vehicleid, (pDWindow[vehicleid] >> 0) & 1, (pDWindow[vehicleid] >> 1) & 1, (pDWindow[vehicleid] >> 2) & 1, (pDWindow[vehicleid] >> 3) & 1);
		}
	}
	return true;
}

stock PlayerSpeed(playerid)
{
	new Float:X, Float:Y, Float:Z;
	if(!IsPlayerInAnyVehicle(playerid)) GetPlayerVelocity(playerid,X,Y,Z);
	return floatround( floatsqroot( X * X + Y * Y + Z * Z ) * 170.0 );
}

public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	if(pData[playerid][pMember] == 11 && GetPVarInt(playerid,"Fraction_Duty"))
	{
		if(!ProxDetectorS(8.0, playerid, clickedplayerid)) return SCM(playerid,COLOR_GREY," Игрок должен находиться рядом с вами");
		if(!GetPVarInt(playerid,"Fraction_Duty")) return SCM(playerid,COLOR_GRAD1, " Вам нужно начать рабочий день в автошколе");
		new listitems[] = " [0] Водительские права\n [1] Лицензия на полёты\n [2] Лицензия на рыболовлю\n [3] Лицензия на вождение водного транспорта\n [4] Лицензия на оружие\n [5] Лицензия на бизнес\n [6] Начать урок\n [7] Завершить урок";
		ShowPlayerDialog(playerid, 7777, DIALOG_STYLE_LIST, "Выдача лицензий", listitems, "Выбрать", "Отмена");
		ChosenPlayer[playerid] = clickedplayerid;
		SetPVarInt(ChosenPlayer[playerid],"PlayerSell",playerid);
	}
	return false;
}
publics: GiveMoney(playerid, amount)
{
	pData[playerid][pCash] += amount;
	GivePlayerMoney(playerid, amount);
}
publics: ResetMoney(playerid)
{
	pData[playerid][pCash] = 0;
	ResetPlayerMoney(playerid);
}
stock IsAnAmbulance(carid)
{
	if(carid >= medicssf[0] && carid <= medicssf[7] || carid == medmav || carid >= medicsls[0] && carid <= medicsls[5] || carid >= medicsls1[0] && carid <= medicsls1[5] || carid >= medicslv[0] && carid <= medicslv[8]) return true;
	return false;
}
stock CarLic(carid)
{
	switch (GetVehicleModel(carid))
	{
	case 400..416,418..424,426..429,431..445,449,451,455,456,458,459,461: return true;
	case 463,466..468,470,471,474,475,477..480,482,483,485,486,489..492,494..496,498..508: return true;
	case 514..518,521..531,533..537,539..547,549..551,554..562,564..568,572..576,578..583,585..589,596..605,609: return true;
	}
	return false;
}

PlayerToKvadrat(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y)
{
	new Float: pos_x, Float: pos_y, Float: pos_z;
	AntiCheatGetPos(playerid, pos_x, pos_y, pos_z);
	if((pos_x <= max_x && pos_x >= min_x) && (pos_y <= max_y && pos_y >= min_y)) return true;
	return false;
} 
stock GetGangZoneColor(gangzonex)
{
	new zx;
	switch(GZInfo[gangzonex][gFrakVlad])
	{
	case 12: zx = 0xd200ff99;
	case 13: zx = 0xcfbe0899;
	case 15: zx = 0x06b50699;
	case 17: zx = 0x03c3b899;
	case 18: zx = 0x007fffAA;
	default: zx = 0xFEFEFEAA;
	}
	return zx;
}
stock GetGZColorF(fnumber)
{
	new zx;
	switch(fnumber)
	{
	case 12: zx = 0xFF0000AA;
	case 13: zx = 0xFF0000AA;
	case 15: zx = 0xFF0000AA;
	case 17: zx = 0xFF0000AA;
	case 18: zx = 0xFF0000AA;
	}
	return zx;
}
stock GetNearestVehicle(playerid)
{
	foreach(new i: Vehicle)
	{
		if(GetVehicleModel(i))
		{
			new Float:X,Float:Y,Float:Z;
			AntiCheatGetVehiclePos(i,X,Y,Z);
			if(PlayerToPoint(3.5, playerid, X, Y, Z))return i;
		}
	}
	return -1;
}
stock IsInAllowedF(fnumbers)
{
	for(new i =0;i<sizeof(allowedfactions);i++) if(fnumbers == allowedfactions[i]) return true;
	return false;
}
stock GetGangName(fnumbwer)
{
	new str[30];
	switch(fnumbwer)
	{
	case 12: format(str,sizeof(str), "BALLAS");
	case 13: format(str,sizeof(str), "VAGOS");
	case 15: format(str,sizeof(str), "GROVE");
	case 17: format(str,sizeof(str), "AZTECAS");
	case 18: format(str,sizeof(str), "RIFA");
	}
	return str;
}
stock GetMafiaName(fnumbwer)
{
	new str[25];
	switch(fnumbwer)
	{
	case 5: format(str,sizeof(str), "LCN");
	case 6: format(str,sizeof(str), "Yakuza");
	case 14: format(str,sizeof(str), "Russian Mafia");
	}
	return str;
}

publics: OffSp(playerid) DeletePVar(playerid,"sp_warn");

public OnVehicleDeath(vehicleid, killerid)
{
	car_data[vehicleid][Driver] 		= INVALID_PLAYER_ID;

	if(car_data[vehicleid][JobText] != Text3D:INVALID_3DTEXT_ID)
	{ // если есть 3д на тачке
 		Delete3DTextLabel(car_data[vehicleid][JobText]);
   		car_data[vehicleid][JobText]   = Text3D:INVALID_3DTEXT_ID;
	}
	
	if(car_data[vehicleid][Temp])
	{
	    if(IsValidDynamicObject(police[vehicleid])) DestroyDynamicObject(police[vehicleid]);

	   
	 	car_data[vehicleid][Owner] = INVALID_PLAYER_ID;
	 	car_data[vehicleid][Temp] = false;
	 	car_data[vehicleid][TypeCar] = 0;
	 	DestroyVehicleEX(vehicleid);
	}
	foreach(new i: Player)
	{
		if(job_car[i] == vehicleid && IsATanker(vehicleid))
		{
			if(GetVehicleTrailer(job_car[i]) != 0 || trailer_id[i] != 0)
			{
				SCM(i, 0xFF6347AA, "Вы потеряли свой грузовик");
				SCM(i, 0xFF6347AA, "Вы потеряли свой груз");
				trailer_on[i] = 0;
				trailer_id[i] = 0;
				SetVehicleToRespawn(job_car[i]);
				DestroyVehicleEX(GetVehicleTrailer(job_car[i]));
				pData[i][pDgruz] = 0;
				loaded_type[i] = 0;
				job_car[i] = 0;
			}
			else if(GetVehicleTrailer(job_car[i]) == 0)
			{
				SCM(i, 0xFF6347AA, "Вы потеряли свой грузовик");
				SetVehicleToRespawn(job_car[i]);
				job_car[i] = 0;
			}
		}
	}
	SetVehicleParamsEx(vehicleid,false,false,false,false,false,false,false);
	
	if(car_data[vehicleid][Temp])
	{
	 	DestroyVehicleEX(vehicleid);
	 	car_data[vehicleid][Temp] = false;
	}
	return true;
}

public OnVehicleSpawn(vehicleid)
{
    car_data[vehicleid][Driver] 		= INVALID_PLAYER_ID;

	if(car_data[vehicleid][JobText] != Text3D:INVALID_3DTEXT_ID)
	{ // если есть 3д на тачке
 		Delete3DTextLabel(car_data[vehicleid][JobText]);
   		car_data[vehicleid][JobText]   = Text3D:INVALID_3DTEXT_ID;
	}
	
	if(car_data[vehicleid][Temp])
	{
	    if(IsValidDynamicObject(police[vehicleid])) DestroyDynamicObject(police[vehicleid]);
	   
	 	car_data[vehicleid][Owner] = INVALID_PLAYER_ID;
	 	car_data[vehicleid][Temp] = false;
	 	car_data[vehicleid][TypeCar] = 0;
	 	DestroyVehicleEX(vehicleid);
	}

	SetVehicleParamsEx(vehicleid,false,false,false,false,false,false,false);

	if(vehicleid >= g_szGangBoats[0] && vehicleid <= g_szGangBoats[4])
	{
		if(IsValidDynamicPickup(g_szGangBoatStat[vehicleid][e_iPickup]))
		{
			new _arrayData[2];
			Streamer_GetArrayData(STREAMER_TYPE_PICKUP, g_szGangBoatStat[vehicleid][e_iPickup], E_STREAMER_EXTRA_ID, _arrayData);
			DestroyDynamicPickup(g_szGangBoatStat[vehicleid][e_iPickup]);
			DestroyDynamic3DTextLabel(Text3D:_arrayData[1]);
		}
		g_szGangBoatStat[vehicleid][e_iPickup] = 0;
		g_szGangBoatStat[vehicleid][e_iMaterials] = 0;
		g_szGangBoatStat[vehicleid][e_bLoading] = E_MATERIALS_EMPTY;
	}

	if(vehicleid == lsacarvert[0]) load_mats_lsa = 0;
	if(vehicleid >= armycarsf[24] && vehicleid <= armycarsf[28]) load_mats[vehicleid-armycarsf[24]] = 0;
	if(vehicleid >= matsfura[0] && vehicleid <= matsfura[4]) MatsGang[vehicleid-matsfura[0]] = 0;

	SetVehicleParamsEx(vehicleid,false,false,false,false,false,false,false);

	if(vehicleid >= liccar[0] && vehicleid <= liccar[9] || vehicleid >= hotdogcar[0] && vehicleid <= hotdogcar[1] 
			|| vehicleid >= mehanik[0] && vehicleid <= mehanik[12]
			|| vehicleid >= rentcarvip[0] && vehicleid <= rentcarvip[8] || vehicleid >= rentcarsf[0] && vehicleid <= rentcarsf[6] || vehicleid >= rentcarlv[0] && vehicleid <= rentcarlv[17]
			|| vehicleid >= rentcarls[0] && vehicleid <= rentcarls[8] || vehicleid >= tanker_train[0] && vehicleid <= tanker_train[7]
			|| vehicleid >= buscar[0] && vehicleid <= buscar[7] || vehicleid >= comptruck[0] && vehicleid <= comptruck[9]) car_data[vehicleid][fuell] = 200;
//	if(vehicleid >= taxi5lvlcar[0] && vehicleid <= taxi5lvlcar[9] || vehicleid >= taxi10lvlcar[0] && vehicleid <= taxi10lvlcar[15]) AttachObjectToVehicle(police[vehicleid], vehicleid, 0.000000, -0.400000, 0.854999, 0.000000, 0.000000, 0.0);
	if(car_pickup[vehicleid] > 0 && GetVehicleModel(vehicleid) != 433) Delete3DTextLabel(car_text[vehicleid]), DestroyDynamicPickup(car_pickup[vehicleid]), car_pickup[vehicleid] = 0;
	if(Farmcar_pickup[vehicleid] > 0) Delete3DTextLabel(Farmcar_text[vehicleid]), DestroyDynamicPickup(Farmcar_pickup[vehicleid]), Farmcar_pickup[vehicleid] = 0;
	if(Farmcar_pickup[vehicleid] > 0) Delete3DTextLabel(Farmcar_text[vehicleid]), DestroyDynamicPickup(Farmcar_pickup[vehicleid]), Farmcar_pickup[vehicleid] = 0;
	if(vehicleid == hamccar[10])
	{
		bFuri[vehicleid-hamccar[10]][bHells][0] = 0; // Сбрасываем материалы
		bFuri[vehicleid-hamccar[10]][bHells][2] = 0;  // Сбрасываем бензин
		bFuri[vehicleid-hamccar[10]][bHells][1] = 0; // Сбрасываем алкоголь
	}
	else if(vehicleid == wmccar[10])
	{
		bFuri[vehicleid-wmccar[10]][bWarlocks][0] = 0; // Сбрасываем материалы
		bFuri[vehicleid-wmccar[10]][bWarlocks][2] = 0;  // Сбрасываем бензин
		bFuri[vehicleid-wmccar[10]][bWarlocks][1] = 0; // Сбрасываем алкоголь
	}
	else if(vehicleid == pmccar[10])
	{
		bFuri[vehicleid-pmccar[10]][bPagans][0] = 0; // Сбрасываем материалы
		bFuri[vehicleid-pmccar[10]][bPagans][2] = 0;  // Сбрасываем бензин
		bFuri[vehicleid-pmccar[10]][bPagans][1] = 0; // Сбрасываем алкоголь
	}
	foreach(new i: Player)
	{
		if(tookmoped[i] == vehicleid && tookmoped[i] > 0) DestroyVehicleEX(tookmoped[i]), tookmoped[i] = 0;
		if(GetPVarInt(i,"took_faggio") == vehicleid && GetPVarInt(i,"took_faggio") > 0)
		{
			DestroyVehicleEX(vehicleid);
			DeletePVar(i,"took_faggio");
		}
	}
	foreach(new i: Player)
	{
		if(pData[i][pPHouseKey] != INVALID_HOUSE_ID)
		{
			if(vehicleid == house_car[i] && HouseInfo[pData[i][pPHouseKey]][hKlass] < 2) 
			{
				car_data[house_car[i]][fuell] = CarInfo[i][carFuel][GetPVarInt(i,"chosencar")];
				SetVehicleParamsEx(vehicleid,false,false,false,true,false,false,false);
				LoadTuning(i,house_car[i],GetPVarInt(i,"chosencar"));
			}
			if(vehicleid == garage_car[i][GetPVarInt(i,"chosencar")] && HouseInfo[pData[i][pPHouseKey]][hKlass] > 1)
			{ 
				DestroyHouseCars(i);
				SpawnHouseCars(i);
			}
		}
	}
	//for(new i = 0; i < 5; i++) if(vehicleid == taxi5lvlcar[i]) police[taxi5lvlcar[i]] = CreateObject(19308,0,0,0,0,0,0), AttachObjectToVehicle(police[taxi5lvlcar[i]], taxi5lvlcar[i], 0.000000, -0.400000, 0.854999, 0.000000, 0.000000, 0.0);
	//for(new i = 0; i < 8; i++) if(vehicleid == taxi10lvlcar[i]) police[taxi10lvlcar[i]] = CreateObject(19308,0,0,0,0,0,0), AttachObjectToVehicle(police[taxi10lvlcar[i]], taxi10lvlcar[i], -0.014999, -0.140000, 0.919999, -1.005000, 0.000000, 0.0);
	return true;
}
publics: Random(min, max)
{
	new a = random(max - min) + min;
	return a;
}
publics: PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new Float:tempposx, Float:tempposy, Float:tempposz;
	AntiCheatGetPos(playerid, oldposx, oldposy, oldposz);
	tempposx = (oldposx -x);
	tempposy = (oldposy -y);
	tempposz = (oldposz -z);
	if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) return true;
	return false;
}

stock IsAPistol(gunid)
{
	if(gunid >= 22 && gunid <=24) return true;
	return false;
}
stock IsAMelee(gunid)
{
	if(gunid >= 2 && gunid <= 9 ) return true;
	return false;
}
stock IsAGirlsStuff(gunid)
{
	if(gunid >= 10 && gunid <= 15 || gunid == 46) return true;
	return false;
}
stock IsAGrenade(gunid)
{
	if((gunid >= 16 && gunid <= 18) || gunid == 39) return true;
	return false;
}
stock IsAShotgun(gunid)
{
	if(gunid >= 25 && gunid <= 27) return true;
	return false;
}
stock IsAMachineGun(gunid)
{
	if(gunid == 28 || gunid == 29 || gunid == 32) return true;
	return false;
}
stock IsAnAssault(gunid)
{
	if(gunid == 30 || gunid == 31) return true;
	return false;
}
stock IsARifle(gunid)
{
	if(gunid == 33 || gunid == 34) return true;
	return false;
}
stock IsAHeavyAssault(gunid)
{
	if(gunid >= 35 && gunid <= 37 ) return true;
	return false;
}
stock IsAStuff1(gunid)
{
	if(gunid >= 41 && gunid <= 43 ) return true;
	return false;
}
stock GetSRVMoney(playerid) return pData[playerid][pCash];

publics: GetMoney()
{
	foreach(new i: Player) if(pData[i][pCash] != GetPlayerMoney(i)) ResetPlayerMoney(i), GivePlayerMoney(i, pData[i][pCash]);
}
stock UnLockCar(playerid,carid)
{
	if(pData[playerid][pState] == PLAYER_STATE_DRIVER)
	{
		if(!IsAPlane(carid) && !IsABoat(carid) && !IsABike(carid) && AutoSaloon[playerid] != true)
		{
			//PlayerTextDrawColor(playerid,StatusShow[playerid], 0x20B220AA);
			//PlayerTextDrawSetString(playerid,StatusShow[playerid],"Unlock");
		//	PlayerTextDrawShow(playerid,StatusShow[playerid]);
		}
	}
	GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
	return SetVehicleParamsEx(carid,engine,lights,alarm,false,bonnet,boot,objective);
}

publics: UpdateSpeedometr(playerid)
{
    if(pData[playerid][pState] != PLAYER_STATE_DRIVER) return true;
    
	new vehicleid = GetPlayerVehicleID(playerid);
	new speedstr[10];
	
	GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
	
	new speed = SpeedVehicle(playerid);
	format(speedstr,sizeof speedstr,"%i KM/H",speed);
	
	if(pData[playerid][pDrivingSkill] > 0 && !IsANoLimiter(vehicleid))
	{
		switch(pData[playerid][pDrivingSkill])
		{
		case 1..300: if(speed > 50) format(speedstr,sizeof speedstr, "50 KM/H");
		case 301..600: if(speed > 45) format(speedstr,sizeof speedstr, "45 KM/H");
		case 601..900: if(speed > 40) format(speedstr,sizeof speedstr, "40 KM/H");
		case 901..1200: if(speed > 35) format(speedstr,sizeof speedstr, "35 KM/H");
		}
	}
	
//	PlayerTextDrawSetString(playerid,FuelShow[playerid],str2);
	PlayerTextDrawSetString(playerid,KmSpeed[playerid],speedstr);
	return true;
}
public OnPlayerGiveDamage(playerid, damagedid, Float: amount, weaponid, bodypart)
{	
	//SendClientMessage(playerid, -1, "гив дамаг типо");
	if(Death{damagedid} || pData[playerid][pLevel] < 2) return true;
	
	if(NewTazer[playerid] && (weaponid == 24 || weaponid == 25)) return 0;
	
	if((weaponid == 23 && ProxDetectorS(40.0, playerid, damagedid))
			|| (weaponid == 24 && ProxDetectorS(50.0, playerid, damagedid) && !NewTazer[playerid])
			|| (weaponid == 25 && ProxDetectorS(55.0, playerid, damagedid) && !NewTazer[playerid])
			|| (weaponid == 29 && ProxDetectorS(60.0, playerid, damagedid))
			|| (30 <= weaponid <= 31 && ProxDetectorS(85.0, playerid, damagedid))
			|| (weaponid == 33 && ProxDetectorS(100.0, playerid, damagedid))
			|| (ProxDetectorS(1.5, playerid, damagedid))
			&& GetPlayerWeapon(playerid) == weaponid && weaponid == WeaponInfo[playerid][wWeapon][GetWeaponSlot(weaponid)])
	{
		new Float:Damage_1, Float:Damage_2, Float:Damage_3;
		
		GetPlayerHealth(damagedid, Damage_1);
		GetPlayerArmour(damagedid, Damage_2);
		if(Damage_2 > 0)
		{
			if(amount > Damage_2)
			{
				Damage_3 = amount - Damage_2;
				Damage_1 -= Damage_3;
				SetPlayerArmour(damagedid, 0.0);
				SetPlayerHealth(damagedid, Damage_1);
				if(Damage_1 < 1)
				{
					Death{damagedid} = 2;
					foreach(new i: Player)
					{
						if(dostup[i])
						{
							SendDeathMessageToPlayer(i,playerid, damagedid, weaponid);
						}
					}
					if(pData[damagedid][pWantedLevel] > 0)
					{
						if(IsACop(damagedid) || IsAFbi(damagedid))
						{
							if(!IsACop(damagedid) && !IsAFbi(damagedid) && !IsAArm(damagedid) && PaintReg{damagedid} != 2)
							{
								pData[damagedid][pMestoJail] = 1;
								pData[damagedid][pJailTime] = 600*pData[damagedid][pWantedLevel];
								SendMes(damagedid,COLOR_LIGHTRED, " Вы посажены в тюрьму на %i секунд!",600*pData[damagedid][pWantedLevel]);
								SendMes(damagedid,COLOR_YELLOW, " Вы посадили преступника на %i секунд!",600*pData[damagedid][pWantedLevel]);

								SetPlayerWantedLevelEx(damagedid, -6);
								//SaveMySQL(2,damagedid);
							}
						}
					}
					if(IsAArm(damagedid) && pData[damagedid][pPayCheck] < 20000)
					{
						if(IsAGang(damagedid))
						{
							if(PlayerToKvadrat(damagedid, -49.979476, 1695.982177, 414.020507, 2175.982177) || PlayerToKvadrat(damagedid, 2634.4395, -2562.5022, 2861.7734, -2320.1594) || PlayerToKvadrat(damagedid, -1544.892, 270.5747, -1232.015, 558.5571))
							{
								if(PlayerToKvadrat(damagedid, -49.979476, 1695.982177, 414.020507, 2175.982177) || PlayerToKvadrat(damagedid, 2634.4395, -2562.5022, 2861.7734, -2320.1594) || PlayerToKvadrat(damagedid, -1544.892, 270.5747, -1232.015, 558.5571))
								{
									pData[damagedid][pPayCheck] += 500;
									SetAccountInfo(damagedid, pData[damagedid][pPayCheck], "pPayCheck");
									GameTextForPlayer(damagedid, "~g~+$500", 5000, 1);
								}
							}
						}
					}
					for(new x = 1; x <= TOTALGZ; x++)
					{
						if(ZoneOnBattle[x] == 1)
						{
							if(pData[damagedid][pMember] == GZInfo[x][gNapad] && pData[damagedid][pMember] != pData[damagedid][pMember] ||
									pData[damagedid][pMember] == GZInfo[x][gFrakVlad] && pData[damagedid][pMember] != pData[damagedid][pMember])
							{
								if(pData[damagedid][pMember] == GZInfo[x][gNapad] || pData[damagedid][pMember] == GZInfo[x][gFrakVlad])
								{
									foreach(new i: Player)
									{
										if( (pData[i][pMember] == GZInfo[x][gNapad] || pData[i][pMember] == GZInfo[x][gFrakVlad]) && !pData[i][pAdmin] ) SendDeathMessageToPlayer(i,damagedid, damagedid, weaponid);
									}
									if(PlayerToKvadrat(damagedid,GZInfo[x][gCoords][0], GZInfo[x][gCoords][1],GZInfo[x][gCoords][2],GZInfo[x][gCoords][3]) && PlayerToKvadrat(playerid,GZInfo[x][gCoords][0], GZInfo[x][gCoords][1],GZInfo[x][gCoords][2],GZInfo[x][gCoords][3]))
									{
										CountOnZone[pData[damagedid][pMember]] ++;
									}
									else if(!PlayerToKvadrat(damagedid,GZInfo[x][gCoords][0], GZInfo[x][gCoords][1],GZInfo[x][gCoords][2],GZInfo[x][gCoords][3]) || !PlayerToKvadrat(playerid,GZInfo[x][gCoords][0], GZInfo[x][gCoords][1],GZInfo[x][gCoords][2],GZInfo[x][gCoords][3]))
									{
										SetPlayerColor(playerid, TEAM_HIT_COLOR);
										SetPlayerColor(damagedid, TEAM_HIT_COLOR);
										SetPlayerToTeamColor(playerid);
										SetPlayerToTeamColor(damagedid);
									}
								}
							}
						}
					}
					if(ZoneTimer > 0 && ZoneTimer < 1200) // Убийство на войне за бизнес
					{
						for(new x = 1;x <= TotalBizz; x++) // смерть и счетчик киллов на терре мафии
						{
							if(BizzInfo[x][bCapture] != 0)
							{
								if(pData[playerid][pMember] == BizzInfo[x][bCapture] && pData[playerid][pMember] != pData[damagedid][pMember] ||
										pData[playerid][pMember] == BizzInfo[x][bMafia] && pData[playerid][pMember] != pData[damagedid][pMember])
								{
									if(pData[damagedid][pMember] == BizzInfo[x][bCapture] || pData[damagedid][pMember] == BizzInfo[x][bMafia])
									{
										if(PlayerToKvadrat(damagedid,208.99609375, 2479.546875, 357.99609375, 2551.546875) || PlayerToKvadrat(playerid,286.9487,871.2994,402.0977,926.5380) || PlayerToKvadrat(playerid,-1889.1348,-1751.2496, -1830.0239, -1560.2955)) // Заброшка
										{
											CountOnZone[pData[playerid][pMember]] ++;
											foreach(new i: Player)
											{
												if( (pData[i][pMember] == BizzInfo[x][bCapture] || pData[i][pMember] == BizzInfo[x][bMafia] ) && !pData[i][pAdmin] ) SendDeathMessageToPlayer(i,playerid, damagedid, weaponid);
											}
										}
									}
								}
							}
						}
					}
					if(pData[playerid][pMember] == 12 || pData[playerid][pMember]==13 || pData[playerid][pMember]==15 || pData[playerid][pMember]==17 || pData[playerid][pMember]==18)
					{
						if((IsAArm(damagedid) || IsACop(damagedid)) && !GetPlayerInterior(damagedid) && GetPVarInt(damagedid,"Fraction_Duty"))
						{
							for(new x = 1; x <= TOTALGZ; x++)
							{
								if(PlayerToKvadrat(damagedid,GZInfo[x][gCoords][0], GZInfo[x][gCoords][1],GZInfo[x][gCoords][2],GZInfo[x][gCoords][3]))
								{
									if(IsAArm(damagedid))
									{
										if(GetPlayerSkin(damagedid) == 252 || pData[damagedid][pModel] == 252) { }
										else
										{
											forma[playerid] = 1;
											pData[damagedid][pModel] = 252;
											SetAccountInfo(damagedid, pData[damagedid][pModel], "pModel");
											SCM(damagedid,  COLOR_YELLOW, " С вас сняли форму, получите новую в магазине одежды");
											SCM(playerid,  COLOR_YELLOW, " Вы cняли с трупа военную форму (( Чтобы одеть используйте /switchskin ))");
											if(pData[playerid][pZakonp] > 1) pData[playerid][pZakonp] -= 2;
											SetAccountInfo(playerid, pData[playerid][pZakonp], "pZakonp");
										}
									}
									else if(IsACop(damagedid))
									{
										if(pData[damagedid][pKeys] != 0)
										{
											pData[playerid][pKeys] = pData[damagedid][pKeys];
											pData[damagedid][pKeys] = 0;
											SetKeyLostInfo(damagedid);
											if(pData[playerid][pKeys] > 5) pData[playerid][pKeys] = 5;
											SetAccountInfo(damagedid, pData[damagedid][pKeys], "pKeys");
											SetAccountInfo(playerid, pData[playerid][pKeys], "pKeys");
											SendMes(playerid,  COLOR_YELLOW, " Вы обыскали труп и нашли ключ от камеры {FFFFFF}(( У вас %i / 5 ключей ))",pData[playerid][pKeys]);
											if(pData[playerid][pZakonp] > 1) pData[playerid][pZakonp] -= 2;
											SetAccountInfo(playerid, pData[playerid][pZakonp], "pZakonp");
										}
										else SCM(playerid, COLOR_YELLOW, " Вы обыскали труп и не нашли ключей от камеры");
									}
								}
							}
						}
					}
					if(!IsACop(playerid) && !IsAFbi(playerid) && !IsAArm(playerid) && !IsAMayor(playerid) && PaintReg{damagedid} != 2)
					{
						if(!IsAGang(damagedid) && !IsAMafia(damagedid))
						{
							if(IsACop(damagedid))
							{
								SetPlayerWantedLevelEx(playerid, 3);
								
								SetPlayerCriminal(playerid,"Неизвестный", "Убийство полицейского");
							}
							else if(IsAFbi(damagedid))
							{
								SetPlayerWantedLevelEx(playerid, 6);
								SetPlayerCriminal(playerid,"Неизвестный", "Убийство Агента ФБР");
							}
							else if(pData[damagedid][pMember] == 0)
							{
								SetPlayerWantedLevelEx(playerid, 3);
								SetPlayerCriminal(playerid,"Неизвестный", "Убийство человека");
							}
						}
					}					
				}
				return true;	
			}
			Damage_2 -= amount;
			SetPlayerArmour(damagedid, Damage_2);
		}		
		if(Damage_2 < 1)
		{
			Damage_1 -= amount;
			SetPlayerHealth(damagedid, Damage_1);
			if(Damage_1 < 1)
			{
				Death{damagedid} = 2;
				foreach(new i: Player)
				{
					if(dostup[i])
					{
						SendDeathMessageToPlayer(i,playerid, damagedid, weaponid);
					}
				}
				if(pData[damagedid][pWantedLevel] > 0)
				{
					if(IsACop(playerid) || IsAFbi(playerid))
					{
						if(!IsACop(damagedid) && !IsAFbi(damagedid) && !IsAArm(damagedid) && PaintReg{damagedid} != 2)
						{
							pData[damagedid][pMestoJail] = 1;
							pData[damagedid][pJailTime] = 600*pData[damagedid][pWantedLevel];
							SendMes(damagedid,COLOR_LIGHTRED, " Вы посажены в тюрьму на %i секунд!",600*pData[damagedid][pWantedLevel]);
							SendMes(playerid,COLOR_YELLOW, " Вы посадили преступника на %i секунд!",600*pData[damagedid][pWantedLevel]);
							SetPlayerWantedLevelEx(damagedid, -6);
						}
					}
				}
				if(IsAArm(playerid) && pData[playerid][pPayCheck] < 20000)
				{
					if(IsAGang(damagedid))
					{
						if(PlayerToKvadrat(playerid, -49.979476, 1695.982177, 414.020507, 2175.982177) || PlayerToKvadrat(playerid, 2634.4395, -2562.5022, 2861.7734, -2320.1594) || PlayerToKvadrat(playerid, -1544.892, 270.5747, -1232.015, 558.5571))
						{
							if(PlayerToKvadrat(damagedid, -49.979476, 1695.982177, 414.020507, 2175.982177) || PlayerToKvadrat(damagedid, 2634.4395, -2562.5022, 2861.7734, -2320.1594) || PlayerToKvadrat(damagedid, -1544.892, 270.5747, -1232.015, 558.5571))
							{
								pData[playerid][pPayCheck] += 500;
								SetAccountInfo(playerid, pData[playerid][pPayCheck], "pPayCheck");
								GameTextForPlayer(playerid, "~g~+$500", 5000, 1);
							}
						}
					}
				}
				for(new x = 1; x <= TOTALGZ; x++)
				{
					if(ZoneOnBattle[x] == 1)
					{
						if(pData[playerid][pMember] == GZInfo[x][gNapad] && pData[playerid][pMember] != pData[damagedid][pMember] ||
								pData[playerid][pMember] == GZInfo[x][gFrakVlad] && pData[playerid][pMember] != pData[damagedid][pMember])
						{
							if(pData[damagedid][pMember] == GZInfo[x][gNapad] || pData[damagedid][pMember] == GZInfo[x][gFrakVlad])
							{
								foreach(new i: Player)
								{
									if( (pData[i][pMember] == GZInfo[x][gNapad] || pData[i][pMember] == GZInfo[x][gFrakVlad] ) && !pData[i][pAdmin]) SendDeathMessageToPlayer(i,playerid, damagedid, weaponid);
								}
								if(PlayerToKvadrat(damagedid,GZInfo[x][gCoords][0], GZInfo[x][gCoords][1],GZInfo[x][gCoords][2],GZInfo[x][gCoords][3]) && PlayerToKvadrat(playerid,GZInfo[x][gCoords][0], GZInfo[x][gCoords][1],GZInfo[x][gCoords][2],GZInfo[x][gCoords][3]))
								{
									CountOnZone[pData[playerid][pMember]] ++;
								}
								else if(!PlayerToKvadrat(damagedid,GZInfo[x][gCoords][0], GZInfo[x][gCoords][1],GZInfo[x][gCoords][2],GZInfo[x][gCoords][3]) || !PlayerToKvadrat(playerid,GZInfo[x][gCoords][0], GZInfo[x][gCoords][1],GZInfo[x][gCoords][2],GZInfo[x][gCoords][3]))
								{
									SetPlayerColor(playerid, TEAM_HIT_COLOR);
									SetPlayerColor(damagedid, TEAM_HIT_COLOR);
									SetPlayerToTeamColor(playerid);
									SetPlayerToTeamColor(damagedid);
								}
							}
						}
					}
				}
				if(ZoneTimer > 0 && ZoneTimer < 1200) // Убийство на войне за бизнес
				{
					for(new x = 1;x <= TotalBizz; x++) // смерть и счетчик киллов на терре мафии
					{
						if(BizzInfo[x][bCapture] != 0)
						{
							if(pData[playerid][pMember] == BizzInfo[x][bCapture] && pData[playerid][pMember] != pData[damagedid][pMember] ||
									pData[playerid][pMember] == BizzInfo[x][bMafia] && pData[playerid][pMember] != pData[damagedid][pMember])
							{
								if(pData[damagedid][pMember] == BizzInfo[x][bCapture] || pData[damagedid][pMember] == BizzInfo[x][bMafia])
								{
									if(PlayerToKvadrat(damagedid,208.99609375, 2479.546875, 357.99609375, 2551.546875) || PlayerToKvadrat(playerid,286.9487,871.2994,402.0977,926.5380) || PlayerToKvadrat(playerid,-1889.1348,-1751.2496, -1830.0239, -1560.2955)) // Заброшка
									{
										CountOnZone[pData[playerid][pMember]] ++;
										foreach(new i: Player)
										{
											if( (pData[i][pMember] == BizzInfo[x][bCapture] || pData[i][pMember] == BizzInfo[x][bMafia] ) && !pData[i][pAdmin] ) SendDeathMessageToPlayer(i,playerid, damagedid, weaponid);
										}
									}
								}
							}
						}
					}
				}
				
				if(pData[playerid][pMember] == 12 || pData[playerid][pMember]==13 || pData[playerid][pMember]==15 || pData[playerid][pMember]==17 || pData[playerid][pMember]==18)
				{
					if((IsAArm(damagedid) || IsACop(damagedid)) && !GetPlayerInterior(damagedid) && GetPVarInt(damagedid,"Fraction_Duty"))
					{
						for(new x = 1; x <= TOTALGZ; x++)
						{
							if(PlayerToKvadrat(damagedid,GZInfo[x][gCoords][0], GZInfo[x][gCoords][1],GZInfo[x][gCoords][2],GZInfo[x][gCoords][3]))
							{
								if(pData[damagedid][pMember] == 3 || pData[damagedid][pMember] == 19)
								{
									if(GetPlayerSkin(damagedid) == 252 || pData[damagedid][pModel] == 252) { }
									else
									{
										forma[playerid] = 1;
										pData[damagedid][pModel] = 252;
										SetAccountInfo(damagedid, pData[damagedid][pModel], "pModel");
										SCM(damagedid,  COLOR_YELLOW, " С вас сняли форму, получите новую в магазине одежды");
										SCM(playerid,  COLOR_YELLOW, " Вы cняли с трупа военную форму (( Чтобы одеть используйте /switchskin ))");
										if(pData[playerid][pZakonp] > 0) pData[playerid][pZakonp] -= 2;
										SetAccountInfo(playerid, pData[playerid][pZakonp], "pZakonp");
									}
								}
								else if(pData[damagedid][pMember] == 1 || pData[damagedid][pMember] == 10 || pData[damagedid][pMember] == 21)
								{
									if(pData[damagedid][pKeys] != 0)
									{
										pData[playerid][pKeys] = pData[damagedid][pKeys];
										pData[damagedid][pKeys] = 0;
										SetKeyLostInfo(damagedid);
										if(pData[playerid][pKeys] > 5) pData[playerid][pKeys] = 5;
										SetAccountInfo(damagedid, pData[damagedid][pKeys], "pKeys");
										SetAccountInfo(playerid, pData[playerid][pKeys], "pKeys");
										SendMes(playerid,  COLOR_YELLOW, " Вы обыскали труп и нашли ключ от камеры {FFFFFF}(( У вас %i / 5 ключей ))",pData[playerid][pKeys]);
										if(pData[playerid][pZakonp] > 0) pData[playerid][pZakonp] -= 2;
										SetAccountInfo(playerid, pData[playerid][pZakonp], "pZakonp");
									}
									else SCM(playerid, COLOR_YELLOW, " Вы обыскали труп и не нашли ключей от камеры");
								}
							}
						}
					}
				}
				if(!IsACop(playerid) && !IsAFbi(playerid) && !IsAArm(playerid) && !IsAMayor(playerid) && PaintReg{damagedid} != 2)
				{
					if(!IsAGang(damagedid) && !IsAMafia(damagedid))
					{
						if(IsACop(damagedid))
						{
							SetPlayerWantedLevelEx(playerid, 3);
							SetPlayerCriminal(playerid,"Неизвестный", "Убийство полицейского");
						}
						else if(IsAFbi(damagedid))
						{
							SetPlayerWantedLevelEx(playerid, 6);
							SetPlayerCriminal(playerid,"Неизвестный", "Убийство Агента ФБР");
						}
						else if(pData[damagedid][pMember] == 0)
						{
							SetPlayerWantedLevelEx(playerid, 3);
							SetPlayerCriminal(playerid,"Неизвестный", "Убийство человека");
						}
					}
				}
			}
		}	
	}	
	return true;
}
public OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid, bodypart)
{

	return true;
}

public OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
	UdarPercent[playerid]++;

	if(AntiCheatGetVehicleHealth(vehicleid)  > 0 && AntiCheatGetVehicleHealth(vehicleid)  <= 320)
	{
		GameTextForPlayer(playerid,"~r~ENGINE HAS BROKENED", 5000, 3);
		SetVehicleHealth(vehicleid, 310.0);
		GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(vehicleid,false,false,alarm,doors,bonnet,boot,objective);
	}
	if(GetPlayerVehicleID(playerid) == house_car[playerid] && MinusPercent[playerid] < 1 && UdarPercent[playerid] >= 7)
	{
		MinusPercent[playerid] = 5;
		if(CarInfo[playerid][carPercent][GetPVarInt(playerid,"chosencar")] <= 7) return true;
		if(AntiCheatGetVehicleHealth(vehicleid)  > 900) --CarInfo[playerid][carPercent][GetPVarInt(playerid,"chosencar")];
		UdarPercent[playerid] = 0;
	}
	if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)) && loaded_type[playerid] != 0)
	{
		SetPVarInt(playerid, "GruzUron", GetPVarInt(playerid, "GruzUron")+1);
		if(GetPVarInt(playerid, "GruzUron") > 5)
		{
			if(pData[playerid][pDgruz] == 0) pData[playerid][pDgruz] = 1;
			pData[playerid][pDgruz]--;
			SetPVarInt(playerid, "GruzUdar", 1);
			SCM(playerid, 0xFF6347AA, "Вы потеряли часть груза");
			DeletePVar(playerid, "GruzUron");
			return true;
		}
	}
	new Float: trailhp;
	GetVehicleHealth(GetVehicleTrailer(GetPlayerVehicleID(playerid)), trailhp);
	if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)) && pData[playerid][pDgruz] > 1)
	{
		if(trailhp < 300)
		{
			SCM(playerid, 0xFF6347AA, "Вы потеряли свой груз");
			trailer_on[playerid] = 0;
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			DestroyVehicleEX(GetVehicleTrailer(GetPlayerVehicleID(playerid)));
			trailer_id[playerid] = 0;
			loaded_type[playerid] = 0;
			pData[playerid][pDgruz] = 0;
		}
	}
	return true;
}
stock ConnectedPlayers()
{
	new count;
	foreach(new i: Player)
	{
		count++;
	}
	return count;
}
publics: ChangeName(playerid,str[])
{
	SaveMySQL(2,playerid);
	new szQuery[53+24*2+5];
	mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `accounts` SET `Name`='%e' WHERE `Name` = '%e'",str,Name(playerid));
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `admin` SET `Name`='%e' WHERE `Name` = '%e'",str,Name(playerid));
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `cars` SET `owner`='%e' WHERE `owner` = '%e'",str,Name(playerid));
	mysql_query(DATABASE,szQuery);
	for(new i = 1; i <= TOTALCASINO; i++)
	{
		if(strcmp(pData[playerid][pName],CasinoInfo[i][caManager],true) == 0) strmid(CasinoInfo[i][caManager], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(pData[playerid][pName],CasinoInfo[i][caManager2],true) == 0) strmid(CasinoInfo[i][caManager2], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(pData[playerid][pName],CasinoInfo[i][caManager3],true) == 0) strmid(CasinoInfo[i][caManager3], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(pData[playerid][pName],CasinoInfo[i][caKrupie],true) == 0) strmid(CasinoInfo[i][caKrupie], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(pData[playerid][pName],CasinoInfo[i][caKrupie2],true) == 0) strmid(CasinoInfo[i][caKrupie2], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(pData[playerid][pName],CasinoInfo[i][caKrupie3],true) == 0) strmid(CasinoInfo[i][caKrupie3], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(pData[playerid][pName],CasinoInfo[i][caKrupie4],true) == 0) strmid(CasinoInfo[i][caKrupie4], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(pData[playerid][pName],CasinoInfo[i][caKrupie5],true) == 0) strmid(CasinoInfo[i][caKrupie5], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(pData[playerid][pName],CasinoInfo[i][caKrupie6],true) == 0) strmid(CasinoInfo[i][caKrupie6], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(pData[playerid][pName],CasinoInfo[i][caKrupie7],true) == 0) strmid(CasinoInfo[i][caKrupie7], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(pData[playerid][pName],CasinoInfo[i][caKrupie8],true) == 0) strmid(CasinoInfo[i][caKrupie8], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(pData[playerid][pName],CasinoInfo[i][caKrupie9],true) == 0) strmid(CasinoInfo[i][caKrupie9], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(pData[playerid][pName],CasinoInfo[i][caKrupie10],true) == 0) strmid(CasinoInfo[i][caKrupie10], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
	}
	for(new i = 1; i <= TOTALSHOPS; i++)
	{
		if(strcmp(pData[playerid][pName],WorkshopInfo[i][wDeputy1],true) == 0) strmid(WorkshopInfo[i][wDeputy1], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(pData[playerid][pName],WorkshopInfo[i][wDeputy2],true) == 0) strmid(WorkshopInfo[i][wDeputy2], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(pData[playerid][pName],WorkshopInfo[i][wDeputy3],true) == 0) strmid(WorkshopInfo[i][wDeputy3], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(pData[playerid][pName],WorkshopInfo[i][wMechanic1],true) == 0) strmid(WorkshopInfo[i][wMechanic1], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(pData[playerid][pName],WorkshopInfo[i][wMechanic2],true) == 0) strmid(WorkshopInfo[i][wMechanic2], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(pData[playerid][pName],WorkshopInfo[i][wMechanic3],true) == 0) strmid(WorkshopInfo[i][wMechanic3], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(pData[playerid][pName],WorkshopInfo[i][wMechanic4],true) == 0) strmid(WorkshopInfo[i][wMechanic4], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(pData[playerid][pName],WorkshopInfo[i][wMechanic5],true) == 0) strmid(WorkshopInfo[i][wMechanic5], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
	}
	for(new i = 1; i <= TOTALFARM; i++)
	{
		if(strcmp(pData[playerid][pName],FarmInfo[i][fDeputy_1],true) == 0) strmid(FarmInfo[i][fDeputy_1], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(pData[playerid][pName],FarmInfo[i][fDeputy_2],true) == 0) strmid(FarmInfo[i][fDeputy_2], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(pData[playerid][pName],FarmInfo[i][fDeputy_3],true) == 0) strmid(FarmInfo[i][fDeputy_3], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(pData[playerid][pName],FarmInfo[i][fFarmer_1],true) == 0) strmid(FarmInfo[i][fFarmer_1], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(pData[playerid][pName],FarmInfo[i][fFarmer_2],true) == 0) strmid(FarmInfo[i][fFarmer_2], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(pData[playerid][pName],FarmInfo[i][fFarmer_3],true) == 0) strmid(FarmInfo[i][fFarmer_3], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(pData[playerid][pName],FarmInfo[i][fFarmer_4],true) == 0) strmid(FarmInfo[i][fFarmer_4], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
		if(strcmp(pData[playerid][pName],FarmInfo[i][fFarmer_5],true) == 0) strmid(FarmInfo[i][fFarmer_5], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50);
	}
	if(pData[playerid][pPHouseKey] != INVALID_HOUSE_ID)
	{
	 	strmid(HouseInfo[pData[playerid][pPHouseKey]][hOwner], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), MAX_PLAYER_NAME);
	 	SaveMySQL(5,pData[playerid][pPHouseKey]);
	}
	if(BGet(playerid)) strmid(BizzInfo[pData[playerid][pPBizzKey]][bOwner], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), MAX_PLAYER_NAME), SaveMySQL(4, pData[playerid][pPBizzKey]);
	if(WGet(playerid)) strmid(WorkshopInfo[GetPVarInt(playerid,"wShop")][wOwner], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), MAX_PLAYER_NAME), SaveMySQL(9,GetPVarInt(playerid,"wShop"));
	if(FGet(playerid)) strmid(FarmInfo[pData[playerid][pPFarmKey]][fOwner], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), MAX_PLAYER_NAME), SaveMySQL(9,pData[playerid][pPFarmKey]);
	for(new i = 1; i <= TotalBizz; i++) if(!strcmp(Name(playerid), BizzInfo[i][bNameStavka], true)) { strmid(BizzInfo[i][bNameStavka], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50); }
	for(new i = 1; i <= TOTALSHOPS; i++) if(!strcmp(Name(playerid), WorkshopInfo[i][wAuctionName], true)) { strmid(WorkshopInfo[i][wAuctionName], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50); }
	for(new i = 1; i <= TOTALFARM; i++) if(!strcmp(Name(playerid), FarmInfo[i][fAuctionName], true)) { strmid(FarmInfo[i][fAuctionName], WantNickChange[playerid], 0, strlen(WantNickChange[playerid]), 50); }
	SetPlayerName(playerid, str);
	pData[playerid][pCheckip] = 0;
	L_Kick(playerid,30);
	return true;
}
Convert(number)
{
	new hours = 0, mins = 0, secs = 0, str[100];
	hours = floatround(number / 3600);
	mins = floatround((number / 60) - (hours * 60));
	secs = floatround(number - ((hours * 3600) + (mins * 60)));
	if(hours > 0) format(str, 100, "%i:%02d:%02d", hours, mins, secs);
	else format(str, 100, "%i:%02d", mins, secs);
	return str;
}

publics: LicClose() return MoveDynamicObject(licgate, -2074.50000000,-94.90000153,35.00000000-0.020,0.020, 0.00,90.00,90.00);
publics: GruzClose() return MoveDynamicObject(gruzgate, 2203.8630371094,-2252.1179199219,13.5-0.120,0.120, 0.00,270.00,316.00);
stock GetPlayerID(const str[])
{
	foreach(new i: Player)
	{
		if(strcmp(Name(i), str, false, strlen(str)) == 0) return i;
	}
	return INVALID_PLAYER_ID;
}
stock Expirence(playerid)
{
	new exp = pData[playerid][pDExp];
	new nxtlevel = pData[playerid][pDLevel];
	new expamount = nxtlevel*levelDexp;
	if(exp >= expamount && pData[playerid][pDLevel] != 26)
	{
		pData[playerid][pDLevel] += 1;
		/*pData[playerid][pDMgruz]++;
		if(pData[playerid][pDLevel] == 5) pData[playerid][pDMgruz] = 21;
		if(pData[playerid][pDLevel] == 15) pData[playerid][pDMgruz] = 35;
		if(pData[playerid][pDLevel] == 25) pData[playerid][pDMgruz] = 50;*/
		pData[playerid][pDExp] = 0;
		SCM(playerid, 0x66FBA6FF, "{00D26D}Поздравляем! Ваш навык дальнобойщика улучшился.");
	}
	return true;
}
stock ExpExp(playerid)
{
	switch(pData[playerid][pPProc])
	{
	case 10,20,30,40,50,60,70,80,90,100:
		{
			if(pData[playerid][pPSkill] == 12) return true;
			pData[playerid][pPSkill] += 1;
			pData[playerid][pPMGruz] += 200;
			SCM(playerid, 0x66FBA6FF, "{00D26D}Поздравляем! Ваш навык развозчика улучшился.");
		}
	}
	return true;
}
stock ToDevelopSkills(Slashes,Points)
{
	new SlashesAndPoints[200];
	new Slash[2] = "|";
	new Point[2] = "'";
	for(new i = 0; i < Slashes; i++) strcat(SlashesAndPoints, Slash);
	for(new i = 0; i < Points; i++) strcat(SlashesAndPoints, Point);
	return SlashesAndPoints;
}
stock SetPlayerSkills(playerid)
{
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, pData[playerid][pGunSkill][0]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, pData[playerid][pGunSkill][1]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, pData[playerid][pGunSkill][2]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, pData[playerid][pGunSkill][3]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, pData[playerid][pGunSkill][4]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, pData[playerid][pGunSkill][5]*10);
	return true;
}
stock IsWheelModel(modelid)
{
	new wheelmodels[17] = {1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1096,1097,1098};
	for(new i=0;i<17;i++)
	{
		if (modelid == wheelmodels[i])
		return true;
	}
	return false;
}
stock IsLegalCarNitroIde(carmodel)
{
	new illegalvehs[29] = { 581, 523, 462, 521, 463, 522, 461, 448, 468, 586, 509, 481, 510, 472, 473, 493, 595, 484, 430, 453, 452, 446, 454, 590, 569, 537, 538, 570, 449 };
	for(new i=0;i<29;i++)
	{
		if (carmodel == illegalvehs[i])
		return true;
	}
	return false;
}
stock IsLegal_Nos_Vehicle(PlayerID)
{
	new carid = GetPlayerVehicleID(PlayerID);
	new playercarmodel = GetVehicleModel(carid);
	return IsLegalCarNitroIde(playercarmodel);
}
stock IsLegalCarMod(vehicleide, componentid)
{
	new modok = false;
	if((IsWheelModel(componentid)) || (componentid == 1086) || (componentid == 1087) || ((componentid >= 1008) && (componentid <= 1010)))
	{
		new nosblocker = IsLegalCarNitroIde(vehicleide);
		if (!nosblocker)
		modok = true;
	}
	else
	{
		for(new I=0;I<48;I++)
		{
			if (legalmods[I][0] == vehicleide)
			{
				for(new J = 1; J < 22; J++)
				{
					if (legalmods[I][J] == componentid)
					modok = true;
				}
			}
		}
	}
	return modok;
}
public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
	return true;
}
public OnVehicleMod(playerid, vehicleid, componentid)
{

	return true;
}
publics: AntiBunny(playerid)
{
	ApplyAnimation(playerid, "PED", "getup_front",4.0,0,0,0,0,0);
	SetTimerEx("AntiBunnyHop",1500,false, "i",playerid);
	return true;
}
stock GetSquareDistance(Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2)
{
	x1-= x2;
	y1-= y2;
	z1-= z2;
	x1*= x1;
	y1*= y1;
	z1*= z1;
	return floatround(x1+y1+z1);
}
stock GetPlayerCameraLookAt(playerid, &Float:rX, &Float:rY, &Float:rZ, Float:dist = 10.0)
{
	new Float: locAt[6];
	GetPlayerCameraFrontVector(playerid, locAt[0], locAt[1], locAt[2]);
	GetPlayerCameraPos(playerid, locAt[3], locAt[4], locAt[5]);
	rX = locAt[0] * dist + locAt[3];
	rY = locAt[1] * dist + locAt[4];
	rZ = locAt[2] * dist + locAt[5];
}
stock CanUninviteforeach(playerid,playerid2)
{
	if(pData[playerid][pLeader] >= 1) return true;
	new rank = pData[playerid][pRank];
	if(pData[playerid][pMember] > 0 && pData[playerid2][pMember] > 0 &&
			rank < pData[playerid2][pRank] || !GetPVarInt(playerid,"Fraction_Duty")) return false;
	switch(pData[playerid][pMember])
	{
	case 1:
		{
			switch(rank)
			{
			case 15:return true;
			case 14:return true;
			case 13:return true;
			}
		}
	case 2:
		{
			switch(rank)
			{
			case 10:return true;
			case 9:return true;
			case 8:return true;
			}
		}
	case 3:
		{
			switch(rank)
			{
			case 15:return true;
			case 14:return true;
			case 13:return true;
			}
		}
	case 4:
		{
			switch(rank)
			{
			case 10:return true;
			case 9:return true;
			case 8:return true;
			}
		}
	case 5:
		{
			switch(rank)
			{
			case 10:return true;
			case 9:return true;
			case 8:return true;
			}
		}
	case 6:
		{
			switch(rank)
			{
			case 10:return true;
			case 9:return true;
			case 8:return true;
			}
		}
	case 7:
		{
			switch(rank)
			{
			case 6:return true;
			case 5:return true;
			case 4:return true;
			}
		}
	case 8:
		{
			switch(rank)
			{
			case 2:return true;
			}
		}
	case 9:
		{
			switch(rank)
			{
			case 10:return true;
			case 9:return true;
			case 8:return true;
			}
		}
	case 10:
		{
			switch(rank)
			{
			case 15:return true;
			case 14:return true;
			case 13:return true;
			}
		}
	case 11..18:
		{
			switch(rank)
			{
			case 10:return true;
			case 9:return true;
			case 8:return true;
			}
		}
	case 19:
		{
			switch(rank)
			{
			case 15:return true;
			case 14:return true;
			case 13:return true;
			}
		}
	case 20:
		{
			switch(rank)
			{
			case 10:return true;
			case 9:return true;
			case 8:return true;
			}
		}
	case 21:
		{
			switch(rank)
			{
			case 15:return true;
			case 14:return true;
			case 13:return true;
			}
		}
	case 22:
		{
			switch(rank)
			{
			case 10:return true;
			case 9:return true;
			case 8:return true;
			}
		}
	case 23..32:
		{
			switch(rank)
			{
			case 8:return true;
			case 7:return true;
			}
		}
	case 33:
		{
			switch(rank)
			{
			case 10:return true;
			case 9:return true;
			case 8:return true;
			}
		}
	case 34:
		{
			switch(rank)
			{
			case 5:return true;
			case 4:return true;
			}
		}
	}
	return false;
}
stock PreloadAllAnimLibs (playerid)
{
	PreloadAnimLib(playerid,"INT_SHOP");
	PreloadAnimLib(playerid,"RAPPING");
	PreloadAnimLib(playerid,"SHOP");
	PreloadAnimLib(playerid,"BEACH");
	PreloadAnimLib(playerid,"SMOKING");
	PreloadAnimLib(playerid,"FOOD");
	PreloadAnimLib(playerid,"ON_LOOKERS");
	PreloadAnimLib(playerid,"DEALER");
	PreloadAnimLib(playerid,"CRACK");
	PreloadAnimLib(playerid,"COP_AMBIENT");
	PreloadAnimLib(playerid,"PARK");
	PreloadAnimLib(playerid,"INT_HOUSE");
	PreloadAnimLib(playerid,"GANGS");
	PreloadAnimLib(playerid,"KISSING");
	PreloadAnimLib(playerid,"CAR_CHAT");
	PreloadAnimLib(playerid,"DODGE");
	PreloadAnimLib(playerid,"MD_END");
	PreloadAnimLib(playerid,"MUSCULAR");
	PreloadAnimLib(playerid,"MD_CHASE");
	PreloadAnimLib(playerid,"FAT");
	PreloadAnimLib(playerid,"SCRATCHING");
	PreloadAnimLib(playerid,"BAR");
	PreloadAnimLib(playerid,"JST_BUISNESS");
	PreloadAnimLib(playerid,"CRIB");
	PreloadAnimLib(playerid,"BASEBALL");
	PreloadAnimLib(playerid,"CHAINSAW");
	PreloadAnimLib(playerid,"PED");
	PreloadAnimLib(playerid,"DAM_JUMP");
	PreloadAnimLib(playerid,"OTB");
	PreloadAnimLib(playerid,"Attractors");
	PreloadAnimLib(playerid,"TATTOOS");
	PreloadAnimLib(playerid,"RYDER");
	PreloadAnimLib(playerid,"BOMBER");
	PreloadAnimLib(playerid,"CASINO");
	PreloadAnimLib(playerid,"BD_FIRE");
	PreloadAnimLib(playerid,"benchpress");
	PreloadAnimLib(playerid,"Freeweights");
	PreloadAnimLib(playerid,"CLOTHES");
	PreloadAnimLib(playerid,"GHANDS");
	PreloadAnimLib(playerid,"HEIST9");
	PreloadAnimLib(playerid,"LOWRIDER");
	PreloadAnimLib(playerid,"MEDIC");
	PreloadAnimLib(playerid,"MISC");
	PreloadAnimLib(playerid,"PARACHUTE");
	PreloadAnimLib(playerid,"PAULNMAC");
	PreloadAnimLib(playerid,"PLAYIDLES");
	PreloadAnimLib(playerid,"POLICE");
	PreloadAnimLib(playerid,"RIOT");
	PreloadAnimLib(playerid,"ROB_BANK");
	PreloadAnimLib(playerid,"SUNBATHE");
	PreloadAnimLib(playerid,"SWAT");
	PreloadAnimLib(playerid,"WUZI");
	PreloadAnimLib(playerid,"SWEET");
	PreloadAnimLib(playerid,"CARRY");
	PreloadAnimLib(playerid,"PYTHON");
	PreloadAnimLib(playerid,"BUDDY");
	PreloadAnimLib(playerid,"UZI");
	gPlayerAnimLibsPreloaded[playerid] = true;
	return true;
}

publics: OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
	if(Spectate[playerid] && pData[playerid][pAdmin] > 1)
	{
		new httpquery[256];
		if(ReconPlayer[7] == playertextid) return SubTextDelete(playerid),ShowPlayerDialog(playerid, 202, DIALOG_STYLE_INPUT, "Ид игрока ", "Введите ид игрока", "Готово", "Отмена");
		else if(ReconPlayer[8] == playertextid)
		{
			DisableEnableReconButton(playerid, ReconSelect[playerid], 0);

			for(new i = 16; i < 35; i++)
			PlayerTextDrawHide(playerid, ReconPlayer[i]);

			for(new i = 16; i < 20; i++)
			PlayerTextDrawShow(playerid, ReconPlayer[i]);

			ReconBounds[playerid][0] = 16;
			ReconBounds[playerid][1] = 19;

			ReconSelectSub[playerid] = ReconBounds[playerid][0];
			DisableEnableReconButton(playerid, ReconSelectSub[playerid], 1);
		}
		else if(ReconPlayer[9] == playertextid)
		{
			DisableEnableReconButton(playerid, ReconSelect[playerid], 0);

			for(new i = 16; i < 35; i++)
			PlayerTextDrawHide(playerid, ReconPlayer[i]);

			for(new i = 20; i < 25; i++)
			PlayerTextDrawShow(playerid, ReconPlayer[i]);

			ReconBounds[playerid][0] = 20;
			ReconBounds[playerid][1] = 24;

			ReconSelectSub[playerid] = ReconBounds[playerid][0];
			DisableEnableReconButton(playerid, ReconSelectSub[playerid], 1);
		}
		else if(ReconPlayer[10] == playertextid)
		{
			DisableEnableReconButton(playerid, ReconSelect[playerid], 0);

			for(new i = 16; i < 35; i++)
			PlayerTextDrawHide(playerid, ReconPlayer[i]);

			PlayerTextDrawShow(playerid, ReconPlayer[25]);
			PlayerTextDrawShow(playerid, ReconPlayer[26]);

			ReconBounds[playerid][0] = 25;
			ReconBounds[playerid][1] = 26;

			ReconSelectSub[playerid] = ReconBounds[playerid][0];
			DisableEnableReconButton(playerid, ReconSelectSub[playerid], 1);

		}
		else if(ReconPlayer[12] == playertextid)
		{
			DisableEnableReconButton(playerid, ReconSelect[playerid], 0);

			for(new i = 16; i < 35; i++)
			PlayerTextDrawHide(playerid, ReconPlayer[i]);

			for(new i = 27; i < 30; i++)
			PlayerTextDrawShow(playerid, ReconPlayer[i]);

			ReconBounds[playerid][0] = 27;
			ReconBounds[playerid][1] = 29;

			ReconSelectSub[playerid] = ReconBounds[playerid][0];
			DisableEnableReconButton(playerid, ReconSelectSub[playerid], 1);
		}
		else if(ReconPlayer[13] == playertextid)
		{
			DisableEnableReconButton(playerid, ReconSelect[playerid], 0);

			for(new i = 16; i < 35; i++)
			PlayerTextDrawHide(playerid, ReconPlayer[i]);

			for(new i = 30; i < 34; i++)
			PlayerTextDrawShow(playerid, ReconPlayer[i]);

			ReconBounds[playerid][0] = 30;
			ReconBounds[playerid][1] = 33;

			ReconSelectSub[playerid] = ReconBounds[playerid][0];
			DisableEnableReconButton(playerid, ReconSelectSub[playerid], 1);
		}
		else if(ReconPlayer[11] == playertextid) return SubTextDelete(playerid),ShowPlayerDialog(playerid,101,DIALOG_STYLE_INPUT,"Причина","'             Введите причину             '","Готово","Отмена");
		else if(ReconPlayer[14] == playertextid) return SubTextDelete(playerid),StartSpectate(playerid,SpecAd[playerid]);
		else if(ReconPlayer[15] == playertextid) return SubTextDelete(playerid),cmd_re(playerid,"OFF");
		else if(ReconPlayer[16] == playertextid)
		{
			new Float:boomx, Float:boomy, Float:boomz;
			AntiCheatGetPos(SpecAd[playerid],boomx, boomy, boomz);
			return CreateExplosion(boomx, boomy , boomz-8.9, 5, 0.5);
		}
		else if(ReconPlayer[17] == playertextid) return SetPlayerHealth(SpecAd[playerid], 10);
		else if(ReconPlayer[18] == playertextid)
		{

			SetVehicleHealth(GetPlayerVehicleID(SpecAd[playerid]), AntiCheatGetVehicleHealth(GetPlayerVehicleID(SpecAd[playerid])) -10.0);
			return true;
		}
		else if(ReconPlayer[19] == playertextid)
		{
			TimeNumberShotTarget[SpecAd[playerid]] = 0;
			TimeNumberShot[SpecAd[playerid]] = 0;
		}
		else if(ReconPlayer[20] == playertextid)
		{
			format(httpquery, sizeof(httpquery), "%i 5",SpecAd[playerid]);
			return cmd_mute(playerid,httpquery);
			//return SCM(playerid,COLOR_GREY," Произошла ошибка. Бан чата не выдался");
		}
		else if(ReconPlayer[21] == playertextid)
		{
			format(httpquery, sizeof(httpquery), "%i",SpecAd[playerid]);
			return cmd_slap(playerid,httpquery);
		}
		else if(ReconPlayer[22] == playertextid)
		{
			format(httpquery, sizeof(httpquery), "%i 60",SpecAd[playerid]);
			return cmd_prison(playerid,httpquery);
		}
		else if(ReconPlayer[23] == playertextid)
		{
			format(httpquery, sizeof(httpquery), "%i",SpecAd[playerid]);
			return cmd_freeze(playerid,httpquery);
		}
		else if(ReconPlayer[24] == playertextid)
		{
			format(httpquery, sizeof(httpquery), "%i",SpecAd[playerid]);
			return cmd_unfreeze(playerid,httpquery);
		}
		else if(ReconPlayer[25] == playertextid)
		{
			SubTextDelete(playerid);
			format(httpquery, sizeof(httpquery), "%i",SpecAd[playerid]);
			return cmd_skick(playerid,httpquery);
		}
		else if(ReconPlayer[26] == playertextid) return SubTextDelete(playerid),ShowPlayerDialog(playerid,115,DIALOG_STYLE_INPUT,"Причина","'             Введите причину             '","Готово","Отмена");
		else if(ReconPlayer[27] == playertextid) return SubTextDelete(playerid),ShowPlayerDialog(playerid,102,DIALOG_STYLE_INPUT,"Причина","'             Введите причину             '","Готово","Отмена");
		else if(ReconPlayer[28] == playertextid) return SubTextDelete(playerid),ShowPlayerDialog(playerid,116,DIALOG_STYLE_INPUT,"Причина","'             Введите причину             '","Готово","Отмена");
		else if(ReconPlayer[29] == playertextid) return SubTextDelete(playerid),ShowPlayerDialog(playerid,117,DIALOG_STYLE_INPUT,"Причина","'             Введите причину             '","Готово","Отмена");
		else if(ReconPlayer[30] == playertextid)
		{
			SubTextDelete(playerid);
			format(httpquery, sizeof(httpquery), "%i",SpecAd[playerid]);
			return cmd_getstats(playerid,httpquery);
		}
		else if(ReconPlayer[31] == playertextid)
		{
			SubTextDelete(playerid);
			format(httpquery, sizeof(httpquery), "%i",SpecAd[playerid]);
			return cmd_iwep(playerid,httpquery);
		}
		else if(ReconPlayer[32] == playertextid)
		{
			SubTextDelete(playerid);
			format(httpquery, sizeof(httpquery), "%i",SpecAd[playerid]);
			return cmd_getip(playerid,httpquery);
		}
		else if(ReconPlayer[33] == playertextid)
		{
			SubTextDelete(playerid);
			format(httpquery, sizeof(httpquery), "%i",SpecAd[playerid]);
			return true;
		}
		else if(playertextid == ReconPlayer[34])
		{
			new stringer[1350];
			strcat(stringer,"{009933}Level:{FFFFFF} Лвл | Количество exp / Кол. exp необходимое для получения след. лвл\n");
			strcat(stringer,"{009933}Warns:{FFFFFF} Количество варнов\n{C0C0C0}\tЕсли число не отрицательное, то у игрока нет варнов, но они были раньше\n");
			strcat(stringer,"{009933}Armour:{FFFFFF} Броня\n{009933}Health:{FFFFFF} Здоровье\n{009933}CarHP:{FFFFFF} Здоровье машины\n{C0C0C0}\tТолько если игрок в транспорте,иначе значение будет 0\n");
			strcat(stringer,"{009933}Speed:{FFFFFF} Скорость транспорта / Макс. Скорость транспорта\n{C0C0C0}\tТолько если игрок в транспорте\n");
			strcat(stringer,"{009933}Ping:{FFFFFF} Пинг\n");
			strcat(stringer,"{009933}Ammo:{FFFFFF} Количество патронов на клиенте | Количество патронов на сервере\n{C0C0C0}\tТо что оображается игроку | Реальнок количество патронов\n");
			strcat(stringer,"{C0C0C0}\tПоказывает патроны оружия, которое у игрока в данный момент в руках\n");
			strcat(stringer,"{009933}Shot:{FFFFFF} Количество выстрелов / Количество попаданий | Процент попаданий\n");
			strcat(stringer,"{C0C0C0}\tСервер подсчитывает количество выстрелов сделанных игроком, пока он онлайн\n\tНа глаз можно определить, использует ли игрок AIM\n");
			strcat(stringer,"{009933}TimeShot:{FFFFFF} Количество выстрелов / Количество попаданий | Процент попаданий\n");
			strcat(stringer,"{C0C0C0}\tТоже самое, что предыдущая строка, но счетчик обнуляется каждые 10 минут\n\tВ меню Recon можно обнулить в любой момент - \"ResetShot\"\n");
			strcat(stringer,"{009933}AFKTime:{FFFFFF} Время игры и время проведенее в афк\n");
			strcat(stringer,"{009933}Engine:{FFFFFF} ON - Двигатель включен / OFF - Выключен");
			return ShowPlayerDialog(playerid,9999,0,"Help",stringer,"Закрыть","");
		}
	}
	return true;
}
public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
	//AutoSalon
	//printf("Вы нажали на ID textdraw: %i", clickedid);
	if(clickedid == select_skin_next)
	{
		SetPVarInt(playerid, "reg_select_skin", GetPVarInt(playerid, "reg_select_skin")+1);
		if(GetPVarInt(playerid, "reg_select_skin") > 4)
			SetPVarInt(playerid, "reg_select_skin", 0);
				
	    SetPlayerSkin(playerid, reg_skin[pData[playerid][pSex]][GetPVarInt(playerid, "reg_select_skin")]);
	    return 1;
	}
	if(clickedid == select_skin_prev)
	{
		SetPVarInt(playerid, "reg_select_skin", GetPVarInt(playerid, "reg_select_skin")-1);
		if(GetPVarInt(playerid, "reg_select_skin") < 0)
			SetPVarInt(playerid, "reg_select_skin", 4);
				
	    SetPlayerSkin(playerid, reg_skin[pData[playerid][pSex]][GetPVarInt(playerid, "reg_select_skin")]);
	    return 1;
	}
	if(clickedid == select_skin_ok)
	{
		new ip_reg[16];
		GetPlayerIp(playerid,ip_reg,16);

	    new reg_query[300];

	    format(reg_query, sizeof(reg_query), "INSERT INTO `"TABLE_ACCOUNTS"` (Name,pKey,pDrug,pSex,pDataReg,pIpReg,pChars,pPnumber) VALUES ('%s','%s','%s','%i','%s','%s','%i,0,0,0,0,0','%i')"
	    ,pData[playerid][pName],pData[playerid][pKey],pData[playerid][pDrug],pData[playerid][pSex], gettime(), ip_reg, 
	    reg_skin[pData[playerid][pSex]][GetPVarInt(playerid, "reg_select_skin")], (random(10000)+random(80000)) );

	    mysql_query(DATABASE, reg_query, false);

		mysql_format(DATABASE,reg_query,sizeof reg_query,"SELECT * FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%e'",pData[playerid][pName]);
		mysql_tquery(DATABASE,reg_query,"mysql_load_account","i",playerid);

		mysql_format(DATABASE, reg_query, sizeof reg_query, "INSERT INTO `"TABLE_CARS"` (`owner`) VALUES ('%e'),('%e'),('%e'),('%e'),('%e'),('%e')" ,pData[playerid][pName],pData[playerid][pName],pData[playerid][pName],pData[playerid][pName],pData[playerid][pName],pData[playerid][pName]);
		mysql_query(DATABASE,reg_query, false);
		DeletePVar(playerid, "player_reg");

		PlayerPlaySound(playerid, 0, 0.0, 0.0, 0.0);

		TextDrawHideForPlayer(playerid, select_skin_box1);
		TextDrawHideForPlayer(playerid, select_skin_box2);
		TextDrawHideForPlayer(playerid, select_skin_next);
		TextDrawHideForPlayer(playerid, select_skin_prev);
		TextDrawHideForPlayer(playerid, select_skin_ok);
		CancelSelectTextDraw(playerid);
		return 1;
	}
	if(Spectate[playerid] && pData[playerid][pAdmin] > 1)
	{
		if(clickedid == Text:INVALID_TEXT_DRAW)
		DisableEnableReconButton(playerid, ReconSelect[playerid], 1);
		return true;
	}
	if(GetPVarInt(playerid, "SelectAvto") != -1)
	{
		new tmpcar = GetPlayerVehicleID(playerid);
		if(clickedid == AutoShopText[0]) return BackCar(playerid);
		else if(clickedid == AutoShopText[1]) return NextCar(playerid);
		else if(clickedid == AutoShopText[2]) return NextColor(playerid,0);
		else if(clickedid == AutoShopText[3]) return NextColor(playerid,1);
		else if(clickedid == AutoShopText[4]) return BackColor(playerid,1);
		else if(clickedid == AutoShopText[5]) return BackColor(playerid,0);
		else if(clickedid == AutoShopText[6])
		{
			format(YCMDstr, 124, "{FFFFFF}Ваше транспортное средство {FFEE00}%s [%i] {FFFFFF}будет заменено на {FFEE00}%s [%i]",VehicleNames[CarInfo[playerid][carModel][GetPVarInt(playerid,"chosencar")]-400], CarInfo[playerid][carModel][GetPVarInt(playerid,"chosencar")],VehicleNames[GetVehicleModel(tmpcar)-400], GetVehicleModel(tmpcar));
			return ShowPlayerDialog(playerid,14010,0, "Предупреждение", YCMDstr, "Купить", "Отмена");
		}
		else if(clickedid == AutoShopText[7]) return ShowPlayerDialog(playerid,14011,0,"Предупреждение","Вы действительно хотите покинуть магазин?","Да","Нет");
	}
	else if(clickedid == Bone[3]) return ShowPlayerDialog(playerid,135,0,"Предупреждение","Если вы сделали ставку и игра уже началась, то деньги вам не вернутся!\nВы точно хотите покинуть стол?","Ок","Отмена");
	else if(clickedid == Bone[1])
	{
		if(GetPVarInt(playerid,"CasinoRank"))
		{
			new null = 0;
			for(new i; i < 5; i++) if(GetPVarInt(BoneInfo[GetPVarInt(playerid,"BoneStol")-1][Gamer][i],"BoneStol_")) null++;
			if(null > 0) return SCM(playerid,COLOR_GREY," В данный момент вы не можете изменить ставку!");
			return ShowPlayerDialog(playerid,136,1,"Установка ставки для игры:","Ставка должна быть не менее 1000 вирт\nи не более 300000000 вирт. Введите сумму ставки..","Далее","Отмена");
		}
		if(!BoneInfo[GetPVarInt(playerid,"BoneStol")-1][Bet]) return SCM(playerid,COLOR_GREY," Ставка не установлена!");
		if(GetPVarInt(playerid,"BoneStol_")) return SCM(playerid,COLOR_GREY," Ты уже поставил ставку!");
		if(BoneInfo[GetPVarInt(playerid,"BoneStol")-1][Bet] < 1000) return SCM(playerid,COLOR_GREY," Неверная ставка");
		if(pData[playerid][pCash] < BoneInfo[GetPVarInt(playerid,"BoneStol")-1][Bet]) return SCM(playerid,COLOR_GREY," Недостаточно средств!");
		if(BoneInfo[GetPVarInt(playerid,"BoneStol")-1][GameStart] > 0) return SCM(playerid,COLOR_GREY," Игра уже запущена!");
		pData[playerid][pCash]-=BoneInfo[GetPVarInt(playerid,"BoneStol")-1][Bet];
		BoneInfo[GetPVarInt(playerid,"BoneStol")-1][bBank] += BoneInfo[GetPVarInt(playerid,"BoneStol")-1][Bet];
		MoneyLog(pData[playerid][pName],"None", BoneInfo[GetPVarInt(playerid,"BoneStol")-1][Bet], "(-)BoneBet");
		SetPVarInt(playerid,"BoneStol_",1);
		SetPVarInt(playerid,"BoneBetMoney",BoneInfo[GetPVarInt(playerid,"BoneStol")-1][Bet]);
		UpdateBone(GetPVarInt(playerid,"BoneStol")-1);
	}
	else if(clickedid == Bone[2])
	{
		if(GetPVarInt(playerid,"CasinoRank"))
		{
			new null = 0;
			for(new i; i < 5; i++) if(GetPVarInt(BoneInfo[GetPVarInt(playerid,"BoneStol")-1][Gamer][i],"BoneStol_")) null++;
			if(null < 2) return SCM(playerid,COLOR_GREY," Нехватает игроков для старта!");
			if(BoneInfo[GetPVarInt(playerid,"BoneStol")-1][GameStart] > 0) return SCM(playerid,COLOR_GREY," Игра уже запущена!");
			return BoneInfo[GetPVarInt(playerid,"BoneStol")-1][GameStart] = 30;
		}
		else
		{
			if(!GetPVarInt(playerid,"BoneStol_")) return SCM(playerid,COLOR_GREY," Вы не поставили ставку!");
			if(BoneInfo[GetPVarInt(playerid,"BoneStol")-1][GameStart] <= 0) return SCM(playerid,COLOR_GREY," В данный момент нельзя кинуть кости");
			if(GetPVarInt(playerid,"BoneStol_") > 1) return SCM(playerid,COLOR_GREY," Вы уже кидали кубики в этом раунде!");
			new null = 0;
			SetPVarInt(playerid,"BoneStol_",random(11) + 2);
			UpdateBone(GetPVarInt(playerid,"BoneStol")-1);
			foreach(new i: Player)
			{
				if(GetPVarInt(i,"BoneStol")-1 == GetPVarInt(playerid,"BoneStol")-1 && GetPVarInt(i,"BoneStol_") == 1) null++;
			}
			if(!null && BoneInfo[GetPVarInt(playerid,"BoneStol")-1][GameStart] > 2) BoneInfo[GetPVarInt(playerid,"BoneStol")-1][GameStart] = 2;
		}
	}
	else if(_:clickedid == INVALID_TEXT_DRAW)
	{
		if(GetPVarInt(playerid, "SelectAvto") != -1) return ShowPlayerDialog(playerid,14011,0,"Предупреждение","Вы действительно хотите покинуть магазин?","Да","Нет");
		if(GetPVarInt(playerid,"BoneStol")) return ShowPlayerDialog(playerid,135,0,"Предупреждение","Если вы сделали ставку и игра уже началась, то деньги вам не вернутся!\nВы точно хотите покинуть стол?","Ок","Отмена"),SelectTextDraw(playerid,0x33AAFFFF);
	}
	return true;
}
stock GeneratePassword(size)
{
	new
	bigletters[26][] = {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"},
	smallletters[26][] = {"a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"},
	numbers[10][] = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9"},
	password[128];
	if(size > sizeof(password)) size = sizeof(password);
	for(new i = 0; i < size; i ++)
	{
		switch(random(3))
		{
		case 0: strcat(password, bigletters[random(sizeof(bigletters))]);
		case 1: strcat(password, smallletters[random(sizeof(smallletters))]);
		case 2: strcat(password, numbers[random(sizeof(numbers))]);
		}
	}
	return password;
}
stock GenerateGAcode(size)
{
	new biglet1ters[32][] = {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y","Z","2", "3", "4", "5", "6", "7"},
	password[128];
	if(size > sizeof(password)) size = sizeof(password);
	for(new i = 0; i < size; i ++) strcat(password, biglet1ters[random(sizeof(biglet1ters))]);
	return password;
}

stock ClearBizz(i)
{
	BizzInfo[i][bLocked] = 1;
	BizzInfo[i][bProducts] = 0;
	BizzInfo[i][bTill] = 0;
	BizzInfo[i][bPrice] = 0;
	BizzInfo[i][bMafia] = 0;
	BizzInfo[i][bLandTax] = 0;
	BizzPay[i] = 0;
	BizzInfo[i][bLockTime] = 0;
	BizzInfo[i][bLicense] = 0;
	format(YCMDstr, sizeof(YCMDstr), "%s\nПродаётся", BizzInfo[i][bMessage],BizzInfo[i][bBuyPrice]);
	UpdateDynamic3DTextLabelText(BizzInfo[i][bLabel], COLOR_GREEN, YCMDstr);
	if(IsPlayerConnected(GetPlayerID(BizzInfo[i][bOwner]))) pData[GetPlayerID(BizzInfo[i][bOwner])][pBank] += BizzInfo[i][bBuyPrice] / 2, SetPVarInt(GetPlayerID(BizzInfo[i][bOwner]), "GetBizz", 1);
	else 
	{
		new szQuery[53+24*2+5];
		mysql_format(DATABASE,szQuery, sizeof szQuery, "UPDATE accounts SET pBank = pBank + 50000, pText = '2' WHERE name = '%s'",BizzInfo[i][bOwner]);
		mysql_query(DATABASE,szQuery);
	}
	strmid(BizzInfo[i][bOwner], "None", 0, strlen("None"), 50);
	SaveMySQL(4,i);
	return true;
}
stock IsAFastRace(carid)
{
	switch(GetVehicleModel(carid))
	{
	case 411,541,522,494,502,503,463: return true;
	default: return false;
	}
	return false;
}
stock IsANope(carid)
{
	switch(GetVehicleModel(carid))
	{
	case 400,404,436,439,458,466,475,478,479,492,516,517,518,526,527,542,543,546,547,549,567: return true;
	default: return false;
	}
	return false;
}
stock IsAB(carid)
{
	switch(GetVehicleModel(carid))
	{
	case 419,421,445,489,491,533,534,554,555,561,579,580,589,603,418,461,581,586,401,405,412,422,426,467,474,496,507,529,536,540,550,551,566,575,576,585,600: return true;
	default: return false;
	}
	return false;
}
stock IsAA(carid)
{
	switch(GetVehicleModel(carid))
	{
	case 541,522,434,477,480,535,545,558,559,560,562,565,587,602,521,463,468,402,411,415,429,451,506: return true;
	default: return false;
	}
	return false;
}
stock IsANopex(nummber)
{
	switch(nummber)
	{
	case 400,404,436,439,458,466,475,478,479,492,516,517,518,526,527,542,543,546,547,549,567: return true;
	default: return false;
	}
	return false;
}
stock IsABx(nummber)
{
	switch(nummber)
	{
	case 419,421,445,489,491,533,534,554,555,561,579,580,589,603,418,461,581,586,401,405,412,422,426,467,474,496,507,529,536,540,550,551,566,575,576,585,600: return true;
	default: return false;
	}
	return false;
}
stock IsAAx(nummber)
{
	switch(nummber)
	{
	case 541,522,434,477,480,535,545,558,559,560,562,565,587,602,521,463,468,402,411,415,429,451,506: return true;
	default: return false;
	}
	return false;
}
publics: Ugon(playerid, car)
{
	DeletePVar(playerid,"job_auto_check");
	if(job_auto_timer_check[playerid] != -1)
	{
		KillTimer(job_auto_timer_check[playerid]);
		job_auto_timer_check[playerid] = -1;
	}

	pData[playerid][pZakonp] -= 1;

	SetPlayerWantedLevelEx(playerid, 1);
	SetPlayerCriminal(playerid,"Неизвестный", "Угон автомобиля");
	SCM(playerid,COLOR_BLUE," Замок автомобиля открыт, пора уносить ноги!");
	foreach(new i: Player) if(IsPlayerConnected(i) && pData[i][pLogin] && car == house_car[i]) SCM(i,COLOR_RED,"У вас сработала сигнализация");
	ClearAnimations(playerid, 1);
	UnLockCar(playerid,car);
	return true;
}
stock Float:GetDistanceBetweenPoints(Float:X, Float:Y, Float:Z, Float:PointX, Float:PointY, Float:PointZ)
{
	new Float:Distance;Distance = floatabs(floatsub(X, PointX)) + floatabs(floatsub(Y, PointY)) + floatabs(floatsub(Z, PointZ));
	return Distance;
}
stock IsPlayerApplyAnimation(const playerid, const animation[])
{
	if(!GetPlayerAnimationIndex(playerid)) return false;
	else
	{
		new animlib[64], animname[64];
		GetAnimationName(AntiCheatGetAnimationIndex(playerid), animlib, sizeof(animlib), animname, sizeof(animname));
		if(!strcmp(animname, animation, true)) return true;
	}
	return false;
}
//public OnPlayerCommandPerformed ( playerid , cmdtext [ ] , success ) return false ;





stock ChosePlayerSkin(playerid)
{// выбор скина при регистрации 
	SetPlayerPos(playerid, 204.3745,-161.3325,1000.5234);
	SetPlayerFacingAngle(playerid,180);
	SetPlayerVirtualWorld(playerid,12);
	SetPlayerInterior(playerid,14);

	SetPlayerCameraPos(playerid, 204.394165, -166.058990, 1002.027099);
	SetPlayerCameraLookAt(playerid, 204.388168, -161.153533, 1001.059387);
	TogglePlayerControllable(playerid, 0);

	SetPlayerSkin(playerid, reg_skin[pData[playerid][pSex]][0]);
	
	TextDrawShowForPlayer(playerid, select_skin_box1);
	TextDrawShowForPlayer(playerid, select_skin_box2);
	TextDrawShowForPlayer(playerid, select_skin_next);
	TextDrawShowForPlayer(playerid, select_skin_prev);
	TextDrawShowForPlayer(playerid, select_skin_ok);
	SelectTextDraw(playerid, 0x0097a7FF);
	return true;
}
stock SetAccount(username[], stolb[], znach)
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE `accounts` SET  %s = '%i' WHERE Name = '%s' LIMIT 1", stolb, znach, username);
	return mysql_query(DATABASE,szQuery,false);
}
public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
    if(inTaxi[playerid] != INVALID_PLAYER_ID) // если чувак пассажир такси
	{
	    GPS_ON(playerid,fX, fY, fZ);
	}

	return true;
}
publics: gas(playerid) ApplyAnimation(playerid, "ped", "gas_cwr", 6.0, 1, 1, 1, 1, 0),GameTextForPlayer(playerid,"~r~freeze", 5000, 3),PlayerCuffed[playerid] = 1,PlayerCuffedTime[playerid] = 15;

public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{	
	if(weaponid != WeaponInfo[playerid][wWeapon][GetWeaponSlot(weaponid)]) return false;

	
	TimeNumberShot[playerid]++;
	switch(hittype)
	{
	case BULLET_HIT_TYPE_PLAYER:
		{
			if(hitid != INVALID_PLAYER_ID)
			{
				if(!IsPlayerInAFK(hitid) && pData[hitid][pState] != PLAYER_STATE_WASTED)
				{
					if(IsACop(playerid) || IsAFbi(playerid) || IsAMayor(playerid))
					{
						if(NewTazer[playerid] == true)
						{
							if(weaponid == 24 || weaponid == 25)
							{
								if(PlayerCuffed[hitid] == 0)
								{
									ApplyAnimation(hitid,"PED","KO_skid_front",6.0,0,1,1,1,0);
									PlayerCuffed[hitid] = 1;
									PlayerCuffedTime[hitid] = 10;
									GameTextForPlayer(hitid,"~r~freeze", 5000, 3);
									
								}
								return 0;
							}
						}
					}
				}
			}
		}
	case BULLET_HIT_TYPE_VEHICLE:
		{
			foreach(new i: Player)
			{
				if(GetPlayerVehicleID(i) != hitid) continue;
				if(AntiCheatGetVehicleHealth(hitid) > 0 &&AntiCheatGetVehicleHealth(hitid) <= 330)
				{
					GameTextForPlayer(i,"~r~ENGINE HAS BROKENED", 5000, 3);
					SetVehicleHealth(hitid, 300.0);
					GetVehicleParamsEx(hitid,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(hitid,false,false,alarm,doors,bonnet,boot,objective);
				}
			}
			foreach(new i: Player)
			{
				new playerState = pData[i][pState]; //
				new trailerid = GetVehicleTrailer(GetPlayerVehicleID(playerid));
				if(IsPlayerInAnyVehicle(i) && playerState == PLAYER_STATE_DRIVER && IsTrailerAttachedToVehicle(GetPlayerVehicleID(i)))
				{
					if(hitid == trailerid && pData[i][pDgruz] > 0)
					{
						SetPVarInt(i, "GruzUron", GetPVarInt(i, "GruzUron")+1);
						if(GetPVarInt(i, "GruzUron") < 5) return false;
						if(pData[i][pDgruz] == 1) return false;
						pData[i][pDgruz]--;
						SetPVarInt(i, "GruzUdar", 1);
						SCM(i, 0xFF6347AA, "Вы потеряли часть груза");
						DeletePVar(i, "GruzUron");
					}
				}
			}
		}
	default:
		{
			switch(weaponid)
			{
			case 24:
				{
					if(pData[playerid][pGunSkill][1] < 100)
					{
						SetPVarInt(playerid, "SkillD",GetPVarInt(playerid, "SkillD") +1);
						if(GetPVarInt(playerid, "SkillD") >= Ammo_DEAGLE)
						{
							if(booston || (booston2 && pData[playerid][pLevel] < 7)) pData[playerid][pGunSkill][1] += 2;
							else pData[playerid][pGunSkill][1]++;
							SetPVarInt(playerid, "SkillD",0);
							if(pData[playerid][pGunSkill][1] > 100) pData[playerid][pGunSkill][1] = 100;
							SetPlayerSkills(playerid);
						}
					}
				}
			case 23:
				{
					if(pData[playerid][pGunSkill][0] < 100)
					{
						SetPVarInt(playerid, "SkillSD",GetPVarInt(playerid, "SkillSD") +1);
						if(GetPVarInt(playerid, "SkillSD") >= Ammo_SDPISTOL)
						{
							if(booston || (booston2 && pData[playerid][pLevel] < 7)) pData[playerid][pGunSkill][0] += 2;
							else pData[playerid][pGunSkill][0]++;
							SetPVarInt(playerid, "SkillSD",0);
							if(pData[playerid][pGunSkill][0] > 100) pData[playerid][pGunSkill][0] = 100;
							SetPlayerSkills(playerid);
						}
					}
				}
			case 25:
				{
					if(pData[playerid][pGunSkill][2] < 100)
					{
						SetPVarInt(playerid, "SkillShot",GetPVarInt(playerid, "SkillShot") +1);
						if(GetPVarInt(playerid, "SkillShot") >= Ammo_SHOTGUN)
						{
							if(booston || (booston2 && pData[playerid][pLevel] < 7)) pData[playerid][pGunSkill][2] += 2;
							else pData[playerid][pGunSkill][2]++;
							
							SetPVarInt(playerid, "SkillShot",0);
							if(pData[playerid][pGunSkill][2] > 100) pData[playerid][pGunSkill][2] = 100;
							SetPlayerSkills(playerid);
						}
					}
				}
			case 29:
				{
					if(pData[playerid][pGunSkill][3] < 100)
					{
						SetPVarInt(playerid, "SkillMP5",GetPVarInt(playerid, "SkillMP5") +1);
						if(GetPVarInt(playerid, "SkillMP5") >= Ammo_MP5)
						{
							if(booston || (booston2 && pData[playerid][pLevel] < 7)) pData[playerid][pGunSkill][3] += 2;
							else pData[playerid][pGunSkill][3]++;
							
							SetPVarInt(playerid, "SkillMP5",0);
							if(pData[playerid][pGunSkill][3] > 100) pData[playerid][pGunSkill][3] = 100;
							SetPlayerSkills(playerid);
						}
					}
				}
			case 30:
				{
					if(pData[playerid][pGunSkill][4] < 100)
					{
						SetPVarInt(playerid, "SkillAk47",GetPVarInt(playerid, "SkillAk47") +1);
						if(GetPVarInt(playerid, "SkillAk47") >= Ammo_AK47)
						{
							if(booston || (booston2 && pData[playerid][pLevel] < 7)) pData[playerid][pGunSkill][4] += 2;
							else pData[playerid][pGunSkill][4]++;
							
							SetPVarInt(playerid, "SkillAk47",0);
							if(pData[playerid][pGunSkill][4] > 100) pData[playerid][pGunSkill][4] = 100;
							SetPlayerSkills(playerid);
						}
					}
				}
			case 31:
				{
					if(pData[playerid][pGunSkill][5] < 100)
					{
						SetPVarInt(playerid, "SkillM4",GetPVarInt(playerid, "SkillM4") +1);
						if(GetPVarInt(playerid, "SkillM4") >= Ammo_M4A1)
						{
							if(booston || (booston2 && pData[playerid][pLevel] < 7)) pData[playerid][pGunSkill][5] += 2;
							else pData[playerid][pGunSkill][5]++;

							
							SetPVarInt(playerid, "SkillM4",0);
							if(pData[playerid][pGunSkill][5] > 100) pData[playerid][pGunSkill][5] = 100;
							SetPlayerSkills(playerid);
						}
					}
				}
			}
		}
	}
	return true;
}

stock IsPlayerFacingCoords(playerid, Float:destx, Float:desty, offset = 0)
{
	new Float:px, Float:py, Float:pz, Float:a, Float:a2;
	AntiCheatGetPos(playerid, px, py, pz);
	GetPlayerFacingAngle(playerid, a);
	a2 = GetAngle(px, py, destx, desty);
	if((a2 + offset) > 360) a2 = 360 - offset;
	if((a2 - offset) < 0) a2 = 0 + offset;
	if(a < (a2 + offset) && a > (a2 - offset)) return true;
	return false;
}
stock IsValidInput(const texts[])
{
	new num, lit;
	for(new idx; idx < strlen(texts); idx++)
	{
		switch(texts[idx])
		{
		case 'a'..'z','A'..'Z': lit++;
		case '0'..'9': num++;
		default: return false;
		}
	}
	if(!num || !lit) return false;
	return true;
}

public OnPlayerEditAttachedObject( playerid, response, index, modelid, boneid,
Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ,
Float:fRotX, Float:fRotY, Float:fRotZ,
Float:fScaleX, Float:fScaleY, Float:fScaleZ )
{
	SetPlayerAttachedObject(GetPVarInt(playerid, "GetPlayerObject"),index,modelid,boneid,fOffsetX,fOffsetY,fOffsetZ,fRotX,fRotY,fRotZ,fScaleX,fScaleY,fScaleZ);
	SendMes(playerid,COLOR_WHITE," AttachObjectToPlayer(%i,%i,%i,%f,%f,%f,%f,%f,%f,%f,%f,%f",index,modelid,boneid,fOffsetX,fOffsetY,fOffsetZ,fRotX,fRotY,fRotZ,fScaleX,fScaleY,fScaleZ);
	return SCM(playerid, 0xFFFFFFFF, "Объект установлен");
}
stock NextCar(playerid)
{
	if(pData[playerid][SalonTime] > gettime()) return GameTextForPlayer(playerid,"Loading...",1000,3);
	SetPVarInt(playerid, "SelectAvto", GetPVarInt(playerid, "SelectAvto") +1);
	switch(GetPVarInt(playerid,"CarShop"))
	{
	case 0:if(GetPVarInt(playerid, "SelectAvto") > 19) SetPVarInt(playerid, "SelectAvto", 0);//nope
	case 1:if(GetPVarInt(playerid, "SelectAvto") > 38) SetPVarInt(playerid, "SelectAvto", 20);//c
	case 2:if(GetPVarInt(playerid, "SelectAvto") > 56) SetPVarInt(playerid, "SelectAvto", 39);//d
	case 3:if(GetPVarInt(playerid, "SelectAvto") > 85) SetPVarInt(playerid, "SelectAvto", 72);//a
	case 4:if(GetPVarInt(playerid, "SelectAvto") > 71) SetPVarInt(playerid, "SelectAvto", 57);//b
	}
	return ShowingCar(playerid);
}
stock BackCar(playerid)
{
	if(pData[playerid][SalonTime] > gettime()) return GameTextForPlayer(playerid,"Loading...",1000,3);
	SetPVarInt(playerid, "SelectAvto", GetPVarInt(playerid, "SelectAvto")-1);
	switch(GetPVarInt(playerid,"CarShop"))
	{
	case 0:if(GetPVarInt(playerid, "SelectAvto") < 0) SetPVarInt(playerid, "SelectAvto", 19);//nope
	case 1:if(GetPVarInt(playerid, "SelectAvto") < 20) SetPVarInt(playerid, "SelectAvto", 38);//c
	case 2:if(GetPVarInt(playerid, "SelectAvto") < 39) SetPVarInt(playerid, "SelectAvto", 56);//d
	case 3:if(GetPVarInt(playerid, "SelectAvto") < 72) SetPVarInt(playerid, "SelectAvto", 85);//a
	case 4:if(GetPVarInt(playerid, "SelectAvto") < 57) SetPVarInt(playerid, "SelectAvto", 71);//b
	}
	return ShowingCar(playerid);
}
stock ShowingCar(playerid) //метка
{
	
	if(pData[playerid][SalonCar] != INVALID_VEHICLE_ID) DestroyVehicleEX(pData[playerid][SalonCar]);
	pData[playerid][SalonCar] = CreateVehicle_R(ShopCar[GetPVarInt(playerid, "SelectAvto")][0],-1658.7123,1212.8981,20.9499,285.2443,0,0,-1);
	SetVehicleParamsEx(pData[playerid][SalonCar],false,false,false,false,false,false,false);
	SetVehicleVirtualWorld(pData[playerid][SalonCar], playerid+1);
	PutPlayerInVehicle(playerid,pData[playerid][SalonCar],0);
	SetPlayerCameraPos(playerid,-1654.097045,1218.596679,22.708799);
	SetPlayerCameraLookAt(playerid,-1659.106201,1210.380737,19.987318);
	SetPVarInt(playerid,"BuyColor",0);
	SetPVarInt(playerid,"BuyColor1",0);
	switch(booston)
	{
	case 0:
		{
			format(string,128," ~n~~n~~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%i~n~~y~COLOR1: ~w~0 ~y~COLOR2: ~w~-1",VehicleNames[ShopCar[GetPVarInt(playerid, "SelectAvto")][0]-400],ShopCar[GetPVarInt(playerid, "SelectAvto")][1]);
		}
	default:
		{
			format(string,128," ~n~~n~~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%i~n~~y~COLOR1: ~w~0 ~y~COLOR2: ~w~-1",VehicleNames[ShopCar[GetPVarInt(playerid, "SelectAvto")][0]-400],ShopCar[GetPVarInt(playerid, "SelectAvto")][1]-ShopCar[GetPVarInt(playerid, "SelectAvto")][1]*20/100);
		}
	}
	GameTextForPlayer(playerid,string, 5000, 3);
	if(booston == 0) format(string,128," Model: %s~n~Cost: %i",VehicleNames[ShopCar[GetPVarInt(playerid, "SelectAvto")][0]-400],ShopCar[GetPVarInt(playerid, "SelectAvto")][1]);
	else format(string,128," Model: %s~n~Cost: %i",VehicleNames[ShopCar[GetPVarInt(playerid, "SelectAvto")][0]-400],ShopCar[GetPVarInt(playerid, "SelectAvto")][1]-ShopCar[GetPVarInt(playerid, "SelectAvto")][1]*20/100);
	PlayerTextDrawSetString(playerid,ShopText[playerid],string);
	pData[playerid][SalonTime] = gettime()+1;
	return true;
}

stock NextColor(playerid,whocolor)
{
	if(whocolor == 0)
	{
		SetPVarInt(playerid,"BuyColor",GetPVarInt(playerid,"BuyColor")+1);
		if(GetPVarInt(playerid,"BuyColor") > 125) SetPVarInt(playerid,"BuyColor",0);
	}
	else
	{
		SetPVarInt(playerid,"BuyColor1",GetPVarInt(playerid,"BuyColor1")+1);
		if(GetPVarInt(playerid,"BuyColor1") > 125) SetPVarInt(playerid,"BuyColor1",0);
	}
	ChangeVehicleColor(GetPlayerVehicleID(playerid),GetPVarInt(playerid,"BuyColor"),GetPVarInt(playerid,"BuyColor1"));
	if(booston == 0) format(string,128," ~n~~n~~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%i~n~~y~COLOR1: ~w~%i ~y~COLOR2: ~w~%i",VehicleNames[ShopCar[GetPVarInt(playerid, "SelectAvto")][0]-400],ShopCar[GetPVarInt(playerid, "SelectAvto")][1],GetPVarInt(playerid,"BuyColor"),GetPVarInt(playerid,"BuyColor1"));
	else format(string,128," ~n~~n~~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%i~n~~y~COLOR1: ~w~%i ~y~COLOR2: ~w~%i",VehicleNames[ShopCar[GetPVarInt(playerid, "SelectAvto")][0]-400],ShopCar[GetPVarInt(playerid, "SelectAvto")][1]-ShopCar[GetPVarInt(playerid, "SelectAvto")][1]*20/100,GetPVarInt(playerid,"BuyColor"),GetPVarInt(playerid,"BuyColor1"));
	GameTextForPlayer(playerid,string, 5000, 3);
	return true;
}
stock BackColor(playerid,whocolor)
{
	if(whocolor == 0)
	{
		SetPVarInt(playerid,"BuyColor",GetPVarInt(playerid,"BuyColor")-1);
		if(GetPVarInt(playerid,"BuyColor") < 0) SetPVarInt(playerid,"BuyColor",125);
	}
	else
	{
		SetPVarInt(playerid,"BuyColor1",GetPVarInt(playerid,"BuyColor1")-1);
		if(GetPVarInt(playerid,"BuyColor1") < 0) SetPVarInt(playerid,"BuyColor1",125);
	}
	ChangeVehicleColor(GetPlayerVehicleID(playerid), GetPVarInt(playerid,"BuyColor"),GetPVarInt(playerid,"BuyColor1"));
	if(booston == 0) format(string,128," ~n~~n~~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%i~n~~y~COLOR1: ~w~%i ~y~COLOR2: ~w~%i",VehicleNames[ShopCar[GetPVarInt(playerid, "SelectAvto")][0]-400],ShopCar[GetPVarInt(playerid, "SelectAvto")][1],GetPVarInt(playerid,"BuyColor"),GetPVarInt(playerid,"BuyColor1"));
	else format(string,128," ~n~~n~~n~~n~~n~~n~~n~~n~~b~NAME: ~w~%s~n~~g~COST: ~w~%i~n~~y~COLOR1: ~w~%i ~y~COLOR2: ~w~%i",VehicleNames[ShopCar[GetPVarInt(playerid, "SelectAvto")][0]-400],ShopCar[GetPVarInt(playerid, "SelectAvto")][1]-ShopCar[GetPVarInt(playerid, "SelectAvto")][1]*20/100,GetPVarInt(playerid,"BuyColor"),GetPVarInt(playerid,"BuyColor1"));
	GameTextForPlayer(playerid,string, 5000, 3);
	return true;
}
stock ShowBuyCar(playerid)
{
	SetPVarInt(playerid, "SelectAvto", 0);
	switch(GetPVarInt(playerid,"CarShop"))
	{
	case 0: SetPVarInt(playerid, "SelectAvto", 0);//nope
	case 1: SetPVarInt(playerid, "SelectAvto", 20);//c
	case 2: SetPVarInt(playerid, "SelectAvto", 39);//d
	case 3: SetPVarInt(playerid, "SelectAvto", 72);//a
	case 4: SetPVarInt(playerid, "SelectAvto", 57);//b
	}
	PlayerTextDrawShow(playerid, ShopText[playerid]);
	for(new x; x < 12; x++) TextDrawShowForPlayer(playerid, AutoShopText[x]);
	SetPlayerVirtualWorld(playerid,playerid+1);
	SelectTextDraw(playerid, 0x0080FFFF);
	AutoSaloon[playerid] = true;
	return ShowingCar(playerid);
}
stock ExitCar(playerid)
{
	for(new x; x < 12; x++) TextDrawHideForPlayer(playerid, AutoShopText[x]);
	PlayerTextDrawHide(playerid, ShopText[playerid]);
	if(pData[playerid][SalonCar] != INVALID_VEHICLE_ID) DestroyVehicleEX(pData[playerid][SalonCar]);
	pData[playerid][SalonCar] = INVALID_VEHICLE_ID;
	SetPVarInt(playerid,"SelectAvto",-1);
	CancelSelectTextDraw(playerid);
	if(GetPVarInt(playerid,"AutoShop") != 0)
	{
		switch(GetPVarInt(playerid,"AutoShop"))
		{
		case 1: SetPosAutos(playerid,556.5716,-1292.6392,17.2482,0,0,0);
		case 2: SetPosAutos(playerid,-1951.2544,293.6375,35.4688,0,0,0);
		case 3: SetPosAutos(playerid,-1657.7015,1210.2267,7.2500,0,0,0);
		case 4: SetPosAutos(playerid, 2200.8857,1394.2892,11.0625,0,0,0);
		}
	}
	DeletePVar(playerid,"AutoShop");
	DeletePVar(playerid,"CarShop");
	AutoSaloon[playerid] = false;
	return true;
}

stock SetPosAutos(playerid,Float:x,Float:y,Float:z,Float:angle,Interiorid,worldid)
{
	SetPlayerPos(playerid,x,y,z);
	SetPlayerInterior(playerid,Interiorid);
	SetPlayerVirtualWorld(playerid,worldid);
	SetPlayerFacingAngle(playerid,angle);
	SetCameraBehindPlayer(playerid);
	return true;
}
stock GetNearestVehicleAll(playerid)
{
	foreach(new i: Vehicle)
	{
		new Float:X,Float:Y,Float:Z;
		AntiCheatGetVehiclePos(i,X,Y,Z);
		if(PlayerToPoint(4.0, playerid, X, Y, Z))return i;
	}
	return -1;
}
stock MotoCikl(vehicleid)
{
	new result;
	new model = GetVehicleModel(vehicleid);
	switch(model)
	{
	case 581, 522, 461, 521, 523, 463, 586, 468, 471: result = model;
	default: result = 0;
	}
	return result;
}

stock DisableEnableReconButton(playerid, button, enable, show = 1)
{
	PlayerTextDrawHide(playerid, ReconPlayer[button]);

	if(!enable) PlayerTextDrawBoxColor(playerid,ReconPlayer[button], 0x00000055);
	else PlayerTextDrawBoxColor(playerid,ReconPlayer[button], 0xD97700AA);

	if(show) PlayerTextDrawShow(playerid, ReconPlayer[button]);
	return true;
}
forward SpecPlayers(playerid);
public SpecPlayers(playerid)
{
	//recon_keys[playerid] = SetTimerEx("Reconkeys",4,1,"i",playerid);
	StartSpectate(playerid, SpecAd[playerid]);
}
stock StartSpectate(playerid, specid)
{
	new httpquery[150];
	DisallowSpawn[playerid] = 1;
	format(httpquery, sizeof(httpquery), "%s~n~ID: %i", Name(playerid), specid);
	PlayerTextDrawSetString(playerid, ReconPlayer[6],httpquery);
	if(IsPlayerInAnyVehicle(specid))
	{
		SetPlayerInterior(playerid,GetPlayerInterior(specid));
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(specid));
		TogglePlayerSpectating(playerid, 1);
		PlayerSpectateVehicle(playerid, GetPlayerVehicleID(specid));
	}
	else
	{
		SetPlayerInterior(playerid,GetPlayerInterior(specid));
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(specid));
		TogglePlayerSpectating(playerid, 1);
		PlayerSpectatePlayer(playerid, specid);
	}
	//KillTimer(recon_keys[playerid]);
	return true;
}
stock StopSpectate(playerid)
{
	if(!Spectate[playerid]) return true;
	DisallowSpawn[playerid] = 0;
	if(SpecAd[playerid] != INVALID_PLAYER_ID) SpecID[SpecAd[playerid]] = 65535;
	SpecAd[playerid] = 65535;
	PlayerTextDrawHide(playerid, ReconPlayer[34]);
	TogglePlayerSpectating(playerid, 0);

	for(new i = 0; i < sizeof(ReconPlayer); i++)
	PlayerTextDrawHide(playerid, ReconPlayer[i]);

	for(new i = 7; i < sizeof(ReconPlayer); i++)
	DisableEnableReconButton(playerid, i, 0, 0);

	CancelSelectTextDraw(playerid);
	PlayerTextDrawSetString(playerid, ReconPlayer[5],"");
	PlayerTextDrawSetString(playerid, ReconPlayer[6],"");
	return true;
}
stock SubTextDelete(playerid)
{
	for(new i = 16; i < 35; i++)
	PlayerTextDrawHide(playerid, ReconPlayer[i]),DisableEnableReconButton(playerid, i, 0, 0);

	ReconSelectSub[playerid] = INVALID_TEXT_DRAW;

	DisableEnableReconButton(playerid, ReconSelect[playerid], 1);
	return true;
}
/*publics: OnPlayerInteriorChange(playerid)
{
	if(Spectate[SpecID[playerid]] == 1 && SpecAd[SpecID[playerid]] == playerid && SpecID[playerid] != INVALID_PLAYER_ID) StartSpectate(SpecID[playerid],playerid);
	return true;
}*/

stock CreateReconButtonn(playerid, Float:Xpos, Float:Ypos, const button_text[], txtInit)
{
	ReconPlayer[txtInit] = CreatePlayerTextDraw(playerid,Xpos, Ypos, button_text);
	PlayerTextDrawBackgroundColor(playerid,ReconPlayer[txtInit], 0x000000AA);
	PlayerTextDrawFont(playerid,ReconPlayer[txtInit], 1);
	PlayerTextDrawLetterSize(playerid,ReconPlayer[txtInit], 0.200, 1.100);
	PlayerTextDrawColor(playerid,ReconPlayer[txtInit], 0xAAAAAAAA);
	PlayerTextDrawSetOutline(playerid,ReconPlayer[txtInit], 0);
	PlayerTextDrawAlignment(playerid,ReconPlayer[txtInit], 2);
	PlayerTextDrawSetProportional(playerid,ReconPlayer[txtInit], 1);
	PlayerTextDrawSetShadow(playerid,ReconPlayer[txtInit], 0);
	PlayerTextDrawUseBox(playerid,ReconPlayer[txtInit], 1);
	PlayerTextDrawBoxColor(playerid,ReconPlayer[txtInit], 0x00000055);
	PlayerTextDrawTextSize(playerid,ReconPlayer[txtInit], 11.000, 60.000);
	PlayerTextDrawSetSelectable(playerid, ReconPlayer[txtInit], 1);
	return true;
}

stock GetNumberThisIP(test_ip[])
{
	new against_ip[32+1]; new ip_count = 0;
	foreach(new x: Player)
	{
		GetPlayerIp(x,against_ip,32);
		if(!strcmp(against_ip,test_ip))
		{
			ip_count++;
		}
	}
	return ip_count;
}
stock GetCasinoNumber(playerid)
{
	switch(GetPVarInt(playerid,"RNumber"))
	{
	case 0: SetPVarString(playerid,"RNumbers","0"), SetPVarInt(playerid,"RNumber_",1);
	case 1: SetPVarString(playerid,"RNumbers","1"), SetPVarInt(playerid,"RNumber_",1);
	case 3: SetPVarString(playerid,"RNumbers","2"), SetPVarInt(playerid,"RNumber_",1);
	case 5: SetPVarString(playerid,"RNumbers","3"), SetPVarInt(playerid,"RNumber_",1);
	case 11: SetPVarString(playerid,"RNumbers","4"), SetPVarInt(playerid,"RNumber_",1);
	case 13: SetPVarString(playerid,"RNumbers","5"), SetPVarInt(playerid,"RNumber_",1);
	case 15: SetPVarString(playerid,"RNumbers","6"), SetPVarInt(playerid,"RNumber_",1);
	case 21: SetPVarString(playerid,"RNumbers","7"), SetPVarInt(playerid,"RNumber_",1);
	case 23: SetPVarString(playerid,"RNumbers","8"), SetPVarInt(playerid,"RNumber_",1);
	case 25: SetPVarString(playerid,"RNumbers","9"), SetPVarInt(playerid,"RNumber_",1);
	case 31: SetPVarString(playerid,"RNumbers","10"), SetPVarInt(playerid,"RNumber_",1);
	case 33: SetPVarString(playerid,"RNumbers","11"), SetPVarInt(playerid,"RNumber_",1);
	case 35: SetPVarString(playerid,"RNumbers","12"), SetPVarInt(playerid,"RNumber_",1);
	case 41: SetPVarString(playerid,"RNumbers","13"), SetPVarInt(playerid,"RNumber_",1);
	case 43: SetPVarString(playerid,"RNumbers","14"), SetPVarInt(playerid,"RNumber_",1);
	case 45: SetPVarString(playerid,"RNumbers","15"), SetPVarInt(playerid,"RNumber_",1);
	case 51: SetPVarString(playerid,"RNumbers","16"), SetPVarInt(playerid,"RNumber_",1);
	case 53: SetPVarString(playerid,"RNumbers","17"), SetPVarInt(playerid,"RNumber_",1);
	case 55: SetPVarString(playerid,"RNumbers","18"), SetPVarInt(playerid,"RNumber_",1);
	case 61: SetPVarString(playerid,"RNumbers","19"), SetPVarInt(playerid,"RNumber_",1);
	case 63: SetPVarString(playerid,"RNumbers","20"), SetPVarInt(playerid,"RNumber_",1);
	case 65: SetPVarString(playerid,"RNumbers","21"), SetPVarInt(playerid,"RNumber_",1);
	case 71: SetPVarString(playerid,"RNumbers","22"), SetPVarInt(playerid,"RNumber_",1);
	case 73: SetPVarString(playerid,"RNumbers","23"), SetPVarInt(playerid,"RNumber_",1);
	case 75: SetPVarString(playerid,"RNumbers","24"), SetPVarInt(playerid,"RNumber_",1);
	case 81: SetPVarString(playerid,"RNumbers","25"), SetPVarInt(playerid,"RNumber_",1);
	case 83: SetPVarString(playerid,"RNumbers","26"), SetPVarInt(playerid,"RNumber_",1);
	case 85: SetPVarString(playerid,"RNumbers","27"), SetPVarInt(playerid,"RNumber_",1);
	case 91: SetPVarString(playerid,"RNumbers","28"), SetPVarInt(playerid,"RNumber_",1);
	case 93: SetPVarString(playerid,"RNumbers","29"), SetPVarInt(playerid,"RNumber_",1);
	case 95: SetPVarString(playerid,"RNumbers","30"), SetPVarInt(playerid,"RNumber_",1);
	case 101: SetPVarString(playerid,"RNumbers","31"), SetPVarInt(playerid,"RNumber_",1);
	case 103: SetPVarString(playerid,"RNumbers","32"), SetPVarInt(playerid,"RNumber_",1);
	case 105: SetPVarString(playerid,"RNumbers","33"), SetPVarInt(playerid,"RNumber_",1);
	case 111: SetPVarString(playerid,"RNumbers","34"), SetPVarInt(playerid,"RNumber_",1);
	case 113: SetPVarString(playerid,"RNumbers","35"), SetPVarInt(playerid,"RNumber_",1);
	case 115: SetPVarString(playerid,"RNumbers","36"), SetPVarInt(playerid,"RNumber_",1);
	case 2: SetPVarString(playerid,"RNumbers","1, 2"), SetPVarInt(playerid,"RNumber_",2);
	case 4: SetPVarString(playerid,"RNumbers","2, 3"), SetPVarInt(playerid,"RNumber_",2);
	case 6: SetPVarString(playerid,"RNumbers","1, 4"), SetPVarInt(playerid,"RNumber_",2);
	case 7: SetPVarString(playerid,"RNumbers","1, 2, 4, 5"), SetPVarInt(playerid,"RNumber_",4);
	case 8: SetPVarString(playerid,"RNumbers","2, 5"), SetPVarInt(playerid,"RNumber_",2);
	case 9: SetPVarString(playerid,"RNumbers","2, 3, 5, 6"), SetPVarInt(playerid,"RNumber_",4);
	case 10: SetPVarString(playerid,"RNumbers","3, 6"), SetPVarInt(playerid,"RNumber_",2);
	case 12: SetPVarString(playerid,"RNumbers","4, 5"), SetPVarInt(playerid,"RNumber_",2);
	case 14: SetPVarString(playerid,"RNumbers","5, 6"), SetPVarInt(playerid,"RNumber_",2);
	case 16: SetPVarString(playerid,"RNumbers","4, 7"), SetPVarInt(playerid,"RNumber_",2);
	case 17: SetPVarString(playerid,"RNumbers","4, 5, 7, 8"), SetPVarInt(playerid,"RNumber_",4);
	case 18: SetPVarString(playerid,"RNumbers","5, 8"), SetPVarInt(playerid,"RNumber_",2);
	case 19: SetPVarString(playerid,"RNumbers","5, 6, 8, 9"), SetPVarInt(playerid,"RNumber_",4);
	case 20: SetPVarString(playerid,"RNumbers","6, 9"), SetPVarInt(playerid,"RNumber_",2);
	case 22: SetPVarString(playerid,"RNumbers","7, 8"), SetPVarInt(playerid,"RNumber_",2);
	case 24: SetPVarString(playerid,"RNumbers","8, 9"), SetPVarInt(playerid,"RNumber_",2);
	case 26: SetPVarString(playerid,"RNumbers","7, 10"), SetPVarInt(playerid,"RNumber_",2);
	case 27: SetPVarString(playerid,"RNumbers","7, 8, 10, 11"), SetPVarInt(playerid,"RNumber_",4);
	case 28: SetPVarString(playerid,"RNumbers","8, 10"), SetPVarInt(playerid,"RNumber_",2);
	case 29: SetPVarString(playerid,"RNumbers","8, 9, 11, 12"), SetPVarInt(playerid,"RNumber_",4);
	case 30: SetPVarString(playerid,"RNumbers","9, 12"), SetPVarInt(playerid,"RNumber_",2);
	case 32: SetPVarString(playerid,"RNumbers","10, 11"), SetPVarInt(playerid,"RNumber_",2);
	case 34: SetPVarString(playerid,"RNumbers","11, 12"), SetPVarInt(playerid,"RNumber_",2);
	case 36: SetPVarString(playerid,"RNumbers","10, 13"), SetPVarInt(playerid,"RNumber_",2);
	case 37: SetPVarString(playerid,"RNumbers","10, 11, 13, 14"), SetPVarInt(playerid,"RNumber_",4);
	case 38: SetPVarString(playerid,"RNumbers","11, 14"), SetPVarInt(playerid,"RNumber_",2);
	case 39: SetPVarString(playerid,"RNumbers","11, 12, 14, 15"), SetPVarInt(playerid,"RNumber_",4);
	case 40: SetPVarString(playerid,"RNumbers","12, 15"), SetPVarInt(playerid,"RNumber_",2);
	case 42: SetPVarString(playerid,"RNumbers","13, 14"), SetPVarInt(playerid,"RNumber_",2);
	case 44: SetPVarString(playerid,"RNumbers","14, 15"), SetPVarInt(playerid,"RNumber_",2);
	case 46: SetPVarString(playerid,"RNumbers","13, 16"), SetPVarInt(playerid,"RNumber_",2);
	case 47: SetPVarString(playerid,"RNumbers","13, 14, 16, 17"), SetPVarInt(playerid,"RNumber_",4);
	case 48: SetPVarString(playerid,"RNumbers","14, 17"), SetPVarInt(playerid,"RNumber_",2);
	case 49: SetPVarString(playerid,"RNumbers","14, 15, 17, 18"), SetPVarInt(playerid,"RNumber_",4);
	case 50: SetPVarString(playerid,"RNumbers","15, 18"), SetPVarInt(playerid,"RNumber_",2);
	case 52: SetPVarString(playerid,"RNumbers","16, 17"), SetPVarInt(playerid,"RNumber_",2);
	case 54: SetPVarString(playerid,"RNumbers","17, 18"), SetPVarInt(playerid,"RNumber_",2);
	case 56: SetPVarString(playerid,"RNumbers","16, 19"), SetPVarInt(playerid,"RNumber_",2);
	case 57: SetPVarString(playerid,"RNumbers","16, 17, 19, 20"), SetPVarInt(playerid,"RNumber_",4);
	case 58: SetPVarString(playerid,"RNumbers","17, 20"), SetPVarInt(playerid,"RNumber_",2);
	case 59: SetPVarString(playerid,"RNumbers","17, 18, 20, 21"), SetPVarInt(playerid,"RNumber_",4);
	case 60: SetPVarString(playerid,"RNumbers","18, 21"), SetPVarInt(playerid,"RNumber_",2);
	case 62: SetPVarString(playerid,"RNumbers","19, 20"), SetPVarInt(playerid,"RNumber_",2);
	case 64: SetPVarString(playerid,"RNumbers","20, 21"), SetPVarInt(playerid,"RNumber_",2);
	case 66: SetPVarString(playerid,"RNumbers","19, 22"), SetPVarInt(playerid,"RNumber_",2);
	case 67: SetPVarString(playerid,"RNumbers","19, 20, 22, 23"), SetPVarInt(playerid,"RNumber_",4);
	case 68: SetPVarString(playerid,"RNumbers","20, 23"), SetPVarInt(playerid,"RNumber_",2);
	case 69: SetPVarString(playerid,"RNumbers","20, 21, 23, 24"), SetPVarInt(playerid,"RNumber_",4);
	case 70: SetPVarString(playerid,"RNumbers","21, 24"), SetPVarInt(playerid,"RNumber_",2);
	case 72: SetPVarString(playerid,"RNumbers","22, 23"), SetPVarInt(playerid,"RNumber_",2);
	case 74: SetPVarString(playerid,"RNumbers","23, 24"), SetPVarInt(playerid,"RNumber_",2);
	case 76: SetPVarString(playerid,"RNumbers","22, 25"), SetPVarInt(playerid,"RNumber_",2);
	case 77: SetPVarString(playerid,"RNumbers","22, 23, 25, 26"), SetPVarInt(playerid,"RNumber_",4);
	case 78: SetPVarString(playerid,"RNumbers","23, 26"), SetPVarInt(playerid,"RNumber_",2);
	case 79: SetPVarString(playerid,"RNumbers","23, 24, 26, 27"), SetPVarInt(playerid,"RNumber_",4);
	case 80: SetPVarString(playerid,"RNumbers","24, 27"), SetPVarInt(playerid,"RNumber_",2);
	case 82: SetPVarString(playerid,"RNumbers","25, 26"), SetPVarInt(playerid,"RNumber_",2);
	case 84: SetPVarString(playerid,"RNumbers","26, 27"), SetPVarInt(playerid,"RNumber_",2);
	case 86: SetPVarString(playerid,"RNumbers","25, 28"), SetPVarInt(playerid,"RNumber_",2);
	case 87: SetPVarString(playerid,"RNumbers","25, 26, 28, 29"), SetPVarInt(playerid,"RNumber_",4);
	case 88: SetPVarString(playerid,"RNumbers","26, 29"), SetPVarInt(playerid,"RNumber_",2);
	case 89: SetPVarString(playerid,"RNumbers","26, 27, 29, 30"), SetPVarInt(playerid,"RNumber_",4);
	case 90: SetPVarString(playerid,"RNumbers","27, 30"), SetPVarInt(playerid,"RNumber_",2);
	case 92: SetPVarString(playerid,"RNumbers","28, 29"), SetPVarInt(playerid,"RNumber_",2);
	case 94: SetPVarString(playerid,"RNumbers","29, 30"), SetPVarInt(playerid,"RNumber_",2);
	case 96: SetPVarString(playerid,"RNumbers","28, 31"), SetPVarInt(playerid,"RNumber_",2);
	case 97: SetPVarString(playerid,"RNumbers","28, 29, 31, 32"), SetPVarInt(playerid,"RNumber_",4);
	case 98: SetPVarString(playerid,"RNumbers","29, 32"), SetPVarInt(playerid,"RNumber_",2);
	case 99: SetPVarString(playerid,"RNumbers","29, 30, 32, 33"), SetPVarInt(playerid,"RNumber_",4);
	case 100: SetPVarString(playerid,"RNumbers","30, 33"), SetPVarInt(playerid,"RNumber_",2);
	case 102: SetPVarString(playerid,"RNumbers","31, 32"), SetPVarInt(playerid,"RNumber_",2);
	case 104: SetPVarString(playerid,"RNumbers","32, 33"), SetPVarInt(playerid,"RNumber_",2);
	case 106: SetPVarString(playerid,"RNumbers","31, 34"), SetPVarInt(playerid,"RNumber_",2);
	case 107: SetPVarString(playerid,"RNumbers","31, 32, 34, 35"), SetPVarInt(playerid,"RNumber_",4);
	case 108: SetPVarString(playerid,"RNumbers","32, 35"), SetPVarInt(playerid,"RNumber_",2);
	case 109: SetPVarString(playerid,"RNumbers","32, 33, 35, 36"), SetPVarInt(playerid,"RNumber_",4);
	case 110: SetPVarString(playerid,"RNumbers","33, 36"), SetPVarInt(playerid,"RNumber_",2);
	case 112: SetPVarString(playerid,"RNumbers","34, 35"), SetPVarInt(playerid,"RNumber_",2);
	case 114: SetPVarString(playerid,"RNumbers","35, 36"), SetPVarInt(playerid,"RNumber_",2);
	case 116: SetPVarString(playerid,"RNumbers","1, 4, 7, 10, 13, 16, 19, 22, 25, 28, 31, 34"), SetPVarInt(playerid,"RNumber_",12);
	case 118: SetPVarString(playerid,"RNumbers","2, 5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35"), SetPVarInt(playerid,"RNumber_",12);
	case 120: SetPVarString(playerid,"RNumbers","3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36"), SetPVarInt(playerid,"RNumber_",12);
	case 121: SetPVarString(playerid,"RNumbers","1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12"), SetPVarInt(playerid,"RNumber_",12);
	case 122: SetPVarString(playerid,"RNumbers","13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24"), SetPVarInt(playerid,"RNumber_",12);
	case 123: SetPVarString(playerid,"RNumbers","25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36"), SetPVarInt(playerid,"RNumber_",12);
	case 124: SetPVarString(playerid,"RNumbers","1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18"), SetPVarInt(playerid,"RNumber_",18);
	case 125: SetPVarString(playerid,"RNumbers","2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36"), SetPVarInt(playerid,"RNumber_",18);
	case 126: SetPVarString(playerid,"RNumbers","1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36"), SetPVarInt(playerid,"RNumber_",18);
	case 127: SetPVarString(playerid,"RNumbers","2, 4, 6, 8, 10, 11, 13, 15, 17, 20, 22, 24, 26, 28, 29, 31, 33, 35"), SetPVarInt(playerid,"RNumber_",18);
	case 128: SetPVarString(playerid,"RNumbers","1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35"), SetPVarInt(playerid,"RNumber_",18);
	case 129: SetPVarString(playerid,"RNumbers","19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36"), SetPVarInt(playerid,"RNumber_",18);
	}
	return true;
}
publics: RouletCheck(idx)
{
	new strings[50];
	if(RouletPlay[idx])
	{
		if(RouletTimer[idx][0x1] < RouletTimer[idx][0x2])
		{
			RouletTimer[idx][0x1]++;
			RouletNumber[idx] = random(37);
			foreach(new i: Player)
			{
				if(RouletStol[i] != idx && RouletKrupie[idx] != i) continue;
				switch(RouletNumber[idx])
				{
				case 0: format(strings, 20, "~g~%i", RouletNumber[idx]);
				case 1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36: format(strings, 20, "~r~%i", RouletNumber[idx]);
				default: format(strings, 20, "%i", RouletNumber[idx]);
				}
				GameTextForPlayer(i, strings, 4000, 6);
			}
		}
		else RouletPlay[idx] = false, RouletTimer[idx][0x1] = 0, RouletTimer[idx][0x2] = 0, RouletPrize[idx] = true;
	}
	foreach(new i: Player)
	{
		if(!RouletPrize[idx]) continue;
		if(RouletStol[i] == idx || RouletKrupie[idx] == i)
		{
			if(!RouletBet[i] || RouletKrupie[idx] == i) SendMes(i,COLOR_YELLOW, " Выпало число %i.",RouletNumber[idx]);
			else if(RouletBet[i])
			{
				new str[300], number[20], bool:null, null_;
				GetPVarString(i,"RNumbers",str,sizeof(str));
				sscanf(str,"p<,>a<i>[20]",number);
				null = false;
				for(new n = 0; n < GetPVarInt(i,"RNumber_"); n++) if(number[n] == RouletNumber[idx]) { null = true; break; }
				if(null == false) SendMes(i,COLOR_YELLOW," Выпало число %i. Ваша ставка проиграла!",RouletNumber[idx]), SetPlayerChatBubble(i,"Проиграл",COLOR_LIGHTRED,30.0,3000);
				else
				{
					switch(GetPVarInt(i,"RNumber_")) { case 1: null_ = 36; case 2: null_ = 8; case 4: null_ = 6; case 12: null_ = 3; case 18: null_ = 2; }
					SendMes(i,COLOR_YELLOW," Выпало число %i. Вы выиграли %i вирт!",RouletNumber[idx], RouletBet[i]*null_);
					pData[i][pCash]+=RouletBet[i]*null_;
					SetPlayerChatBubble(i,"Выйграл",COLOR_LIGHTGREEN,30.0,3000);
					MoneyLog(pData[i][pName],"None", RouletBet[i]*null_, "(+)RouletWin");
				}
			}
		}
	}
	if(RouletPrize[idx])
	{
		RouletPrize[idx] = false;
		RouletPlay[idx] = false;
		RouletNumber[idx] = 0;
		KillTimer(RouletTimer[idx][0x0]);
		foreach(new l: Player)
		{
			if(!IsPlayerConnected(l) || IsPlayerNPC(l)) continue;
			if(RouletStol[l] != idx || !RouletBet[l]) continue;
			switch(idx)
			{
			case 1..4:
				{
					if(CasinoInfo[1][caMafia] == 6) MafiaBank[0][nYakuza]+= RouletBet[l]/97;
					else if(CasinoInfo[1][caMafia] == 14) MafiaBank[0][nRm]+= RouletBet[l]/97;
					else if(CasinoInfo[1][caMafia] == 5) MafiaBank[0][nLcn]+= RouletBet[l]/97;
				}
			default:
				{
					if(CasinoInfo[2][caMafia] == 6) MafiaBank[0][nYakuza]+= RouletBet[l]/97;
					else if(CasinoInfo[2][caMafia] == 14) MafiaBank[0][nRm]+= RouletBet[l]/97;
					else if(CasinoInfo[2][caMafia] == 5) MafiaBank[0][nLcn]+= RouletBet[l]/97;
				}
			}
			pData[RouletKrupie[idx]][pPayCheck]+=100;
			DestroyObject(RouletObject[l]);
			new obj = CreateObject(random(5) + 1912,GetPVarFloat(l,"RXONE"),GetPVarFloat(l,"RYONE"),GetPVarFloat(l,"RZONE"),0.00,0.00,0.00);
			SetPVarFloat(l,"RX",GetPVarFloat(l,"RXONE"));
			SetPVarFloat(l,"RY",GetPVarFloat(l,"RYONE"));
			SetPVarFloat(l,"RZ",GetPVarFloat(l,"RZONE"));
			SetPlayerCameraLookAt(l,GetPVarFloat(l,"RXONE"),GetPVarFloat(l,"RYONE"),GetPVarFloat(l,"RZONE"));
			SetPVarInt(l,"RNumber",0);
			RouletObject[l] = obj;
			RouletBet[l] = 0;
			DeletePVar(l,"RNumbers");
			DeletePVar(l,"RNumber_");
			PlayerTextDrawSetString(l,RouletText[l],"~<~~>~~up~~down~~n~~g~Money: none~n~~y~Bet: none");
		}
		DeletePVar(RouletKrupie[idx],"Roulet");
		RouletKrupie[idx] = INVALID_PLAYER_ID;
	}
	return true;
}
stock GetRoulet(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 2, 1962.8666,1026.0941,993.3957)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1957.9739,1026.1073,993.3957)) return 2;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1958.1686,1008.0011,993.3957)) return 3;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1962.8086,1007.9399,993.3957)) return 4;
	//
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2230.8989,1619.5001,1006.2346)) return 5;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2242.4980,1619.5001,1006.2346)) return 6;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2230.8989,1613.5001,1006.2346)) return 7;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2242.4980,1613.5001,1006.2346)) return 8;
	//
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2230.8989,1594.5001,1006.2346)) return 9;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2242.4980,1594.5001,1006.2346)) return 10;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2230.8989,1588.5001,1006.2346)) return 11;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2242.4980,1588.5001,1006.2346)) return 12;
	else return false;
}
stock GetCasino(playerid, idx)
{
	if(strcmp(pData[playerid][pName],CasinoInfo[idx][caManager],false) == 0 || strcmp(pData[playerid][pName],CasinoInfo[idx][caManager2],false) == 0 || strcmp(pData[playerid][pName],CasinoInfo[idx][caManager3],false) == 0) return 2;
	if(strcmp(pData[playerid][pName],CasinoInfo[idx][caKrupie],false) == 0 || strcmp(pData[playerid][pName],CasinoInfo[idx][caKrupie2],false) == 0 || strcmp(pData[playerid][pName],CasinoInfo[idx][caKrupie3],false) == 0
			|| strcmp(pData[playerid][pName],CasinoInfo[idx][caKrupie4],false) == 0 || strcmp(pData[playerid][pName],CasinoInfo[idx][caKrupie5],false) == 0 || strcmp(pData[playerid][pName],CasinoInfo[idx][caKrupie6],false) == 0 || strcmp(pData[playerid][pName],CasinoInfo[idx][caKrupie7],false) == 0
			|| strcmp(pData[playerid][pName],CasinoInfo[idx][caKrupie8],false) == 0 || strcmp(pData[playerid][pName],CasinoInfo[idx][caKrupie9],false) == 0 || strcmp(pData[playerid][pName],CasinoInfo[idx][caKrupie10],false) == 0) return true;
	return false;
}
stock IsPlayerNearBone(playerid)
{
	for(new i; i <sizeof(BoneCoor); i++) if(IsPlayerInRangeOfPoint(playerid, 2.0, BoneCoor[i][0],BoneCoor[i][1],BoneCoor[i][2])) return i;
	return -1;
}
stock UpdateBone(idx)
{
	new strings[200], str[256];
	foreach(new i: Player)
	{
		if(GetPVarInt(i,"BoneStol")-1 == idx)
		{
			str = "";
			format(strings,40,"Table:_%i",idx+1);
			PlayerTextDrawSetString(i,PlayerBone[i][0],strings);
			format(strings,128,"Bet:_%i~n~Bank:_%i~n~Money:_%i",BoneInfo[idx][Bet],BoneInfo[idx][bBank],pData[i][pCash]);
			PlayerTextDrawSetString(i,PlayerBone[i][3],strings);
			for(new i_ = 0; i_ < 5; i_++)
			{
				if(BoneInfo[idx][Gamer][i_] != INVALID_PLAYER_ID) format(strings,128,"%s~n~",pData[BoneInfo[idx][Gamer][i_]][pName]);
				else format(strings,30,"--~n~");
				strcat(str,strings);
			}
			PlayerTextDrawSetString(i,PlayerBone[i][1],str);
			str = "";
			for(new i_ = 0; i_ < 5; i_++)
			{
				if(BoneInfo[idx][Gamer][i_] != INVALID_PLAYER_ID && GetPVarInt(BoneInfo[idx][Gamer][i_],"BoneStol_"))
				{
					if(GetPVarInt(BoneInfo[idx][Gamer][i_],"BoneStol_") == 1) format(strings,128,"++~n~");
					else format(strings,128,"%i~n~",GetPVarInt(BoneInfo[idx][Gamer][i_],"BoneStol_"));
				}
				else format(strings,30,"--~n~");
				strcat(str,strings);
			}
			PlayerTextDrawSetString(i,PlayerBone[i][2],str);
		}
	}
	return true;
}
stock ExitBone(playerid)
{
	if(GetPVarInt(playerid,"BoneStol_") && BoneInfo[GetPVarInt(playerid,"BoneStol")-1][GameStart] <= 0)
	{
		pData[playerid][pCash]+=GetPVarInt(playerid,"BoneBetMoney");
		SetAccountInfo(playerid, pData[playerid][pCash], "pCash");
		BoneInfo[GetPVarInt(playerid,"BoneStol")-1][bBank]-=BoneInfo[GetPVarInt(playerid,"BoneStol")-1][Bet];
		MoneyLog(pData[playerid][pName],"None", BoneInfo[GetPVarInt(playerid,"BoneStol")-1][Bet], "(+)ResetBoneBet");
		DeletePVar(playerid,"BoneBetMoney");
	}
	new idx = 0;
	if(BoneInfo[GetPVarInt(playerid,"BoneStol")-1][GameStart] > 0 && BoneInfo[GetPVarInt(playerid,"BoneStol")-1][Crupie] != playerid)
	{
		foreach(new i: Player)
		{
			if(GetPVarInt(i,"BoneStol") == GetPVarInt(playerid,"BoneStol") && GetPVarInt(i,"BoneStol_") == 1 && i != playerid && BoneInfo[GetPVarInt(i,"BoneStol")-1][GameStart] > 0) idx++;
		}
		if(!idx) return BoneInfo[GetPVarInt(playerid,"BoneStol")-1][GameStart] = 1;
	}
	if(BoneInfo[GetPVarInt(playerid,"BoneStol")-1][Crupie] == playerid) BoneInfo[GetPVarInt(playerid,"BoneStol")-1][Crupie] = INVALID_PLAYER_ID;
	for(new i; i != 4; i++) TextDrawHideForPlayer(playerid,Bone[i]), PlayerTextDrawHide(playerid,PlayerBone[playerid][i]);
	for(new i_ = 0; i_ != 5; i_++) if(BoneInfo[GetPVarInt(playerid,"BoneStol")-1][Gamer][i_] == playerid) BoneInfo[GetPVarInt(playerid,"BoneStol")-1][Gamer][i_] = INVALID_PLAYER_ID;
	UpdateBone(GetPVarInt(playerid,"BoneStol")-1);
	DeletePVar(playerid,"BoneStol");
	DeletePVar(playerid,"BoneStol_");
	CancelSelectTextDraw(playerid);
	return true;
}
stock ShowItog(idx)
{
	new itog[3] = -1; itog[0] = -1; itog[1] = -1; itog[2] = -1;
	foreach(new i: Player)
	{
		if(GetPVarInt(i,"BoneStol")-1 == idx && GetPVarInt(i,"BoneStol_") > 1 && GetPVarInt(i,"BoneStol_") > itog[0]) itog[0] = GetPVarInt(i,"BoneStol_"), itog[1] = i;
		if(GetPVarInt(i,"BoneStol")-1 == idx && GetPVarInt(i,"BoneStol_") > 1 && i != itog[1] && GetPVarInt(i,"BoneStol_") == itog[0]) itog[2] = i;
	}
	if(itog[2] > -1)
	{
		foreach(new i: Player)
		{
			if(GetPVarInt(i,"BoneStol")-1 == idx && GetPVarInt(i,"BoneStol_") > 1 && GetPVarInt(i,"BoneStol_") == itog[0]) SetPVarInt(i,"BoneStol_",1), BoneInfo[idx][GameStart] = 30, SCM(i,0x9856A9FF,"Вы попали в следующий раунд. У вас есть 30 секунд, чтобы бросить кости");
			else if(GetPVarInt(i,"BoneStol")-1 == idx) DeletePVar(i,"BoneStol_");
		}
		UpdateBone(idx);
	}
	else if(itog[1] > -1)
	{
		format(string,128," Игра окончена. Победитель игры: %s",pData[itog[1]][pName]);
		new proc = (BoneInfo[idx][bBank]/100)*10;
		switch(idx)
		{
		case 0..5:
			{
				if(CasinoInfo[1][caMafia] == 6) MafiaBank[0][nYakuza]+= proc;
				else if(CasinoInfo[1][caMafia] == 14) MafiaBank[0][nRm]+= proc;
				else if(CasinoInfo[1][caMafia] == 5) MafiaBank[0][nLcn]+= proc;
			}
		default:
			{
				if(CasinoInfo[2][caMafia] == 6) MafiaBank[0][nYakuza]+= proc;
				else if(CasinoInfo[2][caMafia] == 14) MafiaBank[0][nRm]+= proc;
				else if(CasinoInfo[2][caMafia] == 5) MafiaBank[0][nLcn]+= proc;
			}
		}
		if(BoneInfo[idx][Crupie] != INVALID_PLAYER_ID) pData[BoneInfo[idx][Crupie]][pPayCheck]+=150;
		MoneyLog(pData[itog[1]][pName],"None", BoneInfo[idx][bBank]-proc, "(+)moneyWinBone");
		pData[itog[1]][pCash]+=BoneInfo[idx][bBank]-proc;
		BoneInfo[idx][GameStart] = 0;
		BoneInfo[idx][Bet] = 0;
		BoneInfo[idx][bBank] = 0;


		foreach(new i: Player)
		{
			if(GetPVarInt(i,"BoneStol")-1 == idx && pData[i][pLogin])
			{
				SCM(i,0x9856A9FF,string);
				DeletePVar(i,"BoneStol_");
			}
		}
		foreach(new i: Player)
		{
			if(GetPVarInt(i,"BoneStol")-1 == idx && IsPlayerNearBone(i) != idx) ExitBone(i);
		}
		UpdateBone(idx);
	}
	return true;
}
stock Up(playerid)
{
	new str[0x5];
	//BroadCast(0xDEADEDFF, "Здравствуйте, я представитель компании 'Верх в каждый сток'");
	switch(RouletStol[playerid])
	{
	case 1..4:
		{
			str = "RY";
			switch(GetPVarInt(playerid,"RNumber"))
			{
			case 1..5: {
					SetPVarFloat(playerid,"RX",GetPVarFloat(playerid,"RXONE"));
					SetPVarFloat(playerid,"RY",GetPVarFloat(playerid,"RYONE"));
					SetPVarFloat(playerid,"RZ",GetPVarFloat(playerid,"RZONE"));
					SetPVarInt(playerid,"RNumber",0); }
			case 6..115: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.076), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")-5);
			case 116,118,120: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.152), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")-5);
			case 123,122: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.608), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")-1);
			case 121: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-1.216), SetPVarInt(playerid,"RNumber",123);
			case 125..129: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.304), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")-1);
			case 124: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-1.520), SetPVarInt(playerid,"RNumber",129);
			}
		}
	default:
		{
			str = "RX";
			switch(GetPVarInt(playerid,"RNumber"))
			{
			case 1..5: {
					SetPVarFloat(playerid,"RX",GetPVarFloat(playerid,"RXONE"));
					SetPVarFloat(playerid,"RY",GetPVarFloat(playerid,"RYONE"));
					SetPVarFloat(playerid,"RZ",GetPVarFloat(playerid,"RZONE"));
					SetPVarInt(playerid,"RNumber",0); }
			case 6..115: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.076), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")-5);
			case 116,118,120: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.152), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")-5);
			case 123,122: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.608), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")-1);
			case 121: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+1.216), SetPVarInt(playerid,"RNumber",123);
			case 125..129: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.304), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")-1);
			case 124: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+1.520), SetPVarInt(playerid,"RNumber",129);
			}
		}
	}
	SetObjectPos(RouletObject[playerid],GetPVarFloat(playerid,"RX"),GetPVarFloat(playerid,"RY"),GetPVarFloat(playerid,"RZ"));
	return SetPlayerCameraLookAt(playerid,GetPVarFloat(playerid,"RX"),GetPVarFloat(playerid,"RY"),GetPVarFloat(playerid,"RZ"));
}
stock Right(playerid)
{
	new str[0x5], str_[0x5];
	//BroadCast(0xDEADEDFF, "Здравствуйте, я представитель компании 'Право в каждый сток'");
	switch(RouletStol[playerid])
	{
	case 1..4: str = "RX", str_ = "RY";
	default: str = "RY", str_ = "RX";
	}
	switch(GetPVarInt(playerid,"RNumber"))
	{
	case 1..4,6..9,11..14,16..19,21..24,26..29,31..34,36..39,41..44,46..49,51..54,56..59,61..64,66..69,71..74,76..79,81..84,86..89,91..94,96..99,101..104,106..109,111..114: {
			SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.110);
			SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")+1); }
	case 116,118: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")+2);
	case 120: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.440), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")-4);
	case 121: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarInt(playerid,"RNumber",16);
	case 122: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarInt(playerid,"RNumber",56);
	case 123: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarInt(playerid,"RNumber",96);
	case 129:
		{
			switch(RouletStol[playerid])
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",123);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",123);
			}
		}
	case 128:
		{
			switch(RouletStol[playerid])
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",123);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",123);
			}
		}
	case 127:
		{
			switch(RouletStol[playerid])
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",122);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",122);
			}
		}
	case 126:
		{
			switch(RouletStol[playerid])
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",122);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",122);
			}
		}
	case 125:
		{
			switch(RouletStol[playerid])
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",121);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",121);
			}
		}
	case 124:
		{
			switch(RouletStol[playerid])
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",121);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",121);
			}
		}
	}
	SetObjectPos(RouletObject[playerid],GetPVarFloat(playerid,"RX"),GetPVarFloat(playerid,"RY"),GetPVarFloat(playerid,"RZ"));
	return SetPlayerCameraLookAt(playerid,GetPVarFloat(playerid,"RX"),GetPVarFloat(playerid,"RY"),GetPVarFloat(playerid,"RZ"));
}


stock Left(playerid)
{
	new str[0x5], str_[0x5];
	//BroadCast(0xDEADEDFF, "Здравствуйте, я представитель компании 'Лево в каждый сток'");
	switch(RouletStol[playerid])
	{
	case 1..4: str = "RX", str_ = "RY";
	default: str = "RY", str_ = "RX";
	}
	switch(GetPVarInt(playerid,"RNumber"))
	{
	case 2..5,7..10,12..15,17..20,22..25,27..30,32..35,37..40,42..45,47..50,52..55,57..60,62..65,67..70,72..75,77..80,82..85,87..90,92..95,97..100,102..105,107..110,112..115: {
			SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.110);
			SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")-1); }
	case 118,120: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")-2);
	case 116: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.440), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")+4);
	case 31:
		{
			switch(RouletStol[playerid])
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.228), SetPVarInt(playerid,"RNumber",121);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.228), SetPVarInt(playerid,"RNumber",121);
			}
		}
	case 36:
		{
			switch(RouletStol[playerid])
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.304), SetPVarInt(playerid,"RNumber",122);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.304), SetPVarInt(playerid,"RNumber",122);
			}
		}
	case 76:
		{
			switch(RouletStol[playerid])
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.304), SetPVarInt(playerid,"RNumber",123);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.304), SetPVarInt(playerid,"RNumber",123);
			}
		}
	case 81:
		{
			switch(RouletStol[playerid])
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.228), SetPVarInt(playerid,"RNumber",123);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.228), SetPVarInt(playerid,"RNumber",123);
			}
		}
	case 86:
		{
			switch(RouletStol[playerid])
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",123);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",123);
			}
		}
	case 91:
		{
			switch(RouletStol[playerid])
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.076), SetPVarInt(playerid,"RNumber",123);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.076), SetPVarInt(playerid,"RNumber",123);
			}
		}
	case 96: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarInt(playerid,"RNumber",123);
	case 101:
		{
			switch(RouletStol[playerid])
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.076), SetPVarInt(playerid,"RNumber",123);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.076), SetPVarInt(playerid,"RNumber",123);
			}
		}
	case 106:
		{
			switch(RouletStol[playerid])
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",123);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",123);
			}
		}
	case 111:
		{
			switch(RouletStol[playerid])
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.228), SetPVarInt(playerid,"RNumber",123);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.228), SetPVarInt(playerid,"RNumber",123);
			}
		}
	case 71:
		{
			switch(RouletStol[playerid])
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.228), SetPVarInt(playerid,"RNumber",122);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.228), SetPVarInt(playerid,"RNumber",122);
			}
		}
	case 26:
		{
			switch(RouletStol[playerid])
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",121);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",121);
			}
		}
	case 66:
		{
			switch(RouletStol[playerid])
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",122);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",122);
			}
		}
	case 21:
		{
			switch(RouletStol[playerid])
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.076), SetPVarInt(playerid,"RNumber",121);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.076), SetPVarInt(playerid,"RNumber",121);
			}
		}
	case 61:
		{
			switch(RouletStol[playerid])
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.076), SetPVarInt(playerid,"RNumber",122);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.076), SetPVarInt(playerid,"RNumber",121);
			}
		}
	case 16: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarInt(playerid,"RNumber",121);
	case 56: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarInt(playerid,"RNumber",122);
	case 11:
		{
			switch(RouletStol[playerid])
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.076), SetPVarInt(playerid,"RNumber",121);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.076), SetPVarInt(playerid,"RNumber",121);
			}
		}
	case 51:
		{
			switch(RouletStol[playerid])
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.076), SetPVarInt(playerid,"RNumber",122);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.076), SetPVarInt(playerid,"RNumber",122);
			}
		}
	case 6:
		{
			switch(RouletStol[playerid])
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",121);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",121);
			}
		}
	case 46:
		{
			switch(RouletStol[playerid])
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",122);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",122);
			}
		}
	case 1:
		{
			switch(RouletStol[playerid])
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.228), SetPVarInt(playerid,"RNumber",121);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.228), SetPVarInt(playerid,"RNumber",121);
			}
		}
	case 41:
		{
			switch(RouletStol[playerid])
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.228), SetPVarInt(playerid,"RNumber",122);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.228), SetPVarInt(playerid,"RNumber",122);
			}
		}
	case 121:
		{
			switch(RouletStol[playerid])
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",124);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",124);
			}
		}
	case 122:
		{
			switch(RouletStol[playerid])
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",126);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",126);
			}
		}
	case 123:
		{
			switch(RouletStol[playerid])
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",128);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",128);
			}
		}
	}
	SetObjectPos(RouletObject[playerid],GetPVarFloat(playerid,"RX"),GetPVarFloat(playerid,"RY"),GetPVarFloat(playerid,"RZ"));
	return SetPlayerCameraLookAt(playerid,GetPVarFloat(playerid,"RX"),GetPVarFloat(playerid,"RY"),GetPVarFloat(playerid,"RZ"));
}
stock Down(playerid)
{
	new str[0x5], str_[0x5];
	//BroadCast(0xDEADEDFF, "Здравствуйте, я представитель компании 'Низ в каждый сток'");
	switch(RouletStol[playerid])
	{
	case 1..4:
		{
			str = "RY", str_ = "RX";
			switch(GetPVarInt(playerid,"RNumber"))
			{
			case 0: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.152), SetPVarInt(playerid,"RNumber",3);
			case 111,113,115: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.152), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")+5);
			case 1..110: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.076), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")+5);
			case 114: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.152), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.110), SetPVarInt(playerid,"RNumber",118);
			case 112: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.152), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.110), SetPVarInt(playerid,"RNumber",118);
			case 122,121: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.608), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")+1);
			case 123: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+1.216), SetPVarInt(playerid,"RNumber",121);
			case 124..128: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.304), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")+1);
			case 129: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+1.520), SetPVarInt(playerid,"RNumber",124);
			}
		}
	default:
		{
			str = "RX", str_ = "RY";
			switch(GetPVarInt(playerid,"RNumber"))
			{
			case 0: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.152), SetPVarInt(playerid,"RNumber",3);
			case 111,113,115: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.152), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")+5);
			case 1..110: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.076), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")+5);
			case 114: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.152), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.110), SetPVarInt(playerid,"RNumber",118);
			case 112: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.152), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.110), SetPVarInt(playerid,"RNumber",118);
			case 122,121: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.608), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")+1);
			case 123: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-1.216), SetPVarInt(playerid,"RNumber",121);
			case 124..128: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.304), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")+1);
			case 129: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-1.520), SetPVarInt(playerid,"RNumber",124);
			}
		}
	}
	SetObjectPos(RouletObject[playerid],GetPVarFloat(playerid,"RX"),GetPVarFloat(playerid,"RY"),GetPVarFloat(playerid,"RZ"));
	return SetPlayerCameraLookAt(playerid,GetPVarFloat(playerid,"RX"),GetPVarFloat(playerid,"RY"),GetPVarFloat(playerid,"RZ"));
}
publics: mysql_load_account(playerid)
{
	cache_get_value_name_int(0, "pLevel", 			pData[playerid][pLevel]);
	cache_get_value_name_int(0, "pHelper", 			pData[playerid][pHelper]);
	cache_get_value_name_int(0, "pRatingSupport", 	pData[playerid][pRatingSupport]);
	cache_get_value_name_int(0, "pJobHeal", 		pData[playerid][pJobHeal]);
	cache_get_value_name_int(0, "pMestoJail", 		pData[playerid][pMestoJail]);

	cache_get_value_name 	(0, "pIp", 				pData[playerid][pIp]);
	cache_get_value_name 	(0, "pvIp", 			pData[playerid][pvIp]);
	cache_get_value_name 	(0, "pIpReg", 			pData[playerid][pIpReg]);
	cache_get_value_name 	(0, "pKeyip", 			pData[playerid][pKeyip]);
	cache_get_value_name 	(0, "pDataReg", 		pData[playerid][pDataReg]);
			
	cache_get_value_name_int(0, "pCheckip", 		pData[playerid][pCheckip]);
	cache_get_value_name_int(0, "pText", 			pData[playerid][pText]);
	cache_get_value_name_int(0, "pSatiety", 		pData[playerid][pSatiety]);
	cache_get_value_name_int(0, "pDonateRank", 		pData[playerid][pDonateRank]);
	cache_get_value_name_int(0, "pMats", 			pData[playerid][pMats]);
	cache_get_value_name_int(0, "pSex", 			pData[playerid][pSex]);
	cache_get_value_name_int(0, "pArrested", 		pData[playerid][pArrested]);
	cache_get_value_name_int(0, "pMuted", 			pData[playerid][pMuted]);
	cache_get_value_name_int(0, "pCrimes", 			pData[playerid][pCrimes]);
	cache_get_value_name_int(0, "pCash", 			pData[playerid][pCash]);
	cache_get_value_name_int(0, "pPHouseKey", 		pData[playerid][pPHouseKey]);
	cache_get_value_name_int(0, "pKvartiraKey", 	pData[playerid][pKvartiraKey]);
	cache_get_value_name_int(0, "pAdmin", 			pData[playerid][pAdmin]);
	cache_get_value_name_int(0, "pPBizzKey", 		pData[playerid][pPBizzKey]);
	cache_get_value_name_int(0, "pPFarmKey", 		pData[playerid][pPFarmKey]);
	cache_get_value_name_int(0, "pPLimitBank", 		pData[playerid][pPLimitBank]);
	cache_get_value_name_int(0, "pLimitPay", 		pData[playerid][pLimitPay]);
	cache_get_value_name_int(0, "pLimitAutoUgon", 	pData[playerid][pLimitAutoUgon]);
	cache_get_value_name_int(0, "pPayFlood", 		pData[playerid][pPayFlood]);
	cache_get_value_name_int(0, "pLimitSellCar", 	pData[playerid][pLimitSellCar]);
	cache_get_value_name_int(0, "pPayCheck", 		pData[playerid][pPayCheck]);
	cache_get_value_name_int(0, "pJailTime", 		pData[playerid][pJailTime]);
	cache_get_value_name_int(0, "pDrugs", 			pData[playerid][pDrugs]);
	cache_get_value_name_int(0, "pLeader", 			pData[playerid][pLeader]);
	cache_get_value_name_int(0, "pMember", 			pData[playerid][pMember]);
	cache_get_value_name_int(0, "pRank", 			pData[playerid][pRank]);
	cache_get_value_name_int(0, "pJob", 			pData[playerid][pJob]);
	cache_get_value_name_int(0, "pModel", 			pData[playerid][pModel]);
	cache_get_value_name_int(0, "pPnumber", 		pData[playerid][pPnumber]);
	cache_get_value_name_int(0, "pDirectory", 		pData[playerid][pDirectory]);
	//ыыыыыыыы нужно переделать
	cache_get_value_name_int(0, "pVhoddata", 		pData[playerid][pVhoddata]);
	cache_get_value_name_int(0, "pVhodMes", 		pData[playerid][pVhodMes]);
	cache_get_value_name_int(0, "pVhodchas", 		pData[playerid][pVhodchas]);
	cache_get_value_name_int(0, "pVhodminute", 		pData[playerid][pVhodminute]);

	cache_get_value_name_int(0, "pLicenses", 		pData[playerid][pLicenses]);
	cache_get_value_name_int(0, "pSetUI", 			pData[playerid][pSetUI]);
	cache_get_value_name_int(0, "pZakonp", 			pData[playerid][pZakonp]);
	cache_get_value_name_int(0, "pAddiction", 		pData[playerid][pAddiction]);
	cache_get_value_name_int(0, "pNarcoLomka", 		pData[playerid][pNarcoLomka]);
	cache_get_value_name_int(0, "pWarns", 			pData[playerid][pWarns]);
	cache_get_value_name_int(0, "OffWarns", 		pData[playerid][OffWarns]);

	cache_get_value_name_float(0, "pExp",  			pData[playerid][pExp]);
	cache_get_value_name_float(0, "pStyleAmmount", 	pData[playerid][pStyleAmmount]);
	cache_get_value_name_float(0, "pFishes", 		pData[playerid][pFishes]);

	cache_get_value_name_int(0, "punWarns", 		pData[playerid][punWarns]);
	cache_get_value_name_int(0, "pFuel", 			pData[playerid][pFuel]);
	cache_get_value_name_int(0, "pMushrooms", 		pData[playerid][pMushrooms]);
	cache_get_value_name_int(0, "pBank", 			pData[playerid][pBank]);
	cache_get_value_name_int(0, "pKeys", 			pData[playerid][pKeys]);
	cache_get_value_name_int(0, "pMobile", 			pData[playerid][pMobile]);
	cache_get_value_name_int(0, "pDolg", 			pData[playerid][pDolg]);
	cache_get_value_name_int(0, "pKrisha", 			pData[playerid][pKrisha]);
	cache_get_value_name_int(0, "pWantedLevel", 	pData[playerid][pWantedLevel]);
			

	cache_get_value_name 	(0, "pMarriedTo", 		pData[playerid][pMarriedTo]);
	cache_get_value_name 	(0, "pDrug", 			pData[playerid][pDrug]);
	cache_get_value_name 	(0, "pGunSkills", 		pData[playerid][pGunSkills]);
		
	sscanf(pData[playerid][pGunSkills], "p<,>a<i>[6]",pData[playerid][pGunSkill]);

	cache_get_value_name_int(0, "pQuestL", 			pData[playerid][pQuestL]);
	cache_get_value_name_int(0, "pQuest", 			pData[playerid][pQuest]);
	cache_get_value_name_int(0, "pQuestF", 			pData[playerid][pQuestF]);
	cache_get_value_name_int(0, "pQuestP", 			pData[playerid][pQuestP]);
	cache_get_value_name_int(0, "pQuestPF", 		pData[playerid][pQuestPF]);
			
	cache_get_value_name_int(0, "pQuestShow", 		pData[playerid][pQuestShow]);
	cache_get_value_name_int(0, "pTaxiRep", 		pData[playerid][pTaxiRep]);
	cache_get_value_name_int(0, "pStyleSelect", 	pData[playerid][pStyleSelect]);
	
	cache_get_value_name_int(0, "pDLevel", 			pData[playerid][pDLevel]);
			
	cache_get_value_name 	(0, "pStyleSkills", 	pData[playerid][pStyleSkills]);
	sscanf(pData[playerid][pStyleSkills], "p<,>a<i>[3]",pData[playerid][pStyleSkill]);

	cache_get_value_name_int(0, "pDExp", 			pData[playerid][pDExp]);
	cache_get_value_name_int(0, "pDMgruz", 			pData[playerid][pDMgruz]);
	cache_get_value_name_int(0, "pPSkill", 			pData[playerid][pPSkill]);
	cache_get_value_name_int(0, "pPProc", 			pData[playerid][pPProc]);
	cache_get_value_name_int(0, "pPMGruz", 			pData[playerid][pPMGruz]);

	cache_get_value_name_int(0, "pRobHouse", 		pData[playerid][pRobHouse]);
	cache_get_value_name_int(0, "pFishesPach", 		pData[playerid][pFishesPach]);
	cache_get_value_name_int(0, "pActiveGAuth", 	pData[playerid][pActiveGAuth]);

	cache_get_value_name 	(0, "pQRCode", 			pData[playerid][pQRCode]);
			
	cache_get_value_name_int(0, "pDrivingSkill", 	pData[playerid][pDrivingSkill]);
	cache_get_value_name_int(0, "pDonateAccount", 	pData[playerid][pDonateAccount]);
	cache_get_value_name_int(0, "prods_skill", 		pData[playerid][pProdsSkill][0]);
	cache_get_value_name_int(0, "prods_exp", 		pData[playerid][pProdsSkill][1]);
	cache_get_value_name_int(0, "pSpawnChange", 	pData[playerid][pSpawnChange]);

	cache_get_value_name_int(0, "pChosenRadio", 	SelectWavesRadio[playerid]);
	cache_get_value_name_int(0, "pRMuteTime", 		pData[playerid][pRMuteTime]);
	cache_get_value_name_int(0, "pPick", 			pData[playerid][pPick]);
	new chars[32];
	cache_get_value_name 	(0, "pChars", 			chars);
			
	cache_get_value_name_int(0, "wSlot_0", 			WeaponInfo[playerid][wWeapon][0]);
	cache_get_value_name_int(0, "wSlot_1", 			WeaponInfo[playerid][wWeapon][1]);
	cache_get_value_name_int(0, "wSlot_2", 			WeaponInfo[playerid][wWeapon][2]);
	cache_get_value_name_int(0, "wSlot_3", 			WeaponInfo[playerid][wWeapon][3]);
	cache_get_value_name_int(0, "wSlot_4", 			WeaponInfo[playerid][wWeapon][4]);
	cache_get_value_name_int(0, "wSlot_5", 			WeaponInfo[playerid][wWeapon][5]);
	cache_get_value_name_int(0, "wSlot_6", 			WeaponInfo[playerid][wWeapon][6]);
	cache_get_value_name_int(0, "wSlot_7", 			WeaponInfo[playerid][wWeapon][7]);
	cache_get_value_name_int(0, "wSlot_8", 			WeaponInfo[playerid][wWeapon][8]);
	cache_get_value_name_int(0, "wSlot_9", 			WeaponInfo[playerid][wWeapon][9]);
	cache_get_value_name_int(0, "wSlot_10", 		WeaponInfo[playerid][wWeapon][10]);
	cache_get_value_name_int(0, "wSlot_11", 		WeaponInfo[playerid][wWeapon][11]);
	cache_get_value_name_int(0, "wSlot_12", 		WeaponInfo[playerid][wWeapon][12]);
			
	cache_get_value_name_int(0, "wValue_0", 		WeaponInfo[playerid][wAmmo][0]);
	cache_get_value_name_int(0, "wValue_1", 		WeaponInfo[playerid][wAmmo][1]);
	cache_get_value_name_int(0, "wValue_2", 		WeaponInfo[playerid][wAmmo][2]);
	cache_get_value_name_int(0, "wValue_3", 		WeaponInfo[playerid][wAmmo][3]);
	cache_get_value_name_int(0, "wValue_4", 		WeaponInfo[playerid][wAmmo][4]);
	cache_get_value_name_int(0, "wValue_5", 		WeaponInfo[playerid][wAmmo][5]);
	cache_get_value_name_int(0, "wValue_6", 		WeaponInfo[playerid][wAmmo][6]);
	cache_get_value_name_int(0, "wValue_7", 		WeaponInfo[playerid][wAmmo][7]);
	cache_get_value_name_int(0, "wValue_8", 		WeaponInfo[playerid][wAmmo][8]);
	cache_get_value_name_int(0, "wValue_9", 		WeaponInfo[playerid][wAmmo][9]);
	cache_get_value_name_int(0, "wValue_10", 		WeaponInfo[playerid][wAmmo][10]);
	cache_get_value_name_int(0, "wValue_11", 		WeaponInfo[playerid][wAmmo][11]);
	cache_get_value_name_int(0, "wValue_12", 		WeaponInfo[playerid][wAmmo][12]);

	cache_get_value_name_float(0, "job_skill[0]", 	pData[playerid][job_skill][job_taxi]);
	cache_get_value_name_float(0, "job_skill[1]", 	pData[playerid][job_skill][job_delivery]);
	cache_get_value_name_float(0, "job_skill[2]", 	pData[playerid][job_skill][job_ugon]);
	cache_get_value_name_float(0, "job_skill[3]", 	pData[playerid][job_skill][job_loader]);

	cache_get_value_name_int(0, "pDetachID", 		pData[playerid][pDetachID]);
	
	sscanf(chars, "p<,>a<i>[6]",pData[playerid][pChar]);
	switch(pData[playerid][pStyleSelect])
	{
		case 0: SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
		case 1: SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
		case 2: SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
		case 3: SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
	}
	if(pData[playerid][pLevel] < 2)
	{
		new ipp[16];
		GetPlayerIp(playerid,ipp,16);
		new szQuery[53+24+5];
		mysql_format(DATABASE, szQuery, sizeof szQuery, "SELECT * FROM `"TABLE_BANIP"` WHERE `IP` = '%s'", ipp);
		mysql_tquery(DATABASE,szQuery,"OnMySQL_QUERY","iis",4,playerid,"");
	}

			/* Загрузка данных */
	HGet(playerid);
	BGet(playerid);
	WGet(playerid);
	FGet(playerid);
			
			
	format(YCMDstr,sizeof YCMDstr ,"SELECT * FROM `"TABLE_CARS"` WHERE `owner` = '%s'",pData[playerid][pName]);
	mysql_tquery(DATABASE,YCMDstr,"OnMySQL_QUERY","iis",33,playerid,"");
			
	if(gettime() >= pData[playerid][OffWarns])
	{
		pData[playerid][pWarns] = 0;
		pData[playerid][OffWarns] = 0;
	}
	if(!pData[playerid][pActivemail]) 
	{
		SCM(playerid,COLOR_WHITE," У вас не подтвержден Эмэйл адрес! Перейдите на сайт для подтверждения");
		SCM(playerid,COLOR_WHITE," Обратите внимание! В случае утери пароля, вы не сможете восстановить доступ с неподтвержденным E-Mail адресом");
	}
	SetPVarInt(playerid,"check_health",0);


	Convoi[playerid] = 9999;
	// Снятие варнов
	new null = pData[playerid][punWarns];
	if(null < Now() && pData[playerid][pWarns]) pData[playerid][pWarns] = 0, pData[playerid][punWarns] = 0;
	//
	/*mysql_format(DATABASE,szQuery, 256, "UPDATE accounts SET pLogin = '1' WHERE name = '%e'", pData[playerid][pName]);
	mysql_tquery(DATABASE,szQuery);*/
	new playersip[40];
	GetPlayerIp(playerid,playersip,sizeof(playersip));
	if(pData[playerid][pActiveGAuth] == 1)
	{
		if(strcmp(playersip, pData[playerid][pIp]) != 0)
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerFacingAngle(playerid, 179.5547);
			SetPlayerCameraPos(playerid, 1357.414428,-1450.705322,252.353897);
			SetPlayerCameraLookAt(playerid, 1365.318969,-1445.091796,249.903198);
			TogglePlayerControllable(playerid, 0);
			ShowPlayerDialog(playerid,16,DIALOG_STYLE_INPUT, "Введите ключ Google Authenticator", "    ==== Ваш IP адрес сменился ====\n=== Введите Ваш ключ Google Authenticator ===", "Готово", "Отмена");
			return true;
		}
	}
	if(pData[playerid][pCheckip] == 1)
	{
		if(strcmp(playersip, pData[playerid][pIp]) != 0)
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerFacingAngle(playerid, 179.5547);
			SetPlayerCameraPos(playerid, 1357.414428,-1450.705322,252.353897);
			SetPlayerCameraLookAt(playerid, 1365.318969,-1445.091796,249.903198);
			TogglePlayerControllable(playerid, 0);
			ShowPlayerDialog(playerid,17,DIALOG_STYLE_INPUT, "Введите ключ безопасности", "    ==== Ваш IP адрес сменился ====\n=== Введите Ваш ключ безопасности ===", "Готово", "Отмена");
			return true;
		}
	}
	else
	{
		new szQuery[70+24+35*2+11];
		mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `"TABLE_ACCOUNTS"` SET pIp = '%s',pvIp = '%s' WHERE name = '%e'",playersip,playersip,pData[playerid][pName]);
		mysql_query(DATABASE,szQuery);
	}
	/**/
	if(GetPVarInt(playerid,"Fraction_Duty") && pData[playerid][pMember] != 0 && !IsAGang(playerid) && !IsAMafia(playerid)) pData[playerid][pSpawnChange] = 0;
	if(pData[playerid][pCash] < 0) pData[playerid][pCash] = 0;
	if(CarInfo[playerid][carPercent][GetPVarInt(playerid,"chosencar")] <= 3 && CarInfo[playerid][carModel][GetPVarInt(playerid,"chosencar")] != 462) CarInfo[playerid][carPercent][GetPVarInt(playerid,"chosencar")] = 4;
	if(pData[playerid][pDonateRank] > 0) SCM(playerid, 0xEAC700FF, " Здравствуйте VIP игрок!");
	
	new szQuery[24*2+15];			
	format(szQuery, sizeof szQuery, "~w~Welcome ~n~~b~   %s", pData[playerid][pName]);
	GameTextForPlayer(playerid, szQuery, 5000, 1);
	if (pData[playerid][pText] == 6) SCM(playerid, COLOR_WHITE, " Вы приобрели бизнес с аукциона. Управление:{FFFF00} /mm - [0] Помощь по игре - [3] Команды сервера"), pData[playerid][pText] = 0;
	//if (pData[playerid][pText] == 4) SCM(playerid, COLOR_WHITE, " С Вас была снята лидерка организации"), pData[playerid][pText] = 0;
	if (pData[playerid][pText] == 5) SCM(playerid, COLOR_WHITE, " Ваша автомастерская была продана государству. Половина стоимости зачислена на ваш счет"), pData[playerid][pText] = 0;
	if (pData[playerid][pText] == 3) SCM(playerid, COLOR_GOLD, " Вы получили 100 000 вирт на банковский счет, за приглашённого друга"), pData[playerid][pText] = 0;
	if (pData[playerid][pText] == 1) SCM(playerid, COLOR_LIGHTRED, " Вы были выселены за неуплату квартплаты. Деньги перечислены на банковский счет"),pData[playerid][pText] = 0;
	if (pData[playerid][pText] == 2) SCM(playerid, COLOR_YELLOW, " Ваш бизнес был продан государству за простой государству. Половина стоимости зачислена на ваш банковский счет"), pData[playerid][pText] = 0;
	for(new i = 1; i <= TOTALGZ; i++)
	{
		if(!ZoneOnBattle[i]) continue;
		GangZoneStopFlashForAll(GZInfo[i][gZone]);
		GangZoneFlashForAll(GZInfo[i][gZone],COLOR_RED);
	}
	ResetPlayerMoney(playerid);
			
	pData[playerid][pLogin] = true;
	SetAccountInfo(playerid,pData[playerid][pLogin],"pLogin");
	SetAccountInfo(playerid,pData[playerid][pText],"pText");
	
	if(Pick) SendClientMessage(playerid,0x3737FC00, " Внимание! Проходят выборы губернатора штата (Мэрия)!");
	SpawnPlayer(playerid);

	if(!(pData[playerid][pSetUI] & SHOW_HP))
		PlayerTextDrawShow(playerid, gHealthText[playerid]);
	if(!(pData[playerid][pSetUI] & SHOW_HUNGER))
		PlayerTextDrawShow(playerid, gHungerText4[playerid]);
	if(!(pData[playerid][pSetUI] & SHOW_ARMOR))
		PlayerTextDrawShow(playerid, gArmorText[playerid]);

	return 1;
}

publics: OnMySQL_QUERY(idx, playerid, str[])
{
	new r, x;
//	cache_get_data(r, f);
	cache_get_row_count(r);
	switch(idx)
	{
	case 0:
		{
			if(!r) return printf("[Загрузка ...] Данные из Others не получены!");
			
			cache_get_value_index_int(0,0, FracBank[0][fLsnews]);
			cache_get_value_index_int(0,1, FracBank[0][fSfnews]);
			cache_get_value_index_int(0,2, FracBank[0][fLvnews]);
			cache_get_value_index_int(0,3, FracBank[0][fBallas]);
			cache_get_value_index_int(0,4, FracBank[0][fVagos]);
			cache_get_value_index_int(0,5, FracBank[0][fGrove]);
			cache_get_value_index_int(0,6, FracBank[0][fAztek]);
			cache_get_value_index_int(0,7, FracBank[0][fRifa]);
			cache_get_value_index_int(0,8, FracBank[0][fKazna]);
			cache_get_value_index_int(0,9, ballashel);
			cache_get_value_index_int(0,10, groovhel);
			cache_get_value_index_int(0,11, vagoshel);
			cache_get_value_index_int(0,12, aztekhel);
			cache_get_value_index_int(0,13, rifahel);
			cache_get_value_index_int(0,14, addd[0]);
			cache_get_value_index_int(0,15, addd[1]);
			cache_get_value_index_int(0,16, addd[2]);
			cache_get_value_index_int(0,17, healpric);
			cache_get_value_index_int(0,18, yakuzahel);
			cache_get_value_index_int(0,19, lcnhel);
			cache_get_value_index_int(0,20, rmhel);
			cache_get_value_index_int(0,21, lsamatbi);
			cache_get_value_index_int(0,22, armmatbi);
			cache_get_value_index_int(0,23, armmatsf);
			cache_get_value_index_int(0,24, hamcmatbi);
			cache_get_value_index_int(0,25, wmcmatbi);
			cache_get_value_index_int(0,26, pmcmatbi);
			cache_get_value_index_int(0,27, rifamatbi);
			cache_get_value_index_int(0,28, ballasmatbi);
			cache_get_value_index_int(0,29, aztekmatbi);
			cache_get_value_index_int(0,30, vagosmatbi);
			cache_get_value_index_int(0,31, groovmatbi);
			cache_get_value_index_int(0,32, lspdmatbi);
			cache_get_value_index_int(0,33, fbimats);
			cache_get_value_index_int(0,34, yakuzamats);
			cache_get_value_index_int(0,35, rmmats);
			cache_get_value_index_int(0,36, lcnmats);
			cache_get_value_index_int(0,37, sfpdmats);
			cache_get_value_index_int(0,38, lvpdmats);
			cache_get_value_index_int(0,39, MafiaBank[0][nLcn]);
			cache_get_value_index_int(0,40, MafiaBank[0][nYakuza]);
			cache_get_value_index_int(0,41, MafiaBank[0][nRm]);
			cache_get_value_index_int(0,42, hamcfuels);
			cache_get_value_index_int(0,43, wmcfuels);
			cache_get_value_index_int(0,44, pmcfuels);
			cache_get_value_index_int(0,45, hamcprods);
			cache_get_value_index_int(0,46, wmcprods);
			cache_get_value_index_int(0,47, pmcprods);
			cache_get_value_index_int(0,48, warelock1[0]);
			cache_get_value_index_int(0,49, warelock1[1]);
			cache_get_value_index_int(0,50, warelock1[2]);
			cache_get_value_index_int(0,51, warelock1[3]);
			cache_get_value_index_int(0,52, warelock1[4]);
			cache_get_value_index_int(0,53, warelock2[0]);
			cache_get_value_index_int(0,54, warelock2[1]);
			cache_get_value_index_int(0,55, warelock2[2]);
			cache_get_value_index_int(0,56, warelock2[3]);
			cache_get_value_index_int(0,57, warelock2[4]);
			cache_get_value_index_int(0,58, warelock3[0]);
			cache_get_value_index_int(0,59, warelock3[1]);
			cache_get_value_index_int(0,60, warelock3[2]);
			cache_get_value_index_int(0,61, warelock3[3]);
			cache_get_value_index_int(0,62, warelock3[4]);
			printf("[Загрузка ...] Данныe из Others получены!");
		}
	case 1:
		{
			if(!r) return printf("[Аукцион] Нет аккаунта. Деньги не были зачислены!");
			new szQuery[69+25+12];
			mysql_format(DATABASE, szQuery, sizeof(szQuery), "UPDATE `"TABLE_ACCOUNTS"` SET pBank = pBank + %i WHERE Name = '%s'",BizzInfo[bizselect[playerid]][bLastStavka],BizzInfo[bizselect[playerid]][bNameStavka]);
			mysql_query(DATABASE,szQuery);
		}
	case 2:
		{
			
			
			printf("[Авторизация] Игрок %s авторизовался",pData[playerid][pName]);
		}
	case 3:
		{
			strmid(pData[playerid][pDrug], str, 0, strlen(str), strlen(str)+5);
		}
	case 4:
		{
			if(r)
			{
				SCM(playerid, 0xC21D00AA,"Ваш IP адрес заблокирован");
				return L_Kick(playerid,36);
			}
		}

	case 38: // подтверждение на смену ника MAYOR
		{
			if(!r)
			{
				format(WantNickChange[playerid],MAX_PLAYER_NAME, "%s",input_name);
				format(string, 256, " [Заявка на смену ника] %s[%i] просит сменить ник на: %s", Name(playerid),playerid,input_name);
				ABroadCast(COLOR_YELLOW, string, 1);
				SCM(playerid, COLOR_LIGHTRED, " Ваша заявка отправлена. Ждите подтверждения мэром штата");
				SendFamilyMessage(7, TEAM_BLUE_COLOR, string);
				SCM(playerid,COLOR_GREEN,"[Загрузка ...] Игрок с именем не найден! Смена ника разрешена");
			}
			else
			{
				SCM(playerid,COLOR_GREY," Аккаунт с данным NickName уже зарегестрирован");
				SCM(playerid,COLOR_RED,"[Загрузка ...] Игрок с именем найден! Смена ника не разрешена");
				ShowPlayerDialog(playerid,10352,DIALOG_STYLE_INPUT, "Смена имени", "Введите новое имя\n\tИмя должно иметь формат: Имя_Фамилия\n\tИмя может содержать буквы от A-z и символ '_'\n\tДлина имени не может быть более 20 символов\n\tСтоимость смены имени 3000000 вирт", "Готово", "Назад");
			}
		}
	case 39: // подтверждение на смену ника ADM
		{
			if(!r)
			{
				format(WantNickChange[playerid],MAX_PLAYER_NAME, "%s",input_name);
				format(string, 190, " [Заявка на смену ника] %s[%i] просит сменить ник на: %s", Name(playerid),playerid,input_name);
				ABroadCast(COLOR_ISPOLZUY, string, 1);
				format(string, 190, " [Заявка на смену ника] %s[%i] просит сменить ник на: %s", Name(playerid),playerid,input_name);
				SCM(playerid, COLOR_LIGHTRED, string);
				SCM(playerid, COLOR_LIGHTRED, " Ваша заявка отправлена. Ждите одобрения администрацией");
				SCM(playerid,COLOR_GREEN,"[Загрузка ...] Игрок с именем не найден! Смена ника разрешена");
			}
			else
			{
				SCM(playerid,COLOR_GREY," Аккаунт с данным NickName уже зарегестрирован");
				SCM(playerid,COLOR_RED,"[Загрузка ...] Игрок с именем найден! Смена ника не разрешена");
				ShowPlayerDialog(playerid,9944,DIALOG_STYLE_INPUT, "Заявка на смену ника", "Напишите новый ник (по форме Имя_Фамилия)", "Отправить", "Назад");
			}
		}
	case 40:
		{
			if(!r) return SCM(playerid, COLOR_GRAD1," Не найдено совпадений");
			for(x = 1; x <= r; x++)
			{
				new Names[MAX_PLAYER_NAME];
				new Vxod[32];
				new OnlineLid[32];
				new Rank;
				new OffMembers;
				cache_get_value_name_int(x-1,"pRank", Rank);
				cache_get_value_name_int(x-1,"pLogin", OffMembers);
				cache_get_value_name(x-1, "Name", Names);
				//cache_get_value_name(x-1, "pOnline", Vxod);
				//cache_get_value_name(x-1, "pOnlineLid", OnlineLid);
				
				if(OffMembers == 0)
				{
					format(cString, sizeof(cString), " [%s] [%i] [%s] [%s]",Names, Rank,Vxod,OnlineLid);
					SCM(playerid, 0x059BD3FF, cString);
				}
			}
		}
	case 43:
		{
			if(!r) return SCM(playerid, COLOR_GRAD1," Саппортов не найдено");
			
			new strin[512];
			new szQuery[512*4];
			szQuery[0] = EOS;
			strcat(szQuery,"Имя | Рейтинг | Дата Регистрации | Дата посл.входа | Последний IP \n\n"); // Текст сверху
			for(x = 0; x <= r; x++)
			{
				new Names[MAX_PLAYER_NAME],DataReg[32],LastLogin[32],LastIP[32],RatingSupport; // Объявляем переменные
				cache_get_value_name(x, "Name", Names); // Ник
				cache_get_value_name(x, "pDataReg", DataReg); // Дата регистрации
				cache_get_value_name(x, "pvIp", LastIP); // Последний IP
				//cache_get_value_name(x, "pOnline", LastLogin); // Last Online
				cache_get_value_name_int(x, "pRatingSupport", RatingSupport);
				if(!IsPlayerConnected(GetPlayerID(Names)))
				{
					format(strin,sizeof(strin),"{FFFFFF}%s | %i | %s | %s | %s\n",Names,RatingSupport,DataReg,LastLogin,LastIP);
				}
				else
				{
					new supid = GetPlayerID(Names);
					if(SDuty[supid] != 0) format(strin,sizeof(strin),"{33AA33}%s | %i | %s | %s | %s\n",Name(supid),pData[supid][pRatingSupport],DataReg,LastLogin,LastIP);
					else if(SDuty[supid] == 0) format(strin,sizeof(strin),"{DD0000}%s | %i | %s | %s | %s\n",Name(supid),pData[supid][pRatingSupport],DataReg,LastLogin,LastIP);
				}
				strcat(szQuery, strin);
			}
			ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"{FFFFFF}Информация | {B1413D}Supports",szQuery,"x",""); // Диалог
		}
	case 46:
		{
			if(!r) return SCM(playerid,COLOR_GREY," Вы ввели неверный код");
			new typegift;
			cache_get_value_name_int(0, "p_id", typegift);
			switch(typegift)
			{
			case 2: // Игровая валюта
				{
					new qw;//Random(50000, 800000);
					cache_get_value_name_int(0, "p_value", qw);

					SCM(playerid,COLOR_GOLD," Поздравляем!");
					SendMes(playerid,-1," Вы получаете приз ввиде %i вирт",qw);
					pData[playerid][pCash] += qw;
					format(format_string, 150, "UPDATE `ucp_drop_roulette` SET `use` = '1' WHERE `p_hash` = '%s'", pData[playerid][pRoolete]);
					mysql_query(DATABASE,format_string);
				}
			case 1: // EXP
				{
					new qw;//Random(1, 8);
					cache_get_value_name_int(0, "p_value", qw);
					SCM(playerid,COLOR_GOLD," Поздравляем!");
					SendMes(playerid,-1," Вы получаете приз ввиде %i EXP",qw);
					pData[playerid][pExp] += qw;
					new nxtlevel = pData[playerid][pLevel]+1;
					new expamount = nxtlevel*levelexp;
					if(pData[playerid][pExp] >= expamount)
					{
						pData[playerid][pLevel] += 1; 
						pData[playerid][pExp] = 0;
						DollahScoreUpdate(playerid); 
						SendClientMessage(playerid, COLOR_LIGHTGREEN, " Поздравляем! Ваш лвл повысился");
						SetAccountInfo(playerid,pData[playerid][pLevel],"pLevel");
					}
					format(format_string, 150, "UPDATE `ucp_drop_roulette` SET `use` = '1' WHERE `p_hash` = '%s'", pData[playerid][pRoolete]);
					mysql_query(DATABASE,format_string);
				}
			case 4: // Автомобиль D / N Class
				{
					new qw = random(2);
					if(qw) // N Class
					{
						if(!GetPVarInt(playerid,"randcar")) SetPVarInt(playerid,"randcar",Random(0,19));
						ShowPlayerDialog(playerid,7752,DIALOG_STYLE_LIST,"{FFFFFF}Рулетка | {B1413D}Слот","{FFFFFF}Слот: 0\nСлот: 1\nСлот: 2\nСлот: 3\nСлот: 4", "Выбрать", "Назад");
					}
					else // D Class
					{
						if(!GetPVarInt(playerid,"randcar")) SetPVarInt(playerid,"randcar",Random(39,56));
						ShowPlayerDialog(playerid,7752,DIALOG_STYLE_LIST,"{FFFFFF}Рулетка | {B1413D}Слот","{FFFFFF}Слот: 0\nСлот: 1\nСлот: 2\nСлот: 3\nСлот: 4", "Выбрать", "Назад");
					}
				}
			case 5: // sultan
				{
					if(!GetPVarInt(playerid,"randcar")) SetPVarInt(playerid,"randcar",66);
					ShowPlayerDialog(playerid,7752,DIALOG_STYLE_LIST,"{FFFFFF}Рулетка | {B1413D}Слот","{FFFFFF}Слот: 0\nСлот: 1\nСлот: 2\nСлот: 3\nСлот: 4", "Выбрать", "Назад");
				}
			case 6: // elegia
				{
					if(!GetPVarInt(playerid,"randcar")) SetPVarInt(playerid,"randcar",65);
					ShowPlayerDialog(playerid,7752,DIALOG_STYLE_LIST,"{FFFFFF}Рулетка | {B1413D}Слот","{FFFFFF}Слот: 0\nСлот: 1\nСлот: 2\nСлот: 3\nСлот: 4", "Выбрать", "Назад");
				}
			case 7: // bullet
				{
					if(!GetPVarInt(playerid,"randcar")) SetPVarInt(playerid,"randcar",80);
					ShowPlayerDialog(playerid,7752,DIALOG_STYLE_LIST,"{FFFFFF}Рулетка | {B1413D}Слот","{FFFFFF}Слот: 0\nСлот: 1\nСлот: 2\nСлот: 3\nСлот: 4", "Выбрать", "Назад");
				}
			case 8: // turismo
				{
					if(!GetPVarInt(playerid,"randcar")) SetPVarInt(playerid,"randcar",82);
					ShowPlayerDialog(playerid,7752,DIALOG_STYLE_LIST,"{FFFFFF}Рулетка | {B1413D}Слот","{FFFFFF}Слот: 0\nСлот: 1\nСлот: 2\nСлот: 3\nСлот: 4", "Выбрать", "Назад");
				}
			case 9: // Sandking
				{
					if(!GetPVarInt(playerid,"randcar")) SetPVarInt(playerid,"randcar",76);
					ShowPlayerDialog(playerid,7752,DIALOG_STYLE_LIST,"{FFFFFF}Рулетка | {B1413D}Слот","{FFFFFF}Слот: 0\nСлот: 1\nСлот: 2\nСлот: 3\nСлот: 4", "Выбрать", "Назад");
				}
			case 10: // skin
				{
					if(!GetPVarInt(playerid,"randcar")) SetPVarInt(playerid,"randcar",7);
					ShowPlayerDialog(playerid,7754,DIALOG_STYLE_LIST,"{FFFFFF}Рулетка | {B1413D}Слот","{FFFFFF}Слот: 0\nСлот: 1\nСлот: 2\nСлот: 3\nСлот: 4", "Выбрать", "Назад");
				}
			case 11: // skin
				{
					if(!GetPVarInt(playerid,"randcar")) SetPVarInt(playerid,"randcar",23);
					ShowPlayerDialog(playerid,7754,DIALOG_STYLE_LIST,"{FFFFFF}Рулетка | {B1413D}Слот","{FFFFFF}Слот: 0\nСлот: 1\nСлот: 2\nСлот: 3\nСлот: 4", "Выбрать", "Назад");
				}
			case 12: // skin
				{
					if(!GetPVarInt(playerid,"randcar")) SetPVarInt(playerid,"randcar",293);
					ShowPlayerDialog(playerid,7754,DIALOG_STYLE_LIST,"{FFFFFF}Рулетка | {B1413D}Слот","{FFFFFF}Слот: 0\nСлот: 1\nСлот: 2\nСлот: 3\nСлот: 4", "Выбрать", "Назад");
				}
			case 13: // skin
				{
					if(!GetPVarInt(playerid,"randcar")) SetPVarInt(playerid,"randcar",294);
					ShowPlayerDialog(playerid,7754,DIALOG_STYLE_LIST,"{FFFFFF}Рулетка | {B1413D}Слот","{FFFFFF}Слот: 0\nСлот: 1\nСлот: 2\nСлот: 3\nСлот: 4", "Выбрать", "Назад");
				}
			case 14: // skin
				{
					PlayerLicenses(playerid, LICENSES_SET, LIC_DRIVER);
					PlayerLicenses(playerid, LICENSES_SET, LIC_FISHING);
					PlayerLicenses(playerid, LICENSES_SET, LIC_HELICOPTER);
					PlayerLicenses(playerid, LICENSES_SET, LIC_BOAT);
					PlayerLicenses(playerid, LICENSES_SET, LIC_WEAPONS);
					
					SendClientMessage(playerid,COLOR_GOLD," Поздравляем! Вы получили комплект лицензии!");
					
					//format(format_string, 150, "UPDATE `gifts` SET `name` = '%s', `use` = '1', `result` = '-1' WHERE `code` = '%s'",pData[playerid][pName], pData[playerid][pRoolete]);
					//mysql_query(DATABASE,format_string);
				}
			case 15: // infernus
				{
					if(!GetPVarInt(playerid,"randcar")) SetPVarInt(playerid,"randcar",85);
					ShowPlayerDialog(playerid,7752,DIALOG_STYLE_LIST,"{FFFFFF}Рулетка | {B1413D}Слот","{FFFFFF}Слот: 0\nСлот: 1\nСлот: 2\nСлот: 3\nСлот: 4", "Выбрать", "Назад");
				}
			case 16: //skin 29
				{
					if(!GetPVarInt(playerid,"randcar")) SetPVarInt(playerid,"randcar",29);
					ShowPlayerDialog(playerid,7754,DIALOG_STYLE_LIST,"{FFFFFF}Рулетка | {B1413D}Слот","{FFFFFF}Слот: 0\nСлот: 1\nСлот: 2\nСлот: 3\nСлот: 4", "Выбрать", "Назад");
				}
			case 17: //skin 46
				{
					if(!GetPVarInt(playerid,"randcar")) SetPVarInt(playerid,"randcar",46);
					ShowPlayerDialog(playerid,7754,DIALOG_STYLE_LIST,"{FFFFFF}Рулетка | {B1413D}Слот","{FFFFFF}Слот: 0\nСлот: 1\nСлот: 2\nСлот: 3\nСлот: 4", "Выбрать", "Назад");
				}
			case 18: //Huntley
				{
					if(!GetPVarInt(playerid,"randcar")) SetPVarInt(playerid,"randcar",28);
					ShowPlayerDialog(playerid,7752,DIALOG_STYLE_LIST,"{FFFFFF}Рулетка | {B1413D}Слот","{FFFFFF}Слот: 0\nСлот: 1\nСлот: 2\nСлот: 3\nСлот: 4", "Выбрать", "Назад");
				}
			case 19: //Tahoma 
				{
					if(!GetPVarInt(playerid,"randcar")) SetPVarInt(playerid,"randcar",44);
					ShowPlayerDialog(playerid,7752,DIALOG_STYLE_LIST,"{FFFFFF}Рулетка | {B1413D}Слот","{FFFFFF}Слот: 0\nСлот: 1\nСлот: 2\nСлот: 3\nСлот: 4", "Выбрать", "Назад");
				}
			case 20: //Jester  
				{
					if(!GetPVarInt(playerid,"randcar")) SetPVarInt(playerid,"randcar",67);
					ShowPlayerDialog(playerid,7752,DIALOG_STYLE_LIST,"{FFFFFF}Рулетка | {B1413D}Слот","{FFFFFF}Слот: 0\nСлот: 1\nСлот: 2\nСлот: 3\nСлот: 4", "Выбрать", "Назад");
				}
			case 21: //FCR - 900 
				{
					if(!GetPVarInt(playerid,"randcar")) SetPVarInt(playerid,"randcar",61);
					ShowPlayerDialog(playerid,7752,DIALOG_STYLE_LIST,"{FFFFFF}Рулетка | {B1413D}Слот","{FFFFFF}Слот: 0\nСлот: 1\nСлот: 2\nСлот: 3\nСлот: 4", "Выбрать", "Назад");
				}
			case 22: //skin 45
				{
					if(!GetPVarInt(playerid,"randcar")) SetPVarInt(playerid,"randcar",45);
					ShowPlayerDialog(playerid,7754,DIALOG_STYLE_LIST,"{FFFFFF}Рулетка | {B1413D}Слот","{FFFFFF}Слот: 0\nСлот: 1\nСлот: 2\nСлот: 3\nСлот: 4", "Выбрать", "Назад");
				}
			case 23: //Feltzer
				{
					if(!GetPVarInt(playerid,"randcar")) SetPVarInt(playerid,"randcar",33);
					ShowPlayerDialog(playerid,7752,DIALOG_STYLE_LIST,"{FFFFFF}Рулетка | {B1413D}Слот","{FFFFFF}Слот: 0\nСлот: 1\nСлот: 2\nСлот: 3\nСлот: 4", "Выбрать", "Назад");
				}
			}
		}
	case 6:
		{
			if(!r) return printf("[Загрузка ...] Данные из Bizz не получены!");
			for(x = 1; x <= r; x++)
			{
				cache_get_value_index_int 	(x-1,	0, 	BizzInfo[x][bID]);
				cache_get_value_index 		(x-1, 	1, 	BizzInfo[x][bOwner]);
				cache_get_value_index 		(x-1, 	2, 	BizzInfo[x][bMessage]);
				cache_get_value_index_float (x-1,	3,	BizzInfo[x][bEntranceX]);
				cache_get_value_index_float (x-1,	4,	BizzInfo[x][bEntranceY]);
				cache_get_value_index_float (x-1,	5,	BizzInfo[x][bEntranceZ]);
				cache_get_value_index_float (x-1,	6,	BizzInfo[x][bExitX]);
				cache_get_value_index_float (x-1,	7,	BizzInfo[x][bExitY]);
				cache_get_value_index_float (x-1,	8, 	BizzInfo[x][bExitZ]);
				cache_get_value_index_int 	(x-1,	9, 	BizzInfo[x][bBuyPrice]);
				cache_get_value_index_int 	(x-1,	10, BizzInfo[x][bEntranceCost]);
				cache_get_value_index_int 	(x-1,	11, BizzInfo[x][bTill]);
				cache_get_value_index_int 	(x-1,	12, BizzInfo[x][bLocked]);
				cache_get_value_index_int 	(x-1,	13, BizzInfo[x][bInterior]);
				cache_get_value_index_int 	(x-1,	14, BizzInfo[x][bProducts]);
				cache_get_value_index_int 	(x-1,	15, BizzInfo[x][bPrice]);
				cache_get_value_index_float (x-1,	16,	BizzInfo[x][bBarX]);
				cache_get_value_index_float (x-1,	17,	BizzInfo[x][bBarY]);
				cache_get_value_index_float (x-1,	18,	BizzInfo[x][bBarZ]);
				cache_get_value_index_int 	(x-1,	19, BizzInfo[x][bMafia]);
				cache_get_value_index_int 	(x-1,	20, BizzInfo[x][bType]);
				cache_get_value_index_int 	(x-1,	21, BizzInfo[x][bLockTime]);
				cache_get_value_index_int 	(x-1,	22, BizzInfo[x][bLicense]);
				cache_get_value_index_int 	(x-1,	23, BizzInfo[x][bStavka]);
				
				cache_get_value_index 		(x-1, 	24, BizzInfo[x][bNameStavka]);
				cache_get_value_index_int 	(x-1,	25, BizzInfo[x][bLastStavka]);
				cache_get_value_index_int 	(x-1,	26, BizzInfo[x][bTimeStavka]);
				cache_get_value_index_int 	(x-1,	27, BizzInfo[x][bMinStavka]);
				cache_get_value_index_int 	(x-1,	28, BizzInfo[x][bVirtualWorld]);
				cache_get_value_index_int 	(x-1,	29, BizzInfo[x][bLandTax]);
				cache_get_value_index_int 	(x-1,	30, BizzInfo[x][bProdPrice]);

				if(BizzInfo[x][bType] != 4 && BizzInfo[x][bID] != 47 && BizzInfo[x][bID] != 48)
				{
					BizzInfo[x][bEnterPic] = CreateDynamicSphere(BizzInfo[x][bEntranceX], BizzInfo[x][bEntranceY], BizzInfo[x][bEntranceZ], 2, 0,0);
	 				Streamer_SetIntData(STREAMER_TYPE_AREA, BizzInfo[x][bEnterPic], E_STREAMER_EXTRA_ID, x); 
					CreateDynamicPickup(1318, 23, BizzInfo[x][bEntranceX], BizzInfo[x][bEntranceY], BizzInfo[x][bEntranceZ],-1);

					BizzInfo[x][bExitPic] = CreateDynamicSphere(BizzInfo[x][bExitX], BizzInfo[x][bExitY], BizzInfo[x][bExitZ], 2, BizzInfo[x][bVirtualWorld],0);
	 				Streamer_SetIntData(STREAMER_TYPE_AREA, BizzInfo[x][bExitPic], E_STREAMER_EXTRA_ID, x); 

					CreateDynamicPickup(1318, 23, BizzInfo[x][bExitX], BizzInfo[x][bExitY], BizzInfo[x][bExitZ],BizzInfo[x][bVirtualWorld]);

					new szQuery[128];
					if(strcmp(BizzInfo[x][bOwner],"None",true) == 0) format(szQuery, sizeof szQuery, "%s\nПродаётся", BizzInfo[x][bMessage], BizzInfo[x][bBuyPrice]), BizzInfo[x][bLocked] = 1;
					else format(szQuery, sizeof szQuery, "%s\nВладелец:\n %s", BizzInfo[x][bMessage], BizzInfo[x][bOwner]);
					BizzInfo[x][bLabel] = CreateDynamic3DTextLabel(szQuery,COLOR_GREEN,BizzInfo[x][bEntranceX], BizzInfo[x][bEntranceY], BizzInfo[x][bEntranceZ]+1,20.0);
				}
				if(BizzInfo[x][bType] == 2) BizzInfo[x][bPickup] = CreateDynamicPickup(1239, 23, BizzInfo[x][bBarX],BizzInfo[x][bBarY],BizzInfo[x][bBarZ],BizzInfo[x][bVirtualWorld]);
				if(BizzInfo[x][bType] == 4)
				{
					new szQuery[128];
					if(strcmp(BizzInfo[x][bOwner],"None",true) == 0) format(szQuery, sizeof szQuery, "%s\nПродаётся", BizzInfo[x][bMessage],BizzInfo[x][bBuyPrice]), BizzInfo[x][bLocked] = 1;
					else format(szQuery,sizeof szQuery, "%s\nВладелец:\n%s\nЦена бензина: %i вирт", BizzInfo[x][bMessage], BizzInfo[x][bOwner],BizzInfo[x][bPrice]);
					BizzInfo[x][bLabel] = CreateDynamic3DTextLabel(szQuery,COLOR_GREEN,BizzInfo[x][bEntranceX], BizzInfo[x][bEntranceY], BizzInfo[x][bEntranceZ],5.0);
				}
				switch(BizzInfo[x][bType])
				{
				case 1: BizzMaxProds[x] = 5000, BizzLandTax[x] = 200;
				case 2: BizzMaxProds[x] = 3000, BizzLandTax[x] = 200;
				case 3: BizzMaxProds[x] = 2000, BizzLandTax[x] = 300;
				case 4: BizzMaxProds[x] = 20000, BizzLandTax[x] = 100;
				}
				TotalBizz++;
			}
			printf("[Загрузка ...] Данные из Bizz получены! (%i шт.)",TotalBizz);
		}
	case 55:
		{
			if(!r) return printf("[Загрузка ...] Данные из "#TABLE_TAXI" не получены!");
			if(gTotalTaxiStation + 1 > MAX_TAXI_STATION)  return printf("[Загрузка ...] Данные из "#TABLE_TAXI" не получены! Лимит");
			for(x = 0; x < r; x++) 
			{
				cache_get_value_index_int(x, 0, g_tInfo[x][e_dbId]);
				cache_get_value_index(x, 1, g_tInfo[x][e_szOwner]);
				cache_get_value_index_int(x, 2, g_tInfo[x][e_iStatus]);
				cache_get_value_index_int(x, 3, g_tInfo[x][e_iPrice]);
				
				g_szTaxiArea[x] = CreateDynamicSphere(g_szTaxiAreaPos[x][0], g_szTaxiAreaPos[x][1], g_szTaxiAreaPos[x][2], 1.5, 0, 0);
				CreateTrigger(g_szTaxiAreaPos[x][0], g_szTaxiAreaPos[x][1], g_szTaxiAreaPos[x][2]-1.2, 0xFFffd54f);
				CreateDynamicMapIcon(g_szTaxiAreaPos[x][0], g_szTaxiAreaPos[x][1], g_szTaxiAreaPos[x][2], 55, 0, 0);
	
				CreateDynamic3DTextLabel("Аренда такси", COLOR_YELLOW, g_szTaxiAreaPos[x][0], g_szTaxiAreaPos[x][1], g_szTaxiAreaPos[x][2], 30.0);

				gTotalTaxiStation++;
			}
			printf("[Загрузка ...] Данные из "#TABLE_TAXI" получены! (%i шт.)",gTotalTaxiStation);
		}
	case 7:
		{
			if(!r) return printf("[Загрузка ...] Данные из Workshop не получены!");
			for(x = 1; x <= r; x++)
			{
				cache_get_value_index_int 	(x-1, 0,  WorkshopInfo[x][wID]);
				
				cache_get_value_index 	  	(x-1, 1,  WorkshopInfo[x][wOwner]);
				cache_get_value_index_float (x-1, 2,  WorkshopInfo[x][wEntr][0]);
				cache_get_value_index_float (x-1, 3,  WorkshopInfo[x][wEntr][1]);
				cache_get_value_index_float (x-1, 4,  WorkshopInfo[x][wEntr][2]);
				cache_get_value_index_float (x-1, 5,  WorkshopInfo[x][wExit][0]);
				cache_get_value_index_float (x-1, 6,  WorkshopInfo[x][wExit][1]);
				cache_get_value_index_float (x-1, 7,  WorkshopInfo[x][wExit][2]);
				cache_get_value_index_float (x-1, 8,  WorkshopInfo[x][wMenu][0]);
				cache_get_value_index_float (x-1, 9,  WorkshopInfo[x][wMenu][1]);
				cache_get_value_index_float (x-1, 10, WorkshopInfo[x][wMenu][2]);
				cache_get_value_index_int 	(x-1, 11, WorkshopInfo[x][wBank]);
				cache_get_value_index_int 	(x-1, 12, WorkshopInfo[x][wLandTax]);
				cache_get_value_index_int 	(x-1, 13, WorkshopInfo[x][wProds]);
				cache_get_value_index_int 	(x-1, 14, WorkshopInfo[x][wPriceProds]);
				cache_get_value_index_int 	(x-1, 15, WorkshopInfo[x][wClub]);
				cache_get_value_index_int 	(x-1, 16, WorkshopInfo[x][wZp]);
				
				
				cache_get_value_index 		(x-1, 17, WorkshopInfo[x][wDeputy1]);
				cache_get_value_index 		(x-1, 18, WorkshopInfo[x][wDeputy2]);
				cache_get_value_index 		(x-1, 19, WorkshopInfo[x][wDeputy3]);
				cache_get_value_index 		(x-1, 20, WorkshopInfo[x][wMechanic1]);
				cache_get_value_index 		(x-1, 21, WorkshopInfo[x][wMechanic2]);
				cache_get_value_index 		(x-1, 22, WorkshopInfo[x][wMechanic3]);
				cache_get_value_index 		(x-1, 23, WorkshopInfo[x][wMechanic4]);
				cache_get_value_index 		(x-1, 24, WorkshopInfo[x][wMechanic5]);
				cache_get_value_index 		(x-1, 25, WorkshopInfo[x][wAuctions]);
				sscanf(WorkshopInfo[x][wAuctions], "p<,>a<i>[5]",WorkshopInfo[x][wAuction]);
				cache_get_value_index 		(x-1, 26, WorkshopInfo[x][wAuctionName]);

				WorkshopInfo[x][wPickup][0] = CreateDynamicPickup(1318, 23, WorkshopInfo[x][wEntr][0], WorkshopInfo[x][wEntr][1], WorkshopInfo[x][wEntr][2]);
				WorkshopInfo[x][wPickup][1] = CreateDynamicPickup(1318, 23, WorkshopInfo[x][wExit][0], WorkshopInfo[x][wExit][1], WorkshopInfo[x][wExit][2],x);
				WorkshopInfo[x][wPickup][2] = CreateDynamicPickup(1275, 23, 1496.0302,1308.6653,1093.2892,x);
				WorkshopInfo[x][wPickup][3] = CreateDynamicPickup(1239, 23, 1492.7340,1308.1758,1093.2927,x);
				format(YCMDstr, 160, "Автомастерская ID: {FFFFFF}%i\n{DDB201}Информация: {FFFFFF}/tinfo",x-1);
				WorkshopInfo[x][wLabel] = CreateDynamic3DTextLabel(YCMDstr, 0xDDB201FF,WorkshopInfo[x][wEntr][0], WorkshopInfo[x][wEntr][1], WorkshopInfo[x][wEntr][2]+1,20.0);
				CreateDynamicMapIcon(WorkshopInfo[x][wEntr][0], WorkshopInfo[x][wEntr][1], WorkshopInfo[x][wEntr][2],27,0);

				TOTALSHOPS++;
			}
			for(new x_ = 9; x_ >= 0; x_--)
			{
				WorkshopList[x_][x][wlID] = -1;
				strmid(WorkshopList[x_][x][wlName],"", 0, strlen(""), 5);
			}
			printf("[Загрузка ...] Данные из Workshop получены! (%i шт.)",TOTALSHOPS);
		}
	case 10:
		{
			if(!r) return printf("[Загрузка ...] Данные из Casino не получены!");
			for(x = 1; x <= r; x++)
			{
				cache_get_value_index_int(x-1, 0, 		CasinoInfo[x][caID]);
				cache_get_value_index(x-1, 1, 			CasinoInfo[x][caName]);
				cache_get_value_index_int(x-1, 2, 		CasinoInfo[x][caMafia]);

				cache_get_value_index(x-1, 3, 			CasinoInfo[x][caKrupie]);
				cache_get_value_index(x-1, 4, 			CasinoInfo[x][caKrupie2]);
				cache_get_value_index(x-1, 5, 			CasinoInfo[x][caKrupie3]);
				cache_get_value_index(x-1, 6, 			CasinoInfo[x][caKrupie4]);
				cache_get_value_index(x-1, 7, 			CasinoInfo[x][caKrupie5]);
				cache_get_value_index(x-1, 8, 			CasinoInfo[x][caKrupie6]);
				cache_get_value_index(x-1, 9, 			CasinoInfo[x][caKrupie7]);
				cache_get_value_index(x-1, 10, 			CasinoInfo[x][caKrupie8]);
				cache_get_value_index(x-1, 11, 			CasinoInfo[x][caKrupie9]);
				cache_get_value_index(x-1, 12, 			CasinoInfo[x][caKrupie10]);
				cache_get_value_index(x-1, 13, 			CasinoInfo[x][caManager]);
				cache_get_value_index(x-1, 14, 			CasinoInfo[x][caManager2]);
				cache_get_value_index(x-1, 15, 			CasinoInfo[x][caManager3]);
				cache_get_value_index_float(x-1, 16, 		CasinoInfo[x][caPos][0]);
				cache_get_value_index_float(x-1, 17, 		CasinoInfo[x][caPos][1]);
				cache_get_value_index_float(x-1, 18, 		CasinoInfo[x][caPos][2]);
				TOTALCASINO++;
			}
			printf("[Загрузка ...] Данные из Casino получены! (%i шт.)",TOTALCASINO);
		}
	case 11:
		{
			
		}
	case 12:
		{
			BizzInfo[playerid][bLocked] = 0;
			BizzInfo[playerid][bPrice] = 100;
			BizzInfo[playerid][bTill] = 0;
			BizzInfo[playerid][bLandTax] = BizzLandTax[playerid]*12;
			BizzPay[playerid] = 0;
			BizzInfo[playerid][bLicense] = 0;
			BizzInfo[playerid][bStavka] = 0;
			BizzInfo[playerid][bMinStavka] = 0;
			BizzInfo[playerid][bTimeStavka] = 0;
			BizzInfo[playerid][bLastStavka] = 0;
			BizzInfo[playerid][bLockTime] = 0;
			BizzInfo[playerid][bEntranceCost] = 100;
			strmid(BizzInfo[playerid][bOwner],BizzInfo[playerid][bNameStavka], 0, strlen(BizzInfo[playerid][bNameStavka]), 24);
			if(IsPlayerConnected(GetPlayerID(BizzInfo[playerid][bNameStavka]))) BGet(GetPlayerID(BizzInfo[playerid][bNameStavka])), SCM(GetPlayerID(BizzInfo[playerid][bNameStavka]),COLOR_GREEN,"Вы приобрели бизнес с аукциона. (( Управление: /mm -> [0] Помощь по игре -> [3] Команды сервера ))");
			strmid(BizzInfo[playerid][bNameStavka], "-", 0, strlen("-"), 10);
			UpdateBizz(playerid);
		}
	case 13:
		{
			new Nick[50];
			if(!r) return printf("[Получение денег за друга ...] Аккаунт не найден!");
			cache_get_value_name(0, "pDrug", Nick);
			if(IsPlayerConnected(GetPlayerID(Nick)))
			{
				if(pData[GetPlayerID(Nick)][pLogin])
				{
					pData[GetPlayerID(Nick)][pCash] += 100000;
					pData[GetPlayerID(Nick)][pText] = 0;
					return SCM(GetPlayerID(Nick), COLOR_GOLD, " Вы получили 100 000 вирт на банковский счет, за приглашённого друга");
				}
			}
			new szQuery[88+26];
			mysql_format(DATABASE,szQuery,sizeof szQuery, "UPDATE `"TABLE_ACCOUNTS"` SET pCash = pCash + 100000, pText = '3' WHERE name = '%e'",Nick);
			mysql_query(DATABASE,szQuery);
		}
	case 14:
		{
			if(!r) return true;
			new query[50], level;
			cache_get_value_name(0, "password", query);
			cache_get_value_name_int(0, "level", level);

			SetPVarString(playerid,"password",query);
			SetPVarInt(playerid,"level",level);
			if(!strcmp(query, "qwerty", true))
			{
				SetPVarInt(playerid, "Alogin", 1);
				ShowPlayerDialog(playerid, 1227, DIALOG_STYLE_PASSWORD, "Админ авторизация", "Введите пароль\n\nПароль должен состоять из латинских букв и цифр\n	размером от 6 до 15 символов", "Вход", "Отмена");
			}
			else ShowPlayerDialog(playerid, 1227, DIALOG_STYLE_PASSWORD, "Админ авторизация", "Введите пароль\n\nПароль должен состоять из латинских букв и цифр\n	размером от 6 до 15 символов", "Вход", "Отмена"), SetPVarInt(playerid, "Alogin", 2);
		}
	case 15:
		{
			if(r) return SCM(strval(str),COLOR_RED," Данный ник уже есть в базе данных"), SCM(playerid,COLOR_RED,"Невозможно сменить ник. Ник занят");
			SCM(playerid,COLOR_GREEN, " Ваш ник был одобрен");
			ChangeName(playerid, WantNickChange[playerid]);
		}
	case 16:
		{
			new minags[128];
			if(!r) return SCM(playerid, COLOR_GREY, " Аккаунт не найден!");
			new level,Float:exp,viprank,warn,number,money,
				bank, leader,member,rank,job,jobskin,house,bizz,
				farm,pvip[16],don[128],ipk[16],regip[16],refer[24];

			cache_get_value_name_int(0, "pLevel", level);
			cache_get_value_name_float(0, "pExp", exp);
			cache_get_value_name_int(0, "pDonateRank", viprank);
			cache_get_value_name_int(0, "pWarns", warn);
			cache_get_value_name_int(0, "pPnumber", number);
			cache_get_value_name_int(0, "pCash", money);
			cache_get_value_name_int(0, "pBank", bank);
			cache_get_value_name_int(0, "pLeader", leader);
			cache_get_value_name_int(0, "pMember", member);
			cache_get_value_name_int(0, "pRank", rank);
			cache_get_value_name_int(0, "pJob", job);
			cache_get_value_name_int(0, "pModel", jobskin);
			cache_get_value_name_int(0, "pPHouseKey", house);
			cache_get_value_name_int(0, "pPBizzKey", bizz);
			cache_get_value_name_int(0, "pPFarmKey", farm);
			
			
	
			cache_get_value_name(0,"pKeyip",ipk);
			cache_get_value_name(0,"pvIp",pvip);
			cache_get_value_name(0,"pEmail",don);
			cache_get_value_name(0,"pIpReg",regip);
			cache_get_value_name(0,"pDrug",refer);

			new szQuery[59+11+11+60+5+11+11+70+11+11+3+65+3+4+42+4+9+80+32+24+32+32+11+32+77+139];
			szQuery="\n";
			format(minags,sizeof(minags),"Name:      \t\t%s\n\nLevel:      \t\t%i\nExp:      \t\t%i\n",str,level,exp); strcat(szQuery,minags);
			format(minags,sizeof(minags),"Vip:      \t\t\t%i\nWarns:      \t\t%i\nPhone:      \t\t%i\n",viprank,warn,number); strcat(szQuery,minags);
			format(minags,sizeof(minags),"Money:      \t\t%i\nBank:      \t\t%i\nLeader:      \t\t%i\n",money,bank,leader); strcat(szQuery,minags);
			format(minags,sizeof(minags),"Member:      \t\t%i\nRank:      \t\t%i\nJob:      \t\t%i\n",member,rank,job); strcat(szQuery,minags);
			format(minags,sizeof(minags),"JobSkin:      \t\t%i\nHouse:      \t\t%i\n",jobskin,house); strcat(szQuery,minags);
			format(minags,sizeof(minags),"Biz:      \t\t%i\nFarm:      \t\t%i\nEmail:      \t\t%s\nsuperKeyIP:      \t%s\n",bizz,farm-1,don,ipk); strcat(szQuery,minags);
			format(minags,sizeof(minags),"L-IP:      \t\t%s\nR-IP:      \t\t%s\nRefer:      \t\t%s\n\n",pvip,regip,refer); strcat(szQuery,minags);
			strcat(szQuery,"\n{FF6347}* superKeyIP - к которому привязан акк\nЕсли superKeyIP и L-IP не равны,\nто кто-то пытался войти в аккаунт,\nнезная супер ключа");
			ShowPlayerDialog(playerid,22815,DIALOG_STYLE_MSGBOX,"OFFLINE Статистика персонажа",szQuery,"Готово","");
		}
	case 17:
		{
			if(r)
			{
				if(playerid == 0)
				{
					new szQuery[46+24];
					mysql_format(DATABASE,szQuery, sizeof szQuery, "DELETE FROM "TABLE_ADMIN" WHERE `Name`= '%s'", str);
					mysql_query(DATABASE,szQuery);
					if(IsPlayerConnected(GetPlayerID(str))) pData[GetPlayerID(str)][pAdmin] = 0;
				}
				else
				{
					new szQuery[46+24+24];
					mysql_format(DATABASE,szQuery, sizeof szQuery, "UPDATE "TABLE_ADMIN" SET  level = '%i' WHERE Name = '%s' LIMIT 1",playerid,str);
					mysql_query(DATABASE,szQuery);
				}
			}
			else
			{
				new year, month,day;
				getdate(year, month, day);
				new szQuery[88+24+24];
				mysql_format(DATABASE,szQuery, sizeof szQuery, "INSERT INTO "TABLE_ADMIN" (Name, level, LastCon) VALUES ('%s', %i, '%02i.%02i.%04i')",str, playerid,day,month,year);
				mysql_query(DATABASE,szQuery);
			}
		}
	case 18:
		{
			if(!r) return SCM(playerid,COLOR_GREY," Аккаунт не найден!");
			new szQuery[32];
			cache_get_value_name(0, "pOnline",szQuery);
			SendMes(playerid,COLOR_BLUE," Ник: %s | Последний вход: %s",str,szQuery);
		}
	case 19:
		{
			if(!r) return SCM(playerid,COLOR_GREY," Не найдено совпадений!");
			for new i=0;i<r;i++ do
			{
				new szQuery[24];
				cache_get_value_name(i, "Name",szQuery);
				SendMes(playerid,COLOR_BLUE," Ник: %s | Фракция ID: %i",szQuery,strval(str));
			}
		}
	case 20:
		{
			if(!r) return SCM(playerid,COLOR_GREY," Аккаунт не найден!");
			new Regip[30],vips[30];
			new szQuery[32];
			cache_get_value_name(0, "pIp", szQuery);
			cache_get_value_name(0, "pIpReg", Regip);
			cache_get_value_name(0, "pvIp", vips);
			SendMes(playerid,COLOR_BLUE," Nik [%s]   R-IP [%s]   L-IP [%s]   IP [%s]",str,Regip,vips,szQuery);
		}
	case 21:
		{
			if(!r) return SCM(playerid,COLOR_GREY," Аккаунт не найден!");
			new szQuery[32];
			cache_get_value_name(0,"pIpReg",szQuery);
			SendMes(playerid,COLOR_BLUE," Ник: %s | IP при регистрации: %s",str,szQuery);
		}

	case 23:
		{
			if(!r) return printf("[Аукцион СТО/Ферм] Нет аккаунта. Деньги не были зачислены!");
			new szQuery[65+24+16];
			mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `"TABLE_ACCOUNTS"` SET pBank = pBank+%i WHERE Name = '%e'",WorkshopInfo[bizselect[playerid]][wAuction][1],WorkshopInfo[bizselect[playerid]][wAuctionName]);
			mysql_query(DATABASE,szQuery);
		}
	case 24:
		{
			new day, month, year;
			getdate(year, month, day);
			if(IsPlayerConnected(GetPlayerID(WorkshopInfo[playerid][wAuctionName]))) SCM(GetPlayerID(WorkshopInfo[playerid][wAuctionName]),COLOR_WHITE," Вы приобрели СТО/Ферму с аукциона!");
			strmid(WorkshopInfo[playerid][wOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[playerid][wDeputy1],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[playerid][wDeputy2],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[playerid][wDeputy3],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[playerid][wMechanic1],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[playerid][wMechanic2],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[playerid][wMechanic3],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[playerid][wMechanic4],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[playerid][wMechanic5],"None",0,strlen("None"),MAX_PLAYER_NAME);
			WorkshopInfo[playerid][wLandTax] = 6000;
			WorkshopInfo[playerid][wBank] = (WorkshopInfo[playerid][wAuction][0]/100)*20;
			WorkshopInfo[playerid][wProds] = 20000;
			WorkshopInfo[playerid][wPriceProds] = 50;
			WorkshopInfo[playerid][wZp] = 5;
			strmid(WorkshopInfo[playerid][wOwner],WorkshopInfo[playerid][wAuctionName], 0, strlen(WorkshopInfo[playerid][wAuctionName]), MAX_PLAYER_NAME);
			if(IsPlayerConnected(GetPlayerID(WorkshopInfo[playerid][wAuctionName]))) WGet(GetPlayerID(WorkshopInfo[playerid][wAuctionName]));
			strmid(WorkshopInfo[playerid][wAuctionName], "None", 0, strlen("None"), 10);
			WorkshopInfo[playerid][wAuction][0] = 0;
			WorkshopInfo[playerid][wAuction][1] = 0;
			WorkshopInfo[playerid][wAuction][2] = 0;
			WorkshopInfo[playerid][wAuction][3] = 0;
			WorkshopInfo[playerid][wAuction][4] = mktimes(0,0,0,day+14,month,year);
			SaveMySQL(3,playerid);
		}

	case 26:
		{
			new null[2] = 0;
			if(r)
			{
				for(x = 1; x <= r; x++)
				{
					new unban;
					cache_get_value_index_int(x-1, 5, unban);
					new nick[24];
					cache_get_value_name(x-1,"Name", nick);
					if(unban < Now())
					{
						new szQuery[46+24];
						mysql_format(DATABASE,szQuery, sizeof szQuery, "DELETE FROM `"TABLE_BAN"` WHERE `Name` = '%e'", nick);
						mysql_query(DATABASE,szQuery);
						null[0]++;
					}
					null[1]++;
				}
			}
			printf("[Загрузка ...] Забаненых аккаунтов %i. Разбанено %i аккаунтов",null[1],null[0]);
		}
	case 27:
		{
			if(!r) return ShowPlayerDialog(playerid,69,DIALOG_STYLE_MSGBOX, "Ошибка", "Вы ошиблись при вводе кодов", "Готово", ""), DeletePVar(playerid,"d_code1"), DeletePVar(playerid,"d_code2");
			new donate;
			cache_get_value_index_int(0, 3, donate);
			donate = donate*donates;
			SCM(playerid, COLOR_GOLD, "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
			switch(booston)
			{
			case 0: pData[playerid][pBank] += donate,SendMes(playerid, COLOR_GOLD, " На ваш банковский счет зачислено: %i вирт", donate),pData[playerid][pDonateAccount] += donate;
			default: pData[playerid][pBank] += donate,SendMes(playerid, COLOR_GOLD, " На ваш банковский счет зачислено: %i вирт", donate),pData[playerid][pDonateAccount] += donate;
			}
			SetAccountInfo(playerid, pData[playerid][pBank], "pBank");
			SendMes(playerid, COLOR_YELLOW, " Старый баланс: %i вирт", pData[playerid][pBank]);
			SendMes(playerid, COLOR_YELLOW, " Новый баланс: %i вирт", pData[playerid][pBank]);
			SCM(playerid, COLOR_GOLD, "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
			if(pData[playerid][pDonateAccount] >= 30000000 && pData[playerid][pDonateRank] < 3)
			{
				SCM(playerid, COLOR_GOLD, " Поздравляем! Вы достигли 3 уровня VIP");
				SCM(playerid, COLOR_GOLD, " Используйте /viphelp для просмотра функций VIP аккаунта");
				pData[playerid][pDonateRank] = 3;
			}
			else if(pData[playerid][pDonateAccount] >= 5000000 && pData[playerid][pDonateRank] < 2)
			{
				SCM(playerid, COLOR_GOLD, " Поздравляем! Вы достигли 2 уровня VIP");
				SCM(playerid, COLOR_GOLD, " Используйте /viphelp для просмотра функций VIP аккаунта");
				pData[playerid][pDonateRank] = 2;
			}
			else if(pData[playerid][pDonateAccount] >= 1000000 && pData[playerid][pDonateRank] < 1)
			{
				SCM(playerid, COLOR_GOLD, " Поздравляем! Вы достигли 1 уровня VIP");
				SCM(playerid, COLOR_GOLD, " Используйте /viphelp для просмотра функций VIP аккаунта");
				pData[playerid][pDonateRank] = 1;
			}
			new szQuery[129];
			mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_DONATE"` SET name = '%s', used = '1' WHERE code_one = '%i' AND code_two = '%i'",pData[playerid][pName], GetPVarInt(playerid,"d_code1"), GetPVarInt(playerid,"d_code2"));
			mysql_query(DATABASE,szQuery);
			SetAccountInfo(playerid,pData[playerid][pBank],"pBank");
			SetAccountInfo(playerid,pData[playerid][pDonateAccount],"pDonateAccount");
			MoneyLog(pData[playerid][pName],"None", donate, "(+)DonateMoney");
			DeletePVar(playerid,"d_code1"), DeletePVar(playerid,"d_code2");
		}
	case 28:
		{
			if(!r) return printf("[Загрузка ...] Данные из Farms не получены!");
			for(x = 1; x <= r; x++)
			{
				cache_get_value_index_int 	(x-1, 0, FarmInfo[x][fID]);
				cache_get_value_index 		(x-1, 1,FarmInfo[x][fOwner]);

				cache_get_value_index_float (x-1, 2, FarmInfo[x][fMenu][0]);
				cache_get_value_index_float (x-1, 3, FarmInfo[x][fMenu][1]);
				cache_get_value_index_float (x-1, 4, FarmInfo[x][fMenu][2]);
				
				cache_get_value_index_float (x-1, 5, FarmInfo[x][fCloakroom][0]);
				cache_get_value_index_float (x-1, 6, FarmInfo[x][fCloakroom][1]);
				cache_get_value_index_float (x-1, 7, FarmInfo[x][fCloakroom][2]);
				
				cache_get_value_index_int 	(x-1, 8, FarmInfo[x][fBank]);
				cache_get_value_index_int 	(x-1, 9, FarmInfo[x][fLandTax]);
				cache_get_value_index_int 	(x-1, 10, FarmInfo[x][fZp]);
				cache_get_value_index_int 	(x-1, 11, FarmInfo[x][fGrain_Price]);
				cache_get_value_index_int 	(x-1, 12, FarmInfo[x][fGrain]);
				cache_get_value_index_int 	(x-1, 13, FarmInfo[x][fGrain_Sown]);

				cache_get_value_index_int 	(x-1, 14, FarmInfo[x][fProds_Selling]);
				cache_get_value_index_int 	(x-1, 15, FarmInfo[x][fProds]);
				cache_get_value_index_int 	(x-1, 16, FarmInfo[x][fProds_Price]);
				cache_get_value_index_int 	(x-1, 17, FarmInfo[x][fClub]);
				
				cache_get_value_index 		(x-1, 18, FarmInfo[x][fDeputy_1]);
				cache_get_value_index 		(x-1, 19, FarmInfo[x][fDeputy_2]);
				cache_get_value_index 		(x-1, 20, FarmInfo[x][fDeputy_3]);
				cache_get_value_index 		(x-1, 21, FarmInfo[x][fFarmer_1]);
				cache_get_value_index 		(x-1, 22, FarmInfo[x][fFarmer_2]);
				cache_get_value_index 		(x-1, 23, FarmInfo[x][fFarmer_3]);
				cache_get_value_index 		(x-1, 24, FarmInfo[x][fFarmer_4]);
				cache_get_value_index 		(x-1, 25, FarmInfo[x][fFarmer_5]);

				cache_get_value_index 		(x-1, 26, FarmInfo[x][fAuctions]);
				sscanf(FarmInfo[x][fAuctions], "p<,>a<i>[5]",FarmInfo[x][fAuction]);
				cache_get_value_index 		(x-1, 27, FarmInfo[x][fAuctionName]);

				FarmInfo[x][fPickup][0] = CreateDynamicPickup(1239, 23, FarmInfo[x][fMenu][0], FarmInfo[x][fMenu][1], FarmInfo[x][fMenu][2]);
				FarmInfo[x][fPickup][1] = CreateDynamicPickup(1275, 23, FarmInfo[x][fCloakroom][0], FarmInfo[x][fCloakroom][1], FarmInfo[x][fCloakroom][2]);
				format(YCMDstr, 160, "Ферма ID: {FFFFFF}%i\n{DDB201}Информация: {FFFFFF}/finfo",x-1);
				FarmInfo[x][fLabel] = CreateDynamic3DTextLabel(YCMDstr, 0xDDB201FF,FarmInfo[x][fMenu][0], FarmInfo[x][fMenu][1], FarmInfo[x][fMenu][2]+1,20.0);
				CreateDynamicMapIcon(FarmInfo[x][fMenu][0], FarmInfo[x][fMenu][1], FarmInfo[x][fMenu][2],56,0);
				TOTALFARM++;
			}
			printf("[Загрузка ...] Данные из Farm получены! (%i шт.)",TOTALFARM);
			// Кары у фермы 0
			FarmInfo[1][fSeed_Car][0] = CreateVehicle_R(478,-367.1718,-1437.3184,25.4536,90,113,1,-1);
			FarmInfo[1][fSeed_Car][1] = CreateVehicle_R(478,-367.1942,-1441.3794,25.4536,90,113,1,-1);
			FarmInfo[1][fCombine] = CreateVehicle_R(532,-376.9983,-1450.1539,25.4536,360,-1,-1,-1);
			// Кары у фермы 1
			FarmInfo[2][fSeed_Car][0] = CreateVehicle_R(478,-112.7682,-30.3074,2.8443,345,113,1,-1);
			FarmInfo[2][fSeed_Car][1] = CreateVehicle_R(478,-108.8456,-30.3074,2.8443,345,113,1,-1);
			FarmInfo[2][fCombine] = CreateVehicle_R(532,-99.6833,-21.9806,2.8404,69.9411,-1,-1,-1);
			// Кары у фермы 2
			FarmInfo[3][fSeed_Car][0] = CreateVehicle_R(478,-1033.8198,-1173.0507,128.9458,92.2105,113,1,-1);
			FarmInfo[3][fSeed_Car][1] = CreateVehicle_R(478,-1033.9097,-1169.5416,128.9458,92.2105,113,1,-1);
			FarmInfo[3][fCombine] = CreateVehicle_R(532,-1187.8906,-1062.9275,128.9458,360,-1,-1,-1);
			// Кары у фермы 3
			FarmInfo[4][fSeed_Car][0] = CreateVehicle_R(478,-18.6129,45.1707,2.8443,248.6538,113,1,-1);
			FarmInfo[4][fSeed_Car][1] = CreateVehicle_R(478,-19.8854,42.0788,2.8429,248.6538,113,1,-1);
			FarmInfo[4][fCombine] = CreateVehicle_R(532,-28.4954,44.7194,2.8443,160.1106,-1,-1,-1);
			// Кары у фермы 4
			FarmInfo[5][fSeed_Car][0] = CreateVehicle_R(478,1949.1245,157.6664,36.6507,340.1,113,1,-1);
			FarmInfo[5][fSeed_Car][1] = CreateVehicle_R(478,1951.6958,156.7463,36.5491,340.1,113,1,-1);
			FarmInfo[5][fCombine] = CreateVehicle_R(532,1910.3037,192.0922,36.1344,256.9094,-1,-1,-1);
			for(new z = 1; z <= TOTALFARM; z++)
			{
				Farmcar_pickup[FarmInfo[z][fSeed_Car][0]] = 0;
				Farmcar_pickup[FarmInfo[z][fSeed_Car][1]] = 0;
				SetVehicleParamsEx(FarmInfo[z][fSeed_Car][0],false,false,false,false,false,false,false);
				SetVehicleParamsEx(FarmInfo[z][fSeed_Car][1],false,false,false,false,false,false,false);
				SetVehicleParamsEx(FarmInfo[z][fCombine],false,false,false,false,false,false,false);
			}
		}
	case 29:
		{
			new day, month, year;
			getdate(year, month, day);
			if(IsPlayerConnected(GetPlayerID(FarmInfo[playerid][fAuctionName]))) SCM(GetPlayerID(FarmInfo[playerid][fAuctionName]),COLOR_WHITE," Вы приобрели СТО/Ферму с аукциона!");
			strmid(FarmInfo[playerid][fOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(FarmInfo[playerid][fDeputy_1],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(FarmInfo[playerid][fDeputy_2],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(FarmInfo[playerid][fDeputy_3],"None",0,strlen("None"),MAX_PLAYER_NAME);
			FarmInfo[playerid][fLandTax] = 6000;
			FarmInfo[playerid][fBank] = (FarmInfo[playerid][fAuction][0]/100)*20;
			FarmInfo[playerid][fProds] = 0;
			FarmInfo[playerid][fZp] = 30;
			FarmInfo[playerid][fGrain_Price] = 5;
			FarmInfo[playerid][fGrain] = 0;
			FarmInfo[playerid][fGrain_Sown] = 0;
			FarmInfo[playerid][fProds_Selling] = 1;
			FarmInfo[playerid][fProds_Price] = 21;
			strmid(FarmInfo[playerid][fOwner],FarmInfo[playerid][fAuctionName], 0, strlen(FarmInfo[playerid][fAuctionName]), MAX_PLAYER_NAME);
			if(IsPlayerConnected(GetPlayerID(FarmInfo[playerid][fAuctionName]))) FGet(GetPlayerID(FarmInfo[playerid][fAuctionName]));
			strmid(FarmInfo[playerid][fAuctionName], "None", 0, strlen("None"), 10);
			FarmInfo[playerid][fAuction][0] = 0;
			FarmInfo[playerid][fAuction][1] = 0;
			FarmInfo[playerid][fAuction][2] = 0;
			FarmInfo[playerid][fAuction][3] = 0;
			FarmInfo[playerid][fAuction][4] = mktimes(0,0,0,day+14,month,year);
			SaveMySQL(9,playerid);
		}
	case 30:
		{
			if(!r) return printf("[Фермы] Нет аккаунта. Деньги не были зачислены!");
			new szQuery[129];
			mysql_format(DATABASE, szQuery, 128, "UPDATE `accounts` SET pBank = pBank+%i WHERE Name = '%e'",FarmInfo[bizselect[playerid]][fAuction][1],FarmInfo[bizselect[playerid]][fAuctionName]);
			mysql_query(DATABASE,szQuery);
		}
	case 31:
		{
			if(!r) return printf("[Загрузка ...] Данные из Stall не получены!");
			for(x = 1; x <= r; x++)
			{
				cache_get_value_index_int 	(x-1, 0, StallInfo[x][stID]);
				cache_get_value_index_float (x-1, 1, StallInfo[x][stPos][0]);
				cache_get_value_index_float (x-1, 2, StallInfo[x][stPos][1]);
				cache_get_value_index_float (x-1, 3, StallInfo[x][stPos][2]);
				cache_get_value_index_float (x-1, 4, StallInfo[x][stPos][3]);
				TOTALSTALL++;

				CreateDynamicObject(1340, StallInfo[x][stPos][0], StallInfo[x][stPos][1], StallInfo[x][stPos][2], 0, 0, StallInfo[x][stPos][3]);
				StallInfo[x][stText] = CreateDynamic3DTextLabel( "Не работает", 0xFF8C37FF, StallInfo[x][stPos][0], StallInfo[x][stPos][1], StallInfo[x][stPos][2], 8.0 );
			}
			printf("[Загрузка ...] Данные из Stall получены! (%i шт.)",TOTALSTALL);
		}
	case 32:
		{
			if(!r) return printf("[Загрузка ...] Данные из Gangzone не получены!");
			for(x = 1; x <= r; x++)
			{
				cache_get_value_index_int 	(x-1, 0, GZInfo[x][gID]);
				cache_get_value_index_float (x-1, 1, GZInfo[x][gCoords][0]);
				cache_get_value_index_float (x-1, 2, GZInfo[x][gCoords][1]);
				cache_get_value_index_float (x-1, 3, GZInfo[x][gCoords][2]);
				cache_get_value_index_float (x-1, 4, GZInfo[x][gCoords][3]);
				cache_get_value_index_int 	(x-1, 5, GZInfo[x][gFrakVlad]);
				
				TOTALGZ++;

				GZInfo[x][gZone] = GangZoneCreate(GZInfo[x][gCoords][0],GZInfo[x][gCoords][1],GZInfo[x][gCoords][2],GZInfo[x][gCoords][3]);
			}
			printf("[Загрузка ...] Данные из Gangzone получены! (%i шт.)",TOTALGZ);
		}
	case 34:
		{
			if(r)
			{
				new boost1, boost2;
				cache_get_value_name_int(0, "boost_1", boost1);
				cache_get_value_name_int(0, "boost_2", boost2);

				if(boost1 > gettime())
				{
					cache_get_value_name_int(0, "boost_1", booston);
					SendRconCommand("hostname Noxe-Rp.Ru | Акция: X3 | Client 0.3.7");
				}
				else if(boost2 > gettime())
				{
					cache_get_value_name_int(0, "boost_2", booston2);
					SendRconCommand("hostname Noxe-Rp.Ru | Акция для новичков");
				}
				else SendRconCommand("hostname "HostName"");
			}
			printf("[Загрузка ...] Бонус_1 %i. Бонус_2 %i",booston,booston2);
		}
	case 33:
		{
			new totdel[MAX_PLAYERS];
			if(!r)
			{
				new szQuery[53+24];
				mysql_format(DATABASE, szQuery, sizeof szQuery, "INSERT INTO `"TABLE_CARS"` (`owner`) VALUES ('%e')" ,pData[playerid][pName]);
				mysql_query(DATABASE,szQuery);
				mysql_format(DATABASE, szQuery, sizeof szQuery, "INSERT INTO `"TABLE_CARS"` (`owner`) VALUES ('%e')" ,pData[playerid][pName]);
				mysql_query(DATABASE,szQuery);
				mysql_format(DATABASE, szQuery, sizeof szQuery, "INSERT INTO `"TABLE_CARS"` (`owner`) VALUES ('%e')" ,pData[playerid][pName]);
				mysql_query(DATABASE,szQuery);
				mysql_format(DATABASE, szQuery, sizeof szQuery, "INSERT INTO `"TABLE_CARS"` (`owner`) VALUES ('%e')" ,pData[playerid][pName]);
				mysql_query(DATABASE,szQuery);
				mysql_format(DATABASE, szQuery, sizeof szQuery, "INSERT INTO `"TABLE_CARS"` (`owner`) VALUES ('%e')" ,pData[playerid][pName]);
				mysql_query(DATABASE,szQuery);
				mysql_format(DATABASE, szQuery, sizeof szQuery, "INSERT INTO `"TABLE_CARS"` (`owner`) VALUES ('%e')" ,pData[playerid][pName]);
				mysql_query(DATABASE,szQuery);
				return SCM(playerid,COLOR_GREY," Информация о ваших автомобилях не была найдена. Перезайдите на сервер!");
			}
			for(x = 0; x < 6; x++)
			{
				cache_get_value_name_int(x, "id", CarInfo[playerid][carID][x]);
			
				//cache_get_value_name(x,	"owner", 		string);

				cache_get_value_name_int  (x, "model", CarInfo[playerid][carModel][x]);
				cache_get_value_name_int  (x, "color_one", CarInfo[playerid][carColor_one][x]);
				cache_get_value_name_int  (x, "color_two", CarInfo[playerid][carColor_two][x]);
				cache_get_value_name_int  (x, "percent", CarInfo[playerid][carPercent][x]);
				cache_get_value_name_float(x, "fuel", CarInfo[playerid][carFuel][x]);
				cache_get_value_name_int  (x, "vehcom_1", CarInfo[playerid][carVehcom_1][x]);
				cache_get_value_name_int  (x, "vehcom_2", CarInfo[playerid][carVehcom_2][x]);

				cache_get_value_name_int  (x, "vehcom_3", CarInfo[playerid][carVehcom_3][x]);
				cache_get_value_name_int  (x, "vehcom_4", CarInfo[playerid][carVehcom_4][x]);
				cache_get_value_name_int  (x, "vehcom_5", CarInfo[playerid][carVehcom_5][x]);
				cache_get_value_name_int  (x, "vehcom_6", CarInfo[playerid][carVehcom_6][x]);
				cache_get_value_name_int  (x, "vehcom_7", CarInfo[playerid][carVehcom_7][x]);
				cache_get_value_name_int  (x, "vehcom_8", CarInfo[playerid][carVehcom_8][x]);
				cache_get_value_name_int  (x, "vehcom_9", CarInfo[playerid][carVehcom_9][x]);
				cache_get_value_name_int  (x, "vehcom_10", CarInfo[playerid][carVehcom_10][x]);
				cache_get_value_name_int  (x, "vehcom_11", CarInfo[playerid][carVehcom_11][x]);
				cache_get_value_name_int  (x, "vehcom_12", CarInfo[playerid][carVehcom_12][x]);
				cache_get_value_name_int  (x, "vehcom_13", CarInfo[playerid][carVehcom_13][x]);
				cache_get_value_name_int  (x, "vehcom_14", CarInfo[playerid][carVehcom_14][x]);
			
				if(x > 5)
				{
					new szQuery[128];
					mysql_format(DATABASE,szQuery,128, "DELETE FROM `cars` WHERE `owner` = '%e' and `id` = '%i'",Name(playerid),CarInfo[playerid][carID][x]);
					mysql_query(DATABASE,szQuery);
					totdel[playerid]++;
				}
			}
			if(totdel[playerid]) return SCM(playerid,-1,"У вас найдены лишние машины. Перезайдите на сервер"), L_Kick(playerid,38);

			if(pData[playerid][pPHouseKey] != INVALID_HOUSE_ID) 
				SpawnHouseCars(playerid);
			printf("[Загрузка ...] Автомобили игрока %s были загружены!",string);
		}
	case 37:
		{
			if(!r)
			{
				return printf("[Error] Информация о машинах игрока в бд не найдена");
			}
			new temp[0x9e];
			for(x = 0; x < 6; x++)
			{
				new szQuery[26+556];
				mysql_format(DATABASE, szQuery, sizeof(szQuery), "UPDATE `"TABLE_CARS"` SET ");
				format(temp,sizeof(temp),"`model`= '%i',",CarInfo[playerid][carModel][x]), 				strcat(szQuery,temp,sizeof(szQuery));
				format(temp,sizeof(temp),"`color_one`= '%i',",CarInfo[playerid][carColor_one][x]), 		strcat(szQuery,temp,sizeof(szQuery));
				format(temp,sizeof(temp),"`color_two`= '%i',",CarInfo[playerid][carColor_two][x]), 		strcat(szQuery,temp,sizeof(szQuery));
				format(temp,sizeof(temp),"`percent`= '%i',",CarInfo[playerid][carPercent][x]), 			strcat(szQuery,temp,sizeof(szQuery));
				format(temp,sizeof(temp),"`fuel`= '%f',",CarInfo[playerid][carFuel][x]), 					strcat(szQuery,temp,sizeof(szQuery));
				format(temp,sizeof(temp),"`vehcom_1`= '%i',",CarInfo[playerid][carVehcom_1][x]), 			strcat(szQuery,temp,sizeof(szQuery));
				format(temp,sizeof(temp),"`vehcom_2`= '%i',",CarInfo[playerid][carVehcom_2][x]), 			strcat(szQuery,temp,sizeof(szQuery));
				format(temp,sizeof(temp),"`vehcom_3`= '%i',",CarInfo[playerid][carVehcom_3][x]), 			strcat(szQuery,temp,sizeof(szQuery));
				format(temp,sizeof(temp),"`vehcom_4`= '%i',",CarInfo[playerid][carVehcom_4][x]), 			strcat(szQuery,temp,sizeof(szQuery));
				format(temp,sizeof(temp),"`vehcom_5`= '%i',",CarInfo[playerid][carVehcom_5][x]), 			strcat(szQuery,temp,sizeof(szQuery));
				format(temp,sizeof(temp),"`vehcom_6`= '%i',",CarInfo[playerid][carVehcom_6][x]), 			strcat(szQuery,temp,sizeof(szQuery));
				format(temp,sizeof(temp),"`vehcom_7`= '%i',",CarInfo[playerid][carVehcom_7][x]), 			strcat(szQuery,temp,sizeof(szQuery));
				format(temp,sizeof(temp),"`vehcom_8`= '%i',",CarInfo[playerid][carVehcom_8][x]), 			strcat(szQuery,temp,sizeof(szQuery));
				format(temp,sizeof(temp),"`vehcom_9`= '%i',",CarInfo[playerid][carVehcom_9][x]), 			strcat(szQuery,temp,sizeof(szQuery));
				format(temp,sizeof(temp),"`vehcom_10`= '%i',",CarInfo[playerid][carVehcom_10][x]), 		strcat(szQuery,temp,sizeof(szQuery));
				format(temp,sizeof(temp),"`vehcom_11`= '%i',",CarInfo[playerid][carVehcom_11][x]), 		strcat(szQuery,temp,sizeof(szQuery));
				format(temp,sizeof(temp),"`vehcom_12`= '%i',",CarInfo[playerid][carVehcom_12][x]), 		strcat(szQuery,temp,sizeof(szQuery));
				format(temp,sizeof(temp),"`vehcom_13`= '%i',",CarInfo[playerid][carVehcom_13][x]), 		strcat(szQuery,temp,sizeof(szQuery));
				format(temp,sizeof(temp),"`vehcom_14`= '%i'",CarInfo[playerid][carVehcom_14][x]), 			strcat(szQuery,temp,sizeof(szQuery));
				format(temp,sizeof(temp)," WHERE id = '%i'",CarInfo[playerid][carID][x]),					strcat(szQuery,temp,sizeof(szQuery));
				mysql_tquery(DATABASE, szQuery, "", "");
			}
			printf("[Сохранение] Автомобили %s | %i,%i,%i,%i,%i соханены",pData[playerid][pName],CarInfo[playerid][carModel][0],CarInfo[playerid][carModel][1],CarInfo[playerid][carModel][2],CarInfo[playerid][carModel][3],CarInfo[playerid][carModel][4]);
		}
	}
	return true;
}
stock SpawnCarOne(playerid, Float:x, Float:y, Float:z, Float:range, interior = 19)
{
	garage_car[playerid][0] = CreateVehicle_R(CarInfo[playerid][carModel][0], x, y, z, range , CarInfo[playerid][carColor_one][0] ,CarInfo[playerid][carColor_two][0], -1);
	SetVehicleParamsEx(garage_car[playerid][0],false,false,false,true,false,false,false);
	car_data[garage_car[playerid][0]][fuell] = CarInfo[playerid][carFuel][0];
	LoadTuning(playerid,garage_car[playerid][0],0);
	SetPVarInt(playerid,"CarsInGarage",1);
	LinkVehicleToInterior(garage_car[playerid][0], interior);
	SetVehicleVirtualWorld(garage_car[playerid][0], pData[playerid][pPHouseKey]+100);
}
stock SpawnCarTwo(playerid, Float:x, Float:y, Float:z, Float:range, interior)
{
	garage_car[playerid][1] = CreateVehicle_R(CarInfo[playerid][carModel][1], x, y, z, range , CarInfo[playerid][carColor_one][1] ,CarInfo[playerid][carColor_two][1], -1);
	SetVehicleParamsEx(garage_car[playerid][1],false,false,false,true,false,false,false);
	car_data[garage_car[playerid][1]][fuell] = CarInfo[playerid][carFuel][1];
	LoadTuning(playerid,garage_car[playerid][1],1);
	SetPVarInt(playerid,"CarsInGarage",1);
	LinkVehicleToInterior(garage_car[playerid][1], interior);
	SetVehicleVirtualWorld(garage_car[playerid][1], pData[playerid][pPHouseKey]+100);
}
stock SpawnCarThree(playerid, Float:x, Float:y, Float:z, Float:range, interior)
{
	garage_car[playerid][2] = CreateVehicle_R(CarInfo[playerid][carModel][2], x, y, z, range , CarInfo[playerid][carColor_one][2] ,CarInfo[playerid][carColor_two][2], -1);
	SetVehicleParamsEx(garage_car[playerid][2],false,false,false,true,false,false,false);
	car_data[garage_car[playerid][2]][fuell] = CarInfo[playerid][carFuel][2];
	LoadTuning(playerid,garage_car[playerid][2],2);
	SetPVarInt(playerid,"CarsInGarage",1);
	LinkVehicleToInterior(garage_car[playerid][2], interior);
	SetVehicleVirtualWorld(garage_car[playerid][2], pData[playerid][pPHouseKey]+100);
}
stock SpawnCarFour(playerid, Float:x, Float:y, Float:z, Float:range,interior)
{
	garage_car[playerid][3] = CreateVehicle_R(CarInfo[playerid][carModel][3], x, y, z, range , CarInfo[playerid][carColor_one][3] ,CarInfo[playerid][carColor_two][3], -1);
	SetVehicleParamsEx(garage_car[playerid][3],false,false,false,true,false,false,false);
	car_data[garage_car[playerid][3]][fuell] = CarInfo[playerid][carFuel][3];
	LoadTuning(playerid,garage_car[playerid][3],3);
	SetPVarInt(playerid,"CarsInGarage",1);
	LinkVehicleToInterior(garage_car[playerid][3], interior);
	SetVehicleVirtualWorld(garage_car[playerid][3], pData[playerid][pPHouseKey]+100);
}
stock SpawnCarFive(playerid, Float:x, Float:y, Float:z, Float:range,interior)
{
	garage_car[playerid][4] = CreateVehicle_R(CarInfo[playerid][carModel][4], x, y, z, range , CarInfo[playerid][carColor_one][4] ,CarInfo[playerid][carColor_two][4], -1);
	SetVehicleParamsEx(garage_car[playerid][4],false,false,false,true,false,false,false);
	car_data[garage_car[playerid][4]][fuell] = CarInfo[playerid][carFuel][4];
	LoadTuning(playerid,garage_car[playerid][4],4);
	SetPVarInt(playerid,"CarsInGarage",1);
	LinkVehicleToInterior(garage_car[playerid][4], interior);
	SetVehicleVirtualWorld(garage_car[playerid][4], pData[playerid][pPHouseKey]+100);
}
stock SpawnCarSix(playerid, Float:x, Float:y, Float:z, Float:range,interior)
{
	garage_car[playerid][5] = CreateVehicle_R(CarInfo[playerid][carModel][5], x, y, z, range , CarInfo[playerid][carColor_one][5] ,CarInfo[playerid][carColor_two][5], -1);
	SetVehicleParamsEx(garage_car[playerid][5],false,false,false,true,false,false,false);
	car_data[garage_car[playerid][5]][fuell]= CarInfo[playerid][carFuel][5];
	LoadTuning(playerid,garage_car[playerid][5],5);
	SetPVarInt(playerid,"CarsInGarage",1);
	LinkVehicleToInterior(garage_car[playerid][5], interior);
	SetVehicleVirtualWorld(garage_car[playerid][5], pData[playerid][pPHouseKey]+100);
}
stock SaveOthers()
{
	new szQuery[129];
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET bank_lsnews = '%i'",FracBank[0][fLsnews]);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET bank_sfnews = '%i'",FracBank[0][fSfnews]);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET bank_lvnews = '%i'",FracBank[0][fLvnews]);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET bank_ballas = '%i'",FracBank[0][fBallas]);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET bank_vagos = '%i'",FracBank[0][fVagos]);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET bank_grove = '%i'",FracBank[0][fGrove]);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET bank_aztec = '%i'",FracBank[0][fAztek]);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET bank_rifa = '%i'",FracBank[0][fRifa]);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET bank_exchequer = '%i'",FracBank[0][fKazna]);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET bank_hamc = '%i'",FracBank[0][fHamc]);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET bank_wmc = '%i'",FracBank[0][fWmc]);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET bank_pmc = '%i'",FracBank[0][fPmc]);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET heal_ballas = '%i'",ballashel);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET heal_grove = '%i'",groovhel);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET heal_vagos = '%i'",vagoshel);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET heal_aztec = '%i'",aztekhel);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET heal_rifa = '%i'",rifahel);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET adprice_ls = '%i'",addd[0]);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET adprice_sf = '%i'",addd[1]);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET adprice_lv = '%i'",addd[2]);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET healprice = '%i'",healpric);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET heal_yakuza = '%i'",yakuzahel);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET heal_lcn = '%i'",lcnhel);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET heal_rm = '%i'",rmhel);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET mats_lsa = '%i'",lsamatbi);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET mats_lva = '%i'",armmatbi);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET mats_sfa = '%i'",armmatsf);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET mats_hamc = '%i'",hamcmatbi);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET mats_wmc = '%i'",wmcmatbi);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET mats_pmc = '%i'",pmcmatbi);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET mats_rifa = '%i'",rifamatbi);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET mats_ballas = '%i'",ballasmatbi);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET mats_aztec = '%i'",aztekmatbi);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET mats_vagos = '%i'",vagosmatbi);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET mats_grove = '%i'",groovmatbi);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET mats_lspd = '%i'",lspdmatbi);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET mats_fbi = '%i'",fbimats);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET mats_yakuza = '%i'",yakuzamats);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET mats_rm = '%i'",rmmats);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET mats_lcn = '%i'",lcnmats);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET mats_sfpd = '%i'",sfpdmats);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET mats_lvpd = '%i'",lvpdmats);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET bank_lcn = '%i'",MafiaBank[0][nLcn]);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET bank_yakuza = '%i'",MafiaBank[0][nYakuza]);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET bank_rm = '%i'",MafiaBank[0][nRm]);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET hamcfuels = '%i'",hamcfuels);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET wmcfuels = '%i'",wmcfuels);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET pmcfuels = '%i'",pmcfuels);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET hamcprods = '%i'",hamcprods);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET wmcprods = '%i'",wmcprods);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET pmcprods = '%i'",pmcfuels);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET warelock1_1 = '%i'",warelock1[0]);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET warelock1_2 = '%i'",warelock1[1]);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET warelock1_3 = '%i'",warelock1[2]);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET warelock1_4 = '%i'",warelock1[3]);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET warelock1_5 = '%i'",warelock1[4]);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET warelock2_1 = '%i'",warelock2[0]);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET warelock2_2 = '%i'",warelock2[1]);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET warelock2_3 = '%i'",warelock2[2]);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET warelock2_4 = '%i'",warelock2[3]);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET warelock2_5 = '%i'",warelock2[4]);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET warelock3_1 = '%i'",warelock3[0]);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET warelock3_2 = '%i'",warelock3[1]);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET warelock3_3 = '%i'",warelock3[2]);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET warelock3_4 = '%i'",warelock3[3]);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, 128, "UPDATE `"TABLE_OTHERS"` SET warelock3_5 = '%i'",warelock3[4]);
	mysql_query(DATABASE,szQuery);
}
stock SaveMySQL(idx, i = 0)
{
	new temp[160];
	switch(idx)
	{
	case 1:
		{
			new szQuery[1024];
			mysql_format(DATABASE, szQuery, sizeof(szQuery), "UPDATE `"TABLE_CASINO"` SET ");
			format(temp,sizeof(temp),"`ID`= '%i',",CasinoInfo[i][caID]), 						strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`Name`= '%s',",CasinoInfo[i][caName]), 					strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`Mafia`= '%i',",CasinoInfo[i][caMafia]), 					strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`Manager`= '%s',",CasinoInfo[i][caManager]), 				strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`Manager2`= '%s',",CasinoInfo[i][caManager2]), 			strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`Manager3`= '%s',",CasinoInfo[i][caManager3]), 			strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`Krupie`= '%s',",CasinoInfo[i][caKrupie]), 				strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`Krupie2`= '%s',",CasinoInfo[i][caKrupie2]), 				strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`Krupie3`= '%s',",CasinoInfo[i][caKrupie3]), 				strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`Krupie4`= '%s',",CasinoInfo[i][caKrupie4]),				strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`Krupie5`= '%s',",CasinoInfo[i][caKrupie5]),				strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`Krupie6`= '%s',",CasinoInfo[i][caKrupie6]),				strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`Krupie7`= '%s',",CasinoInfo[i][caKrupie7]),				strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`Krupie8`= '%s',",CasinoInfo[i][caKrupie8]),				strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`Krupie9`= '%s',",CasinoInfo[i][caKrupie9]),				strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`Krupie10`= '%s'",CasinoInfo[i][caKrupie10]),				strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp)," WHERE ID = '%i'",CasinoInfo[i][caID]),					strcat(szQuery,temp,sizeof(szQuery));
			mysql_query(DATABASE, szQuery);
			//printf("TABLE_CASINO -> %s", szQuery);
		}
	case 2:
		{
			if(GetPVarInt(i,"player_save") || !pData[i][pLogin]) return true;
			SetPVarInt(i,"player_save",1);
			new year, month, day;
			new szQuery[3000];
			getdate(year, month, day);
			format(pData[i][pStyleSkills],30,"%i, %i, %i",pData[i][pStyleSkill][0],pData[i][pStyleSkill][1], pData[i][pStyleSkill][2]);
			format(pData[i][pGunSkills],30,"%i, %i, %i, %i, %i ,%i",pData[i][pGunSkill][0],pData[i][pGunSkill][1],pData[i][pGunSkill][2],pData[i][pGunSkill][3],pData[i][pGunSkill][4],pData[i][pGunSkill][5]);
		//	format(pData[i][pChars],30,"%i, %i, %i, %i, %i ,%i",pData[i][pChar][0],pData[i][pChar][1],pData[i][pChar][2],pData[i][pChar][3],pData[i][pChar][4],pData[i][pChar][5]);

			mysql_format(DATABASE, szQuery, sizeof(szQuery), "UPDATE `"TABLE_ACCOUNTS"` SET `pDetachID`=%d, `pHelper` = '%i', `pRatingSupport` = '%i', `pJobHeal` = '%i', `pMestoJail` = '%i', `pCheckip` = '%i'",
			pData[i][pDetachID], pData[i][pHelper],pData[i][pRatingSupport], pData[i][pJobHeal], pData[i][pMestoJail], pData[i][pCheckip]);

			mysql_format(DATABASE, szQuery, sizeof(szQuery), "%s, `pSatiety` = '%i', `pDonateRank` = '%i', `pMats` = '%i', `pSex` = '%i', `pArrested` = '%i'",
			szQuery, pData[i][pSatiety], pData[i][pDonateRank], pData[i][pMats], pData[i][pSex], pData[i][pArrested]);

			mysql_format(DATABASE, szQuery, sizeof(szQuery), "%s, `pMuted` = '%i', `pCrimes` = '%i', `pExp` = '%f', `pCash` = '%i',`pAdmin` = '%i', `pPayCheck` = '%i', `pJailTime` = '%i', `pDrugs` = '%i', `pLeader` = '%i', `pMember` = '%i', `pQuestL` = '%i', `pQuest` = '%i', `pQuestP` = '%i', `pQuestF` = '%i', `pQuestPF` = '%i', `pQuestShow` = '%i'",
			szQuery, pData[i][pMuted], pData[i][pCrimes], pData[i][pExp], pData[i][pCash],pData[i][pAdmin], pData[i][pPayCheck], pData[i][pJailTime], pData[i][pDrugs], pData[i][pLeader], pData[i][pMember], pData[i][pQuestL], pData[i][pQuest], pData[i][pQuestP], pData[i][pQuestF], pData[i][pQuestPF], pData[i][pQuestShow]);

			mysql_format(DATABASE, szQuery, sizeof(szQuery), "%s, `pRank` = '%i', `pJob` = '%i', `pModel` = '%i', `pPnumber` = '%i', `pDirectory` = '%i', `pVhoddata` = '%i', `pVhodMes` = '%i', `pVhodchas` = '%i', `pVhodminute` = '%i'",
			szQuery, pData[i][pRank], pData[i][pJob], pData[i][pModel], pData[i][pPnumber], pData[i][pDirectory], pData[i][pVhoddata], pData[i][pVhodMes], pData[i][pVhodchas], pData[i][pVhodminute]);

			mysql_format(DATABASE, szQuery, sizeof(szQuery), "%s, `pLicenses` = %i, `pZakonp` = '%i', `pText` = '%i', `pSetUI` = '%i'",
			szQuery, pData[i][pLicenses], pData[i][pZakonp], pData[i][pText],pData[i][pSetUI]);

			mysql_format(DATABASE, szQuery, sizeof(szQuery), "%s, `pAddiction` = '%i', `pNarcoLomka` = '%i',  `pWarns` = '%i', `OffWarns` = '%i', `punWarns` = '%i', `pFuel` = '%i', `pMarriedTo` = '%s', `pMushrooms` = '%i'",
			szQuery, pData[i][pAddiction], pData[i][pNarcoLomka], pData[i][pWarns], pData[i][OffWarns], pData[i][punWarns], pData[i][pFuel], pData[i][pMarriedTo], pData[i][pMushrooms]);

			mysql_format(DATABASE, szQuery, sizeof(szQuery), "%s, `pFishes` = '%f', `pBank` = '%i', `pKeys` = '%i', `pMobile` = '%i', `pDolg` = '%i', `pKrisha` = '%i'",
			szQuery, pData[i][pFishes], pData[i][pBank], pData[i][pKeys], pData[i][pMobile], pData[i][pDolg], pData[i][pKrisha]);

			mysql_format(DATABASE, szQuery, sizeof(szQuery), "%s, `pGunSkills` = '%s', `pStyleSkills` = '%s',`pStyleSelect` = '%i', `pStyleAmmount` = '%f', `pDLevel` = '%i', `pDExp` = '%i'",
			szQuery, pData[i][pGunSkills], pData[i][pStyleSkills],pData[i][pStyleSelect],pData[i][pStyleAmmount], pData[i][pDLevel], pData[i][pDExp]);
			mysql_format(DATABASE, szQuery, sizeof(szQuery), "%s,`pPSkill` = '%i', `pPProc` = '%i', `pPMGruz` = '%i', `pDonateAccount` = '%i', `pTaxiRep` = '%i'",
			szQuery, pData[i][pPSkill], pData[i][pPProc], pData[i][pPMGruz], pData[i][pDonateAccount],pData[i][pTaxiRep]);

			mysql_format(DATABASE, szQuery, sizeof(szQuery), "%s, `prods_skill` = '%i', `prods_exp` = '%i', `pPick` = '%i'",
			szQuery, pData[i][pProdsSkill][0], pData[i][pProdsSkill][1],pData[i][pPick]);

			mysql_format(DATABASE, szQuery, sizeof(szQuery), "%s, `pRobHouse` = '%i', `pFishesPach` = '%i',`pActiveGAuth` = '%i', `pDrivingSkill` = '%i', `pLimitAutoUgon` = '%i', `pPayFlood` = '%i', `pLimitPay` = '%i', `pLimitSellCar` = '%i', `pChosenRadio` = '%i', `pRMuteTime` = '%i'",
			szQuery, pData[i][pRobHouse], pData[i][pFishesPach],  pData[i][pActiveGAuth], pData[i][pDrivingSkill], pData[i][pLimitAutoUgon], pData[i][pPayFlood], pData[i][pLimitPay], pData[i][pLimitSellCar],SelectWavesRadio[i],pData[i][pRMuteTime]);
			
			mysql_format(DATABASE, szQuery, sizeof(szQuery), "%s, `wSlot_0` = '%i', `wSlot_1` = '%i', `wSlot_2` = '%i',`wSlot_3` = '%i',`wSlot_4` = '%i', `wSlot_5` = '%i', `wSlot_6` = '%i', `wSlot_7` = '%i', `wSlot_8` = '%i', `wSlot_9` = '%i', `wSlot_10` = '%i', `wSlot_11` = '%i', `wSlot_12` = '%i'",
			szQuery, WeaponInfo[i][wWeapon][0], WeaponInfo[i][wWeapon][1], WeaponInfo[i][wWeapon][2], WeaponInfo[i][wWeapon][3], WeaponInfo[i][wWeapon][4], WeaponInfo[i][wWeapon][5], WeaponInfo[i][wWeapon][6], WeaponInfo[i][wWeapon][7], WeaponInfo[i][wWeapon][8], WeaponInfo[i][wWeapon][9],WeaponInfo[i][wWeapon][10],WeaponInfo[i][wWeapon][11],WeaponInfo[i][wWeapon][12]);
			
			mysql_format(DATABASE, szQuery, sizeof(szQuery), "%s, `wValue_0` = '%i', `wValue_1` = '%i', `wValue_2` = '%i',`wValue_3` = '%i',`wValue_4` = '%i', `wValue_5` = '%i', `wValue_6` = '%i', `wValue_7` = '%i', `wValue_8` = '%i', `wValue_9` = '%i', `wValue_10` = '%i', `wValue_11` = '%i', `wValue_12` = '%i'",
			szQuery, WeaponInfo[i][wAmmo][0], WeaponInfo[i][wAmmo][1], WeaponInfo[i][wAmmo][2], WeaponInfo[i][wAmmo][3], WeaponInfo[i][wAmmo][4], WeaponInfo[i][wAmmo][5], WeaponInfo[i][wAmmo][6], WeaponInfo[i][wAmmo][7], WeaponInfo[i][wAmmo][8], WeaponInfo[i][wAmmo][9],WeaponInfo[i][wAmmo][10],WeaponInfo[i][wAmmo][11],WeaponInfo[i][wAmmo][12]);

			mysql_format(DATABASE, szQuery, sizeof(szQuery), "%s WHERE `Name` = '%e'", szQuery, pData[i][pName]);
			mysql_query(DATABASE, szQuery);

			//printf("save %s\n%s", szQuery);
			DeletePVar(i, "player_save");
		}
	case 3:
		{
			new szQuery[1024];
			format(WorkshopInfo[i][wAuctions],128,"%i, %i, %i, %i, %i",WorkshopInfo[i][wAuction][0], WorkshopInfo[i][wAuction][1], WorkshopInfo[i][wAuction][2], WorkshopInfo[i][wAuction][3], WorkshopInfo[i][wAuction][4]);
			mysql_format(DATABASE, szQuery, sizeof(szQuery), "UPDATE `"TABLE_WORKSHOPS"` SET ");
			format(temp,sizeof(temp),"`owner`= '%s',",WorkshopInfo[i][wOwner]), 				strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`bank`= '%i',",WorkshopInfo[i][wBank]), 					strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`landtax`= '%i',",WorkshopInfo[i][wLandTax]), 			strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`prods`= '%i',",WorkshopInfo[i][wProds]), 				strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`priceprods`= '%i',",WorkshopInfo[i][wPriceProds]), 		strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`wClub`= '%i',",WorkshopInfo[i][wClub]), 		strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`zp`= '%i',",WorkshopInfo[i][wZp]), 						strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`deputy_one`= '%s',",WorkshopInfo[i][wDeputy1]), 			strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`deputy_two`= '%s',",WorkshopInfo[i][wDeputy2]), 			strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`deputy_three`= '%s',",WorkshopInfo[i][wDeputy3]), 		strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`mechanic_one`= '%s',",WorkshopInfo[i][wMechanic1]), 		strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`mechanic_two`= '%s',",WorkshopInfo[i][wMechanic2]), 		strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`mechanic_three`= '%s',",WorkshopInfo[i][wMechanic3]), 	strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`mechanic_four`= '%s',",WorkshopInfo[i][wMechanic4]), 	strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`mechanic_five`= '%s',",WorkshopInfo[i][wMechanic5]), 	strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`auctions`= '%s',",WorkshopInfo[i][wAuctions]), 			strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`auction_name`= '%s'",WorkshopInfo[i][wAuctionName]), 	strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp)," WHERE id = '%i'",WorkshopInfo[i][wID]),					strcat(szQuery,temp,sizeof(szQuery));
			mysql_query(DATABASE, szQuery);
			//printf("TABLE_WORKSHOPS -> %s", szQuery);
		}
	case 4:
		{
			new szQuery[1524];
			mysql_format(DATABASE, szQuery, sizeof(szQuery), "UPDATE `"TABLE_BIZZ"` SET ");
			format(temp,sizeof(temp),"`bOwner`= '%s',",BizzInfo[i][bOwner]), 					strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`bMessage`= '%s',",BizzInfo[i][bMessage]), 				strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`bEntranceX`= '%f',",BizzInfo[i][bEntranceX]), 			strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`bEntranceY`= '%f',",BizzInfo[i][bEntranceY]), 			strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`bEntranceZ`= '%f',",BizzInfo[i][bEntranceZ]), 			strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`bExitX`= '%f',",BizzInfo[i][bExitX]), 					strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`bExitY`= '%f',",BizzInfo[i][bExitY]), 					strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`bExitZ`= '%f',",BizzInfo[i][bExitZ]), 					strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`bBuyPrice`= '%i',",BizzInfo[i][bBuyPrice]), 				strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`bEntranceCost`= '%i',",BizzInfo[i][bEntranceCost]), 		strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`bTill`= '%i',",BizzInfo[i][bTill]), 						strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`bLocked`= '%i',",BizzInfo[i][bLocked]), 					strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`bInterior`= '%i',",BizzInfo[i][bInterior]), 				strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`bProducts`= '%i',",BizzInfo[i][bProducts]), 				strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`bPrice`= '%i',",BizzInfo[i][bPrice]), 					strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`bBarX`= '%f',",BizzInfo[i][bBarX]), 						strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`bBarY`= '%f',",BizzInfo[i][bBarY]), 						strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`bBarZ`= '%f',",BizzInfo[i][bBarZ]), 						strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`bMafia`= '%i',",BizzInfo[i][bMafia]), 					strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`bType`= '%i',",BizzInfo[i][bType]), 						strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`bLockTime`= '%i',",BizzInfo[i][bLockTime]), 				strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`bLicense`= '%i',",BizzInfo[i][bLicense]), 				strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`bStavka`= '%i',",BizzInfo[i][bStavka]), 					strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`bNameStavka`= '%s',",BizzInfo[i][bNameStavka]), 			strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`bLastStavka`= '%i',",BizzInfo[i][bLastStavka]), 			strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`bTimeStavka`= '%i',",BizzInfo[i][bTimeStavka]), 			strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`bMinStavka`= '%i',",BizzInfo[i][bMinStavka]), 			strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`bVirtualWorld`= '%i',",BizzInfo[i][bVirtualWorld]), 		strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`bLandTax`= '%i',",BizzInfo[i][bLandTax]), 				strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`bProdPrice`= '%i'",BizzInfo[i][bProdPrice]), 			strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp)," WHERE bID = '%i'",BizzInfo[i][bID]),						strcat(szQuery,temp,sizeof(szQuery));
			mysql_query(DATABASE, szQuery);
			//printf("TABLE_BIZZ -> %s", szQuery);
		}
	case 9:
		{

			new szQuery[1024];
			format(FarmInfo[i][fAuctions],64,"%i, %i, %i, %i, %i",FarmInfo[i][fAuction][0], FarmInfo[i][fAuction][1], FarmInfo[i][fAuction][2], FarmInfo[i][fAuction][3], FarmInfo[i][fAuction][4]);
			mysql_format(DATABASE, szQuery, sizeof(szQuery), "UPDATE `"TABLE_FARM"` SET ");
			format(temp,sizeof(temp),"`owner`= '%s',",FarmInfo[i][fOwner]), 					strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`bank`= '%i',",FarmInfo[i][fBank]), 						strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`landtax`= '%i',",FarmInfo[i][fLandTax]), 				strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`zp`= '%i',",FarmInfo[i][fZp]), 							strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`grain_price`= '%i',",FarmInfo[i][fGrain_Price]), 		strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`grain`= '%i',",FarmInfo[i][fGrain]), 					strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`grain_sown`= '%i',",FarmInfo[i][fGrain_Sown]), 			strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`prods_selling`= '%i',",FarmInfo[i][fProds_Selling]), 	strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`prods`= '%i',",FarmInfo[i][fProds]), 					strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`prods_price`= '%i',",FarmInfo[i][fProds_Price]), 		strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`fClub`= '%i',",FarmInfo[i][fClub]), 		strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`deputy_1`= '%s',",FarmInfo[i][fDeputy_1]), 				strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`deputy_2`= '%s',",FarmInfo[i][fDeputy_2]), 				strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`deputy_3`= '%s',",FarmInfo[i][fDeputy_3]), 				strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`farmer_1`= '%s',",FarmInfo[i][fFarmer_1]), 				strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`farmer_2`= '%s',",FarmInfo[i][fFarmer_2]), 				strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`farmer_3`= '%s',",FarmInfo[i][fFarmer_3]), 				strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`farmer_4`= '%s',",FarmInfo[i][fFarmer_4]), 				strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`farmer_5`= '%s',",FarmInfo[i][fFarmer_5]), 				strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`auctions`= '%s',",FarmInfo[i][fAuctions]), 				strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`auction_name`= '%s'",FarmInfo[i][fAuctionName]), 		strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp)," WHERE id = '%i'",FarmInfo[i][fID]),						strcat(szQuery,temp,sizeof(szQuery));
			mysql_query(DATABASE, szQuery);
			//printf("TABLE_FARM -> %s", szQuery);
		}
	case 10:
		{
			if(!pData[i][pLogin]) return true;
			format(YCMDstr,sizeof YCMDstr ,"SELECT * FROM `"TABLE_CARS"` WHERE `owner` = '%s'",pData[i][pName]);
			mysql_tquery(DATABASE,YCMDstr,"OnMySQL_QUERY","iis",37,i,"");
		}
	case 11:
		{
			new szQuery[256];
			mysql_format(DATABASE, szQuery, sizeof(szQuery), "UPDATE `"TABLE_TAXI"` SET ");
			format(temp,sizeof(temp),"`owner`= '%s',", g_tInfo[i][e_szOwner]), 				strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`status`= %d,", g_tInfo[i][e_iStatus]), 				strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp),"`price`= %d", g_tInfo[i][e_iPrice]), 					strcat(szQuery,temp,sizeof(szQuery));
			format(temp,sizeof(temp)," WHERE `id` = %i", g_tInfo[i][e_dbId]),				strcat(szQuery,temp,sizeof(szQuery));
			mysql_query(DATABASE, szQuery);

		}
	}
	return true;
}
publics: StopPlayerSound() foreach(new i: Player) if(IsPlayerConnected(i)) { PlayerPlaySound(i, 1069, 0.0, 0.0, 0.0); }

stock GetHouseOplata(idx)
{
	switch(HouseInfo[idx][hKlass])
	{
		case 0,4: return 200;
		case 1,3: return 100;
		case 2: return 150;
		case 5: return 300;
	}
	return -1;
}
stock IsANoLimiter(carid)
{
	if(IsABoat(carid) || IsAPlane(carid) || GetVehicleModel(carid) == 462 || GetVehicleModel(carid) == 481 || GetVehicleModel(carid) == 509 || GetVehicleModel(carid) == 510) return true;
	return false;
}
stock setVehicleSpeed(vehicleid, speed_mph)
{
	if (speed_mph < 1) speed_mph = 1;
	new Float: v[3], cur_speed_mph;
	AntiCheatGetVehicleVelocity(vehicleid, v[0], v[1], v[2]);
	cur_speed_mph = floatround(100.3 *floatsqroot(v[0]*v[0] + v[1]*v[1] + v[2]*v[2]),floatround_floor);
	if (cur_speed_mph <= 0)
	{
		new Float: zAngle;
		GetVehicleZAngle(vehicleid, zAngle);
		new Float:newVelX = floatcos((zAngle -= 270.0), degrees) *speed_mph / 100.3;
		SetVehicleVelocity(vehicleid, newVelX, floattan(zAngle,degrees) *newVelX, 0.0);
		return;
	}
	new Float: vMultiplier = float(speed_mph) / float(cur_speed_mph);
	SetVehicleVelocity(vehicleid, v[0] *vMultiplier, v[1] *vMultiplier, v[2] *vMultiplier);
}
publics: DellAccount(playerid, stringg[])
{
	new r, null = 0;
//	cache_get_data(r, f);
	if(!r) return SCM(playerid,COLOR_GREY," Аккаунт не найден");
	for(new i = 0; i<TotalHouse; i++) if(strcmp(HouseInfo[i][hOwner],stringg,false) == 0 && strcmp(HouseInfo[i][hOwner],"None",true) != 0) null = i;
	if(null != 0)
	{
		HouseInfo[null][hTakings] = 0;
		strmid(HouseInfo[null][hOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
		HouseInfo[null][hLock] = true;
		HouseInfo[null][hHel] = 0;
		SaveMySQL(5,null);
	}
	null = 0;
	for(new i = 1; i <= TotalBizz;i++) if(strcmp(BizzInfo[i][bOwner],stringg,false) == 0 && strcmp(BizzInfo[i][bOwner],"None",true) != 0) null = i;
	if(null != 0) ClearBizz(null);
	null = 0;
	for(new i = 1; i <= TOTALSHOPS; i++) if(strcmp(WorkshopInfo[i][wOwner],stringg,false) == 0) null = i;
	if(null != 0)
	{
		strmid(WorkshopInfo[null][wOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
		strmid(WorkshopInfo[null][wDeputy1],"None",0,strlen("None"),MAX_PLAYER_NAME);
		strmid(WorkshopInfo[null][wDeputy2],"None",0,strlen("None"),MAX_PLAYER_NAME);
		strmid(WorkshopInfo[null][wDeputy3],"None",0,strlen("None"),MAX_PLAYER_NAME);
		strmid(WorkshopInfo[null][wMechanic1],"None",0,strlen("None"),MAX_PLAYER_NAME);
		strmid(WorkshopInfo[null][wMechanic2],"None",0,strlen("None"),MAX_PLAYER_NAME);
		strmid(WorkshopInfo[null][wMechanic3],"None",0,strlen("None"),MAX_PLAYER_NAME);
		strmid(WorkshopInfo[null][wMechanic4],"None",0,strlen("None"),MAX_PLAYER_NAME);
		strmid(WorkshopInfo[null][wMechanic5],"None",0,strlen("None"),MAX_PLAYER_NAME);
		WorkshopInfo[null][wAuction][0] = 0;
		WorkshopInfo[null][wAuction][1] = 0;
		WorkshopInfo[null][wAuction][2] = 0;
		WorkshopInfo[null][wAuction][3] = 0;
		WorkshopInfo[null][wAuction][4] = 0;
		WorkshopInfo[null][wLandTax] = 0;
		WorkshopInfo[null][wBank] = 0;
		WorkshopInfo[null][wProds] = 0;
		WorkshopInfo[null][wPriceProds] = 50;
		WorkshopInfo[null][wZp] = 5;
		SaveMySQL(3,null);
	}
	null = 0;
	for(new i = 1; i <= TOTALFARM; i++) if(strcmp(FarmInfo[i][fOwner],stringg,false) == 0) null = i;
	if(null != 0)
	{
		strmid(FarmInfo[null][fOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
		strmid(FarmInfo[null][fDeputy_1],"None",0,strlen("None"),MAX_PLAYER_NAME);
		strmid(FarmInfo[null][fDeputy_2],"None",0,strlen("None"),MAX_PLAYER_NAME);
		strmid(FarmInfo[null][fDeputy_3],"None",0,strlen("None"),MAX_PLAYER_NAME);
		FarmInfo[null][fAuction][0] = 0;
		FarmInfo[null][fAuction][1] = 0;
		FarmInfo[null][fAuction][2] = 0;
		FarmInfo[null][fAuction][3] = 0;
		FarmInfo[null][fAuction][4] = 0;
		FarmInfo[null][fLandTax] = 0;
		FarmInfo[null][fBank] = 0;
		FarmInfo[null][fProds] = 0;
		FarmInfo[null][fZp] = 30;
		FarmInfo[null][fGrain_Price] = 5;
		FarmInfo[null][fGrain] = 0;
		FarmInfo[null][fGrain_Sown] = 0;
		FarmInfo[null][fProds_Selling] = 1;
		FarmInfo[null][fProds_Price] = 21;
		SaveMySQL(9,null);
	}
	if(pData[playerid][pAdmin] < 10) MoneyLog(pData[playerid][pName],stringg, 0, "DelAccount");
	SendMes(playerid,COLOR_YELLOW,"Delete %s - succefully",stringg);
	new szQuery	[70+26];
	mysql_format(DATABASE, szQuery, sizeof szQuery, "DELETE FROM `"TABLE_ADMIN"` WHERE name = '%e'",stringg);
	mysql_query(DATABASE, szQuery);
	mysql_format(DATABASE, szQuery, sizeof szQuery, "DELETE FROM `"TABLE_CARS"` WHERE owner = '%e'",stringg);
	mysql_query(DATABASE, szQuery);
	mysql_format(DATABASE,szQuery, sizeof szQuery, "DELETE FROM `"TABLE_BAN"` WHERE `Name` = '%e'",stringg);
	mysql_query(DATABASE,szQuery);
	mysql_format(DATABASE, szQuery, sizeof szQuery, "DELETE FROM `"TABLE_ACCOUNTS"` WHERE name = '%e'",stringg);
	mysql_query(DATABASE, szQuery);
	return 1;
}
stock HGet(playerid) // НУНАДО
{
	for(new i = 0; i < TotalHouse; i++)
	{
		if(HouseInfo[i][hID] == pData[playerid][pPHouseKey])
			return pData[playerid][pPHouseKey] = i;
	}
	return 1;
}
stock BGet(playerid)
{
	new house = 0;
	for(new i = 1; i <= TotalBizz;i++)
	{
		if(strcmp(BizzInfo[i][bOwner],pData[playerid][pName],false) == 0 && strcmp(BizzInfo[i][bOwner],"None",false) != 0) house++, pData[playerid][pPBizzKey] = i,BizzInfo[i][bLocked] = 0;
	}
	return house;
}
stock WGet(playerid)
{
	new house = 0;
	for(new i = 1; i <= TOTALSHOPS;i++)
	{
		if(strcmp(WorkshopInfo[i][wOwner],pData[playerid][pName],false) == 0 && strcmp(WorkshopInfo[i][wOwner],"None",false) != 0) house++, SetPVarInt(playerid, "wShop", i);
	}
	return house;
}

stock FGet(playerid)
{
	new house = 0;
	for(new i = 1; i <= TOTALFARM; i++)
	{
		if(strcmp(FarmInfo[i][fOwner],pData[playerid][pName],false) == 0 && strcmp(FarmInfo[i][fOwner],"None",false) != 0) house++, pData[playerid][pPFarmKey] = i;
	}
	return house;
}

stock GetBizz()
{
	for(new i = 1; i <= TotalBizz; i++)
	{
		if(BizzInfo[i][bStavka] > 0 && strcmp(BizzInfo[i][bOwner],"None",true) == 0 && BizzInfo[i][bTimeStavka] > 0) BizzInfo[i][bTimeStavka]--;
		if(BizzInfo[i][bTimeStavka] == 0 && BizzInfo[i][bStavka] > 0)
		{
			new szQuery	[70+26];
			mysql_format(DATABASE,szQuery, sizeof szQuery,"SELECT `Name` FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%e'",BizzInfo[i][bNameStavka]);
			mysql_tquery(DATABASE,szQuery,"OnMySQL_QUERY","iis",12,i,"");
		}
		if(strcmp(BizzInfo[i][bOwner],"None",true) == 0) continue;
		if(BizzInfo[i][bLandTax] < BizzLandTax[i] || BizzInfo[i][bLocked] == 1 && BizzInfo[i][bLockTime] > 12) ClearBizz(i);
		else
		{
			if(BizzInfo[i][bProducts] <= 0)
			{
				BizzInfo[i][bLocked] = 1;
				if(IsPlayerConnected(GetPlayerID(BizzInfo[i][bOwner])))
				{
					if(BizzInfo[i][bLockTime] == 0) SetPVarInt(GetPlayerID(BizzInfo[i][bOwner]), "_GetBizz_", 1);
				}
			}
			if(BizzInfo[i][bLocked] == 1)BizzInfo[i][bLockTime]++;
			if(BizzInfo[i][bLockTime] > 1 && BizzInfo[i][bLockTime] < 12)if(IsPlayerConnected(GetPlayerID(BizzInfo[i][bOwner]))) SetPVarInt(GetPlayerID(BizzInfo[i][bOwner]), "GetBizz_", 1);
			if(BizzInfo[i][bMafia] == 6) MafiaBank[0][nYakuza] += 500;
			if(BizzInfo[i][bMafia] == 14) MafiaBank[0][nRm] += 500;
			if(BizzInfo[i][bMafia] == 5) MafiaBank[0][nLcn] += 500;
		}
	}
	return true;
}
stock GetHome()
{
	for(new i = 0; i < TotalHouse; i++)
	{
		if(strcmp("None",HouseInfo[i][hOwner],true) == 0) continue;

		if(HouseInfo[i][hTakings] < GetHouseOplata(i))
		{
		    new Player = GetPlayerID(HouseInfo[i][hOwner]);
			if(Player != INVALID_PLAYER_ID)
			{
			    SendClientMessage(Player, COLOR_LIGHTRED," Вы были выселены за неуплату квартплаты");
				SendClientMessage(Player, COLOR_LIGHTRED," Деньги за дом переведены на банковский счет");
				DestroyHouseCars(Player);
				pData[Player][pPHouseKey] = INVALID_HOUSE_ID;
				pData[Player][pBank] += HouseInfo[i][hValue];
				SetAccountInfo(Player,pData[Player][pPHouseKey],"pPHouseKey");
				SetAccountInfo(Player,pData[Player][pBank],"pBank");
			}
			else
			{
				new szQuery	[99+11+26];
				mysql_format(DATABASE,szQuery,300, "UPDATE "TABLE_ACCOUNTS" SET pBank = 'pBank+%i',pPHouseKey = '%d', pText = '1' WHERE Name = '%s'",HouseInfo[i][hValue],INVALID_HOUSE_ID,HouseInfo[i][hOwner]);
				mysql_query(DATABASE, szQuery);
			}

			strmid(HouseInfo[i][hOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
			HouseInfo[i][hTakings] = 0;
			HouseInfo[i][hLock] = false;
			HouseInfo[i][hHel] = 0;
			for(new h = 0; h < 10; h++) HouseInfo[i][hSafe][h] = 0;
			
			BuyHouse(i);
			new str_buy_house[213];
			mysql_format(DATABASE, str_buy_house, sizeof str_buy_house, "UPDATE `"TABLE_HOUSE"` SET `hOwner`='None', `hTakings` = 0, `hHel` = 0  WHERE hID = %d",HouseInfo[i][hID]);
			mysql_query(DATABASE, str_buy_house, false);
		}
		else 
		{
			HouseInfo[i][hTakings] -= GetHouseOplata(i);
			SetHouseInfo(i, HouseInfo[i][hTakings] , "hTakings"); 
		}
		robhouse[i] = false;
	}
	return true;
}
stock GetShop()
{
	for(new i = 1; i <= TOTALSHOPS; i++)
	{
		if(WorkshopInfo[i][wAuction][0] > 0 && strcmp(WorkshopInfo[i][wOwner],"None",true) == 0 && WorkshopInfo[i][wAuction][2] > 0) WorkshopInfo[i][wAuction][2]--;
		if(WorkshopInfo[i][wAuction][2] == 0 && WorkshopInfo[i][wAuction][0] > 0)
		{
			new szQuery	[70+26];
			mysql_format(DATABASE,szQuery, sizeof szQuery,"SELECT `Name` FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%s'",WorkshopInfo[i][wAuctionName]);
			mysql_tquery(DATABASE,szQuery,"OnMySQL_QUERY","iis",24,i,"");
		}
		if(strcmp("None",WorkshopInfo[i][wOwner],true) == 0) continue;
		new null = WorkshopInfo[i][wAuction][4];
		if(WorkshopInfo[i][wLandTax] < 500 || (null < Now() && null != 0))
		{
			if(GetPlayerID(WorkshopInfo[i][wOwner]) != INVALID_PLAYER_ID)
			{
				if(null < Now()) SetPVarInt(GetPlayerID(WorkshopInfo[i][wOwner]), "GetShop", 1);
				pData[GetPlayerID(WorkshopInfo[i][wOwner])][pBank] += WorkshopInfo[i][wBank]+WorkshopInfo[i][wLandTax];
			}
			else
			{
				new szQuery	[63+11+26];
				mysql_format(DATABASE,szQuery, sizeof szQuery, "UPDATE "TABLE_ACCOUNTS"  SET pBank = pBank+%i WHERE Name = '%e'",WorkshopInfo[i][wBank]+WorkshopInfo[i][wLandTax],WorkshopInfo[i][wOwner]);
				mysql_query(DATABASE, szQuery);
			}
			strmid(WorkshopInfo[i][wOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[i][wDeputy1],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[i][wDeputy2],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[i][wDeputy3],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[i][wMechanic1],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[i][wMechanic2],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[i][wMechanic3],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[i][wMechanic4],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(WorkshopInfo[i][wMechanic5],"None",0,strlen("None"),MAX_PLAYER_NAME);
			WorkshopInfo[i][wAuction][0] = 0;
			WorkshopInfo[i][wAuction][1] = 0;
			WorkshopInfo[i][wAuction][2] = 0;
			WorkshopInfo[i][wAuction][3] = 0;
			WorkshopInfo[i][wAuction][4] = 0;
			WorkshopInfo[i][wLandTax] = 0;
			WorkshopInfo[i][wBank] = 0;
			WorkshopInfo[i][wProds] = 0;
			WorkshopInfo[i][wPriceProds] = 50;
			WorkshopInfo[i][wZp] = 5;
		}
		else
		{
			WorkshopInfo[i][wLandTax] -= 500;
			if(WorkshopInfo[i][wProds] < 20000 && WorkshopInfo[i][wBank] > 2*(20000-WorkshopInfo[i][wProds])) WorkshopInfo[i][wProds] = 20000, WorkshopInfo[i][wBank]-=2*(20000-WorkshopInfo[i][wProds]);
		}
	}
	return true;
}
CMD:taxipanel(playerid)
{
	if(getTaxiId(playerid) == 255) return SCM(playerid,COLOR_GREY,"Вы не владеете таксопарком");
	ShowPlayerDialog(playerid, 22320, DIALOG_STYLE_LIST, "Управление таксопарком", "1. Установить цену за машину\n2. Просмотр статистики", "Выбрать", "Отмена");
	return true;
}
stock getTaxiId(playerid)
{
	for(new i = 0; i < gTotalTaxiStation; i++)
	{
		if(!strcmp(g_tInfo[i][e_szOwner], Name(playerid))) return i;
	}
	return 255;
}

stock getTaxiStation()
{
	// resfresh day stat
	if(ServHour == 0)
	{
		// something
		mysql_query(DATABASE, "UPDATE `"TABLE_TAXI"` SET `dailyprofit`=0, `dailyrents`=0");
	}
	for(new i = 0; i < gTotalTaxiStation; i++)
	{
		if(!strcmp(g_tInfo[i][e_szOwner], "x"))
		{

			new szQuery[176+24+11+6];
			mysql_format(DATABASE, szQuery, sizeof szQuery, "SELECT `currentuserrate`, `currentmoneyrate`, `lasttimerate` FROM `"TABLE_TAXI"` WHERE `id`=%d LIMIT 1", g_tInfo[i][e_dbId]);
			mysql_query(DATABASE, szQuery);
			szQuery = "";

			new _szLastUser[MAX_PLAYER_NAME];
			new 
				_lasttimerate = 0;
			cache_get_value_name(0, "currentuserrate", _szLastUser, 24);
//			_currentmoneyrate = cache_get_field_content_int(0, "currentmoneyrate");
//			_lastmoneyrate = cache_get_field_content_int(0, "lastmoneyrate");
			cache_get_value_name_int(0, "lasttimerate",_lasttimerate);
			

			if(_lasttimerate > 0)
			{
				_lasttimerate--;
				if(_lasttimerate <= 0) // владельца назначить
				{
					mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `"TABLE_TAXI"` SET `owner`='%s', `currentuserrate`='y', `totalprofit`=0, `totalrents`=0, `currentmoneyrate`=0, `lastmoneyrate`=0, `lasttimerate`=0 WHERE `id`=%d LIMIT 1", _szLastUser, g_tInfo[i][e_dbId]);
					mysql_query(DATABASE, szQuery);	
					strmid(g_tInfo[i][e_szOwner], _szLastUser, 0, strlen(_szLastUser));
					continue;
				}
				mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `"TABLE_TAXI"` SET `lasttimerate`=%d WHERE `id`=%d LIMIT 1", _lasttimerate, g_tInfo[i][e_dbId]);
				mysql_query(DATABASE, szQuery);	
			}

		}
		else 
		{

		}

	}
}


stock GetFarm()
{
	for(new i = 1; i <= TOTALFARM; i++)
	{
		if(FarmInfo[i][fAuction][0] > 0 && strcmp(FarmInfo[i][fOwner],"None",true) == 0 && FarmInfo[i][fAuction][2] > 0) FarmInfo[i][fAuction][2]--;
		new szQuery[63+24+11+1];
		if(FarmInfo[i][fAuction][2] == 0 && FarmInfo[i][fAuction][0] > 0)
		{
			mysql_format(DATABASE, szQuery, sizeof szQuery,"SELECT `Name` FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%s'",FarmInfo[i][fAuctionName]);
			mysql_tquery(DATABASE, szQuery,"OnMySQL_QUERY","iis",29,i,"");
		}
		if(strcmp("None",FarmInfo[i][fOwner],true) == 0) continue;
		new null = FarmInfo[i][fAuction][4];
		if(FarmInfo[i][fLandTax] < 500 || (null < Now() && null != 0))
		{
			if(GetPlayerID(FarmInfo[i][fOwner]) != INVALID_PLAYER_ID)
			{
				SetPVarInt(GetPlayerID(FarmInfo[i][fOwner]), "GetFarm", 1);
				pData[GetPlayerID(FarmInfo[i][fOwner])][pBank] += FarmInfo[i][fBank]+FarmInfo[i][fLandTax];
			}
			else
			{
				mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE "TABLE_ACCOUNTS"  SET pBank = pBank+%i WHERE Name = '%e'",FarmInfo[i][fBank]+FarmInfo[i][fLandTax],FarmInfo[i][fOwner]);
				mysql_query(DATABASE, szQuery);
			}
			strmid(FarmInfo[i][fOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(FarmInfo[i][fDeputy_1],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(FarmInfo[i][fDeputy_2],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(FarmInfo[i][fDeputy_3],"None",0,strlen("None"),MAX_PLAYER_NAME);
			FarmInfo[i][fAuction][0] = 0;
			FarmInfo[i][fAuction][1] = 0;
			FarmInfo[i][fAuction][2] = 0;
			FarmInfo[i][fAuction][3] = 0;
			FarmInfo[i][fAuction][4] = 0;
			FarmInfo[i][fLandTax] = 0;
			FarmInfo[i][fBank] = 0;
			FarmInfo[i][fProds] = 0;
			FarmInfo[i][fZp] = 30;
			FarmInfo[i][fGrain_Price] = 5;
			FarmInfo[i][fGrain] = 0;
			FarmInfo[i][fGrain_Sown] = 0;
			FarmInfo[i][fProds_Selling] = 1;
			FarmInfo[i][fProds_Price] = 21;
		}
		else FarmInfo[i][fLandTax] -= 500;
	}
	return true;
}
stock ShowDetals(playerid,targetid,idx)
{
	new dstirng[90],str[1500],count = 3;
	new till = WorkshopInfo[idx][wPriceProds];
	SetPVarInt(playerid,"installation_",targetid);
	strcat(str,"1. Ремонт двигателя\n");
	format(dstirng, sizeof(dstirng),"2. Перекраска\t\t\"%i вирт\"\n",till*500);
	strcat(str,dstirng);
	for(new i;i<MAX_VEHICLE_COMPONENT;i++)
	{
		if(!IsVehicleUpgradeCompatible(GetVehicleModel(house_car[targetid]),AllTuningComponentsInfo[i][idcomp])) continue;
		format(dstirng, sizeof(dstirng), "%i. %s\t\t\"%s\"\t\t\"%i вирт\"\n",count,AllTuningComponentsInfo[i][Type], AllTuningComponentsInfo[i][Name], till*AllTuningComponentsInfo[i][Cost]);
		strcat(str,dstirng);
		AwtomasMassiveID[playerid][count-3] = i;
		count++;
	}
	ShowPlayerDialog(playerid,6500,2,"Доступные детали",str,"Далее","Закрыть");
	return true;
}
stock GetFarmjob(playerid, idx)
{
	if(strcmp(pData[playerid][pName],FarmInfo[idx][fDeputy_1],false) == 0 || strcmp(pData[playerid][pName],FarmInfo[idx][fDeputy_2],false) == 0 || strcmp(pData[playerid][pName],FarmInfo[idx][fDeputy_3],false) == 0) return 2;
	if(strcmp(pData[playerid][pName],FarmInfo[idx][fFarmer_1],false) == 0 || strcmp(pData[playerid][pName],FarmInfo[idx][fFarmer_2],false) == 0 || strcmp(pData[playerid][pName],FarmInfo[idx][fFarmer_3],false) == 0
			|| strcmp(pData[playerid][pName],FarmInfo[idx][fFarmer_4],false) == 0 || strcmp(pData[playerid][pName],FarmInfo[idx][fFarmer_5],false) == 0) return true;
	return false;
}
stock GetWorkshop(playerid, idx)
{
	if(strcmp(pData[playerid][pName],WorkshopInfo[idx][wDeputy1],false) == 0 || strcmp(pData[playerid][pName],WorkshopInfo[idx][wDeputy2],false) == 0 || strcmp(pData[playerid][pName],WorkshopInfo[idx][wDeputy3],false) == 0) return 2;
	if(strcmp(pData[playerid][pName],WorkshopInfo[idx][wMechanic1],false) == 0 || strcmp(pData[playerid][pName],WorkshopInfo[idx][wMechanic2],false) == 0 || strcmp(pData[playerid][pName],WorkshopInfo[idx][wMechanic3],false) == 0
			|| strcmp(pData[playerid][pName],WorkshopInfo[idx][wMechanic4],false) == 0 || strcmp(pData[playerid][pName],WorkshopInfo[idx][wMechanic5],false) == 0) return true;
	return false;
}
stock GetWorkshopW(playerid, idx)
{
	if(strcmp(pData[playerid][pName],WorkshopInfo[idx][wOwner],false) == 0) return true;
	return false;
}
stock LoadTuning(c,carid,index)
{
	if(CarInfo[c][carVehcom_1][index]!=0) AddVehicleComponent(carid, CarInfo[c][carVehcom_1][index]);
	if(CarInfo[c][carVehcom_2][index]!=0) AddVehicleComponent(carid, CarInfo[c][carVehcom_2][index]);
	if(CarInfo[c][carVehcom_3][index]!=0) AddVehicleComponent(carid, CarInfo[c][carVehcom_3][index]);
	if(CarInfo[c][carVehcom_4][index]!=0) AddVehicleComponent(carid, CarInfo[c][carVehcom_4][index]);
	if(CarInfo[c][carVehcom_5][index]!=0) AddVehicleComponent(carid, CarInfo[c][carVehcom_5][index]);
	if(CarInfo[c][carVehcom_6][index]!=0) AddVehicleComponent(carid, CarInfo[c][carVehcom_6][index]);
	if(CarInfo[c][carVehcom_7][index]!=0) AddVehicleComponent(carid, CarInfo[c][carVehcom_7][index]);
	if(CarInfo[c][carVehcom_8][index]!=0) AddVehicleComponent(carid, CarInfo[c][carVehcom_8][index]);
	if(CarInfo[c][carVehcom_9][index]!=0) AddVehicleComponent(carid, CarInfo[c][carVehcom_9][index]);
	if(CarInfo[c][carVehcom_10][index]!=0) AddVehicleComponent(carid, CarInfo[c][carVehcom_10][index]);
	if(CarInfo[c][carVehcom_11][index]!=0) AddVehicleComponent(carid, CarInfo[c][carVehcom_11][index]);
	if(CarInfo[c][carVehcom_12][index]!=0) AddVehicleComponent(carid, CarInfo[c][carVehcom_12][index]);
	if(CarInfo[c][carVehcom_13][index]!=0) AddVehicleComponent(carid, CarInfo[c][carVehcom_13][index]);
	if(CarInfo[c][carVehcom_14][index]!=0) AddVehicleComponent(carid, CarInfo[c][carVehcom_14][index]);
}
stock SaveTuning(playerid,i)
{
	CarInfo[playerid][carVehcom_1][GetPVarInt(playerid,"chosencar")]=GetVehicleComponentInSlot(i, CARMODTYPE_SPOILER);
	CarInfo[playerid][carVehcom_2][GetPVarInt(playerid,"chosencar")]=GetVehicleComponentInSlot(i, CARMODTYPE_HOOD);
	CarInfo[playerid][carVehcom_3][GetPVarInt(playerid,"chosencar")]=GetVehicleComponentInSlot(i, CARMODTYPE_ROOF);
	CarInfo[playerid][carVehcom_4][GetPVarInt(playerid,"chosencar")]=GetVehicleComponentInSlot(i, CARMODTYPE_SIDESKIRT);
	CarInfo[playerid][carVehcom_5][GetPVarInt(playerid,"chosencar")]=GetVehicleComponentInSlot(i, CARMODTYPE_LAMPS);
	CarInfo[playerid][carVehcom_6][GetPVarInt(playerid,"chosencar")]=GetVehicleComponentInSlot(i, CARMODTYPE_NITRO);
	CarInfo[playerid][carVehcom_7][GetPVarInt(playerid,"chosencar")]=GetVehicleComponentInSlot(i, CARMODTYPE_EXHAUST);
	CarInfo[playerid][carVehcom_8][GetPVarInt(playerid,"chosencar")]=GetVehicleComponentInSlot(i, CARMODTYPE_WHEELS);
	CarInfo[playerid][carVehcom_9][GetPVarInt(playerid,"chosencar")]=GetVehicleComponentInSlot(i, CARMODTYPE_STEREO);
	CarInfo[playerid][carVehcom_10][GetPVarInt(playerid,"chosencar")]=GetVehicleComponentInSlot(i, CARMODTYPE_HYDRAULICS);
	CarInfo[playerid][carVehcom_11][GetPVarInt(playerid,"chosencar")]=GetVehicleComponentInSlot(i, CARMODTYPE_FRONT_BUMPER);
	CarInfo[playerid][carVehcom_12][GetPVarInt(playerid,"chosencar")]=GetVehicleComponentInSlot(i, CARMODTYPE_REAR_BUMPER);
	CarInfo[playerid][carVehcom_13][GetPVarInt(playerid,"chosencar")]=GetVehicleComponentInSlot(i, CARMODTYPE_VENT_RIGHT);
	CarInfo[playerid][carVehcom_14][GetPVarInt(playerid,"chosencar")]=GetVehicleComponentInSlot(i, CARMODTYPE_VENT_LEFT);
	SaveMySQL(10,playerid);
}
stock RemoveTuning(c,carid)
{
	if(CarInfo[c][carVehcom_1][GetPVarInt(c,"chosencar")]!=0) RemoveVehicleComponent(carid, CarInfo[c][carVehcom_1][GetPVarInt(c,"chosencar")]), CarInfo[c][carVehcom_1][GetPVarInt(c,"chosencar")] = 0;
	if(CarInfo[c][carVehcom_2][GetPVarInt(c,"chosencar")]!=0) RemoveVehicleComponent(carid, CarInfo[c][carVehcom_2][GetPVarInt(c,"chosencar")]), CarInfo[c][carVehcom_2][GetPVarInt(c,"chosencar")] = 0;
	if(CarInfo[c][carVehcom_3][GetPVarInt(c,"chosencar")]!=0) RemoveVehicleComponent(carid, CarInfo[c][carVehcom_3][GetPVarInt(c,"chosencar")]), CarInfo[c][carVehcom_3][GetPVarInt(c,"chosencar")] = 0;
	if(CarInfo[c][carVehcom_4][GetPVarInt(c,"chosencar")]!=0) RemoveVehicleComponent(carid, CarInfo[c][carVehcom_4][GetPVarInt(c,"chosencar")]), CarInfo[c][carVehcom_4][GetPVarInt(c,"chosencar")] = 0;
	if(CarInfo[c][carVehcom_5][GetPVarInt(c,"chosencar")]!=0) RemoveVehicleComponent(carid, CarInfo[c][carVehcom_5][GetPVarInt(c,"chosencar")]), CarInfo[c][carVehcom_5][GetPVarInt(c,"chosencar")] = 0;
	if(CarInfo[c][carVehcom_6][GetPVarInt(c,"chosencar")]!=0) RemoveVehicleComponent(carid, CarInfo[c][carVehcom_6][GetPVarInt(c,"chosencar")]), CarInfo[c][carVehcom_6][GetPVarInt(c,"chosencar")] = 0;
	if(CarInfo[c][carVehcom_7][GetPVarInt(c,"chosencar")]!=0) RemoveVehicleComponent(carid, CarInfo[c][carVehcom_7][GetPVarInt(c,"chosencar")]), CarInfo[c][carVehcom_7][GetPVarInt(c,"chosencar")] = 0;
	if(CarInfo[c][carVehcom_8][GetPVarInt(c,"chosencar")]!=0) RemoveVehicleComponent(carid, CarInfo[c][carVehcom_8][GetPVarInt(c,"chosencar")]), CarInfo[c][carVehcom_8][GetPVarInt(c,"chosencar")] = 0;
	if(CarInfo[c][carVehcom_9][GetPVarInt(c,"chosencar")]!=0) RemoveVehicleComponent(carid, CarInfo[c][carVehcom_9][GetPVarInt(c,"chosencar")]), CarInfo[c][carVehcom_9][GetPVarInt(c,"chosencar")] = 0;
	if(CarInfo[c][carVehcom_10][GetPVarInt(c,"chosencar")]!=0) RemoveVehicleComponent(carid, CarInfo[c][carVehcom_10][GetPVarInt(c,"chosencar")]), CarInfo[c][carVehcom_10][GetPVarInt(c,"chosencar")] = 0;
	if(CarInfo[c][carVehcom_11][GetPVarInt(c,"chosencar")]!=0) RemoveVehicleComponent(carid, CarInfo[c][carVehcom_11][GetPVarInt(c,"chosencar")]), CarInfo[c][carVehcom_11][GetPVarInt(c,"chosencar")] = 0;
	if(CarInfo[c][carVehcom_12][GetPVarInt(c,"chosencar")]!=0) RemoveVehicleComponent(carid, CarInfo[c][carVehcom_12][GetPVarInt(c,"chosencar")]), CarInfo[c][carVehcom_12][GetPVarInt(c,"chosencar")] = 0;
	if(CarInfo[c][carVehcom_13][GetPVarInt(c,"chosencar")]!=0) RemoveVehicleComponent(carid, CarInfo[c][carVehcom_13][GetPVarInt(c,"chosencar")]), CarInfo[c][carVehcom_13][GetPVarInt(c,"chosencar")] = 0;
	if(CarInfo[c][carVehcom_14][GetPVarInt(c,"chosencar")]!=0) RemoveVehicleComponent(carid, CarInfo[c][carVehcom_14][GetPVarInt(c,"chosencar")]), CarInfo[c][carVehcom_14][GetPVarInt(c,"chosencar")] = 0;
	SaveMySQL(10,c);
}
stock WorkshopStats(playerid, idx)
{
	new str[768];
	format(YCMDstr,90," Автомастерская: %i\n",idx); strcat(str,YCMDstr);
	format(YCMDstr,90," Владелец: %s\n",WorkshopInfo[idx][wOwner]); strcat(str,YCMDstr);
	format(YCMDstr,90," Баланс банка: %i вирт\n",WorkshopInfo[idx][wBank]); strcat(str,YCMDstr);
	format(YCMDstr,90," Баланс счета 'LandTax': %i вирт\n",WorkshopInfo[idx][wLandTax]); strcat(str,YCMDstr);
	format(YCMDstr,90," Цена продукта: %i вирт\n",WorkshopInfo[idx][wPriceProds]); strcat(str,YCMDstr);
	format(YCMDstr,90," Продукта: %i / 20000\n",WorkshopInfo[idx][wProds]); strcat(str,YCMDstr);
	format(YCMDstr,90," Плата рабочим: %i процентов\n\n",WorkshopInfo[idx][wZp]); strcat(str,YCMDstr);
	format(YCMDstr,90," Заместитель: %s\n",WorkshopInfo[idx][wDeputy1]); strcat(str,YCMDstr);
	format(YCMDstr,90," Заместитель: %s\n",WorkshopInfo[idx][wDeputy2]); strcat(str,YCMDstr);
	format(YCMDstr,90," Заместитель: %s\n\n",WorkshopInfo[idx][wDeputy3]); strcat(str,YCMDstr);
	format(YCMDstr,90," Механик: %s\n",WorkshopInfo[idx][wMechanic1]); strcat(str,YCMDstr);
	format(YCMDstr,90," Механик: %s\n",WorkshopInfo[idx][wMechanic2]); strcat(str,YCMDstr);
	format(YCMDstr,90," Механик: %s\n",WorkshopInfo[idx][wMechanic3]); strcat(str,YCMDstr);
	format(YCMDstr,90," Механик: %s\n",WorkshopInfo[idx][wMechanic4]); strcat(str,YCMDstr);
	format(YCMDstr,90," Механик: %s\n",WorkshopInfo[idx][wMechanic5]); strcat(str,YCMDstr);
	return ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX, "Информ. об Автомастерской",str, "Скрыть", "");
}
stock FarmStats(playerid, idx)
{
	new str[32];
	string = "";
	switch(FarmInfo[idx][fProds_Selling]) { case 1: str = "Картофель"; default: str = "Веселая трава"; }
	format(YCMDstr,90," Владелец: %s\n",FarmInfo[idx][fOwner]); strcat(string,YCMDstr);
	format(YCMDstr,90," Баланс банка: %i\n",FarmInfo[idx][fBank]); strcat(string,YCMDstr);
	format(YCMDstr,90," Баланс счета 'LandTax': %i\n",FarmInfo[idx][fLandTax]); strcat(string,YCMDstr);
	format(YCMDstr,90," Цена за работу: %i\n\n",FarmInfo[idx][fZp]); strcat(string,YCMDstr);
	format(YCMDstr,90," Цена зерна: %i\n",FarmInfo[idx][fGrain_Price]); strcat(string,YCMDstr);
	format(YCMDstr,90," Зерна закуплено: %i / 10000\n",FarmInfo[idx][fGrain]); strcat(string,YCMDstr);
	format(YCMDstr,90," Зерна засеяно: %i / 5000\n",FarmInfo[idx][fGrain_Sown]); strcat(string,YCMDstr);
	format(YCMDstr,90," Продаваемый продукт: %s\n",str); strcat(string,YCMDstr);
	format(YCMDstr,90," Количество  На складе: %i / 10000\n",FarmInfo[idx][fProds]); strcat(string,YCMDstr);
	format(YCMDstr,90," Цена продукта: %i\n\n",FarmInfo[idx][fProds_Price]); strcat(string,YCMDstr);
	format(YCMDstr,90," Заместитель: %s\n",FarmInfo[idx][fDeputy_1]); strcat(string,YCMDstr);
	format(YCMDstr,90," Заместитель: %s\n",FarmInfo[idx][fDeputy_2]); strcat(string,YCMDstr);
	format(YCMDstr,90," Заместитель: %s\n\n",FarmInfo[idx][fDeputy_3]); strcat(string,YCMDstr);
	format(YCMDstr,90," Фермер: %s\n",FarmInfo[idx][fFarmer_1]); strcat(string,YCMDstr);
	format(YCMDstr,90," Фермер: %s\n",FarmInfo[idx][fFarmer_2]); strcat(string,YCMDstr);
	format(YCMDstr,90," Фермер: %s\n",FarmInfo[idx][fFarmer_3]); strcat(string,YCMDstr);
	format(YCMDstr,90," Фермер: %s\n",FarmInfo[idx][fFarmer_4]); strcat(string,YCMDstr);
	format(YCMDstr,90," Фермер: %s\n",FarmInfo[idx][fFarmer_5]); strcat(string,YCMDstr);
	return ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX, "Информация о Ферме",string, "Скрыть", "");
}
stock FarmStatsPay(playerid, idx)
{
	string = "";
	format(YCMDstr,90,"{FFFFFF}Рабочих: {FFEA06}%i\n",FarmStatPayS[idx][0]); strcat(string,YCMDstr);
	format(YCMDstr,90,"{FFFFFF}Фермеров: {FFEA06}%i\n",FarmStatPayS[idx][1]); strcat(string,YCMDstr);
	format(YCMDstr,90,"{FFFFFF}Собрано урожая: {FFEA06}%i\n",FarmStatPayS[idx][2]); strcat(string,YCMDstr);
	format(YCMDstr,90,"{FFFFFF}Доставлено урожая на склад: {FFEA06}%i\n",FarmStatPayS[idx][3]); strcat(string,YCMDstr);
	format(YCMDstr,90,"{FFFFFF}Куплено зерна: {FFEA06}%i\n",FarmStatPayS[idx][4]); strcat(string,YCMDstr);
	format(YCMDstr,90,"{FFFFFF}Продано урожая: {FFEA06}%i\n\n",FarmStatPayS[idx][5]); strcat(string,YCMDstr);
	format(YCMDstr,90,"{FFFFFF}Потрачено на покупку зерна: {D80000}%i\n",FarmStatPayS[idx][6]); strcat(string,YCMDstr);
	format(YCMDstr,90,"{FFFFFF}Зарплата рабочим и фермерам: {D80000}%i\n",FarmStatPayS[idx][7]); strcat(string,YCMDstr);
	format(YCMDstr,90,"{FFFFFF}Заработано на продаже урожая: {55C713}%i\n\n",FarmStatPayS[idx][8]); strcat(string,YCMDstr);
	format(YCMDstr,90,"{FFFFFF}Всего заработано: {55C713}%i\n",FarmStatPayS[idx][8]-(FarmStatPayS[idx][7]+FarmStatPayS[idx][6])); strcat(string,YCMDstr);
	return ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX, "Статистика за прошлый час",string, "Закрыть", "");
}
stock FarmStatsDay(playerid, idx)
{
	string = "";
	format(YCMDstr,90,"{FFFFFF}Рабочих: {FFEA06}%i\n",FarmStatDay[idx][0]); strcat(string,YCMDstr);
	format(YCMDstr,90,"{FFFFFF}Фермеров: {FFEA06}%i\n",FarmStatDay[idx][1]); strcat(string,YCMDstr);
	format(YCMDstr,90,"{FFFFFF}Собрано урожая: {FFEA06}%i\n",FarmStatDay[idx][2]); strcat(string,YCMDstr);
	format(YCMDstr,90,"{FFFFFF}Доставлено урожая на склад: {FFEA06}%i\n",FarmStatDay[idx][3]); strcat(string,YCMDstr);
	format(YCMDstr,90,"{FFFFFF}Куплено зерна: {FFEA06}%i\n",FarmStatDay[idx][4]); strcat(string,YCMDstr);
	format(YCMDstr,90,"{FFFFFF}Продано урожая: {FFEA06}%i\n\n",FarmStatDay[idx][5]); strcat(string,YCMDstr);
	format(YCMDstr,90,"{FFFFFF}Потрачено на покупку зерна: {D80000}%i\n",FarmStatDay[idx][6]); strcat(string,YCMDstr);
	format(YCMDstr,90,"{FFFFFF}Зарплата рабочим и фермерам: {D80000}%i\n",FarmStatDay[idx][7]); strcat(string,YCMDstr);
	format(YCMDstr,90,"{FFFFFF}Заработано на продаже урожая: {55C713}%i\n\n",FarmStatDay[idx][8]); strcat(string,YCMDstr);
	format(YCMDstr,90,"{FFFFFF}Всего заработано: {55C713}%i\n",FarmStatDay[idx][8]-(FarmStatDay[idx][7]+FarmStatDay[idx][6])); strcat(string,YCMDstr);
	return ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX, "Статистика за весь день",string, "Закрыть", "");
}
stock ShowHelpDialog(playerid, dialog)
{
	string = "";
	if(dialog+2 != 19) SetPVarInt(playerid, "help_dialog", dialog + 2);
	else SetPVarInt(playerid, "help_dialog", 2);
	switch(dialog)
	{
	case 0:
		{
			ShowPlayerDialog(playerid,1467,2,"Помощь","[1] Общение\n[2] Список игроков\n[3] Транспорт\n[4] Транспорт часть 2\n[5] Общее\n[6] Оружие и Убийство\n[7] Role Play\n[8] Первые шаги\n[9] Первые шаги часть 2\n[10] Первые шаги часть 3\n[11] Часовая зарплата\n[12] Зарплата фракции\n[13] Бизнес\n[14] Местность\n[15] Законопослушность\n[16] Дома\n[17] Дом часть 2","Далее","Выход");
			return SetPVarInt(playerid,"help_dialog", 1);
		}
	case 1:
		{
			strcat(string,"<< Общение >>\n\n");
			strcat(string,"Вы можете обращаться с другими игроками через чат в левом верхнем углу.\n");
			strcat(string,"Чтобы напечатать сообщение нажмите клавишу \"F6\" или \"T\"(на латинеце).\n");
			strcat(string,"Так же с помощью чата используются все команды сервера, к примеру \"/mm\".\n\n\n");
			strcat(string,"Используйте \"/mm\" для просмотра команд...\n");
			strcat(string,"Более подробное описание вы найдете на нашем сайте Noxe-rp.ru");
			return ShowPlayerDialog(playerid, 1467, 0,"Общение",string,"Далее","Меню");
		}
	case 2:
		{
			strcat(string,"<< Список игроков >>\n\n");
			strcat(string,"Данный список можно посмотреть нажав клавишу \"TAB\".\n");
			strcat(string,"Там вы увидете:\n\n");
			strcat(string,"\"ID\" игрока(используется в командах)\n");
			strcat(string,"\"Ник(РП имя игрока)\"\n");
			strcat(string,"\"Уровень(lvl)\" в графе score(Повышается автоматически каждый отыгранный час)\n");
			strcat(string,"\"Пинг\" это не слишком важно, поэтому я не буду нагружать вас лишней информацией.\n\n");
			strcat(string,"Для просмотра списка полностью, используйте прокрутку с право.\n");
			strcat(string,"Вы в этой табличке всегда отображаетесь первым, независимо от ID.");
			return ShowPlayerDialog(playerid, 1467, 0,"Список игроков",string,"Далее","Меню");
		}
	case 3:
		{
			strcat(string,"<< Транспорт >>\n\n");
			strcat(string,"Я надеюсь вы умеете ездить, но даже если нет, наши Авто Инструкторы вас научат.\n");
			strcat(string,"В Автошколу вам придется идти в любом случае, поскольку езда разрешена только\n");
			strcat(string,"с правами. Ну а пока вы можете воспользоваться мотороллером,\n");
			strcat(string,"Или же общественным транспортом\n\n");
			strcat(string,"Для того чтобы сесть на пассажирское место используйте клавишу \"G\"");
			return ShowPlayerDialog(playerid, 1467, 0,"Транспорт",string,"Далее","Меню");
		}
	case 4:
		{
			strcat(string,"<< Общее >>\n\n");
			strcat(string,"Играя на сервере ваш лвл повышается автоматически.\n");
			strcat(string,"После получения определенного левла открываются новые возможности\n\n");
			strcat(string,"Но уровень персонажа не главное! На нашем сервере можно зарабатывать\n");
			strcat(string,"деньги, после покупать дома, машины и т.д Можно вступить в банду и воевать за\n");
			strcat(string,"территории, тем самым расширяя бизнес. Или стать членом мафии.\n\n");
			strcat(string,"Можно работать полицейским защищая гражданских. И это только малая часть доступного!");
			return ShowPlayerDialog(playerid, 1467, 0,"Общее",string,"Далее","Меню");
		}
	case 5:
		{
			strcat(string,"<< Транспорт >>\n\n");
			strcat(string,"Для управления автомобилем необходимы водительские права, а для пилотирования самолета\n");
			strcat(string,"лицензия пилота. Транспорту нужен бензин, которым можно заправиться на любой заправке.\n");
			strcat(string,"При нарушении Правил дорожного движения(превышение скорости...), вас могут оштрафовать.\n\n");
			strcat(string,"<< Работа >>\n\n");
			strcat(string,"Многие профессии доступны каждому гражданскому. Устроиться на работу можно в Мэрии.\n");
			strcat(string,"К примеру Водитель автобуса, Таксист, Механик.");
			return ShowPlayerDialog(playerid, 1467, 0,"Транспорт часть 2",string,"Далее","Меню");
		}
	case 6:
		{
			strcat(string,"<< Оружие и Убийство >>\n\n");
			strcat(string,"Для ношения оружия необходима лицензия, без нее вас не впустят в магазин.\n");
			strcat(string,"Но оружие можно достать и другими способами.\n\n");
			strcat(string,"За убийcтво человека вы будете объявлены в розыск, как опасный преступник,\n");
			strcat(string,"а при аресте вы лишитесь крупной суммы денег и сядете в тюрьму!\n");
			strcat(string,"Изначально ваши навыки владения оружием будут малы, но со временем вы сможете\n");
			strcat(string,"стать элитным стрелком, и относиться к вам будут с уважением!");
			return ShowPlayerDialog(playerid, 1467, 0,"Оружие и Убийство",string,"Далее","Меню");
		}
	case 7:
		{
			strcat(string,"Role Play - Ролевая игра, игра по ролям.\n");
			strcat(string,"Я объясню более понятно. Вам предоставлены уже готовые роли, к примеру\n");
			strcat(string,"Бандит, Полицейский.\n");
			strcat(string,"Состоя в банде вы продаете наркотики, оружие. Грабите военные склады и т.п.\n");
			strcat(string,"Состоя в Полиции вы следите за порядком, и пытаетесь посадить тех же бандитов.\n");
			strcat(string,"Если вам не нравиться выше написанное, то можете стать к примеру репортером, и\n");
			strcat(string,"вести собственную передачу по радио.");
			return ShowPlayerDialog(playerid, 1467, 0,"Role Play",string,"Далее","Меню");
		}
	case 8:
		{
			strcat(string,"<< Первые шаги (Первые деньги) >>\n\n");
			strcat(string,"Вам потребуются деньги, заработать немного денег вы можете на заводе, работая грузчиком.\n");
			strcat(string,"Добраться на завод вы можете на автобусе \'Внутригородской LS\' или на такси,\n");
			strcat(string,"таксист отвезет вас бесплатно, просто сядьте в свободное такси.\n");
			return ShowPlayerDialog(playerid, 1467, 0,"Первые шаги",string,"Далее","Меню");
		}
	case 9:
		{
			strcat(string,"<< Первые шаги (Водительские права) >>\n\n");
			strcat(string,"Как только вы заработаете немного денег, отправляйтесь в автошколу.\n");
			strcat(string,"Автошкола находиться в Сан Фиерро (2ой город).\n");
			strcat(string,"Стоимость сдачи экзамена состовляет 500 вирт.\n");
			strcat(string,"Добраться вы можете на автобусе \'Лос Сантос - Сан Фиерро\'.");
			return ShowPlayerDialog(playerid, 1467, 0,"Первые шаги часть 2",string,"Далее","Меню");
		}
	case 10:
		{
			strcat(string,"<< Первые шаги (Постоянная работа) >>\n\n");
			strcat(string,"После того как вы заработаете денег и получите права,\n");
			strcat(string,"вы сможете устроиться на официальную работу.\n");
			strcat(string,"Устроиться на работу, и ознакомиться со списком профессий, вы можете в мэрии.\n");
			strcat(string,"Добирайтесь на \'Внутригородском LS\'");
			return ShowPlayerDialog(playerid, 1467, 0,"Первые шаги часть 3",string,"Далее","Меню");
		}
	case 11:
		{
			strcat(string,"<< Часовая зарплата >>\n\n");
			strcat(string,"Каждый час в 00 игроки получают банковский чек, в котором указаны все доходы и\n");
			strcat(string,"расходы.\n");
			strcat(string,"Доходы: Зарплата с работы.\n");
			strcat(string,"Расходы: Налог государству (после 5 лвл), Счет за телефон (если вы звонили),\n");
			strcat(string,"Кварплата (если вы владелец дома).");
			return ShowPlayerDialog(playerid, 1467, 0,"Часовая зарплата",string,"Далее","Меню");
		}
	case 12:
		{
			strcat(string,"<< Зарплата фракции >>\n\n");
			strcat(string,"В некоторых фракциях вы получаете Зарплату каждый час от государства.\n");
			strcat(string,"В других эта зарплата выдается лидером. Все организации на сервере имеют\n");
			strcat(string,"свой заработок. Где то нелегальный бизнес, где то постоянная зарплата.\n\n");
			strcat(string,"Банды: Бизнес(Нелегальный), Оружие и Наркотики, Ограбление.\n");
			strcat(string,"Репортеры: Бизнес(Легальный), Реклама.\n");
			strcat(string,"Мэрия: От адвоката до Управления казной.");
			return ShowPlayerDialog(playerid, 1467, 0,"Зарплата фракции",string,"Далее","Меню");
		}
	case 13:
		{
			strcat(string,"<< Бизнес >>\n\n");
			strcat(string,"Все клубы, бары, забегаловки являются бизнесами, которые можно арендовать.\n");
			strcat(string,"По мимо этого еще есть Бензоправки и Магазины.\n");
			strcat(string,"Чтобы заработать на бизнесе нужен начальный капитал. Для лицензии,\n");
			strcat(string,"Аренды помещения, Продуктов.");
			return ShowPlayerDialog(playerid, 1467, 0,"Бизнес",string,"Далее","Меню");
		}
	case 14:
		{
			strcat(string,"<< Местность >>\n\n");
			strcat(string,"Лос Сантос(1 город) самый опасный город, так как здесь большое количество\n");
			strcat(string,"бандитов. Районы банд выделены на карте особыми цветами, но только там\n");
			strcat(string,"можно купить оружие по дешевле и ни кто не спросит у вас лицензии\n\n");
			strcat(string,"Сан Фиерро(2 город). Если не хотите каждый день сталкиваться с беззаконием,\n");
			strcat(string,"то поселитесь в этом городе.\n\n");
			strcat(string,"Лас Вентурас(3 город). Город азарта, город богачей. Конечно здесь не такие раскошные\n");
			strcat(string,"особняки как на VINEWOOD, но улицы самые красивые.");
			return ShowPlayerDialog(playerid, 1467, 0,"Местность",string,"Далее","Меню");
		}
	case 15:
		{
			strcat(string,"<< Законопослушность >>\n\n");
			strcat(string,"У каждого игрока есть индикатор, который показывает как вы относитесь к закону.\n");
			strcat(string,"-100 и +100 Минимум и максимум. Узнать можно заглянув в ваш пасспорт \"/showpass [ид]\"\n");
			strcat(string,"С плохим отношением к закону вас могут не принять во многии Фракции, но в банду\n");
			strcat(string,"попасть легче.\n\n");
			strcat(string,"Законопослушность повышается каждый час на 1, однако может резко упасть если\n");
			strcat(string,"совершите преступление");
			return ShowPlayerDialog(playerid, 1467, 0,"Законопослушность",string,"Далее","Меню");
		}
	case 16:
		{
			strcat(string,"<< Дома >>\n\n");
			strcat(string,"Вы можете в любой момент купить себе дом, тогда при смерти или входе в игру\n");
			strcat(string,"вы будете появляться там. По мимо этого у вас появиться место для парковки машины,\n");
			strcat(string,"а значит вы можете купить себе красивое авто.\n");
			strcat(string,"Дома поделенны по классам - [Nope] [D] [C] [B] [A] [S]. Класс говорит о цене и красоте\n");
			strcat(string,"дома как внутри, так и снаружи.");
			return ShowPlayerDialog(playerid, 1467, 0,"Дома",string,"Далее","Меню");
		}
	case 17:
		{
			strcat(string,"После покупки дома с вашего банковского счета будут сниматься Кварплата, она зависит от класса дома.\n");
			strcat(string,"Важное примечание! Деньги снимаются каждый час даже когда вы оффлайн.\n\n");
			strcat(string,"<< Личный транспорт >>\n\n");
			strcat(string,"У нас есть несколько Автосалонов, где вы можете приобрести себе машину. Все они\n");
			strcat(string,"указаны в \"/GPS\". Транспорт как и дома разделены по классам.\n");
			strcat(string,"Чтобы выбрать себе машину, воспользуйтесь командой \"/Buycar\". Далее вы\n");
			strcat(string,"увидете подсказку по клавишам с правой стороны, а снизу цену и цвет.");
			return ShowPlayerDialog(playerid, 1467, 0,"Дома часть 2",string,"Далее","Меню");
		}
	}
	return true;
}
publics: Farmduty(playerid)
{
	DisablePlayerRaceCheckpoint(playerid);
	SetVehicleParamsEx(GetPlayerVehicleID(playerid),false,false,false,false,false,false,false);
	new Float:X12, Float:Y12, Float:Z12;
	new carid = GetPlayerVehicleID(playerid);
	SetVehicleVelocity(carid, 0.0, 0.0, 0.0);
	AntiCheatGetVehiclePos(carid, X12, Y12, Z12);
	GetXYInBackOfPlayer(playerid, X12, Y12,3.0);
	Farmcar_pickup[GetPlayerVehicleID(playerid)] = CreateDynamicPickup(19197,23,X12,Y12,Z12+0.3);
	new LBLstring[64];
	format(LBLstring, 64, "Загружено\n{ffffff}%d / 1000",Farmcar_prods[GetPlayerVehicleID(playerid)]);
	Farmcar_text[GetPlayerVehicleID(playerid)] = Create3DTextLabel(LBLstring, 0x5CABBDAA, X12, Y12, Z12+1.0, 40.0, 0, 0);
	Farmcar_works[GetPlayerVehicleID(playerid)] = true;
	SCM(playerid, 0x0073B7AA, " Машина на месте. Теперь вы и и ваши рабочие могут загружать ее");
	SCM(playerid, 0x0073B7AA, " Если решите завершить сбор урожая, сядьте снова в машину");
	RemovePlayerFromVehicle(playerid);
	TogglePlayerControllable(playerid, 1);
	return true;
}
publics: FarmDuty(playerid)
{
	DeletePVar(playerid,"farm_status");
	if(Farmtimer[playerid] != -1)
	{
		KillTimer(Farmtimer[playerid]);
		Farmtimer[playerid] = -1;
	}
	if(FarmInfo[GetPVarInt(playerid,"farm_id")][fGrain_Sown] <= 0) return SCM(playerid,COLOR_RED," На поле недостаточно урожая"), ClearAnim(playerid);
	if(FarmInfo[GetPVarInt(playerid,"farm_id")][fBank] < FarmInfo[GetPVarInt(playerid,"farm_id")][fZp]) return SCM(playerid,COLOR_RED," На балансе фермы недостаточно средств");
	if(IsPlayerInCheckpoint(playerid))
	{
		SetPVarInt(playerid,"farm_status",2);
		SetPlayerAttachedObject(playerid, 3, 856, 6, 0.086999, 0.036999, 0.000000, 0.000000, 0.000000, 0.000000, 0.010999, 0.009000, 0.085999);
		TogglePlayerControllable(playerid, 1);
		ClearAnim(playerid);
		DisablePlayerCheckpoint(playerid);
	}
	else
	{
		SetPVarInt(playerid,"farm_status",1);
		RemovePlayerAttachedObject(playerid,3);
		return SCM(playerid,COLOR_RED," Вернитесь на красную метку");
	}
	return true;
}

public OnPlayerSelectObject(playerid, type, objectid, modelid, Float:fX, Float:fY, Float:fZ)
{
	if(!dostup[playerid]) return CheatKick(playerid,1129);
	new null;
	for(new i; i < 100; i++) if(objectid == SlotObject[i]) null++;
	if(!null) return true;
	EditObject(playerid,objectid);
	return true;
}
public OnPlayerEditDynamicObject( playerid, objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz )
{
	if(!dostup[playerid]) return CheatKick(playerid,1130);
	new null;
	for(new i; i < 100; i++) if(objectid == SlotObject[i]) null++;
	if(!null) return true;
	if(response) SetDynamicObjectPos(objectid,x, y, z), SetDynamicObjectRot(objectid,rx,ry,rz);
	if(response == 1) SendMes(playerid,COLOR_WHITE," Позиция объекта изменена. [X: %.2f] [Y: %.2f] [Z: %.2f] [RX: %.2f] [RY: %.2f] [RZ: %.2f]",x,y,z,rx,ry,rz);
	return true;
}
public OnPlayerSelectDynamicObject(playerid, objectid, modelid, Float:x, Float:y, Float:z)
{
	if(!dostup[playerid]) return CheatKick(playerid,1131);
	new null;
	for(new i; i < 100; i++) if(objectid == SlotObject[i]) null++;
	if(!null) return true;
	EditDynamicObject(playerid,objectid);
	return true;
}
public OnPlayerEditObject( playerid, playerobject, objectid, response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ )
{
	if(!dostup[playerid]) return CheatKick(playerid,1992);
	new null;
	for(new i; i < 100; i++) if(objectid == SlotObject[i]) null++;
	if(!null) return true;
	if(response) SetObjectPos(objectid,fX,fY,fZ), SetObjectRot(objectid,fRotX,fRotY,fRotZ);
	if(response == 1) SendMes(playerid,COLOR_WHITE," Позиция объекта изменена. [X: %.2f] [Y: %.2f] [Z: %.2f] [RX: %.2f] [RY: %.2f] [RZ: %.2f]",fX,fY,fZ,fRotX,fRotY,fRotZ);
	return true;
}
stock GetRank(targetid)
{
	new rangz[40];
	switch(pData[targetid][pMember])
	{
	case 0: rangz = "Нет";
	case 1,10,21:
		{
			switch(pData[targetid][pRank])
			{
			case 14: { rangz = "Шериф"; }
			case 13: { rangz = "Полковник"; }
			case 12: { rangz = "Подполковник";}
			case 11: { rangz = "Майор"; }
			case 10: { rangz = "Капитан"; }
			case 9: { rangz = "Ст.Лейтенант"; }
			case 8: { rangz = "Лейтенант"; }
			case 7: { rangz = "Мл.Лейтенант"; }
			case 6: { rangz = "Ст.Прапорщик"; }
			case 5: { rangz = "Прапорщик"; }
			case 4: { rangz = "Сержант"; }
			case 3: { rangz = "Мл.Сержант"; }
			case 2: { rangz = "Офицер"; }
			case 1: { rangz = "Кадет"; }
			}
		}
	case 2:
		{
			switch(pData[targetid][pRank])
			{
			case 10: { rangz = "Директор FBI"; }
			case 9: { rangz = "Зам.Директора FBI"; }
			case 8: { rangz = "Инспектор FBI"; }
			case 7: { rangz = "Глава CID"; }
			case 6: { rangz = "Глава GNK"; }
			case 5: { rangz = "Агент CID"; }
			case 4: { rangz = "Агент GNK"; }
			case 3: { rangz = "Мл.Агент"; }
			case 2: { rangz = "Дежурный"; }
			case 1: { rangz = "Стажёр"; }
			}
		}
	case 3,19:
		{
			switch(pData[targetid][pRank])
			{
			case 15: { rangz = "Генерал"; }
			case 14: { rangz = "Полковник"; }
			case 13: { rangz = "Подполковник"; }
			case 12: { rangz = "Майор";}
			case 11: { rangz = "Капитан"; }
			case 10: { rangz = "Ст.Лейтенант"; }
			case 9: { rangz = "Лейтенант"; }
			case 8: { rangz = "Мл.Лейтенант"; }
			case 7: { rangz = "Прапорщик"; }
			case 6: { rangz = "Старшина"; }
			case 5: { rangz = "Ст.Сержант"; }
			case 4: { rangz = "Сержант"; }
			case 3: { rangz = "Мл.Сержант"; }
			case 2: { rangz = "Ефрейтор"; }
			case 1: { rangz = "Рядовой"; }
			}
		}
	case 22:
		{
			switch(pData[targetid][pRank])
			{
			case 10: { rangz = "Глав.Врач"; }
			case 9: { rangz = "Зам.Глав.Врача"; }
			case 8: { rangz = "Хирург"; }
			case 7: { rangz = "Психолог"; }
			case 6: { rangz = "Доктор"; }
			case 5: { rangz = "Нарколог"; }
			case 4: { rangz = "Спасатель"; }
			case 3: { rangz = "Мед.Брат"; }
			case 2: { rangz = "Санитар"; }
			case 1: { rangz = "Интерн"; }
			}
		}
	case 5:
		{
			switch(pData[targetid][pRank])
			{
			case 10: { rangz = "Дон"; }
			case 9: { rangz = "Консильери"; }
			case 8: { rangz = "Младший Босс"; }
			case 7: { rangz = "Капо"; }
			case 6: { rangz = "Сотто-Капо"; }
			case 5: { rangz = "Боец"; }
			case 4: { rangz = "Солдато"; }
			case 3: { rangz = "Сомбаттенте"; }
			case 2: { rangz = "Ассосиато"; }
			case 1: { rangz = "Новицио"; }
			}
		}
	case 6:
		{
			switch(pData[targetid][pRank])
			{
			case 10: { rangz = "Кумите"; }
			case 9: { rangz = "Оядзи"; }
			case 8: { rangz = "Cайко-Комон"; }
			case 7: { rangz = "Камбу"; }
			case 6: { rangz = "Со-Хомбуте"; }
			case 5: { rangz = "Вагакасира"; }
			case 4: { rangz = "Фуку-Комбуте"; }
			case 3: { rangz = "Кедай"; }
			case 2: { rangz = "Сятей"; }
			case 1: { rangz = "Вакасю"; }
			}
		}
	case 7:
		{
			switch(pData[targetid][pRank])
			{
			case 6: { rangz = "Мэр"; }
			case 5: { rangz = "Зам. Мэра"; }
			case 4: { rangz = "Начальник охраны"; }
			case 3: { rangz = "Охранник"; }
			case 2: { rangz = "Адвокат"; }
			case 1: { rangz = "Секретарь"; }
			}
		}
	case 9,16,20:
		{
			switch(pData[targetid][pRank])
			{
			case 10: { rangz = "Ген.Директор"; }
			case 9: { rangz = "Программный директор"; }
			case 8: { rangz = "Тех.Директор"; }
			case 7: { rangz = "Гл.Редактор"; }
			case 6: { rangz = "Редактор"; }
			case 5: { rangz = "Ведущий"; }
			case 4: { rangz = "Репортер"; }
			case 3: { rangz = "Звукорежиссер"; }
			case 2: { rangz = "Звукооператор"; }
			case 1: { rangz = "Стажер"; }
			}
		}
	case 11:
		{
			switch(pData[targetid][pRank])
			{
			case 10: { rangz = "Управляющий"; }
			case 9: { rangz = "Директор"; }
			case 8: { rangz = "Ст.Менеджер"; }
			case 7: { rangz = "Мл.Менеджер"; }
			case 6: { rangz = "Координатор"; }
			case 5: { rangz = "Инструктор"; }
			case 4: { rangz = "Мл.Инструктор"; }
			case 3: { rangz = "Экзаменатор"; }
			case 2: { rangz = "Консультант"; }
			case 1: { rangz = "Стажёр"; }
			}
		}
	case 12:
		{
			switch(pData[targetid][pRank])
			{
			case 10: { rangz = "Биг Вилли"; }
			case 9: { rangz = "Райч Нига"; }
			case 8: { rangz = "Фолкс"; }
			case 7: { rangz = "Федерал Блок"; }
			case 6: { rangz = "Гангстер"; }
			case 5: { rangz = "Ап Бро"; }
			case 4: { rangz = "Гун брo"; }
			case 3: { rangz = "Крэкер"; }
			case 2: { rangz = "Младший Нига"; }
			case 1: { rangz = "Блайд"; }
			}
		}
	case 26:
		{
			switch(pData[targetid][pRank])
			{
			case 9: { rangz = "Президент"; }
			case 8: { rangz = "Вице президент"; }
			case 7: { rangz = "Treasurer"; }
			case 6: { rangz = "Sergeant-at-arms"; }
			case 5: { rangz = "Road captain"; }
			case 4: { rangz = "Member"; }
			case 3: { rangz = "Prospect"; }
			case 2: { rangz = "Hang around"; }
			case 1: { rangz = "Support"; }
			}
		}
	case 24:
		{
			switch(pData[targetid][pRank])
			{
			case 9: { rangz = "Президент"; }
			case 8: { rangz = "Вице президент"; }
			case 7: { rangz = "Treasurer"; }
			case 6: { rangz = "Sergeant-at-arms"; }
			case 5: { rangz = "Road captain"; }
			case 4: { rangz = "Member"; }
			case 3: { rangz = "Prospect"; }
			case 2: { rangz = "Hang around"; }
			case 1: { rangz = "Support"; }
			}
		}
	case 29:
		{
			switch(pData[targetid][pRank])
			{
			case 9: { rangz = "Президент"; }
			case 8: { rangz = "Вице президент"; }
			case 7: { rangz = "Treasurer"; }
			case 6: { rangz = "Sergeant-at-arms"; }
			case 5: { rangz = "Road captain"; }
			case 4: { rangz = "Member"; }
			case 3: { rangz = "Prospect"; }
			case 2: { rangz = "Hang around"; }
			case 1: { rangz = "Support"; }
			}
		}
	case 13:
		{
			switch(pData[targetid][pRank])
			{
			case 10: { rangz = "Падре"; }
			case 9: { rangz = "Падрино"; }
			case 8: { rangz = "Лидер V.E.G."; }
			case 7: { rangz = "Ассесино"; }
			case 6: { rangz = "V.E.G."; }
			case 5: { rangz = "Бандито"; }
			case 4: { rangz = "Верификадо"; }
			case 3: { rangz = "Локал"; }
			case 2: { rangz = "Ординарио"; }
			case 1: { rangz = "Новатто"; }
			}
		}
	case 14:
		{
			switch(pData[targetid][pRank])
			{
			case 10: { rangz = "Авторитет"; }
			case 9: { rangz = "Вор в законе"; }
			case 8: { rangz = "Вор"; }
			case 7: { rangz = "Браток"; }
			case 6: { rangz = "Свояк"; }
			case 5: { rangz = "Блатной"; }
			case 4: { rangz = "Барыга"; }
			case 3: { rangz = "Бык"; }
			case 2: { rangz = "Фраер"; }
			case 1: { rangz = "Шнырь"; }
			}
		}
	case 15:
		{
			switch(pData[targetid][pRank])
			{
			case 10: { rangz = "Мэд Дог"; }
			case 9: { rangz = "Легенд"; }
			case 8: { rangz = "Де Кинг"; }
			case 7: { rangz = "Мобста"; }
			case 6: { rangz = "О.Г."; }
			case 5: { rangz = "Гангста"; }
			case 4: { rangz = "Юонг"; }
			case 3: { rangz = "Килла"; }
			case 2: { rangz = "Хастла"; }
			case 1: { rangz = "Плэйя"; }
			}
		}
	case 17:
		{
			switch(pData[targetid][pRank])
			{
			case 10: { rangz = "Падре"; }
			case 9: { rangz = "Нестро"; }
			case 8: { rangz = "Тесореро"; }
			case 7: { rangz = "Инвасор"; }
			case 6: { rangz = "Сабио"; }
			case 5: { rangz = "Мирандо"; }
			case 4: { rangz = "Лас Геррас"; }
			case 3: { rangz = "Геттор"; }
			case 2: { rangz = "Тирадор"; }
			case 1: { rangz = "Перро"; }
			}
		}
	case 18:
		{
			switch(pData[targetid][pRank])
			{
			case 10: { rangz = "Падре"; }
			case 9: { rangz = "Аджунто"; }
			case 8: { rangz = "Ауторидад"; }
			case 7: { rangz = "Бандидо"; }
			case 6: { rangz = "Эрмано"; }
			case 5: { rangz = "Джуниор"; }
			case 4: { rangz = "Мачo"; }
			case 3: { rangz = "Амиго"; }
			case 2: { rangz = "Ладрон"; }
			case 1: { rangz = "Новато"; }
			}
		}
	}
	return rangz;
}
stock UpdateBizz(x)
{
	if(BizzInfo[x][bType] != 4)
	{
		if(strcmp(BizzInfo[x][bOwner],"None",true) == 0) format(string, 90, " %s\nПродаётся", BizzInfo[x][bMessage], BizzInfo[x][bBuyPrice]), BizzInfo[x][bLocked] = 1;
		else format(string,128, "%s\nВладелец:\n%s", BizzInfo[x][bMessage], BizzInfo[x][bOwner]);
	}
	else
	{
		if(strcmp(BizzInfo[x][bOwner],"None",true) == 0) format(string, 90, " %s\nПродаётся", BizzInfo[x][bMessage],BizzInfo[x][bBuyPrice]), BizzInfo[x][bLocked] = 1;
		else format(string,128, "%s\nВладелец:\n%s\nЦена бензина: %i вирт", BizzInfo[x][bMessage], BizzInfo[x][bOwner],BizzInfo[x][bPrice]);
	}
	UpdateDynamic3DTextLabelText(BizzInfo[x][bLabel], COLOR_GREEN, string);
	return true;
}
stock GetPaintball()
{
	new null[3];
	paint_info[0]--;
	if(paint_info[1] == 1 && paint_info[0] == 120) SendClientMessageToAll(0xFFAAFFAA," Внимание! Начало пейнтболла через 2 минуты. Место проведения военный завод К.А.С.С");
	if(paint_info[1] == 1 && paint_info[0] == 1)
	{
		foreach(new i: Player) if(PaintReg{i}) null[2]++;
		if(null[2] > 2)
		{
			Painlist = 0;
			SendClientMessageToAll(0xFFAAFFAA," Внимание! Пейнтболл начался");
			paint_info[1] = 2; paint_info[0] = 300;
			foreach(new x: Player) if(PaintReg{x} == 1) PaintReg{x} = 2, SpawnPlayer(x);
		}
		else SendClientMessageToAll(0xFFAAFFAA," Матч по пейнтболу отменен из-за не достаточного количества участников"), paint_info[1] = 0, paint_info[0] = 0;
	}
	else if(paint_info[1] == 2 && paint_info[0] == 1)
	{
		SendClientMessageToAll(0xFFAAFFAA," Внимание! Пейнтболл окончен. (( Список победителей: /painlist ))");
		paint_info[1] = 0; paint_info[0] = 0, null[2] = 0;
		foreach(new x: Player)
		{
			if(PaintReg{x} == 2)
			{
				PaintStats[Painlist][paKills] = GetPVarInt(x,"paintkills");
				PaintStats[Painlist][paDeaths] = GetPVarInt(x,"paintdeaths");
				strmid(PaintStats[Painlist][paName],Name(x), 0, strlen(Name(x)), 24);
				Painlist++;
				if(null[0] < GetPVarInt(x,"paintkills"))
				{
					null[0] = GetPVarInt(x,"paintkills");
					null[1] = x;
				}
				ResetPlayerWeaponEx(x);
				SetPlayerPos(x, 286.1364,-30.7176,1001.5156);
				SetPlayerFacingAngle(x, 181.0381);
				SetPlayerVirtualWorld(x, 1);
				SetPlayerInterior(x, 1);
			}
			PaintReg{x} = 0;
		}
		if(null[1] != -1)
		{
			switch(booston == 0)
			{
			case 0:
				{
					pData[null[1]][pCash]+=5000;
					GameTextForPlayer(null[1],"~g~+$5000", 5000, 1);
					SCM(null[1], TEAM_AZTECAS_COLOR, " Поздравляем вы заняли 1-е место.");
				}
			default:
				{
					pData[null[1]][pCash]+=15000;
					GameTextForPlayer(null[1],"~g~+$15000", 5000, 1);
					SCM(null[1], TEAM_AZTECAS_COLOR, " Поздравляем вы заняли 1-е место.");
				}
			}
		}
	}
	return true;
}
stock GetRace()
{
	if(race_info[0] > 0)
	{
		race_info[0]--;
		if(race_info[1] == 1 && race_info[0] == 120) SendClientMessageToAll(0xB9B900AA," Внимание! Начало гонок через 2 минуты. Трасса: Аэропорт Лос Сантос. Регистрация у въезда");
		if(race_info[1] == 1 && race_info[0] == 1)
		{
			new null;
			foreach(new i: Player) if(race_state[i] == 0) null++;
			if(null >= 3 && null < 13)
			{
				RaceList = 0;
				SendClientMessageToAll(0xB9B900AA," Внимание! Гонки начались. Трасса: Аэропорт Лос Сантос");
				race_info[1] = 2; race_info[0] = 8;
				new rand = random(sizeof(RaceCar));
				foreach(new x: Player)
				{
					if(race_state[x] == 0)
					{
						RaceList++;
						race_state[x] = RaceList;
						RaceInfo[RaceList][rCar] = CreateVehicle_R(RaceCar[rand], RaceSpawns[RaceList][0], RaceSpawns[RaceList][1], RaceSpawns[RaceList][2], RaceSpawns[RaceList][3], random(128), random(128),7200);
						GetVehicleParamsEx(RaceInfo[RaceList][rCar],engine,lights,alarm,doors,bonnet,boot,objective);
						SetVehicleParamsEx(RaceInfo[RaceList][rCar],1,1,alarm,0,bonnet,boot,objective);
						SetPlayerPos(x,RaceSpawns[RaceList][0], RaceSpawns[RaceList][1], RaceSpawns[RaceList][2]);
						PutPlayerInVehicle(x, RaceInfo[RaceList][rCar], 0);
						SetPlayerInterior(x, 0);
						SetPlayerVirtualWorld(x, 0);
						TogglePlayerControllable(x, false);
					}
				}
				RaceList = 0;
			}
			else
			{
				SendClientMessageToAll(0xB9B900AA,"Гонка отменена из - за не достаточного количества участников");
				race_info[1] = 0; race_info[0] = 0;
				foreach(new x: Player) race_state[x] = -1;
			}
		}
		// race_info[1] - 0 / none regestration * 1 / go regestration * 2 / 5 sec before race * 3 GOGOGO
		if(race_info[1] == 2 && race_info[0] <= 5) foreach(new x: Player) if(race_state[x] > 0) format(string,64,"~g~RACE STARTED~n~~w~%i",race_info[0]), GameTextForPlayer(x,string, 5000, 4);
		if(race_info[1] == 2 && race_info[0] == 1)
		{
			race_info[1] = 3, race_info[0] = 300;
			foreach(new x: Player)
			{
				if(race_state[x] > 0)
				{
					GameTextForPlayer(x,"~g~GO GO GO", 2000, 4);
					TogglePlayerControllable(x, true);
					SetPVarInt(x,"gonkaid",0);
					SetPlayerRaceCheckpoint(x, 0, RaceGonka[GetPVarInt(x,"gonkaid")][0],RaceGonka[GetPVarInt(x,"gonkaid")][1],RaceGonka[GetPVarInt(x,"gonkaid")][2],RaceGonka[GetPVarInt(x,"gonkaid")+1][0],RaceGonka[GetPVarInt(x,"gonkaid")+1][1],RaceGonka[GetPVarInt(x,"gonkaid")+1][2], 8.0);
				}
			}
		}
		if(race_info[1] == 3 && race_info[0] == 120) foreach(new x: Player) if(race_state[x] > 0) GameTextForPlayer(x,"~g~RACE ENDED TO 2 MIN", 3000, 4);
		if(race_info[1] == 3 && race_info[0] == 1)
		{
			SendClientMessageToAll(0xB9B900AA," Внимание! Гонки окончены. (( Список победителей: /racelist ))");
			race_info[0] = 0, race_info[1] = 0;
			foreach(new x: Player)
			{
				if(race_state[x] > 0)
				{
					SetPlayerInterior(x,3);
					SetPlayerPos(x,831.7769,6.8750,1004.1797);
					SetPlayerFacingAngle(x,108.1610);
					DestroyVehicleEX(RaceInfo[race_state[x]][rCar]);
					race_state[x] = -1;
				}
			}
		}
	}
}
stock UpdateTable_int(const table[], const set[], const set_, const where[], where_)
{
	new szQuery[39+24+24+24+11*3];
	mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `%s` SET %s = %i WHERE %s = %i",table,set,set_,where,where_);
	mysql_query(DATABASE, szQuery,false);
}
stock UpdateTable_str(const table[], const set[], const danny[], const where[], where_)
{
	new szQuery[39+24+24+24+11*3];
	mysql_format(DATABASE, szQuery, sizeof szQuery,"UPDATE `%s` SET %s = '%s' WHERE %s = %i",table,set,danny,where,where_);
	mysql_query(DATABASE, szQuery,false);
}
stock mktime(hour,minute,second,day,month,year) {
	new timestamp2;

	timestamp2 = second + (minute * 60) + (hour * 3600);

	new days_of_month[12];

	if ( ((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0) ) {
		days_of_month = {31,29,31,30,31,30,31,31,30,31,30,31};
	} else {
		days_of_month = {31,28,31,30,31,30,31,31,30,31,30,31};
	}
	new days_this_year = 0;
	days_this_year = day;
	if(month > 1) {
		for(new i=0; i<month-1;i++) {
			days_this_year += days_of_month[i];
		}
	}
	timestamp2 += days_this_year * 86400;

	for(new j=1970;j<year;j++) {
		timestamp2 += 31536000;
		if ( ((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0) )  timestamp2 += 86400;
	}

	return timestamp2;
}
stock Now() {
	new hour,minute,second;
	new year, month,day;
	gettime(hour, minute, second);
	getdate(year, month, day);
	return mktimes(hour,minute,second,day,month,year);
}
publics: RobTickRTSC(playerid, tip, vv, act)
{
	if(RobTickRTC[playerid] != -1)
	{
		RobTickRTC[playerid]--;
		if(RobTickRTC[playerid] == -1)
		{
			if(robscdtimer[playerid] != -1)
			{	
				KillTimer(robscdtimer[playerid]);
				robscdtimer[playerid] = -1;
			}
			PlayerTextDrawHide(playerid,robsdraw[playerid]);
			RobSuccessFilly(playerid, tip, vv, act);
		}
		else
		{
			PlayerTextDrawShow(playerid,robsdraw[playerid]);
			ApplyActorAnimation(act, "INT_HOUSE", "wash_up",4.1,0,0,0,1,0);
			switch(RobTickRTC[playerid])
			{
			case 29: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIIIIIIIIIIIIIIIIIIIII~w~I~b~]");
			case 28: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIIIIIIIIIIIIIIIIIIII~w~II~b~]");
			case 27: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIIIIIIIIIIIIIIIIIII~w~III~b~]");
			case 26: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIIIIIIIIIIIIIIIIII~w~IIII~b~]");
			case 25: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIIIIIIIIIIIIIIIII~w~IIIII~b~]");
			case 24: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIIIIIIIIIIIIIIII~w~IIIIII~b~]");
			case 23: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIIIIIIIIIIIIIII~w~IIIIIII~b~]");
			case 22: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIIIIIIIIIIIIII~w~IIIIIIII~b~]");
			case 21: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIIIIIIIIIIIII~w~IIIIIIIII~b~]");
			case 20: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIIIIIIIIIIII~w~IIIIIIIIII~b~]");
			case 19: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIIIIIIIIIII~w~IIIIIIIIIII~b~]");
			case 18: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIIIIIIIIII~w~IIIIIIIIIIII~b~]");
			case 17: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIIIIIIIII~w~IIIIIIIIIIIII~b~]");
			case 16: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIIIIIIII~w~IIIIIIIIIIIIII~b~]");
			case 15: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIIIIIII~w~IIIIIIIIIIIIIII~b~]");
			case 14: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIIIIII~w~IIIIIIIIIIIIIIII~b~]");
			case 13: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIIIII~w~IIIIIIIIIIIIIIIII~b~]");
			case 12: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIIII~w~IIIIIIIIIIIIIIIIII~b~]");
			case 11: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIIII~w~IIIIIIIIIIIIIIIIIII~b~]");
			case 10: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIIII~w~IIIIIIIIIIIIIIIIIIII~b~]");
			case 9: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIIII~w~IIIIIIIIIIIIIIIIIIIII~b~]");
			case 8: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIIII~w~IIIIIIIIIIIIIIIIIIIIII~b~]");
			case 7: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIIII~w~IIIIIIIIIIIIIIIIIIIIIII~b~]");
			case 6: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIIII~w~IIIIIIIIIIIIIIIIIIIIIIII~b~]");
			case 5: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIIII~w~IIIIIIIIIIIIIIIIIIIIIIIII~b~]");
			case 4: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[IIII~w~IIIIIIIIIIIIIIIIIIIIIIIIII~b~]");
			case 3: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[III~w~IIIIIIIIIIIIIIIIIIIIIIIIIII~b~]");
			case 2: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[II~w~IIIIIIIIIIIIIIIIIIIIIIIIIIII~b~]");
			case 1: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[I~w~IIIIIIIIIIIIIIIIIIIIIIIIIIIII~b~]");
			case 0: PlayerTextDrawSetString(playerid,robsdraw[playerid], "~b~[~w~IIIIIIIIIIIIIIIIIIIIIIIIIIIIII~b~]");
			}
		}
	}
	return false;
}
stock RobSuccessFilly(pids, tip, vv, act)
{
	ClearActorAnimations(ActorsRob[act]);
	if(tip == 0)
	{
		new maxform;
		foreach(new i: Player)
		{
			if(maxform > 5) break;
			else if(PlayerToPoint(15,i,204.8515,-8.1603,1001.2109) && GetPlayerVirtualWorld(i) == vv && pData[i][pMember] == pData[pids][pMember])
			{
				if(pData[i][pSex] == 1) SetPlayerSkin(i, 191);
				else SetPlayerSkin(i, 287);
				
				proverkaforma[i] = 1;
				maxform++;
			}
		}
	}
	else if(tip == 1)
	{
		if(pData[pids][pMember] == 5)
		{
			lcnmats += 2500;
			if(lcnmats > 100000) lcnmats = 100000;
		}
		else if(pData[pids][pMember] == 6)
		{
			yakuzamats += 2500;
			if(yakuzamats > 100000) yakuzamats = 100000;
		}
		else if(pData[pids][pMember] == 14)
		{
			rmmats += 2500;
			if(rmmats > 100000) rmmats = 100000;
		}
		SCM(pids, -1, " На склад вашей мафии добавлено 2500 материалов");
	}
	else if(tip == 2)
	{
		new maxdrugs;
		foreach(new i: Player)
		{
			if(maxdrugs > 5) break;
			else if(PlayerToPoint(30,i,354.0420,-49.3791,1076.4642) && GetPlayerVirtualWorld(i) == vv && pData[i][pMember] == pData[pids][pMember])
			{
				pData[i][pDrugs] = 150,maxdrugs++;
				SCM(i, COLOR_BLUE, " Вы украли 150 грамм наркотических лекарств");
			}
		}
	}
	return false;
}
stock MoneyLog(const playerid[], const giveplayerid[], ammount, const reason[])
{
	new year, month,day,hour1, minute1, second1;
	getdate(year, month, day);
	gettime(hour1, minute1, second1);
	new szQuery[300];
	mysql_format(DATABASE,szQuery, 300, "INSERT INTO `pLogs` (`Text`, `Name`,`paramsName`, `Value`, `Date`) VALUES ('%s','%s', '%s', '%i', '%i/%i/%i | %i:%i')",reason,playerid,giveplayerid,ammount,day,month,year,hour1, minute1);
	mysql_query(DATABASE,szQuery);
}
stock SetHouseInfo(houseid, ammount, const str[])
{
	new h_str_query[244];
	format(h_str_query, sizeof h_str_query, "UPDATE `"TABLE_HOUSE"` SET `%s` = '%d' WHERE hID = '%d'",str,ammount,HouseInfo[houseid][hID]);
	mysql_query(DATABASE,h_str_query,false);
}
stock SetAccountInfo(playerid, ammount, const str[])
{
	new Str_Query[244];
	mysql_format(DATABASE, Str_Query, sizeof Str_Query, "UPDATE `"TABLE_ACCOUNTS"` SET `%s` = '%d' WHERE Name = '%e'",str,ammount,pData[playerid][pName]);
	mysql_query(DATABASE,Str_Query);
}
stock SetAccountInfoFloat(playerid, Float:ammount, const str[])
{
	new szQuery[244];
	mysql_format(DATABASE, szQuery, 244, "UPDATE `"TABLE_ACCOUNTS"` SET `%s` = '%f' WHERE Name = '%e'",str,ammount,pData[playerid][pName]);
	mysql_query(DATABASE,szQuery);
}
stock SetCarsInfo(playerid, ammount, const str[], car)
{
	new szQuery[244];
	mysql_format(DATABASE, szQuery, 244, "UPDATE `"TABLE_CARS"` SET `%s` = '%d' WHERE id = '%i'",str,ammount,CarInfo[playerid][carID][car]);
	//SCM(playerid,-1,szQuery);
	mysql_query(DATABASE,szQuery);
}
stock GetFraction(targetid)
{
	new ttext[40];
	switch(targetid)
	{
	case 1: ttext = "LSPD"; case 2: ttext = "ФБР"; case 3: ttext = "Армия СФ";
	case 4: ttext = "Медики СФ"; case 5: ttext = "La Cosa Nostra"; case 6: ttext = "Yakuza";
	case 7: ttext = "Мэрия"; case 8: ttext = "Casino"; case 9: ttext = "SF News";
	case 10: ttext = "SFPD"; case 11: ttext = "Автошкола"; case 12: ttext = "Ballas Gang";
	case 13: ttext = "Vagos Gang"; case 14: ttext = "Русская Мафия"; case 15: ttext = "Grove Street";
	case 16: ttext = "LS News"; case 17: ttext = "Aztecas Gang"; case 18: ttext = "Rifa Gang";
	case 19: ttext = "Армия ЛВ"; case 20: ttext = "LV News"; case 21: ttext = "LVPD";
	case 22: ttext = "МЧС"; case 24: ttext = "Mongols MC"; case 25: ttext = "Pagans MC";
	case 26: ttext = "Warlocks MC"; case 27: ttext = "Warlocks MC";
	case 28: ttext = "Highwayman MC"; case 29: ttext = "Pagans MC"; case 30: ttext = "Free Souls MC";
	case 31: ttext = "Vagos MC";
	default: ttext = "Нет";
	}
	return ttext;
}


DestroyVehicleEX(vehicleid)
{
	Iter_Remove(Vehicle, vehicleid);
	return DestroyVehicle(vehicleid);
}

UnixDate(unix_timestamp = 0)
{
	printf("unixconvert");
	new day,month,second,year;
	unix_timestamp += 32400;
	
	year = unix_timestamp / 31557600;
	unix_timestamp -= year * 31557600;
	year += 1970;

	if year % 4 == 0 *then unix_timestamp -= 21600;
	day = unix_timestamp / 86400;

	switch ( day )
	{
		// в second будет временно хранится число месяца
	case    0..30 : { second = day;       month =  1; }
	case   31..58 : { second = day -  31; month =  2; }
	case   59..89 : { second = day -  59; month =  3; }
	case  90..119 : { second = day -  90; month =  4; }
	case 120..150 : { second = day - 120; month =  5; }
	case 151..180 : { second = day - 151; month =  6; }
	case 181..211 : { second = day - 181; month =  7; }
	case 212..242 : { second = day - 212; month =  8; }
	case 243..272 : { second = day - 243; month =  9; }
	case 273..303 : { second = day - 273; month = 10; }
	case 304..333 : { second = day - 304; month = 11; }
	case 334..366 : { second = day - 334; month = 12; }
	}

	day = second + 1;
	
	new strs[17];
	format(strs,sizeof strs,"%02d.%02d.%i",day,month,year);
	return strs;
}
CMD:offuninvite(playerid, params[])
{
	if(sscanf(params, "s[25]", params[0])) return SendClientMessage(playerid, COLOR_GRAD1,!" Введите: /offuninvite [name]");
	new ids;
	sscanf(params[0],"u",ids);
	if ids != INVALID_PLAYER_ID *then return SendClientMessage(playerid, COLOR_GRAD1,!" Игрок на сервере, используйте /uninvite");
	if(pData[playerid][pLeader])
	{
		format(format_string,sizeof format_string,"SELECT `pRank` FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%s' AND `pMember` = '%i' AND `pLeader` = 0",params[0],pData[playerid][pMember]);
		mysql_tquery(DATABASE, format_string, "PlayerOFFdetect", "is", playerid, params[0]);

	}
	else if(pData[playerid][pAdmin])
	{
		format(format_string,sizeof format_string,"UPDATE accounts SET pLeader = '0',pMember = '0',pRank = '0',pJobHeal = '0', pDetachID='0' WHERE name = '%e'",params[0]);
		mysql_query(DATABASE,format_string);
		format(format_string, sizeof(format_string), "Admin: %s offUninvite: %s",Name(playerid),params[0]);
		ABroadCast(COLOR_YELLOW,format_string,1);

		new szQuery	[84+26];
		mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `firstdeputy`='Нет' WHERE `firstdeputy`='%e'", params[0]);
		mysql_query(DATABASE, szQuery);
		mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `seconddeputy`='Нет' WHERE `seconddeputy`='%e'", params[0]);
		mysql_query(DATABASE, szQuery);
		mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `member`='Нет' WHERE `member`='%e'", params[0]);
		mysql_query(DATABASE, szQuery);
	}
	return true;
}

CMD:offmute(playerid, params[])
{
	if(pData[playerid][pLogin] == false) return true;
	if(pData[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new strlen_params;
	strlen_params = strlen(params);
	if(strlen_params < 1 || strlen_params > MAX_PLAYER_NAME+60) return SCM(playerid, COLOR_WHITE, " Введите: /offmute [name] [reason] [минут]");
	new mute_name[24],mute_reason[60];
	if(sscanf(params, "s[24]s[60]d",mute_name,mute_reason,params[2])) return SCM(playerid, COLOR_WHITE, " Введите: /offmute [name] [reason] [дней]");
	
	format(format_string,128,"UPDATE `"TABLE_ACCOUNTS"` SET `pMuted` = `pMuted` + %i WHERE `Name` = '%s'",params[2]*60,mute_name);
	mysql_query(DATABASE, format_string);
	
	format(format_string, sizeof format_string, " OffMute[Заткнул: %s][Заткнут: %s][Причина: %s][минут: %i]",pData[playerid][pName],mute_name,mute_reason,params[2]);
	ABroadCast(COLOR_LIGHTRED,format_string,1);
	return true;
}

publics: PlayerOFFdetect(playerid,inputtext[])
{
	if(playerid == INVALID_PLAYER_ID) return true;
	
	if(cache_num_rows())
	{
		format(format_string,128,"UPDATE `"TABLE_ACCOUNTS"` SET `pMember` = '0', `pRank` = '0', `pDetachID`='0' WHERE `Name` = '%s'",inputtext);
		mysql_query(DATABASE, format_string);

		new szQuery	[84+26];
		mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `firstdeputy`='Нет' WHERE `firstdeputy`='%e'", inputtext);
		mysql_query(DATABASE, szQuery);
		mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `seconddeputy`='Нет' WHERE `seconddeputy`='%e'", inputtext);
		mysql_query(DATABASE, szQuery);
		mysql_format(DATABASE, szQuery, sizeof szQuery, "UPDATE `"TABLE_DETACHMENT"` SET `member`='Нет' WHERE `member`='%e'", inputtext);
		mysql_query(DATABASE, szQuery);

		new rank;
		cache_get_value_name_int(0, "pRank", rank);
		format(format_string, 128,"Игрок %s снят с ранга %i",inputtext,rank);
		SendClientMessage(playerid,COLOR_GRAD1, format_string);
	}
	else SendClientMessage(playerid, COLOR_GRAD1,!" Данный игрок не состоит в Вашей организации");
	return true;
}
stock SpeedVehicle(playerid)
{
	new Float:ST[4];
	if(IsPlayerInAnyVehicle(playerid)) GetVehicleVelocity(GetPlayerVehicleID(playerid),ST[0],ST[1],ST[2]);
	else return false;
	//GetPlayerVelocity(playerid,ST[0],ST[1],ST[2]);
	ST[3] = floatsqroot(floatadd(floatadd(floatpower(ST[0], 2), floatpower(ST[1], 2)),  floatpower(ST[2], 2))) * 100.3;
	return floatround(ST[3], floatround_floor);
}
publics: CheckOnline(playerid)
{
	datareg = cache_num_rows();
	
	new year, month,day;
	getdate(year, month, day);
	
	format(format_string,sizeof format_string,"SELECT * FROM `accounts` WHERE ponline='%i/0%i/%i'",day,month,year);
	mysql_tquery(DATABASE,format_string,"CheckOnline2","i",playerid);
	return true;
}
publics: CheckOnline2(playerid)
{	
	onlines = cache_num_rows();
	
	new year, month,day;
	getdate(year, month, day);
	
	format(format_string,sizeof format_string,"SELECT * FROM `"TABLE_BAN"` WHERE Date='%i/%i/%i'",day,month,year);
	mysql_tquery(DATABASE,format_string,"CheckOnline3","i",playerid);
	return true;
}
publics: CheckOnline3(playerid)
{
	bancount = cache_num_rows();
	
	SendMes(playerid,COLOR_GREEN,"Количество регистрации за сегодня: %i",datareg);
	SendMes(playerid,COLOR_GREEN,"Количество уникальный пользователей: %i",onlines);
	SendMes(playerid,COLOR_GREEN,"Пиковый онлайн за текущий день: %i",pickonline+1);
	SendMes(playerid,COLOR_GREEN,"Количество заблокированных аккаунтов за сегодня: %i",bancount);
	return true;
}

IsARespawn(playerid)
{
	if(PlayerToPoint(50.0,playerid,2651.4746,-2004.3387,13.3828) // Ballas
			||PlayerToPoint(75.0,playerid,2796.4575,-1617.2189,10.9219) // Vagos
			||PlayerToPoint(50.0,playerid,2492.7532,-1676.3687,13.3380) // Groove
			||PlayerToPoint(50.0,playerid,1713.9735,-2114.5122,13.3828) // Aztecas
			||PlayerToPoint(50.0,playerid,2184.1218,-1803.6334,13.3693) // Rifa
			||PlayerToPoint(50.0,playerid,-61.2984,1364.5847,1080.2109) // Ballas Base
			||PlayerToPoint(50.0,playerid,303.6300,309.2500,999.1484) // Vagos Base
			||PlayerToPoint(50.0,playerid,2496.0129,-1708.9232,1014.7422) // Groove Base
			||PlayerToPoint(50.0,playerid,-49.7558,1400.3553,1084.4297) // Aztecas Base
			||PlayerToPoint(50.0,playerid,-223.8400,1410.5100,27.7734)) // Rifa Base
	{
		return true;
	}
	return false;
}

stock GPS_ON(playerid,Float:x,Float:y,Float:z)
{
	format(format_string, sizeof format_string, " Пункт назначения выбран | Расстояние: {B1413D}%0.2f{FFFFFF} метров", GetPlayerDistanceFromPoint(playerid, x, y, z));
	
	SendClientMessage(playerid, -1, format_string);
	
	if(inTaxi[playerid] != INVALID_PLAYER_ID && inTaxi[playerid] != -1) // если чувак пассажир такси
	{
		SCM(inTaxi[playerid], COLOR_BLUE, "Пассажир указал пункт назначения {ffffff}(( Введите /clients ))");
	    SetPVarFloat(playerid, "TaxiGPScorX", x);
	    SetPVarFloat(playerid, "TaxiGPScorY", y);
	    SetPVarFloat(playerid, "TaxiGPScorZ", z);
	    return;
	}
	else {
		SetPlayerRaceCheckpoint(playerid,1,x,y,z,0.0,0.0,0.0,2.0);

		CP[playerid] = 776;
  	}
}


public OnPlayerStreamIn(playerid, forplayerid)
{
	Iter_Add(OnPlayersStream[playerid], forplayerid);
	return true;
}
public OnPlayerStreamOut(playerid, forplayerid)
{
	if(forplayerid == INVALID_PLAYER_ID) return false;
	else if(playerid == INVALID_PLAYER_ID) return false;
	Iter_Remove(OnPlayersStream[playerid], forplayerid);
	return true;
}
public OnPlayerCommandReceived(playerid, cmdtext[])
{
	new unix = gettime();
	if(!pData[playerid][pLogin] || unix - pData[playerid][pAFK] > 3) return false;
	
	return true;
}
public OnPlayerCommandPerformed (playerid, cmdtext[], success)
{
	if(!success) return true;
	return true;
}
stock NewsEither(newsid, const str[], color)
{	
	switch(newsid)
	{
	case 9: ViborNews = 1;
	case 16: ViborNews = 2;
	case 20: ViborNews = 3;
	}
	foreach(new i: Player)
	{
		if(SelectWavesRadio[i] == ViborNews) SendClientMessage(i, color, str);
	}
}
AdvertList(playerid)
{
	new full, str[90], strrr[600];
	switch(pData[playerid][pMember])
	{
	case 16: full = 0;
	case 9: full = 1;
	case 20: full = 2;
	}
	for(new i = 1; i <= TOTALADVERT[full];i++)
	{
		format(str, sizeof(str), "[%i] Прислал: %s, {1DB000}Отредактировал: {FFFFFF}%s\n",i, AdvertInfo[i][full][adName], AdvertInfo[i][full][adEditName]);
		strcat(strrr, str);
	}
	if(TOTALADVERT[full] == 0) return ShowPlayerDialog(playerid, 69, 0, "{FFFFFF}Объявления | {ae433d}Новости", "    Новых объявлений нет", "«", "");
	ShowPlayerDialog(playerid, 11518, 2, "{FFFFFF}Объявления | {ae433d}Новости", strrr, "»", "«");
	return true;
}
CMD:votelist(playerid, params[])
{
	if(Pick) return SendClientMessage(playerid, COLOR_GREY, " В штате не закончены выборы!");
	GetPick(playerid);
	return true;
}
GetPick(playerid)
{
	new full = 0, votegolos[6];
	string[0] = EOS;
	strcat(string,"{FFFFFF}Кандидат\t{FFFFFF}Голосов\n",sizeof string);
	for(new i = 0; i < 7; i++)
	{
		if(strcmp(PickName[i],"None",false))
		{
			format(votegolos,sizeof votegolos,"%i",PickTime[i]);
			
			strcat(string, PickName[i]);
			strcat(string, "\t");
			strcat(string, votegolos);
			strcat(string, "\n");
			full++;
		}
	}
	if(full == 0) ShowPlayerDialog(playerid, 0, 0, "{FFFFFF}Кандидаты | {ae433d}Выборы", "{FFFFFF}Кандидатов нет", "x", "");
	else ShowPlayerDialog(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Кандидаты | {ae433d}Выборы", string, "Вперед", "Закрыть");
	
	return true;
}
ResetPick()
{
	foreach(new i : Player)
	{
		pData[i][pPick] = 0;
	}
	mysql_query(DATABASE,"UPDATE "TABLE_ACCOUNTS" SET pPick = '0'");
	Pick = 0;
	PickDate = 0;
	return true;
}
CMD:changematname(playerid, params[])
{
	if(pData[playerid][pAdmin] < 5) return true;
	else if(sscanf(params,"s[21]",params[0])) return SendClientMessage(playerid, COLOR_GRAD1,!" Использование: /changename [Ник]");

	switch(SetPlayerName(playerid, params[0]))
	{
	case -1: SendClientMessage(playerid, COLOR_GRAD1,!" Такой ник уже на сервере");
	case 0: SendClientMessage(playerid, COLOR_GRAD1,!" Ваш ник совпадает");
	case 1: SendClientMessage(playerid, COLOR_GRAD1,!" Вы сменили ваш ник");
	}
	return true;
}
stock GetWeaponModel(weaponid)
{
	switch(weaponid)
	{
	case 1:
		return 331;
	case 2..8:
		return weaponid+331;
	case 9:
		return 341;
	case 10..15:
		return weaponid+311;
	case 16..18:
		return weaponid+326;
	case 22..29:
		return weaponid+324;
	case 30,31:
		return weaponid+325;
	case 32:
		return 372;
	case 46:
		return 371;
	}
	return false;
}

stock PlayerLicenses(playerid, type, lic_type)
{
	if(type == LICENSES_GET)
		return pData[playerid][pLicenses] & lic_type;
	else if(type == LICENSES_SET)
	{
		pData[playerid][pLicenses] |= lic_type;
		return 1;
	}
	else if(type == LICENSES_TAKE)
	{
		pData[playerid][pLicenses] &= lic_type;
		return 1;
	}
	return 0;
}
stock gatesCreate(const objectId)
{
	// get object properties
	new Float:x, Float:y, Float:z,
		worldid, interiorid;

	interiorid = Streamer_GetIntData(STREAMER_TYPE_OBJECT, objectId, E_STREAMER_INTERIOR_ID);
	worldid = Streamer_GetIntData(STREAMER_TYPE_OBJECT, objectId, E_STREAMER_WORLD_ID);
	Streamer_GetFloatData(STREAMER_TYPE_OBJECT, objectId, E_STREAMER_X, x);
	Streamer_GetFloatData(STREAMER_TYPE_OBJECT, objectId, E_STREAMER_Y, y);
	Streamer_GetFloatData(STREAMER_TYPE_OBJECT, objectId, E_STREAMER_Z, z);
	new __areaid = CreateDynamicSphere(x, y , z, 1.5, worldid, interiorid); 
	Streamer_SetIntData(STREAMER_TYPE_AREA, __areaid, E_STREAMER_EXTRA_ID, objectId);
	return __areaid;
}

stock initLogoTextDraw()
{
	select_skin_box1 = TextDrawCreate(326.000000, 393.000000, "_");
	TextDrawFont(select_skin_box1, 1);
	TextDrawLetterSize(select_skin_box1, 0.683333, 1.850005);
	TextDrawTextSize(select_skin_box1, 217.000000, 150.000000);
	TextDrawSetOutline(select_skin_box1, 1);
	TextDrawSetShadow(select_skin_box1, 0);
	TextDrawAlignment(select_skin_box1, 2);
	TextDrawColor(select_skin_box1, -1);
	TextDrawBackgroundColor(select_skin_box1, 255);
	TextDrawBoxColor(select_skin_box1, 9145138);
	TextDrawUseBox(select_skin_box1, 1);
	TextDrawSetProportional(select_skin_box1, 1);
	TextDrawSetSelectable(select_skin_box1, 0);

	select_skin_box2 = TextDrawCreate(325.000000, 392.000000, "_");
	TextDrawFont(select_skin_box2, 1);
	TextDrawLetterSize(select_skin_box2, 0.683333, 1.850005);
	TextDrawTextSize(select_skin_box2, 217.000000, 150.000000);
	TextDrawSetOutline(select_skin_box2, 1);
	TextDrawSetShadow(select_skin_box2, 0);
	TextDrawAlignment(select_skin_box2, 2);
	TextDrawColor(select_skin_box2, -1);
	TextDrawBackgroundColor(select_skin_box2, 255);
	TextDrawBoxColor(select_skin_box2, 9145138);
	TextDrawUseBox(select_skin_box2, 1);
	TextDrawSetProportional(select_skin_box2, 1);
	TextDrawSetSelectable(select_skin_box2, 0);

	select_skin_next = TextDrawCreate(384.000000, 392.000000, "Next");
	TextDrawFont(select_skin_next, 2);
	TextDrawLetterSize(select_skin_next, 0.258332, 1.750000);
	TextDrawTextSize(select_skin_next, 16.500000, 28.500000);
	TextDrawSetOutline(select_skin_next, 1);
	TextDrawSetShadow(select_skin_next, 0);
	TextDrawAlignment(select_skin_next, 2);
	TextDrawColor(select_skin_next, -1);
	TextDrawBackgroundColor(select_skin_next, 255);
	TextDrawBoxColor(select_skin_next, 200);
	TextDrawUseBox(select_skin_next, 0);
	TextDrawSetProportional(select_skin_next, 1);
	TextDrawSetSelectable(select_skin_next, 1);

	select_skin_prev = TextDrawCreate(276.000000, 392.000000, "previous");
	TextDrawFont(select_skin_prev, 2);
	TextDrawLetterSize(select_skin_prev, 0.258332, 1.750000);
	TextDrawTextSize(select_skin_prev, 16.500000, 51.000000);
	TextDrawSetOutline(select_skin_prev, 1);
	TextDrawSetShadow(select_skin_prev, 0);
	TextDrawAlignment(select_skin_prev, 2);
	TextDrawColor(select_skin_prev, -1);
	TextDrawBackgroundColor(select_skin_prev, 255);
	TextDrawBoxColor(select_skin_prev, 200);
	TextDrawUseBox(select_skin_prev, 0);
	TextDrawSetProportional(select_skin_prev, 1);
	TextDrawSetSelectable(select_skin_prev, 1);

	select_skin_ok = TextDrawCreate(331.000000, 392.000000, "buy");
	TextDrawFont(select_skin_ok, 2);
	TextDrawLetterSize(select_skin_ok, 0.258332, 1.750000);
	TextDrawTextSize(select_skin_ok, 16.500000, 28.500000);
	TextDrawSetOutline(select_skin_ok, 1);
	TextDrawSetShadow(select_skin_ok, 0);
	TextDrawAlignment(select_skin_ok, 2);
	TextDrawColor(select_skin_ok, -1);
	TextDrawBackgroundColor(select_skin_ok, 255);
	TextDrawBoxColor(select_skin_ok, 200);
	TextDrawUseBox(select_skin_ok, 0);
	TextDrawSetProportional(select_skin_ok, 1);
	TextDrawSetSelectable(select_skin_ok, 1);

	g_szServerLogo[0] = TextDrawCreate(545.332824, 10.453332, "ld_beat:chit");
	TextDrawLetterSize(g_szServerLogo[0], 0.000000, 0.000000);
	TextDrawTextSize(g_szServerLogo[0], 26.533300, 28.124454);
	TextDrawAlignment(g_szServerLogo[0], 1);
	TextDrawColor(g_szServerLogo[0], 798311935);
	TextDrawSetShadow(g_szServerLogo[0], 0);
	TextDrawSetOutline(g_szServerLogo[0], 0);
	TextDrawFont(g_szServerLogo[0], 4);

	g_szServerLogo[1] = TextDrawCreate(547.888244, 16.431114, "ld_beat:chit");
	TextDrawLetterSize(g_szServerLogo[1], 0.000000, 0.000000);
	TextDrawTextSize(g_szServerLogo[1], 5.599958, 6.072892);
	TextDrawAlignment(g_szServerLogo[1], 1);
	TextDrawColor(g_szServerLogo[1], 798311935);
	TextDrawSetShadow(g_szServerLogo[1], 0);
	TextDrawSetOutline(g_szServerLogo[1], 0);
	TextDrawFont(g_szServerLogo[1], 4);

	g_szServerLogo[2] = TextDrawCreate(552.888183, 12.652446, "ld_beat:chit");
	TextDrawLetterSize(g_szServerLogo[2], 0.000000, 0.000000);
	TextDrawTextSize(g_szServerLogo[2], 5.599958, 6.072892);
	TextDrawAlignment(g_szServerLogo[2], 1);
	TextDrawColor(g_szServerLogo[2], 798311935);
	TextDrawSetShadow(g_szServerLogo[2], 0);
	TextDrawSetOutline(g_szServerLogo[2], 0);
	TextDrawFont(g_szServerLogo[2], 4);

	g_szServerLogo[3] = TextDrawCreate(548.732482, 11.661331, "ld_beat:chit");
	TextDrawLetterSize(g_szServerLogo[3], 0.000000, 0.000000);
	TextDrawTextSize(g_szServerLogo[3], 5.599956, 6.072892);
	TextDrawAlignment(g_szServerLogo[3], 1);
	TextDrawColor(g_szServerLogo[3], 798311935);
	TextDrawSetShadow(g_szServerLogo[3], 0);
	TextDrawSetOutline(g_szServerLogo[3], 0);
	TextDrawFont(g_szServerLogo[3], 4);

	g_szServerLogo[4] = TextDrawCreate(546.887817, 15.249761, "ld_beat:chit");
	TextDrawLetterSize(g_szServerLogo[4], 0.000000, 0.000000);
	TextDrawTextSize(g_szServerLogo[4], 2.888845, 3.036448);
	TextDrawAlignment(g_szServerLogo[4], 1);
	TextDrawColor(g_szServerLogo[4], 798311935);
	TextDrawSetShadow(g_szServerLogo[4], 0);
	TextDrawSetOutline(g_szServerLogo[4], 0);
	TextDrawFont(g_szServerLogo[4], 4);

	g_szServerLogo[5] = TextDrawCreate(553.043457, 10.575099, "ld_beat:chit");
	TextDrawLetterSize(g_szServerLogo[5], 0.000000, 0.000000);
	TextDrawTextSize(g_szServerLogo[5], 2.888845, 3.036448);
	TextDrawAlignment(g_szServerLogo[5], 1);
	TextDrawColor(g_szServerLogo[5], 798311935);
	TextDrawSetShadow(g_szServerLogo[5], 0);
	TextDrawSetOutline(g_szServerLogo[5], 0);
	TextDrawFont(g_szServerLogo[5], 4);

	g_szServerLogo[6] = TextDrawCreate(546.843444, 20.485321, "ld_beat:chit");
	TextDrawLetterSize(g_szServerLogo[6], 0.000000, 0.000000);
	TextDrawTextSize(g_szServerLogo[6], 2.888845, 3.036448);
	TextDrawAlignment(g_szServerLogo[6], 1);
	TextDrawColor(g_szServerLogo[6], 798311935);
	TextDrawSetShadow(g_szServerLogo[6], 0);
	TextDrawSetOutline(g_szServerLogo[6], 0);
	TextDrawFont(g_szServerLogo[6], 4);

	g_szServerLogo[7] = TextDrawCreate(556.688049, 11.529763, "ld_beat:chit");
	TextDrawLetterSize(g_szServerLogo[7], 0.000000, 0.000000);
	TextDrawTextSize(g_szServerLogo[7], 2.888846, 3.036448);
	TextDrawAlignment(g_szServerLogo[7], 1);
	TextDrawColor(g_szServerLogo[7], 798311935);
	TextDrawSetShadow(g_szServerLogo[7], 0);
	TextDrawSetOutline(g_szServerLogo[7], 0);
	TextDrawFont(g_szServerLogo[7], 4);

	g_szServerLogo[8] = TextDrawCreate(550.755615, 15.978656, "particle:lamp_shad_64");
	TextDrawLetterSize(g_szServerLogo[8], 0.000000, 0.000000);
	TextDrawTextSize(g_szServerLogo[8], 15.822212, 7.615985);
	TextDrawAlignment(g_szServerLogo[8], 1);
	TextDrawColor(g_szServerLogo[8], -177);
	TextDrawSetShadow(g_szServerLogo[8], 0);
	TextDrawSetOutline(g_szServerLogo[8], 0);
	TextDrawFont(g_szServerLogo[8], 4);

	g_szServerLogo[9] = TextDrawCreate(550.911010, 32.160884, "particle:lamp_shad_64");
	TextDrawLetterSize(g_szServerLogo[9], 0.000000, 0.000000);
	TextDrawTextSize(g_szServerLogo[9], 15.955543, -8.661350);
	TextDrawAlignment(g_szServerLogo[9], 1);
	TextDrawColor(g_szServerLogo[9], -177);
	TextDrawSetShadow(g_szServerLogo[9], 0);
	TextDrawSetOutline(g_szServerLogo[9], 0);
	TextDrawFont(g_szServerLogo[9], 4);

	g_szServerLogo[10] = TextDrawCreate(555.066589, 17.919986, "N");
	TextDrawLetterSize(g_szServerLogo[10], 0.339333, 1.351110);
	TextDrawAlignment(g_szServerLogo[10], 1);
	TextDrawColor(g_szServerLogo[10], -161);
	TextDrawSetShadow(g_szServerLogo[10], 0);
	TextDrawSetOutline(g_szServerLogo[10], 0);
	TextDrawBackgroundColor(g_szServerLogo[10], 51);
	TextDrawFont(g_szServerLogo[10], 1);
	TextDrawSetProportional(g_szServerLogo[10], 1);

	g_szServerLogo[11] = TextDrawCreate(557.599243, 30.780447, "ld_beat:chit");
	TextDrawLetterSize(g_szServerLogo[11], 0.000000, 0.000000);
	TextDrawTextSize(g_szServerLogo[11], 5.599957, 6.072892);
	TextDrawAlignment(g_szServerLogo[11], 1);
	TextDrawColor(g_szServerLogo[11], 798311935);
	TextDrawSetShadow(g_szServerLogo[11], 0);
	TextDrawSetOutline(g_szServerLogo[11], 0);
	TextDrawFont(g_szServerLogo[11], 4);

	g_szServerLogo[12] = TextDrawCreate(561.487731, 28.246213, "ld_beat:chit");
	TextDrawLetterSize(g_szServerLogo[12], 0.000000, 0.000000);
	TextDrawTextSize(g_szServerLogo[12], 5.599957, 6.072892);
	TextDrawAlignment(g_szServerLogo[12], 1);
	TextDrawColor(g_szServerLogo[12], 798311935);
	TextDrawSetShadow(g_szServerLogo[12], 0);
	TextDrawSetOutline(g_szServerLogo[12], 0);
	TextDrawFont(g_szServerLogo[12], 4);

	g_szServerLogo[13] = TextDrawCreate(561.332580, 32.771533, "ld_beat:chit");
	TextDrawLetterSize(g_szServerLogo[13], 0.000000, 0.000000);
	TextDrawTextSize(g_szServerLogo[13], 5.599956, 6.072892);
	TextDrawAlignment(g_szServerLogo[13], 1);
	TextDrawColor(g_szServerLogo[13], 798311935);
	TextDrawSetShadow(g_szServerLogo[13], 0);
	TextDrawSetOutline(g_szServerLogo[13], 0);
	TextDrawFont(g_szServerLogo[13], 4);

	g_szServerLogo[14] = TextDrawCreate(559.510070, 35.966224, "ld_beat:chit");
	TextDrawLetterSize(g_szServerLogo[14], 0.000000, 0.000000);
	TextDrawTextSize(g_szServerLogo[14], 2.888845, 3.036448);
	TextDrawAlignment(g_szServerLogo[14], 1);
	TextDrawColor(g_szServerLogo[14], 798311935);
	TextDrawSetShadow(g_szServerLogo[14], 0);
	TextDrawSetOutline(g_szServerLogo[14], 0);
	TextDrawFont(g_szServerLogo[14], 4);

	g_szServerLogo[15] = TextDrawCreate(565.576843, 32.187538, "ld_beat:chit");
	TextDrawLetterSize(g_szServerLogo[15], 0.000000, 0.000000);
	TextDrawTextSize(g_szServerLogo[15], 2.888845, 3.036448);
	TextDrawAlignment(g_szServerLogo[15], 1);
	TextDrawColor(g_szServerLogo[15], 798311935);
	TextDrawSetShadow(g_szServerLogo[15], 0);
	TextDrawSetOutline(g_szServerLogo[15], 0);
	TextDrawFont(g_szServerLogo[15], 4);

	g_szServerLogo[16] = TextDrawCreate(586.733337, 16.431097, "NOXE");
	TextDrawLetterSize(g_szServerLogo[16], 0.239333, 0.952886);
	TextDrawAlignment(g_szServerLogo[16], 1);
	TextDrawColor(g_szServerLogo[16], -113);
	TextDrawSetShadow(g_szServerLogo[16], 0);
	TextDrawSetOutline(g_szServerLogo[16], 0);
	TextDrawBackgroundColor(g_szServerLogo[16], 51);
	TextDrawFont(g_szServerLogo[16], 1);
	TextDrawSetProportional(g_szServerLogo[16], 1);

	g_szServerLogo[17] = TextDrawCreate(578.399841, 24.897766, "R O L E P L A Y");
	TextDrawLetterSize(g_szServerLogo[17], 0.152666, 0.654221);
	TextDrawAlignment(g_szServerLogo[17], 1);
	TextDrawColor(g_szServerLogo[17], 798311935);
	TextDrawSetShadow(g_szServerLogo[17], 0);
	TextDrawSetOutline(g_szServerLogo[17], 0);
	TextDrawBackgroundColor(g_szServerLogo[17], 51);
	TextDrawFont(g_szServerLogo[17], 1);
	TextDrawSetProportional(g_szServerLogo[17], 1);

	g_szServerLogo[18] = TextDrawCreate(610.932434, 11.384865, "ld_beat:chit");
	TextDrawLetterSize(g_szServerLogo[18], 0.000000, 0.000000);
	TextDrawTextSize(g_szServerLogo[18], 5.066626, 5.475560);
	TextDrawAlignment(g_szServerLogo[18], 1);
	TextDrawColor(g_szServerLogo[18], 798311935);
	TextDrawSetShadow(g_szServerLogo[18], 0);
	TextDrawSetOutline(g_szServerLogo[18], 0);
	TextDrawFont(g_szServerLogo[18], 4);

	g_szServerLogo[19] = TextDrawCreate(614.954467, 14.624867, "ld_beat:chit");
	TextDrawLetterSize(g_szServerLogo[19], 0.000000, 0.000000);
	TextDrawTextSize(g_szServerLogo[19], 3.288846, 3.783114);
	TextDrawAlignment(g_szServerLogo[19], 1);
	TextDrawColor(g_szServerLogo[19], 798311935);
	TextDrawSetShadow(g_szServerLogo[19], 0);
	TextDrawSetOutline(g_szServerLogo[19], 0);
	TextDrawFont(g_szServerLogo[19], 4);

}

stock renderServerLogoForPlayer(playerid)
{
	for(new it = 0; it < sizeof(g_szServerLogo); it++)
		TextDrawShowForPlayer(playerid, g_szServerLogo[it]);
}

stock delivery_food_name(idx)
{
	new name_food[50];
	switch(idx)
	{
		case 0: name_food = "Шашлык из свинины";
		case 1: name_food = "Бургер с говядиной";
		case 2: name_food = "Бургер с куриным бедром";
		case 3: name_food = "Драник со сметаной";
		case 4: name_food = "Драник с бужениной ";
		case 5: name_food = "Шаурма «Королевская»";
		case 6: name_food = "Шаурма «Вегетарианская»";
		case 7: name_food = "Картофель фри";
		case 8: name_food = "Лапша с цыплёнком ";
		case 9: name_food = "Хрустящая рыбка";
		case 10: name_food = "Стейк из лосося";
		case 11: name_food = "Борщ с бужениной";
		case 12: name_food = "Холодник на кефире";
		case 13: name_food = "Овощной салат";
		case 14: name_food = "Салат «Гай Юлий»";
	}
	return name_food;
}

stock load_house_interior_info()
{
	interior_info[0][int_x] = 2233.570068;
	interior_info[0][int_y] = -1114.969970;
	interior_info[0][int_z] = 1050.880004;
	interior_info[0][int_int] = 5;
	interior_info[0][int_klass] = 1;

	interior_info[1][int_x] = 2196.600097;
	interior_info[1][int_y] = -1204.510009;
	interior_info[1][int_z] = 1049.020019;
	interior_info[1][int_int] = 6;
	interior_info[1][int_klass] = 2;

	interior_info[2][int_x] = 2317.820068;
	interior_info[2][int_y] = -1026.760009;
	interior_info[2][int_z] = 1050.219970;
	interior_info[2][int_int] = 9;
	interior_info[2][int_klass] = 4;

	interior_info[3][int_x] = 2259.389892;
	interior_info[3][int_y] = -1135.640014;
	interior_info[3][int_z] = 1050.640014;
	interior_info[3][int_int] = 10;
	interior_info[3][int_klass] = 0;

	interior_info[4][int_x] = 2365.169921;
	interior_info[4][int_y] = -1135.579956;
	interior_info[4][int_z] = 1050.880004;
	interior_info[4][int_int] = 8;
	interior_info[4][int_klass] = 2;

	interior_info[5][int_x] = 2282.989990;
	interior_info[5][int_y] = -1140.270019;
	interior_info[5][int_z] = 1050.900024;
	interior_info[5][int_int] = 11;
	interior_info[5][int_klass] = 1;

	interior_info[6][int_x] = 2218.399902;
	interior_info[6][int_y] = -1076.319946;
	interior_info[6][int_z] = 1050.479980;
	interior_info[6][int_int] = 1;
	interior_info[6][int_klass] = 1;

	interior_info[7][int_x] = 83.013999;
	interior_info[7][int_y] = 1322.290039;
	interior_info[7][int_z] = 1083.869995;
	interior_info[7][int_int] = 9;
	interior_info[7][int_klass] = 3;

	interior_info[8][int_x] = 234.380996;
	interior_info[8][int_y] = 1063.729980;
	interior_info[8][int_z] = 1084.209960;
	interior_info[8][int_int] = 6;
	interior_info[8][int_klass] = 4;

	interior_info[9][int_x] = 243.742004;
	interior_info[9][int_y] = 304.976013;
	interior_info[9][int_z] = 999.148010;
	interior_info[9][int_int] = 1;
	interior_info[9][int_klass] = 0;

	interior_info[10][int_x] = 266.515014;
	interior_info[10][int_y] = 304.944000;
	interior_info[10][int_z] = 999.148010;
	interior_info[10][int_int] = 2;
	interior_info[10][int_klass] = 1;

	interior_info[11][int_x] = 2468.449951;
	interior_info[11][int_y] = -1698.349975;
	interior_info[11][int_z] = 1013.510009;
	interior_info[11][int_int] = 2;
	interior_info[11][int_klass] = 1;

	interior_info[12][int_x] = 2496.030029;
	interior_info[12][int_y] = -1692.420043;
	interior_info[12][int_z] = 1014.739990;
	interior_info[12][int_int] = 3;
	interior_info[12][int_klass] = 2;

	interior_info[13][int_x] = 2269.840087;
	interior_info[13][int_y] = -1210.430053;
	interior_info[13][int_z] = 1047.560058;
	interior_info[13][int_int] = 10;
	interior_info[13][int_klass] = 2;

	interior_info[14][int_x] = 227.343994;
	interior_info[14][int_y] = 1114.219970;
	interior_info[14][int_z] = 1081.000000;
	interior_info[14][int_int] = 5;
	interior_info[14][int_klass] = 2;

	interior_info[15][int_x] = 235.404998;
	interior_info[15][int_y] = 1186.979980;
	interior_info[15][int_z] = 1080.260009;
	interior_info[15][int_int] = 3;
	interior_info[15][int_klass] = 2;

	interior_info[16][int_x] = 225.970993;
	interior_info[16][int_y] = 1239.969970;
	interior_info[16][int_z] = 1082.140014;
	interior_info[16][int_int] = 2;
	interior_info[16][int_klass] = 2;

	interior_info[17][int_x] = 223.216995;
	interior_info[17][int_y] = 1287.640014;
	interior_info[17][int_z] = 1082.140014;
	interior_info[17][int_int] = 1;
	interior_info[17][int_klass] = 1;

	interior_info[18][int_x] = 23.891799;
	interior_info[18][int_y] = 1340.540039;
	interior_info[18][int_z] = 1084.380004;
	interior_info[18][int_int] = 10;
	interior_info[18][int_klass] = 3;

	interior_info[19][int_x] = 295.132995;
	interior_info[19][int_y] = 1472.560058;
	interior_info[19][int_z] = 1080.260009;
	interior_info[19][int_int] = 15;
	interior_info[19][int_klass] = 2;

	interior_info[20][int_x] = 2324.350097;
	interior_info[20][int_y] = -1148.760009;
	interior_info[20][int_z] = 1050.709960;
	interior_info[20][int_int] = 12;
	interior_info[20][int_klass] = 4;

	interior_info[21][int_x] = -261.195007;
	interior_info[21][int_y] = 1456.729980;
	interior_info[21][int_z] = 1084.369995;
	interior_info[21][int_int] = 4;
	interior_info[21][int_klass] = 3;

	interior_info[22][int_x] = 328.006988;
	interior_info[22][int_y] = 1478.359985;
	interior_info[22][int_z] = 1084.439941;
	interior_info[22][int_int] = 15;
	interior_info[22][int_klass] = 1;

	interior_info[23][int_x] = 22.916599;
	interior_info[23][int_y] = 1403.979980;
	interior_info[23][int_z] = 1084.430053;
	interior_info[23][int_int] = 5;
	interior_info[23][int_klass] = 2;

	interior_info[24][int_x] = 386.502014;
	interior_info[24][int_y] = 1471.719970;
	interior_info[24][int_z] = 1080.189941;
	interior_info[24][int_int] = 15;
	interior_info[24][int_klass] = 2;

	interior_info[25][int_x] = 376.324005;
	interior_info[25][int_y] = 1417.270019;
	interior_info[25][int_z] = 1081.329956;
	interior_info[25][int_int] = 15;
	interior_info[25][int_klass] = 2;

	interior_info[26][int_x] = 447.250000;
	interior_info[26][int_y] = 1397.760009;
	interior_info[26][int_z] = 1084.300048;
	interior_info[26][int_int] = 2;
	interior_info[26][int_klass] = 2;

	interior_info[27][int_x] = 140.341995;
	interior_info[27][int_y] = 1366.699951;
	interior_info[27][int_z] = 1083.859985;
	interior_info[27][int_int] = 5;
	interior_info[27][int_klass] = 3;

	interior_info[28][int_x] = 491.169006;
	interior_info[28][int_y] = 1398.910034;
	interior_info[28][int_z] = 1080.260009;
	interior_info[28][int_int] = 2;
	interior_info[28][int_klass] = 3;

	interior_info[29][int_x] = 261.111999;
	interior_info[29][int_y] = 1284.910034;
	interior_info[29][int_z] = 1080.260009;
	interior_info[29][int_int] = 4;
	interior_info[29][int_klass] = 1;

	interior_info[30][int_x] = -68.866302;
	interior_info[30][int_y] = 1351.939941;
	interior_info[30][int_z] = 1080.209960;
	interior_info[30][int_int] = 6;
	interior_info[30][int_klass] = 1;

	interior_info[31][int_x] = 2807.550048;
	interior_info[31][int_y] = -1174.219970;
	interior_info[31][int_z] = 1025.569946;
	interior_info[31][int_int] = 8;
	interior_info[31][int_klass] = 2;

	interior_info[32][int_x] = 2237.530029;
	interior_info[32][int_y] = -1081.099975;
	interior_info[32][int_z] = 1049.020019;
	interior_info[32][int_int] = 2;
	interior_info[32][int_klass] = 2;

	interior_info[33][int_x] = 2365.330078;
	interior_info[33][int_y] = -1135.160034;
	interior_info[33][int_z] = 1050.880004;
	interior_info[33][int_int] = 8;
	interior_info[33][int_klass] = 2;

	interior_info[34][int_x] = -42.687198;
	interior_info[34][int_y] = 1405.890014;
	interior_info[34][int_z] = 1084.430053;
	interior_info[34][int_int] = 8;
	interior_info[34][int_klass] = 2;

	interior_info[35][int_x] = 260.601989;
	interior_info[35][int_y] = 1237.930053;
	interior_info[35][int_z] = 1084.260009;
	interior_info[35][int_int] = 9;
	interior_info[35][int_klass] = 1;

	interior_info[36][int_x] = 422.148010;
	interior_info[36][int_y] = 2536.350097;
	interior_info[36][int_z] = 10.000000;
	interior_info[36][int_int] = 10;
	interior_info[36][int_klass] = 0;

	interior_info[37][int_x] = 226.169998;
	interior_info[37][int_y] = 1239.969970;
	interior_info[37][int_z] = 1082.140014;
	interior_info[37][int_int] = 2;
	interior_info[37][int_klass] = 2;
}
